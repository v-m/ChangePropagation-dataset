<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key id="type" for="node" attr.name="type" attr.type="string" />
  <key id="type" for="edge" attr.name="type" attr.type="string" />
  <key id="USES_REFLEXION" for="node" attr.name="USES_REFLEXION" attr.type="boolean">
    <default>false</default>
  </key>
  <graph id="G" edgedefault="directed" buildtime="4141">
    <node id="org.apache.commons.collections4.bag.AbstractBagDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagDecorator(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagDecorator.add(E,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagDecorator.remove(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.remove(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagDecorator.getCount(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagDecorator.uniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.getOtherElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.makeConfirmedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.bulkTestBagUniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagContains()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagContainsAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagEqualsHashBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagEqualsSelf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFail()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailDoubleRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailNoMore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorRemoveProtectsInvariants()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemoveAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Bag.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagToArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testBagToArrayPopulate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testEmptyBagCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractBagTest.testFullBagCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.toArray(T[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.getCount(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.add(E,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag$MutableInteger(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.containsAll(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.HashBag(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.remove(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.uniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.doReadObject(java.util.Map,java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagDecorator(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SortedBag.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SortedBag.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SortedBag.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagTest.makeConfirmedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.collectionSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractSortedBagTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.add(E,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.setCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBag.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBagTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBagTest.makeConfirmedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.add(E,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBag.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBagTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBagTest.makeConfirmedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.HashBag.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.HashBag.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.HashBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.HashBagTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.bag.HashBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBag.add(E,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBag.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBag.remove(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBag.getCount(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBag.uniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest.decorateBag(org.apache.commons.collections4.bag.HashBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest.makeTestBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest.stringPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBag.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBag.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBag.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBag.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest.stringPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest.decorateBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest.makeTestBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBag$SynchronizedBagSet(java.util.Set,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection(java.util.Collection,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBag(org.apache.commons.collections4.Bag,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBag.add(E,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBag.getBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBag.remove(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBag.getCount(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBag.uniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBagTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedSortedBag(org.apache.commons.collections4.Bag,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedSortedBag.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedSortedBag.getSortedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedSortedBag.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.SynchronizedSortedBag.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBag.transformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBag.transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBag.add(E,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBag.getBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollection.transform(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBag.remove(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBag.getCount(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBag.uniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSet.transformingSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBagTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBag.transformedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBag.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBag.getSortedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBag.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBag.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBagTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.AbstractMapBag.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBag.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBagTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBagTest.setupBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBagTest.testCollections265()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.TreeBagTest.testOrdering()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBag.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBag.uniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBag.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBag.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBagTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBagTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBag.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBag.uniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBag.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBag.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.createEntrySetIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.nextEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.currentEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.createKeySetIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$Values.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$Values.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$Values.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.createValuesIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$Values.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap(int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.init()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap(int,float,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap._putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.entryKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.entryValue(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.isEqualValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyMapIterator.emptyMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet(java.util.Set,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetDecorator(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.toArray(T[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry(java.util.Map$Entry,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator(java.util.Iterator,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator(java.util.Map$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.checkSetValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.getMapEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.isSetValueChecking()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.addSetValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.isGetStructuralModify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.isGetStructuralModify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.supportsRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.supportsSetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.getConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest.bulkTestMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.isFailFastExpected()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.nextEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.previousEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.currentEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap(int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap(int,float,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.nextKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.previousKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.createEntrySetIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyOrderedIterator.emptyOrderedIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.createValuesIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.emptyOrderedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.init()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractIterableMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapDecorator.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.isGetStructuralModify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getFullNonNullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[],V[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getOtherElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getEntry(java.util.Iterator,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetRemoveNonMapEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.getOtherElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.getOtherElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getCompatibilityVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.getCompatibilityVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.bulkTestMapEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.bulkTestMapKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.bulkTestMapValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.views()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEmptyMapCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetClearChangesMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.cloneMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetIteratorRemoveChangesMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveChangesMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultMapEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testFullMapCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testKeySetClearChangesMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testKeySetIteratorRemoveChangesMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRemoveAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRemoveChangesMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMakeMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapClear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapIsEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testMapToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testSampleMappings()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testValuesClearChangesMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testValuesIteratorRemoveChangesMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testValuesRemoveAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testValuesRemoveChangesMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.testValuesRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.verifyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.verifyValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapDecorator(org.apache.commons.collections4.OrderedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.nextKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedMap.nextKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.previousKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedMap.previousKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.isGetStructuralModify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.supportsRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.supportsSetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.getConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.NullComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest.makeConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest.bulkTestOrderedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest.testFirstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest.testLastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest.testNextKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractOrderedMapTest.testPreviousKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.checkMod()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.currentEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry(org.apache.commons.collections4.map.AbstractReferenceMap,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,T,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$SoftRef(int,T,java.lang.ref.ReferenceQueue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.hashEntry(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet.toArray(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet.toArray(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.toArray(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength#HARD">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength#SOFT">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength#WEAK">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeRead()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.getEntry(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeWrite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.createEntrySetIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.createKeySetIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.createValuesIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength.resolve(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.init()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.purge()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.purge(java.lang.ref.Reference)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.purge(java.lang.ref.Reference)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.nextKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.previousKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapDecorator.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap(org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap(java.lang.String,org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.getCompatibilityVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.testHeadMapOutOfRange()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isPutAddSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap(org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.getCompatibilityVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.testSubMapOutOfRange()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap(org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.getCompatibilityVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.testTailMapOutOfRange()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isAllowNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isAllowNullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isPutChangeSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest.bulkTestHeadMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest.bulkTestSubMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest.bulkTestTailMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest.testFirstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractSortedMapTest.testLastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMap(int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMap.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMap.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map,org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap(java.util.Map[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap$MapMutator.put(org.apache.commons.collections4.map.CompositeMap,java.util.Map[],K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap$MapMutator.resolveCollision(org.apache.commons.collections4.map.CompositeMap,java.util.Map,java.util.Map,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap$MapMutator.putAll(org.apache.commons.collections4.map.CompositeMap,java.util.Map[],java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.setMutator(org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.EmptyMapMutator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.testAddComposited()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.buildOne()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.buildTwo()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.testGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.testPut()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.testPutAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.removeComposited(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.CompositeMapTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMap(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMap(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(O)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMapTest#nullFactory">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtils.nullFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.DefaultedMapTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.current()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMap.maxSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.maxSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.getSortedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.FixedSizeSortedMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntryIterator.nextEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntryIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry(org.apache.commons.collections4.map.Flat3Map,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntryIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.setRemoved(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntrySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntrySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntrySetIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntrySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntryIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntrySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$KeySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$KeySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$KeySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$KeySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$KeySetIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$KeySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$KeySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$Values.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$Values.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$Values.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$ValuesIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$Values.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$ValuesIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.convertToMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$Values(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$EntrySet(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$KeySet(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.createDelegateMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.addSetValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.supportsRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.supportsSetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.getConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.bulkTestMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3Map()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testClone2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testClone4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testCollections261()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testEquals1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testEquals2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.Flat3MapTest.testToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMap(int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMap.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMap.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMapTest.testClone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.HashedMapTest.testInternalState()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap$IdentityEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap$IdentityEntry.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap$IdentityEntry.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap(int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.IdentityMap.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap(int,float,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap(int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap(int,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap(java.util.Map,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.addMapping(int,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.isFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry,int,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclass(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclass.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassBlocksRemove(int,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassFirstBlocksRemove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassFirstBlocksRemove.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testAccessOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testClone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$SingleHashCode(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testLRU()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMap.maxSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$3(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$4(java.lang.ThreadGroup,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$5(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$6(java.lang.ThreadGroup,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$2.run()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$1(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$2(java.lang.ThreadGroup,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$7(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LRUMapTest$8(java.lang.ThreadGroup,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMapTest#oneFactory">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtils.constantFactory(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMapTest.mapGetWithFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMapTest.mapGetWithTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazyMapTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap.getSortedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMap.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMapTest#oneFactory">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMapTest.mapGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.toArray(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.lastIndexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap(int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap.getValue(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap.asList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap$LinkedMapList(org.apache.commons.collections4.map.LinkedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMap.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest$TestListView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest$TestListView.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest$TestListView.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest$TestListView.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest$TestListView.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.bulkTestListView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.testClone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.testIndexOf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.LinkedMapTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.getEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator(org.apache.commons.collections4.map.ListOrderedMap,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$KeySetView$1(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$KeySetView$1.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry(org.apache.commons.collections4.map.ListOrderedMap,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.set(int,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.setValue(int,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView$1(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView$1.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.nextKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.put(int,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ValuesView(org.apache.commons.collections4.map.ListOrderedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.asList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.keyList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.valueList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView(org.apache.commons.collections4.map.ListOrderedMap,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$KeySetView(org.apache.commons.collections4.map.ListOrderedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator(org.apache.commons.collections4.map.ListOrderedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.putAll(int,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test.bulkTestListView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.bulkTestKeyListView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.bulkTestValueListView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.multiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.getOtherKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.getSampleKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testClone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMap.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.getSampleValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPutWithNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory.create()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FunctorException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$Values.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$Values.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$Values.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.putAll(K,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.createCollection(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.removeMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.size(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$Values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$1$1.transform(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$1$1$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$1.nextIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap$1$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.TransformIterator(java.util.Iterator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.iterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.makeEmptyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testEmptyMapCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMap.put(K,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.MultiValueMapTest.testValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long,java.util.concurrent.TimeUnit)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.validateAndConvertToMillis(long,java.util.concurrent.TimeUnit)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.concurrent.TimeUnit)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.concurrent.TimeUnit,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.removeIfExpired(java.lang.Object,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.now()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy.expirationTime(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMap.isExpired(long,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeDecoratedTestMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest$TestExpirationPolicy()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.validateExpiration(java.util.Map,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMap.validate(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMap.predicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMap.checkSetValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMapTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMapTest#testPredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMapTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMapTest.decorateMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMapTest.makeTestMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedMapTest.testPut()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMap.getSortedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMap.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMap.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMap.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMap.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest#testPredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest.decorateMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest.makeTestMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractReferenceMap.isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMap.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMapTest.buildRefMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMapTest.makeConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMap.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMapTest.buildRefMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonValues.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonValues.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator(E,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap(org.apache.commons.collections4.KeyValue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.KeyValue.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.KeyValue.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.isEqualKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.isEqualValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonValues(org.apache.commons.collections4.map.SingletonMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.TiedMapEntry(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator(org.apache.commons.collections4.map.SingletonMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMap.unmodifiableOrderedMap(org.apache.commons.collections4.OrderedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMapTest.testBoundedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.isFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.maxSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMapTest.testClone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMap.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.SingletonMapTest.testKeyValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.nextEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$EntryIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$EntryIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.getHash(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$Node.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$Node.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$KeyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$KeyIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$KeySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$KeySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$KeySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$KeySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$KeySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$ValueIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$ValueIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$Values.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$Values.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$Values.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$Lock()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$Node()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$Node.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$Values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$EntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap$KeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.atomic(java.lang.Runnable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.atomic(java.lang.Runnable,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMap.transformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMap.transformMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMap.transformKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMap.checkSetValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMap.transformValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap.transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap.getSortedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMap.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableEntrySet.toArray(T[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableEntrySet.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableEntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EntrySetMapIterator(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMap(org.apache.commons.collections4.OrderedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMap.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest.singleElementArrayToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractMockPredicateTest.createMockPredicate(java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest.singleValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.lang.Boolean[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest.singletonCollectionToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractClosureTest.closureSanityTests()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractClosureTest.generateClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractMockPredicateTest(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullArrayToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullCollectionToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullElementInArrayToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullElementsInArrayToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullElementsInCollectionToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.singleElementArrayToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.singletonCollectionToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractPredicateTest.predicateSanityTests()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractPredicateTest.generatePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractQuantifierPredicate.getPredicates()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FunctorUtils.validate(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicateTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicateTest.getPredicateInstance(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicateTest.getPredicateInstance(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicateTest.allTrue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractMockPredicateTest.getTestValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AndPredicate.andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AndPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AndPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AnyPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosure.execute(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosure.executeAndThrow(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FunctorException(java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractClosureTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateNoExceptionClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateIOExceptionClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateNullPointerExceptionClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedClosure(boolean,org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedClosure(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedClosure.getClosures()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedClosure.execute(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedTransformer(boolean,org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedTransformer(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedTransformer.transform(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ChainedTransformer.getTransformers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CloneTransformer#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CloneTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CloneTransformer.transform(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.PrototypeFactory.prototypeFactory(T)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ClosureTransformer(org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ClosureTransformer.transform(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#EQUAL">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#GREATER">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#LESS">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#GREATER_OR_EQUAL">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#LESS_OR_EQUAL">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicate(T,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicateTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.AbstractPredicateTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicateTest.generatePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantFactory#NULL_INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantFactory(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantTransformer#NULL_INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantTransformer(O)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantTransformer.nullTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantTransformer.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantTransformer.getConstant()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ConstantTransformer.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.DefaultEquator#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.DefaultEquator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicate(T,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Equator.equate(T,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicateTest#FALSE_OBJECT">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicateTest$EqualsTestObject(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicateTest#TRUE_OBJECT">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicateTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicateTest.generatePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicateTest.testNullArgumentEqualsNullPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.EqualPredicateTest.testPredicateTypeCanBeSuperClassOfObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionClosure#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionClosure.execute(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FunctorException(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionFactory#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionFactory.create()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionPredicate#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionTransformer#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionTransformer.transform(I)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FactoryTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FactoryTransformer.transform(I)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FalsePredicate#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.FalsePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ForClosure.forClosure(int,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ForClosure(int,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ForClosure.execute(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IdentityPredicate.identityPredicate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IdentityPredicate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IfClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IfClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IfClosure.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IfClosure.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IfClosure.execute(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IfTransformer.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IfTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IfTransformer.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.IfTransformer.transform(I)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateFactory(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateFactory.findConstructor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateFactory.create()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateTransformer#NO_ARG_INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateTransformer.instantiateTransformer(java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateTransformer(java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateTransformer.transform(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InvokerTransformer(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InvokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InvokerTransformer.transform(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.functors.MapTransformer.mapTransformer(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.MapTransformer(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NOPClosure#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NOPClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NOPTransformer#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NOPTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NonePredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NotNullPredicate#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NotNullPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NotPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NotPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullIsExceptionPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullIsExceptionPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullIsFalsePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullIsFalsePredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullIsTruePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullIsTruePredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullPredicate#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullPredicateTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullPredicateTest.generatePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullPredicateTest.ensurePredicateCanBeTypedWithoutWarning()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NullPredicateTest.testNullPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.OnePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.OnePredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.OrPredicate.orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.OrPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.OrPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.PredicateTransformer(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.PredicateTransformer.transform(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory.create()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory.findCloneMethod()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeSerializationFactory.create()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory(T,java.lang.reflect.Method)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeSerializationFactory(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.StringValueTransformer#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.StringValueTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchClosure(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchClosure.getClosures()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchClosure.getPredicates()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchClosure.execute(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchTransformer(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchTransformer.transform(I)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchTransformer.getPredicates()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.SwitchTransformer.getTransformers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TransformedPredicate.transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TransformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TransformedPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TransformerClosure(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TransformerClosure.execute(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TransformerPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TransformerPredicate.evaluate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TruePredicate#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.TruePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.UniquePredicate.uniquePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.UniquePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.WhileClosure.whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.WhileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.WhileClosure.execute(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.getKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BidiMap.getKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.removeValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BidiMap.removeValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BidiMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.addSetValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.supportsRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.supportsSetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.getConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap(org.apache.commons.collections4.bidimap.AbstractBidiMapTest)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.getSampleValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.getSampleKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isAllowNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isAllowNullValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isPutAddSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isPutChangeSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isSetValueSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.getCompatibilityVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getCompatibilityVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.modifyEntrySet(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.bulkTestBidiMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.bulkTestInverseMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.bulkTestMapEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.doTestGetKey(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.remove(org.apache.commons.collections4.BidiMap,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeByEntrySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeByKeySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeValue(org.apache.commons.collections4.BidiMap,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiClear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKeyInverse()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiInverse()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiKeySetValuesOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiModifyEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiPut()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BidiMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.verifyInverse()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View(java.util.Collection,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createEntrySetIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry(java.util.Map$Entry,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorDecorator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createKeySetIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createValuesIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.nextKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.previousKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedBidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.addSetValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.supportsRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.supportsSetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.bulkTestOrderedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testFirstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testLastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testNextKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testPreviousKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator(org.apache.commons.collections4.SortedBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.valueComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SortedBidiMap.valueComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.map.AbstractMapTest.getAsList(java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.bulkTestHeadMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.bulkTestSubMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.bulkTestTailMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearByHeadMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearBySubMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearByTailMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiHeadMapContains()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByHeadMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByHeadMapEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveBySubMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveBySubMapEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByTailMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByTailMapEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiSubMapContains()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiTailMapContains()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualHashBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualHashBidiMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualHashBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualHashBidiMap.createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualHashBidiMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualHashBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualHashBidiMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualHashBidiMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap.createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap(org.apache.commons.collections4.bidimap.DualTreeBidiMap,java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.nextKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.nextKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.previousKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.previousKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Comparator,java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.inverseOrderedBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.inverseSortedBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.makeConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ReverseComparator(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparableComparator.comparableComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.valueComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testComparator2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$View(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.getKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.put(V,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.removeValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.getKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.nextKey(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.previousKey(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.removeValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.createEntry(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigateNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigatePrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getData(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$View.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$View.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement#KEY">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement#VALUE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.compare(T,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.nextKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.previousKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKeyAndValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.modify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.grow()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.shrink()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMap.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.TreeBidiMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.unmodifiableBidiMap(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.unmodifiableOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.inverseOrderedBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap(org.apache.commons.collections4.SortedBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.unmodifiableSortedBidiMap(org.apache.commons.collections4.SortedBidiMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.toArray(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionDecorator.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullNonNullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherNonNullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.makeConfirmedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionClear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContains()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContainsAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIsEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.isFailFastSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.cloneMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.areEqualElementsDistinguishable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemoveAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray2()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testSerializeDeserializeThenCompare()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.isEqualsCheckable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection(java.util.Collection[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.toArray(T[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator.add(org.apache.commons.collections4.collection.CompositeCollection,java.util.List,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator.addAll(org.apache.commons.collections4.collection.CompositeCollection,java.util.List,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator.remove(org.apache.commons.collections4.collection.CompositeCollection,java.util.List,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.getCollections()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpMutatorTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.setMutator(org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testClear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.removeComposited(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollection.toCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.MultiMap,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.reindex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.nonUniqueIndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.uniqueIndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.get(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.add(C)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.addToIndex(C)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.removeFromIndex(C)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.values(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollection.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest$IntegerTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.makeTestCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.makeUniqueTestCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateUniqueCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollection.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollection.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest#testPredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest.decorateCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeTestCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.toArray(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollection.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollectionTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollectionTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.SynchronizedCollectionTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollection.transformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollection.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollection.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollection.transform(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest#NOOP_TRANSFORMER">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest#STRING_TO_INTEGER_TRANSFORMER">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest$StringToInteger()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection(org.apache.commons.collections4.BoundedCollection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(org.apache.commons.collections4.BoundedCollection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.isFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BoundedCollection.isFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.maxSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BoundedCollection.maxSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableCollection.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableCollectionTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractKeyValue.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractKeyValue(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntry.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractKeyValue.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntry.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeKnownMapEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeKnownMapEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testAccessorsAndMutators()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testEqualsAndHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testSelfReferenceHandling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValue(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValue(java.util.Map$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValue(org.apache.commons.collections4.KeyValue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractKeyValue.setKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValue.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValue.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValue.toMapEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultMapEntry(org.apache.commons.collections4.KeyValue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.makeDefaultKeyValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.makeDefaultKeyValue(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testAccessorsAndMutators()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testSelfReferenceHandling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToMapEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.makeMapEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.makeMapEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testConstructors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testSelfReferenceHandling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey(K[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey.readResolve()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey.getKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArrayNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorCloned()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorNonCloned()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysSimpleConstructor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKey.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.TiedMapEntry.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.TiedMapEntry.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.TiedMapEntry.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.TiedMapEntryTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.TiedMapEntryTest.makeMapEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testSetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(org.apache.commons.collections4.KeyValue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.makeMapEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.makeMapEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testAccessorsAndMutators()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testConstructors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator(org.apache.commons.collections4.list.AbstractLinkedList,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.checkModCount()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previousIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.nextIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.getLastNodeReturned()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.set(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$Node.setValue(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList(org.apache.commons.collections4.list.AbstractLinkedList,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.rangeCheck(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.set(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.set(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.addAll(int,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.addAll(int,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.createSubListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.add(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.nextIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.init()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.toArray(T[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.getFirst()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.getLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.removeFirst()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.removeLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.addLast(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.isEqualValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.lastIndexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.createHeaderNode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$Node()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.createNode(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList$Node(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.removeAllNodes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedListTest.checkNodes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedListTest.testGetNode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveFirst()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.set(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.addAll(int,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.lastIndexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListDecorator.add(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList(org.apache.commons.collections4.list.AbstractListTest)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.getOtherElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.isAddSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.isSetSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.isSetSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$TestListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.addSetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.supportsAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.supportsRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.supportsSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.bulkTestListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.bulkTestSubList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.backwardTest(java.util.ListIterator,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.failFastAll(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.failFastMethod(java.util.List,java.lang.reflect.Method)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.forwardTest(java.util.ListIterator,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testEmptyListCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testEmptyListSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToBytes(java.io.Serializable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromBytes(byte[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testFullListCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testFullListSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndexBoundsChecking()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndexBoundsChecking2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndexBoundsChecking()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndexBoundsChecking2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListIndexOf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListIteratorAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListIteratorSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListLastIndexOf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorNextRemoveNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorNextRemovePrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorPreviousRemoveNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorPreviousRemovePrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndexBoundsChecking()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndexBoundsChecking2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndexBoundsChecking()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndexBoundsChecking2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractListTest.testUnsupportedSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractSerializableListDecorator.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractSerializableListDecorator.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$Cursor(org.apache.commons.collections4.list.CursorableLinkedList,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nextIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.close()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.unregisterCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.checkModCount()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.nextIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.init()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.registerCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.cursor(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.removeAllNodes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedList.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testClear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testContains()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.AbstractLinkedList.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.set(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.lastIndexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.maxSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeListTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.FixedSizeListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthList(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthList.growthList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthList.set(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthList.addAll(int,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthList.add(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.LazyList(java.util.List,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.LazyList.lazyList(java.util.List,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.LazyList.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.LazyList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.createNode(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.getNodeFromCache()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.isCacheFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.removeAllNodes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.setMaximumCacheSize(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.shrinkCacheToMaximumSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedList.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedListTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedListTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedListTest.compareSpeed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator(java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.getListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator.set(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.predicatedList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.set(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.addAll(int,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.lastIndexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedList.add(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest#testPredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest.decorateList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest.makeTestList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList$SetListIterator(java.util.Iterator,java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList$SetListIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList$SetListIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator(java.util.ListIterator,java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.set(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.add(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.addAll(int,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.createSetBasedOnList(java.util.Set,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.unmodifiableList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.asSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest$SetUniqueList307(java.util.List,java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testCollections304()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testCollections307()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueList.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList$TransformedListIterator(java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList$TransformedListIterator.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList$TransformedListIterator.set(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.transformedList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.transformingList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.set(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.addAll(int,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.lastIndexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedList.add(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedListTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedListTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedListTest.testTransformedList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode(java.util.Iterator,int,int,int,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.heightRightMinusLeft()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.getHeight(org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.indexOf(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.max()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.min()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStack()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStack.push(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStack.pop()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.balance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.rotateLeft()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.rotateRight()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.insert(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnLeft(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnRight(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode(int,E,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.toArray(java.lang.Object[],int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator(org.apache.commons.collections4.list.TreeList,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.checkModCount()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.previousIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.nextIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.add(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$TreeListIterator.set(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList$AVLNode.setValue(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.checkInterval(int,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.set(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.testAddMultiple()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.testBug35258()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.testBugCollections447()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.testIndexOf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.testInsertBefore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.testIterationOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.TreeListTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableList.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableListTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableListTest.setupList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableListTest.verifyUnmodifiable(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.getCanonicalComparatorName(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToDisk(java.io.Serializable,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.getComparableObjectsOrdered()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.reverseObjects(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.sortObjects(java.util.List,java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorIsSerializable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.testEmptyListSort()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.testRandomListSort()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.randomizeObjects(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractComparatorTest.testReverseListSort()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator1(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractNullComparatorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator1.getCanonicalComparatorName(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator1.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator2(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator2.getCanonicalComparatorName(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator2.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.NullComparator(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparator#TRUE_FIRST">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparator(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparator#FALSE_FIRST">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest.allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest.orderIndependentTests(org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest.trueFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest.falseFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparator.compare(java.lang.Boolean,java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest.nullArgumentTests(org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest.testConstructors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparator.getFalseFirstComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparator.getTrueFirstComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparator.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparableComparator#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparableComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparableComparatorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparableComparatorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain(java.util.List,java.util.BitSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain(java.util.Comparator,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain.compare(E,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain.checkChainIntegrity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain.addComparator(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain.addComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain.checkLocked()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain.setComparator(int,java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain.setComparator(int,java.util.Comparator,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain.setForwardSort(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChain.setReverseSort(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator.compare(org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow,org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow.getColumn(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest.getComparableObjectsOrdered()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow(int,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior#BEFORE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior#AFTER">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior#EXCEPTION">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator.add(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator.checkLocked()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator.addAsEqual(T,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator.isLocked()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator.setUnknownObjectBehavior(org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparatorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator.compare(T,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testArrayConstructor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.assertComparatorYieldsOrder(java.lang.String[],java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.FixedOrderComparator.getUnknownObjectBehavior()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.NullComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.NullComparator(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ReverseComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ReverseComparatorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ReverseComparatorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.TransformingComparator(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.TransformingComparator(org.apache.commons.collections4.Transformer,java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.TransformingComparator.compare(I,I)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.TransformingComparatorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.TransformingComparatorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ComparatorUtils.transformedComparator(java.util.Comparator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.stringValueTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.TransformingComparatorTest.testEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.TransformingComparator.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.comparators.TransformingComparator.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest.testEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest.testFullIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsFullIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.addSetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.supportsAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.supportsSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testEmptyListIteratorIsIndeedEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testRemoveThenSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testWalkForwardAndBack()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.supportsSetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.addSetValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.isGetStructuralModify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedMapIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedMapIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testEmptyMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testMapIteratorOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int,int)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator.checkBound(int,int,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator.next()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeArrayIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeArrayIterator(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeArrayIterator(java.lang.Object,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIteratorTest.testNullArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator.next()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator.previous()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeArrayListIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeArrayListIterator(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeArrayListIterator(java.lang.Object,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIteratorTest.makeArrayListIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIterator.init()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIterator.checkBounds()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testBounded()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testEmptyBounded()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testMaxGreaterThanSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testNegativeMax()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testNegativeOffset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testOffsetGreaterThanSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveCalledTwice()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveFirst()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveMiddle()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest$1(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveUnsupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveWithoutCallingNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.BoundedIteratorTest.testSameAsDecorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.setComparator(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.least()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.clear(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.anyValueSet(java.util.BitSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.anyHasNext(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.set(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.getIterators()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.checkNotStarted()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.setIterator(int,java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.getComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.getIteratorIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyIterator#RESETTABLE_INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyListIterator#RESETTABLE_INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyMapIterator#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyOrderedIterator#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyOrderedIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EntrySetMapIterator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EntrySetMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EntrySetMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EnumerationIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EnumerationIterator(java.util.Enumeration,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EnumerationIterator(java.util.Enumeration)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIterator.setNextObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.makeBlockAllFilter(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIterator(java.util.Iterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.makePassThroughFilter(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.initIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyNoMoreElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyElementsInPredicate(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIterator.setPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIterator.setIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.NotNullPredicate.notNullPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIteratorTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator.setNextObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator.clearNextObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator.setPreviousObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator.clearPreviousObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkForward(java.util.ListIterator,java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkBackward(java.util.ListIterator,java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.anyPredicate(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFalsePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.nextNextPrevious(java.util.ListIterator,java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.previousPreviousNext(java.util.ListIterator,java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.FilterListIteratorTest.testWalkLists()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain(java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain(java.util.Iterator[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain.lockChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain.updateCurrentIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain.checkLocked()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChain.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChainTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChainTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChainTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChainTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChainTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorChainTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.filteredIterator(java.util.Iterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.chainedIterator(java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorEnumerationTest.testEnumeration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorEnumeration(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorEnumeration.getIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorEnumeration.hasMoreElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorEnumeration.nextElement()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterable.createTypesafeIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterable$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterable.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterableTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterableTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterableTest.createIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterableTest.verifyIteration(java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChain.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChain.updateCurrentIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChain.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChain.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChain.nextIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LazyIteratorChainTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapperTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIteratorTest.testConstructorEx()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingIterator.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator._reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testConstructorEx()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.nextIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.previousIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.LoopingListIterator.set(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIteratorTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.NodeList)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIteratorTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIteratorTest.testEmptyIteratorWithNodeConstructor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIteratorWithNodeConstructor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.NodeListIteratorTest.testNullConstructor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator(E[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator(E[],int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator(E[],int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testNullArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[],int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[],int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayIterator.getStartIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator.nextIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator.previousIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.makeArrayListIterator(E[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.makeArrayListIterator(E[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIterator#stack">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStack(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIterator.updateCurrentIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNext(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.addLeaf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.getLeaf(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.addTree()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.getTree(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder.transform(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.treeIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.branchIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.leafIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.addBranch()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.getBranch(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.emptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIterator.element()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIterator.fill()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIterator.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PeekingIteratorTest.validate(java.util.Iterator,E[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIterator(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIterator#items">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIterator.pushback(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIteratorTest.validate(java.util.Iterator,java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.PushbackIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ReverseListIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ReverseListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ReverseListIterator(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ReverseListIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ReverseListIteratorTest.testEmptyListIteratorIsIndeedEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReverse()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.ReverseListIteratorTest.testWalkForwardAndBack()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator2Test.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator2Test.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIterator2Test.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIteratorTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIteratorTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonListIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonListIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonListIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonListIterator.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonListIterator(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.TransformIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.TransformIterator.transform(I)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UniqueFilterIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UniqueFilterIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator.add(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.createCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.set(int,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.addAll(int,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.isEqualList(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.hashCodeForList(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.lastIndexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.subList(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.listIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.listIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.add(int,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap(java.util.Map,java.lang.Class,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListValuedMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractListValuedMap.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1$1.transform(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1.nextIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.toArray(T[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.getCount(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.containsAll(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag$1.nextIterator(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag$1$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.uniqueSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.entries()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.toArray(T[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.add(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(K,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.removeMapping(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.emptyIfNull(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.asMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.putAll(K,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.putAll(K,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.removeMapping(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.removeMapping(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.entries()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.asMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.asMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.keys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.putAll(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.getSampleKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.isAllowNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAllowNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.isPutAddSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.isPutChangeSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.getSampleValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getConfirmed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.getFullElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestAsMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestMultiValuedMapEntries()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestMultiValuedMapKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestMultiValuedMapKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestMultiValuedMapValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeConfirmedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.addSampleMappings(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAddMappingThroughGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapPut()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testContainsValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testContainsValue_Key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEmptyMapCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEntriesCollectionIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testFullMapCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeyContainsValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeySetSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagContainsAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorUnsupportedSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMultipleValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testNoMappingReturnsEmptyCol()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_KeyIterable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaEntriesIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaValuesIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveViaValuesRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemove_KeyItem()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSizeWithPutRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize_Key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.isEqualSet(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.hashCodeForSet(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractSetValuedMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractSetValuedMap(java.util.Map,java.lang.Class,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractSetValuedMap.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractSetValuedMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetValuedMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractSetValuedMap.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractSetValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.emptyIfNull(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap$ListValuedHashMap(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap$ListValuedHashMap(java.lang.Class,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap$SetValuedHashMap(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap$SetValuedHashMap(java.lang.Class,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testEqualsHashCodeContract()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAddViaListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapEqualsHashCodeContract()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemoveViaListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapEqualsHashCodeContract()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemoveViaIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformingMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(K,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_Decorate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testKeyTransformedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testValueTransformedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.entries()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.asMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.keys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testAddException()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testDecoratorFactoryNullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableAsMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableEntries()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.setKeyValue(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.compare(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.isBitSet(K,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.bitIndex(K,int,int,K,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitsPerElement()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.bitsPerElement()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.lengthInBits(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,K,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(K,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet(org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet(org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap(K,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.isPrefix(K,int,int,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inFromRange(K,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange2(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inToRange(K,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createRangeMap(K,boolean,K,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,boolean,K,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(K,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(K,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createRangeMap(K,boolean,K,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.hasNext()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getFromKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getToKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isFromInclusive()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isToInclusive()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.createEntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.createRangeMap(K,boolean,K,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry(K,V,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isExternalNode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isInternalNode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previousEntry()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.setValue(V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie#root">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie(org.apache.commons.collections4.trie.KeyAnalyzer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractBitwiseTrie(org.apache.commons.collections4.trie.KeyAnalyzer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie(org.apache.commons.collections4.trie.KeyAnalyzer,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.select(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int,K,int,org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference.set(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference.get()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getPrefixMapByBits(K,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.prefixMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrie()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrie(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrie2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrie2Test.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrieTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrieTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrieTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrie(org.apache.commons.collections4.Trie)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrie.nextKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrie.previousKey(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrie.prefixMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Trie.prefixMap(K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrie.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrieTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrieTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.trie.UnmodifiableTrieTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformKey(J)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap.checkSetValue(U)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap.put(J,U)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformValue(U)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMap.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest#intToString">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest#objectToClass">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest#stringToInt">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueDecorator(java.util.Queue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueDecorator.element()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueDecorator.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueDecorator.poll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueDecorator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueDecorator.offer(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueElement()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueOffer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePeek()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePoll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.element()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.poll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.isAtFullCapacity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.offer(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue$1.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.increment(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue$1.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.decrement(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueue.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.makeConfirmedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testConstructorException1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testConstructorException2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testConstructorException3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueue.element()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueue.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueue.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueue.poll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueue.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueue.offer(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest#testPredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest.decorateCollection(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest.makeTestQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest.testGet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueue.transformedQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueue.element()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueue.getQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueue.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueue.poll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueue.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueue.offer(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueueTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueueTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueueTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueueTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueue.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueue.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueue.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueueTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueueTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSerializableSetDecorator.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSerializableSetDecorator.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest.testSetEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSetTest.testSetHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetDecorator(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetDecorator.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetDecorator.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetDecorator.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetDecorator.headSet(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetDecorator.subSet(E,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetDecorator.tailSet(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.isAddSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.isFailFastSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest.isNullSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.isRemoveSupported()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.getSubSet(java.util.SortedSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest.getConfirmed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest.bulkTestSortedSetHeadSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest.bulkTestSortedSetSubSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest.bulkTestSortedSetTailSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.AbstractSortedSetTest.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet(java.util.Set[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.toArray(T[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet$SetMutator.add(org.apache.commons.collections4.set.CompositeSet,java.util.List,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet$SetMutator.addAll(org.apache.commons.collections4.set.CompositeSet,java.util.List,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.containsAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.getSets()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.toArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.getMutator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet$SetMutator.resolveCollision(org.apache.commons.collections4.set.CompositeSet,java.util.Set,java.util.Set,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set,java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSet.setMutator(org.apache.commons.collections4.set.CompositeSet$SetMutator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.EmptySetMutator(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest.testAddComposited()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest.buildOne()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest.buildTwo()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest.testContains()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator(java.util.ListIterator,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.next()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.remove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet(java.util.Set,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.addAll(int,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.addAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.removeAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.retainAll(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.remove(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.asList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.add(int,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet2Test.setupSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet.indexOf(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.setupSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.testDuplicates()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.toArray(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest$A()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest$B()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAllCollections426()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(java.util.Map,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.MapBackedSet(java.util.Map,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.MapBackedSet2Test(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.MapBackedSet2Test.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.MapBackedSet2Test.setupSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.MapBackedSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.MapBackedSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSet.predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSet.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest#testPredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest.decorateSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest.makeTestSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest.testGetSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSet.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSet.decorated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSet.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSet.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSet.headSet(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSet.subSet(E,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSet.tailSet(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest#testPredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeTestSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSet.transformedSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSetTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSetTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet.transformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet.first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet.getSortedSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet.last()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet.comparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet.headSet(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet.subSet(E,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSet.tailSet(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSetTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSetTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSet(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSetTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSetTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSet.iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSet.headSet(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSet.subSet(E,E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSet.tailSet(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSet.readObject(java.io.ObjectInputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSet.writeObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSetTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.makeFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.setupSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.verifyUnmodifiable(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.DeleteCommand(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.EditCommand(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.DeleteCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.CommandVisitor.visitDeleteCommand(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.EditCommand.getObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.EditScript.visit(org.apache.commons.collections4.sequence.CommandVisitor)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.EditCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.InsertCommand(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.InsertCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.CommandVisitor.visitInsertCommand(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.KeepCommand(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.KeepCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.CommandVisitor.visitKeepCommand(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.ReplacementsFinder.visitKeepCommand(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.ReplacementsHandler.handleReplacement(int,java.util.List,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.DefaultEquator.defaultEquator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator.getScript()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.EditScript()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator.buildSnake(int,int,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator$Snake(int,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator.getMiddleSnake(int,int,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator$Snake.getStart()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator$Snake.getDiag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparator$Snake.getEnd()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.EditScript.append(org.apache.commons.collections4.sequence.KeepCommand)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.EditScript.append(org.apache.commons.collections4.sequence.DeleteCommand)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.EditScript.append(org.apache.commons.collections4.sequence.InsertCommand)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor.setList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparatorTest.sequence(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor.getString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.EditScript.getModifications()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractArrayListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractArrayListTest.testNewArrayList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractArrayListTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractArrayListTest.testSearch()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest.makeConfirmedFullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest.getConfirmedLinkedList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddFirst()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetFirst()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveFirst()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToStream(java.io.Serializable,java.io.OutputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromStream(java.io.InputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.testCanonicalEmptyCollectionExists()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.supportsEmptyCollections()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.testCanonicalFullCollectionExists()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.supportsFullCollections()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.testEqualsNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.testObjectEqualsSelf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.testObjectHashCodeEqualsContract()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.testObjectHashCodeEqualsSelfHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.testSerializeDeserializeThenCompare()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.serializeDeserialize(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.isEqualsCheckable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractObjectTest.testSimpleSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractTreeMapTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractTreeMapTest.testNewMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractTreeMapTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.AbstractTreeMapTest.testSearch()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStackTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStackTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStackTest.makeObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStackTest.testNewStack()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStack.empty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStack.peek()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStackTest.testPushPeekPop()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStackTest.testSearch()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ArrayStack.search(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils#EMPTY_BAG">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils#EMPTY_SORTED_BAG">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils.collectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils.predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils.synchronizedBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils.transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils.unmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils.predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils.synchronizedSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils.transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtils.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest#nopTransformer">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest.testPredicatedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest.testTransformedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.make()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.makeFirstTestCase(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.isTest(java.lang.reflect.Method)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.makeTestCase(java.lang.Class,java.lang.reflect.Method)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.getTestCaseConstructor(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.getBaseName(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTest.ignoredTests()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.make(org.apache.commons.collections4.BulkTest)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.addBulk(org.apache.commons.collections4.BulkTest,java.lang.reflect.Method)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.addTest(org.apache.commons.collections4.BulkTest,java.lang.reflect.Method)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTest.clone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.BulkTestSuiteMaker.isBulk(java.lang.reflect.Method)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.chainedClosure(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.chainedClosure(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.doWhileClosure(org.apache.commons.collections4.Closure,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.exceptionClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionClosure.exceptionClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.forClosure(int,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.nopClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.switchClosure(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.switchMapClosure(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtils.whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest$MockClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.uniquePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testExceptionClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testForClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testIfClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testNopClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testSingletonPatternInSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TestUtils.assertSameAfterSerialization(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest$MockClosure.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest$MockTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$CardinalityHelper(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqA(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.getFreq(java.lang.Object,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqB(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.max(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.min(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$EquatorWrapper.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$EquatorWrapper.getObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$EquatorWrapper.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Equator.hash(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils#EMPTY_COLLECTION">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.exists(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.retainAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.retainAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.synchronizedCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.transform(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.contains(java.util.Collection,E,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$1.transform(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$EquatorWrapper(org.apache.commons.collections4.Equator,O)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.permutations(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$3.transform(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.removeAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer,R)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.removeAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.removeAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$2.transform(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.retainAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator,org.apache.commons.collections4.Transformer,R)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.get(java.util.Map,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.get(java.lang.Iterable,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ComparatorUtils.naturalComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.cardinality(O,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.setCardinality(O,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.list()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.union(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.forAllDo(java.lang.Iterable,C)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.forAllDo(java.util.Iterator,C)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.lang.Iterable,C)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.util.Iterator,C)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.find(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.filterInverse(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.notPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.isFull(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.isNotEmpty(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.isEmpty(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.isProperSubCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.maxSize(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest#EQUALS_TWO">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest#TRANSFORM_TO_INTEGER">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MockTestCase()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.next(java.util.Iterator,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MockTestCase.expect(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.addAllForElements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,C[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,java.util.Enumeration)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MockTestCase.createMock(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MockTestCase.replay()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MockTestCase.verify()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.addIgnoreNull(java.util.Collection,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.cardinality()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.collateException1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.collateException2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.collect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.constantTransformer(O)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.assertCollectResult(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.containsAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.containsAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.containsAny()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.containsAny(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.countMatches()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.disjunction()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.emptyCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.emptyCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.exists()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.extractSingleton()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.extractSingleton(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.filter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.filterInverse()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.find()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.get()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.get1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getFromIterable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getFromIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getFromList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getFromMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getFromObject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getNegative()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.intersection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.isFull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.maxSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.instanceofPredicate(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.reverse()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.reverseArray(java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.select()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.selectRejected()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testCollate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ComparatorUtils.reversedComparator(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testContainsWithEquator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest$8()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest$9()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testPermutations()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testRemoveAllWithEquator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testRetainAllWithEquator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSize_Array()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSize_List()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSize_Map()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSize_Other()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSubtract()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.transform1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.transform2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.CollectionUtilsTest.union()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ComparatorUtils#NATURAL_COMPARATOR">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ComparatorUtils.chainedComparator(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ComparatorUtils.chainedComparator(java.util.Comparator[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ComparatorUtils.nullHighComparator(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ComparatorUtils.nullLowComparator(java.util.Comparator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ComparatorUtils.booleanComparator(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.EnumerationUtils.toList(java.util.Enumeration)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.EnumerationUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.EnumerationUtilsTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.EnumerationUtilsTest.testToListWithStringTokenizer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.EnumerationUtils.toList(java.util.StringTokenizer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtils.exceptionFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionFactory.exceptionFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtils.instantiateFactory(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtils.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtils.prototypeFactory(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactoryComplex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactoryMismatch()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactoryNoConstructor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactoryNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactorySimple()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest$Mock3.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testExceptionFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testNullFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCloneMethod()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest$Mock1(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest$Mock2(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.FactoryUtilsTest.testSingletonPatternInSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.toArray(java.util.Iterator,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.asIterable(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.asMultipleUseIterable(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.asEnumeration(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.asIterator(java.util.Enumeration)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.asIterator(java.util.Enumeration,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.chainedIterator(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.chainedIterator(java.util.Iterator[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.collatedIterator(java.util.Comparator,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.collatedIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.collatedIterator(java.util.Comparator,java.util.Iterator[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.objectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.peekingIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.pushbackIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.filteredListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.singletonListIterator(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.toListIterator(java.util.Iterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.unmodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.emptyOrderedIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayIterator(E[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayIterator(E[],int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayIterator(E[],int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayIterator(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayIterator(java.lang.Object,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyIterator.resettableEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.loopingIterator(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.singletonIterator(E)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayListIterator(E[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayListIterator(E[],int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayListIterator(E[],int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayListIterator(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayListIterator(java.lang.Object,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.arrayListIterator(java.lang.Object,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.emptyListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.iterators.EmptyListIterator.resettableEmptyListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.loopingListIterator(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.boundedIterator(java.util.Iterator,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.boundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.transformedIterator(java.util.Iterator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.emptyMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.emptyOrderedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.getIterator(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.nodeListIterator(org.w3c.dom.Node)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtils.nodeListIterator(org.w3c.dom.NodeList)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.getImmutableIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.getImmutableListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.createNodeList(org.w3c.dom.Node[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testAsIterable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedIterator.hasPrevious()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.OrderedIterator.previous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.createNodes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testToArray()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testToArray2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testToList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils$Partition.get(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils$Partition.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.indexOf(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.fixedSizeList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.lazyList(java.util.List,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils$LcsVisitor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils$LcsVisitor.getSubSequence()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.predicatedList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.select(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.selectRejected(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.subtract(java.util.List,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.sum(java.util.List,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.union(java.util.List,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.intersection(java.util.List,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.transformedList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.partition(java.util.List,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils$Partition(java.util.List,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils$CharSequenceAsList(java.lang.CharSequence)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest#EQUALS_TWO">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtils.defaultIfNull(java.util.List,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testIndexOf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testIntersectEmptyWithEmptyList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testLazyList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testPartition()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testPredicatedList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testRemoveAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testRetainAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testSelect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testSelectRejected()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testSubtract()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapPerformance.main(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapPerformance.testAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapPerformance$DummyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapPerformance.test(java.util.Map,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils#EMPTY_SORTED_MAP">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.multiValueMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.multiValueMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.populateMap(java.util.Map,java.lang.Iterable,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.populateMap(org.apache.commons.collections4.MultiMap,java.lang.Iterable,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.putAll(java.util.Map,java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.unmodifiableMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.fixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.predicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.fixedSizeMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils$1(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.iterableMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.lazyMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.lazyMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.predicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.transformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils$2(java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.iterableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.orderedMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.multiValueMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.populateMap(java.util.Map,java.lang.Iterable,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.populateMap(org.apache.commons.collections4.MultiMap,java.lang.Iterable,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getBooleanValue(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getBoolean(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getBooleanValue(java.util.Map,K,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getByteValue(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getByte(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getByteValue(java.util.Map,K,byte)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getDoubleValue(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getDouble(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getDoubleValue(java.util.Map,K,double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getFloatValue(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getFloat(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getFloatValue(java.util.Map,K,float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getIntValue(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getInteger(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getIntValue(java.util.Map,K,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getBoolean(java.util.Map,K,java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getByte(java.util.Map,K,java.lang.Byte)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getDouble(java.util.Map,K,java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getFloat(java.util.Map,K,java.lang.Float)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getInteger(java.util.Map,K,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getLong(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getLong(java.util.Map,K,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K,java.lang.Number)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getShort(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getShort(java.util.Map,K,java.lang.Short)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getString(java.util.Map,K,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getString(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getMap(java.util.Map,K,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getMap(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getLongValue(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getLongValue(java.util.Map,K,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getShortValue(java.util.Map,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.getShortValue(java.util.Map,K,short)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.isNotEmpty(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream,java.lang.Object,java.util.Map,org.apache.commons.collections4.ArrayStack,boolean)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.getPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.toMap(java.util.ResourceBundle)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugPrint()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.emptyIfNull(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testInvertMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtils.invertMap(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testIterableMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testPopulateMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest$X(int,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testPredicatedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testVerbosePrint()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MockTestCase.registerMock(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils#EMPTY_MULTI_VALUED_MAP">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.createListValuedHashMap(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.createSetValuedHashMap(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.getCollection(org.apache.commons.collections4.MultiValuedMap,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.getList(org.apache.commons.collections4.MultiValuedMap,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.getSet(org.apache.commons.collections4.MultiValuedMap,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.getBag(org.apache.commons.collections4.MultiValuedMap,K)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.createListValuedHashMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.transformedMultiValuedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.createSetValuedHashMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.isEmpty(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testEmptyIfNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.emptyIfNull(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testEmptyUnmodifiableMultiValuedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testGetBag()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testGetCollection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testGetList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testGetSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testIsEmptyWithEmptyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testIsEmptyWithNonEmptyMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testIsEmptyWithNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtilsTest.testTypeSafeEmptyMultiValuedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.MultiMapUtils.emptyMultiValuedMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.allPredicate(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.anyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.eitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.onePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.equalPredicate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.exceptionPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionPredicate.exceptionPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.falsePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.identityPredicate(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.neitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.nonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.nonePredicate(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.notNullPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.nullIsFalsePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.nullIsTruePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.nullPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.onePredicate(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtils.truePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.generatePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testExceptionPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testFalsePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testIsNotNullPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testSingletonPatternInSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.mapTransformer(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testTruePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.PredicateUtilsTest.testUniquePredicate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtils#EMPTY_QUEUE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtils.predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtils.transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtils.unmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtilsTest#truePredicate">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtilsTest#nopTransformer">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtilsTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtils.emptyQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils#EMPTY_SORTED_SET">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.orderedSet(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.transformedSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.transformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtils.unmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtilsTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtilsTest.testEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtilsTest.testHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtilsTest.testpredicatedSet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SetUtilsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Get.get(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Get.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Get.containsKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Get.containsValue(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Get.isEmpty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Get.size()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Get.values()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Get.entrySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Get.keySet()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet.mapIterator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedPut.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Put.put(K,V)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedPut.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Put.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedPut.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.Put.putAll(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils.writableMap(org.apache.commons.collections4.Put)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedPut(org.apache.commons.collections4.Put)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils.readableMap(org.apache.commons.collections4.Get)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtils$WrappedGet(org.apache.commons.collections4.Get)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest#stringToInt">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest.attemptGetOperation(java.lang.Runnable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest.attemptMapOperation(java.lang.String,java.lang.Runnable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest.attemptPutOperation(java.lang.Runnable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest$5()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest$6()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest$7()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest$8()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.SplitMapUtilsTest$9()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TestUtils.assertSameAfterSerialization(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.exceptionTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.ExceptionTransformer.exceptionTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.invokerTransformer(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.nullTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.switchMapTransformer(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.switchTransformer(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Closure)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.chainedTransformer(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.chainedTransformer(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.cloneTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.CloneTransformer.cloneTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.instantiateTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.InstantiateTransformer.instantiateTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtils.instantiateTransformer(java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.functors.StringValueTransformer.stringValueTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testConstantTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testExceptionTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testNopTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testNullTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testSingletonPatternInSerialization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testStringValueTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TrieUtils.unmodifiableTrie(org.apache.commons.collections4.Trie)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TrieUtilsTest(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TrieUtilsTest.suite()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie()">
      <data key="type">METHOD</data>
    </node>
    <edge id="e1" source="org.apache.commons.collections4.bag.AbstractBagDecorator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2" source="org.apache.commons.collections4.bag.AbstractBagDecorator(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3" source="org.apache.commons.collections4.bag.AbstractBagDecorator.add(E,int)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4" source="org.apache.commons.collections4.bag.AbstractBagDecorator.add(E,int)" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5" source="org.apache.commons.collections4.bag.AbstractBagDecorator.remove(java.lang.Object,int)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6" source="org.apache.commons.collections4.bag.AbstractBagDecorator.remove(java.lang.Object,int)" target="org.apache.commons.collections4.Bag.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7" source="org.apache.commons.collections4.bag.AbstractBagDecorator.getCount(java.lang.Object)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8" source="org.apache.commons.collections4.bag.AbstractBagDecorator.getCount(java.lang.Object)" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9" source="org.apache.commons.collections4.bag.AbstractBagDecorator.uniqueSet()" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e10" source="org.apache.commons.collections4.bag.AbstractBagDecorator.uniqueSet()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e11" source="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e12" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet()" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e13" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.getFullElements()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e14" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.getOtherElements()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e15" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.isNullSupported()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isNullSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e16" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.makeFullCollection()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e17" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.makeFullCollection()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e18" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.makeObject()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e19" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.makeObject()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e20" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetEmpty()" target="org.apache.commons.collections4.bag.AbstractBagTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e21" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e22" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetEmpty()" target="org.apache.commons.collections4.bag.AbstractBagTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e23" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetEmpty()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e24" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e25" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e26" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetFull()" target="org.apache.commons.collections4.bag.AbstractBagTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e27" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e28" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetFull()" target="org.apache.commons.collections4.bag.AbstractBagTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e29" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetFull()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e30" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e31" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e32" source="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet.verify()" target="org.apache.commons.collections4.set.AbstractSetTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e33" source="org.apache.commons.collections4.bag.AbstractBagTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e34" source="org.apache.commons.collections4.bag.AbstractBagTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e35" source="org.apache.commons.collections4.bag.AbstractBagTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e36" source="org.apache.commons.collections4.bag.AbstractBagTest.getCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e37" source="org.apache.commons.collections4.bag.AbstractBagTest.makeFullCollection()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e38" source="org.apache.commons.collections4.bag.AbstractBagTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e39" source="org.apache.commons.collections4.bag.AbstractBagTest.bulkTestBagUniqueSet()" target="org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e40" source="org.apache.commons.collections4.bag.AbstractBagTest.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e41" source="org.apache.commons.collections4.bag.AbstractBagTest.resetEmpty()" target="org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e42" source="org.apache.commons.collections4.bag.AbstractBagTest.resetEmpty()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e43" source="org.apache.commons.collections4.bag.AbstractBagTest.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e44" source="org.apache.commons.collections4.bag.AbstractBagTest.resetEmpty()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e45" source="org.apache.commons.collections4.bag.AbstractBagTest.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e46" source="org.apache.commons.collections4.bag.AbstractBagTest.resetFull()" target="org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e47" source="org.apache.commons.collections4.bag.AbstractBagTest.resetFull()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e48" source="org.apache.commons.collections4.bag.AbstractBagTest.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e49" source="org.apache.commons.collections4.bag.AbstractBagTest.resetFull()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeConfirmedFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e50" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e51" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagAdd()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e52" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagAdd()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e53" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagAdd()" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e54" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagContains()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e55" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagContains()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e56" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagContains()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e57" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagContainsAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e58" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagContainsAll()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e59" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagContainsAll()" target="org.apache.commons.collections4.Bag.containsAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e60" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagContainsAll()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e61" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEquals()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e62" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEquals()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e63" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEquals()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e64" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEqualsHashBag()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e65" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEqualsHashBag()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e66" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEqualsHashBag()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e67" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEqualsHashBag()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e68" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEqualsSelf()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e69" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEqualsSelf()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e70" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagEqualsSelf()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e71" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagHashCode()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e72" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagHashCode()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e73" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagHashCode()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e74" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIterator()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e75" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIterator()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e76" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIterator()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e77" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIterator()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e78" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIterator()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e79" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIterator()" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e80" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFail()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e81" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFail()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e82" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFail()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e83" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFail()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e84" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFail()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e85" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailDoubleRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e86" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailDoubleRemove()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e87" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailDoubleRemove()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e88" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailDoubleRemove()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e89" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailDoubleRemove()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e90" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailNoMore()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e91" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailNoMore()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e92" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailNoMore()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e93" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorFailNoMore()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e94" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorRemoveProtectsInvariants()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e95" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorRemoveProtectsInvariants()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e96" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorRemoveProtectsInvariants()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e97" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorRemoveProtectsInvariants()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e98" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagIteratorRemoveProtectsInvariants()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e99" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e100" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemove()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e101" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemove()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e102" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemove()" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e103" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemove()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e104" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemove()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e105" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemoveAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e106" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemoveAll()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e107" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemoveAll()" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e108" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemoveAll()" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e109" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemoveAll()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e110" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemoveAll()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e111" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRemoveAll()" target="org.apache.commons.collections4.Bag.removeAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e112" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e113" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRetainAll()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e114" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRetainAll()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e115" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRetainAll()" target="org.apache.commons.collections4.Bag.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e116" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagRetainAll()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e117" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagSize()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e118" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagSize()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e119" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagSize()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e120" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagSize()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e121" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagSize()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e122" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagSize()" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e123" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagSize()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e124" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagToArray()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e125" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagToArray()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e126" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagToArray()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e127" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagToArrayPopulate()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e128" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagToArrayPopulate()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e129" source="org.apache.commons.collections4.bag.AbstractBagTest.testBagToArrayPopulate()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e130" source="org.apache.commons.collections4.bag.AbstractBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e131" source="org.apache.commons.collections4.bag.AbstractBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e132" source="org.apache.commons.collections4.bag.AbstractBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e133" source="org.apache.commons.collections4.bag.AbstractBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e134" source="org.apache.commons.collections4.bag.AbstractBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e135" source="org.apache.commons.collections4.bag.AbstractBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e136" source="org.apache.commons.collections4.bag.AbstractBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e137" source="org.apache.commons.collections4.bag.AbstractBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e138" source="org.apache.commons.collections4.bag.AbstractBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e139" source="org.apache.commons.collections4.bag.AbstractBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e140" source="org.apache.commons.collections4.bag.AbstractBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e141" source="org.apache.commons.collections4.bag.AbstractBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e142" source="org.apache.commons.collections4.bag.AbstractMapBag.toArray(T[])" target="org.apache.commons.collections4.bag.AbstractMapBag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e143" source="org.apache.commons.collections4.bag.AbstractMapBag.toArray(T[])" target="org.apache.commons.collections4.bag.AbstractMapBag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e144" source="org.apache.commons.collections4.bag.AbstractMapBag.add(E)" target="org.apache.commons.collections4.bag.AbstractMapBag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e145" source="org.apache.commons.collections4.bag.AbstractMapBag.add(E,int)" target="org.apache.commons.collections4.bag.AbstractMapBag$MutableInteger(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e146" source="org.apache.commons.collections4.bag.AbstractMapBag.addAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractMapBag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e147" source="org.apache.commons.collections4.bag.AbstractMapBag.containsAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractMapBag.containsAll(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e148" source="org.apache.commons.collections4.bag.AbstractMapBag.containsAll(java.util.Collection)" target="org.apache.commons.collections4.bag.HashBag(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e149" source="org.apache.commons.collections4.bag.AbstractMapBag.containsAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e150" source="org.apache.commons.collections4.bag.AbstractMapBag.containsAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.AbstractMapBag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e151" source="org.apache.commons.collections4.bag.AbstractMapBag.containsAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e152" source="org.apache.commons.collections4.bag.AbstractMapBag.equals(java.lang.Object)" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e153" source="org.apache.commons.collections4.bag.AbstractMapBag.equals(java.lang.Object)" target="org.apache.commons.collections4.bag.AbstractMapBag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e154" source="org.apache.commons.collections4.bag.AbstractMapBag.equals(java.lang.Object)" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e155" source="org.apache.commons.collections4.bag.AbstractMapBag.equals(java.lang.Object)" target="org.apache.commons.collections4.bag.AbstractMapBag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e156" source="org.apache.commons.collections4.bag.AbstractMapBag.removeAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractMapBag.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e157" source="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e158" source="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(java.util.Collection)" target="org.apache.commons.collections4.bag.HashBag(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e159" source="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e160" source="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.AbstractMapBag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e161" source="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.AbstractMapBag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e162" source="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e163" source="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e164" source="org.apache.commons.collections4.bag.AbstractMapBag.retainAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.AbstractMapBag.removeAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e165" source="org.apache.commons.collections4.bag.AbstractMapBag.toArray()" target="org.apache.commons.collections4.bag.AbstractMapBag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e166" source="org.apache.commons.collections4.bag.AbstractMapBag.toArray()" target="org.apache.commons.collections4.bag.AbstractMapBag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e167" source="org.apache.commons.collections4.bag.AbstractMapBag.toString()" target="org.apache.commons.collections4.bag.AbstractMapBag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e168" source="org.apache.commons.collections4.bag.AbstractMapBag.toString()" target="org.apache.commons.collections4.bag.AbstractMapBag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e169" source="org.apache.commons.collections4.bag.AbstractMapBag.toString()" target="org.apache.commons.collections4.bag.AbstractMapBag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e170" source="org.apache.commons.collections4.bag.AbstractMapBag.iterator()" target="org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e171" source="org.apache.commons.collections4.bag.AbstractMapBag.uniqueSet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e172" source="org.apache.commons.collections4.bag.AbstractMapBag.doReadObject(java.util.Map,java.io.ObjectInputStream)" target="org.apache.commons.collections4.bag.AbstractMapBag$MutableInteger(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e173" source="org.apache.commons.collections4.bag.AbstractSortedBagDecorator()" target="org.apache.commons.collections4.bag.AbstractBagDecorator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e174" source="org.apache.commons.collections4.bag.AbstractSortedBagDecorator(org.apache.commons.collections4.SortedBag)" target="org.apache.commons.collections4.bag.AbstractBagDecorator(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e175" source="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.first()" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e176" source="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.first()" target="org.apache.commons.collections4.SortedBag.first()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e177" source="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.last()" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e178" source="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.last()" target="org.apache.commons.collections4.SortedBag.last()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e179" source="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.comparator()" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e180" source="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.comparator()" target="org.apache.commons.collections4.SortedBag.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e181" source="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e182" source="org.apache.commons.collections4.bag.AbstractSortedBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e183" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.getCollection()" target="org.apache.commons.collections4.bag.AbstractBagTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e184" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.makeConfirmedCollection()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e185" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.makeFullCollection()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e186" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e187" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetEmpty()" target="org.apache.commons.collections4.bag.CollectionSortedBag.collectionSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e188" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetEmpty()" target="org.apache.commons.collections4.bag.AbstractSortedBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e189" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e190" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetEmpty()" target="org.apache.commons.collections4.bag.AbstractSortedBagTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e191" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e192" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetFull()" target="org.apache.commons.collections4.bag.CollectionSortedBag.collectionSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e193" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetFull()" target="org.apache.commons.collections4.bag.AbstractSortedBagTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e194" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e195" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.resetFull()" target="org.apache.commons.collections4.bag.AbstractBagTest.makeConfirmedFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e196" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e197" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.verify()" target="org.apache.commons.collections4.bag.AbstractSortedBagTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e198" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.verify()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e199" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e200" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.verify()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e201" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.verify()" target="org.apache.commons.collections4.SortedBag.first()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e202" source="org.apache.commons.collections4.bag.AbstractSortedBagTest.verify()" target="org.apache.commons.collections4.SortedBag.last()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e203" source="org.apache.commons.collections4.bag.CollectionBag(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.AbstractBagDecorator(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e204" source="org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.CollectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e205" source="org.apache.commons.collections4.bag.CollectionBag.add(E)" target="org.apache.commons.collections4.bag.CollectionBag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e206" source="org.apache.commons.collections4.bag.CollectionBag.add(E,int)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e207" source="org.apache.commons.collections4.bag.CollectionBag.add(E,int)" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e208" source="org.apache.commons.collections4.bag.CollectionBag.addAll(java.util.Collection)" target="org.apache.commons.collections4.bag.CollectionBag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e209" source="org.apache.commons.collections4.bag.CollectionBag.containsAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e210" source="org.apache.commons.collections4.bag.CollectionBag.remove(java.lang.Object)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e211" source="org.apache.commons.collections4.bag.CollectionBag.removeAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e212" source="org.apache.commons.collections4.bag.CollectionBag.removeAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e213" source="org.apache.commons.collections4.bag.CollectionBag.removeAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e214" source="org.apache.commons.collections4.bag.CollectionBag.removeAll(java.util.Collection)" target="org.apache.commons.collections4.Bag.removeAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e215" source="org.apache.commons.collections4.bag.CollectionBag.retainAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e216" source="org.apache.commons.collections4.bag.CollectionBag.retainAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e217" source="org.apache.commons.collections4.bag.CollectionBag.retainAll(java.util.Collection)" target="org.apache.commons.collections4.Bag.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e218" source="org.apache.commons.collections4.bag.CollectionBag.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e219" source="org.apache.commons.collections4.bag.CollectionBag.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e220" source="org.apache.commons.collections4.bag.CollectionBagTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e221" source="org.apache.commons.collections4.bag.CollectionBagTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.bag.CollectionBagTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e222" source="org.apache.commons.collections4.bag.CollectionBagTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e223" source="org.apache.commons.collections4.bag.CollectionBagTest.makeObject()" target="org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e224" source="org.apache.commons.collections4.bag.CollectionBagTest.makeObject()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e225" source="org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.bag.CollectionBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e226" source="org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e227" source="org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e228" source="org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e229" source="org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e230" source="org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e231" source="org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e232" source="org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e233" source="org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e234" source="org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e235" source="org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e236" source="org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e237" source="org.apache.commons.collections4.bag.CollectionSortedBag(org.apache.commons.collections4.SortedBag)" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e238" source="org.apache.commons.collections4.bag.CollectionSortedBag.collectionSortedBag(org.apache.commons.collections4.SortedBag)" target="org.apache.commons.collections4.bag.CollectionSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e239" source="org.apache.commons.collections4.bag.CollectionSortedBag.add(E)" target="org.apache.commons.collections4.bag.CollectionSortedBag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e240" source="org.apache.commons.collections4.bag.CollectionSortedBag.add(E,int)" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e241" source="org.apache.commons.collections4.bag.CollectionSortedBag.add(E,int)" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e242" source="org.apache.commons.collections4.bag.CollectionSortedBag.addAll(java.util.Collection)" target="org.apache.commons.collections4.bag.CollectionSortedBag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e243" source="org.apache.commons.collections4.bag.CollectionSortedBag.containsAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e244" source="org.apache.commons.collections4.bag.CollectionSortedBag.remove(java.lang.Object)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e245" source="org.apache.commons.collections4.bag.CollectionSortedBag.removeAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e246" source="org.apache.commons.collections4.bag.CollectionSortedBag.removeAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e247" source="org.apache.commons.collections4.bag.CollectionSortedBag.removeAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e248" source="org.apache.commons.collections4.bag.CollectionSortedBag.removeAll(java.util.Collection)" target="org.apache.commons.collections4.Bag.removeAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e249" source="org.apache.commons.collections4.bag.CollectionSortedBag.retainAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e250" source="org.apache.commons.collections4.bag.CollectionSortedBag.retainAll(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e251" source="org.apache.commons.collections4.bag.CollectionSortedBag.retainAll(java.util.Collection)" target="org.apache.commons.collections4.Bag.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e252" source="org.apache.commons.collections4.bag.CollectionSortedBag.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e253" source="org.apache.commons.collections4.bag.CollectionSortedBag.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e254" source="org.apache.commons.collections4.bag.CollectionSortedBagTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e255" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.bag.CollectionSortedBagTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e256" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e257" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.makeObject()" target="org.apache.commons.collections4.bag.CollectionSortedBag.collectionSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e258" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.makeObject()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e259" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.bag.CollectionSortedBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e260" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e261" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e262" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e263" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e264" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e265" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e266" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e267" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e268" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e269" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e270" source="org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e271" source="org.apache.commons.collections4.bag.HashBag()" target="org.apache.commons.collections4.bag.AbstractMapBag(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e272" source="org.apache.commons.collections4.bag.HashBag(java.util.Collection)" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e273" source="org.apache.commons.collections4.bag.HashBag(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractMapBag.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e274" source="org.apache.commons.collections4.bag.HashBag.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.bag.AbstractMapBag.doReadObject(java.util.Map,java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e275" source="org.apache.commons.collections4.bag.HashBag.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.bag.AbstractMapBag.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e276" source="org.apache.commons.collections4.bag.HashBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e277" source="org.apache.commons.collections4.bag.HashBagTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e278" source="org.apache.commons.collections4.bag.HashBagTest.makeObject()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e279" source="org.apache.commons.collections4.bag.PredicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.collection.PredicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e280" source="org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.PredicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e281" source="org.apache.commons.collections4.bag.PredicatedBag.add(E,int)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e282" source="org.apache.commons.collections4.bag.PredicatedBag.add(E,int)" target="org.apache.commons.collections4.bag.PredicatedBag.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e283" source="org.apache.commons.collections4.bag.PredicatedBag.add(E,int)" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e284" source="org.apache.commons.collections4.bag.PredicatedBag.remove(java.lang.Object,int)" target="org.apache.commons.collections4.bag.PredicatedBag.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e285" source="org.apache.commons.collections4.bag.PredicatedBag.remove(java.lang.Object,int)" target="org.apache.commons.collections4.Bag.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e286" source="org.apache.commons.collections4.bag.PredicatedBag.getCount(java.lang.Object)" target="org.apache.commons.collections4.bag.PredicatedBag.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e287" source="org.apache.commons.collections4.bag.PredicatedBag.getCount(java.lang.Object)" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e288" source="org.apache.commons.collections4.bag.PredicatedBag.uniqueSet()" target="org.apache.commons.collections4.bag.PredicatedBag.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e289" source="org.apache.commons.collections4.bag.PredicatedBag.uniqueSet()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e290" source="org.apache.commons.collections4.bag.PredicatedBag.decorated()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e291" source="org.apache.commons.collections4.bag.PredicatedBagTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e292" source="org.apache.commons.collections4.bag.PredicatedBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e293" source="org.apache.commons.collections4.bag.PredicatedBagTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e294" source="org.apache.commons.collections4.bag.PredicatedBagTest.decorateBag(org.apache.commons.collections4.bag.HashBag,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e295" source="org.apache.commons.collections4.bag.PredicatedBagTest.makeObject()" target="org.apache.commons.collections4.bag.PredicatedBagTest.decorateBag(org.apache.commons.collections4.bag.HashBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e296" source="org.apache.commons.collections4.bag.PredicatedBagTest.makeObject()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e297" source="org.apache.commons.collections4.bag.PredicatedBagTest.makeTestBag()" target="org.apache.commons.collections4.bag.PredicatedBagTest.decorateBag(org.apache.commons.collections4.bag.HashBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e298" source="org.apache.commons.collections4.bag.PredicatedBagTest.makeTestBag()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e299" source="org.apache.commons.collections4.bag.PredicatedBagTest.makeTestBag()" target="org.apache.commons.collections4.bag.PredicatedBagTest.stringPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e300" source="org.apache.commons.collections4.bag.PredicatedBagTest.stringPredicate()" target="org.apache.commons.collections4.bag.PredicatedBagTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e301" source="org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd()" target="org.apache.commons.collections4.bag.PredicatedBagTest.makeTestBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e302" source="org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e303" source="org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e304" source="org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate()" target="org.apache.commons.collections4.bag.AbstractMapBag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e305" source="org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate()" target="org.apache.commons.collections4.bag.PredicatedBagTest.decorateBag(org.apache.commons.collections4.bag.HashBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e306" source="org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate()" target="org.apache.commons.collections4.bag.PredicatedBagTest.stringPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e307" source="org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove()" target="org.apache.commons.collections4.bag.PredicatedBagTest.makeTestBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e308" source="org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e309" source="org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e310" source="org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove()" target="org.apache.commons.collections4.bag.PredicatedBag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e311" source="org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e312" source="org.apache.commons.collections4.bag.PredicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.PredicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e313" source="org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.PredicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e314" source="org.apache.commons.collections4.bag.PredicatedSortedBag.first()" target="org.apache.commons.collections4.bag.PredicatedSortedBag.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e315" source="org.apache.commons.collections4.bag.PredicatedSortedBag.first()" target="org.apache.commons.collections4.SortedBag.first()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e316" source="org.apache.commons.collections4.bag.PredicatedSortedBag.last()" target="org.apache.commons.collections4.bag.PredicatedSortedBag.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e317" source="org.apache.commons.collections4.bag.PredicatedSortedBag.last()" target="org.apache.commons.collections4.SortedBag.last()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e318" source="org.apache.commons.collections4.bag.PredicatedSortedBag.comparator()" target="org.apache.commons.collections4.bag.PredicatedSortedBag.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e319" source="org.apache.commons.collections4.bag.PredicatedSortedBag.comparator()" target="org.apache.commons.collections4.SortedBag.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e320" source="org.apache.commons.collections4.bag.PredicatedSortedBag.decorated()" target="org.apache.commons.collections4.bag.PredicatedBag.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e321" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e322" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractSortedBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e323" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e324" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.stringPredicate()" target="org.apache.commons.collections4.bag.PredicatedSortedBagTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e325" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.decorateBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e326" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.makeObject()" target="org.apache.commons.collections4.bag.PredicatedSortedBagTest.decorateBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e327" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.makeObject()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e328" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.makeTestBag()" target="org.apache.commons.collections4.bag.PredicatedSortedBagTest.decorateBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e329" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.makeTestBag()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e330" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.makeTestBag()" target="org.apache.commons.collections4.bag.PredicatedSortedBagTest.stringPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e331" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate()" target="org.apache.commons.collections4.bag.PredicatedSortedBagTest.decorateBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e332" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e333" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate()" target="org.apache.commons.collections4.bag.PredicatedSortedBagTest.stringPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e334" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate()" target="org.apache.commons.collections4.bag.PredicatedSortedBag.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e335" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder()" target="org.apache.commons.collections4.bag.PredicatedSortedBagTest.decorateBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e336" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e337" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder()" target="org.apache.commons.collections4.bag.PredicatedSortedBagTest.stringPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e338" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e339" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder()" target="org.apache.commons.collections4.SortedBag.first()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e340" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder()" target="org.apache.commons.collections4.SortedBag.last()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e341" source="org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder()" target="org.apache.commons.collections4.SortedBag.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e342" source="org.apache.commons.collections4.bag.SynchronizedBag$SynchronizedBagSet(java.util.Set,java.lang.Object)" target="org.apache.commons.collections4.collection.SynchronizedCollection(java.util.Collection,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e343" source="org.apache.commons.collections4.bag.SynchronizedBag(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.collection.SynchronizedCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e344" source="org.apache.commons.collections4.bag.SynchronizedBag(org.apache.commons.collections4.Bag,java.lang.Object)" target="org.apache.commons.collections4.collection.SynchronizedCollection(java.util.Collection,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e345" source="org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.SynchronizedBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e346" source="org.apache.commons.collections4.bag.SynchronizedBag.add(E,int)" target="org.apache.commons.collections4.bag.SynchronizedBag.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e347" source="org.apache.commons.collections4.bag.SynchronizedBag.add(E,int)" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e348" source="org.apache.commons.collections4.bag.SynchronizedBag.remove(java.lang.Object,int)" target="org.apache.commons.collections4.bag.SynchronizedBag.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e349" source="org.apache.commons.collections4.bag.SynchronizedBag.remove(java.lang.Object,int)" target="org.apache.commons.collections4.Bag.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e350" source="org.apache.commons.collections4.bag.SynchronizedBag.getCount(java.lang.Object)" target="org.apache.commons.collections4.bag.SynchronizedBag.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e351" source="org.apache.commons.collections4.bag.SynchronizedBag.getCount(java.lang.Object)" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e352" source="org.apache.commons.collections4.bag.SynchronizedBag.uniqueSet()" target="org.apache.commons.collections4.bag.SynchronizedBag.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e353" source="org.apache.commons.collections4.bag.SynchronizedBag.uniqueSet()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e354" source="org.apache.commons.collections4.bag.SynchronizedBag.uniqueSet()" target="org.apache.commons.collections4.bag.SynchronizedBag$SynchronizedBagSet(java.util.Set,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e355" source="org.apache.commons.collections4.bag.SynchronizedBag.getBag()" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e356" source="org.apache.commons.collections4.bag.SynchronizedBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e357" source="org.apache.commons.collections4.bag.SynchronizedBagTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e358" source="org.apache.commons.collections4.bag.SynchronizedBagTest.makeObject()" target="org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e359" source="org.apache.commons.collections4.bag.SynchronizedBagTest.makeObject()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e360" source="org.apache.commons.collections4.bag.SynchronizedSortedBag(org.apache.commons.collections4.Bag,java.lang.Object)" target="org.apache.commons.collections4.bag.SynchronizedBag(org.apache.commons.collections4.Bag,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e361" source="org.apache.commons.collections4.bag.SynchronizedSortedBag(org.apache.commons.collections4.SortedBag)" target="org.apache.commons.collections4.bag.SynchronizedBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e362" source="org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(org.apache.commons.collections4.SortedBag)" target="org.apache.commons.collections4.bag.SynchronizedSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e363" source="org.apache.commons.collections4.bag.SynchronizedSortedBag.first()" target="org.apache.commons.collections4.bag.SynchronizedSortedBag.getSortedBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e364" source="org.apache.commons.collections4.bag.SynchronizedSortedBag.first()" target="org.apache.commons.collections4.SortedBag.first()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e365" source="org.apache.commons.collections4.bag.SynchronizedSortedBag.last()" target="org.apache.commons.collections4.bag.SynchronizedSortedBag.getSortedBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e366" source="org.apache.commons.collections4.bag.SynchronizedSortedBag.last()" target="org.apache.commons.collections4.SortedBag.last()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e367" source="org.apache.commons.collections4.bag.SynchronizedSortedBag.comparator()" target="org.apache.commons.collections4.bag.SynchronizedSortedBag.getSortedBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e368" source="org.apache.commons.collections4.bag.SynchronizedSortedBag.comparator()" target="org.apache.commons.collections4.SortedBag.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e369" source="org.apache.commons.collections4.bag.SynchronizedSortedBag.getSortedBag()" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e370" source="org.apache.commons.collections4.bag.TransformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.TransformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e371" source="org.apache.commons.collections4.bag.TransformedBag.transformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.bag.TransformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e372" source="org.apache.commons.collections4.bag.TransformedBag.transformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e373" source="org.apache.commons.collections4.bag.TransformedBag.transformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e374" source="org.apache.commons.collections4.bag.TransformedBag.transformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e375" source="org.apache.commons.collections4.bag.TransformedBag.transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.bag.TransformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e376" source="org.apache.commons.collections4.bag.TransformedBag.add(E,int)" target="org.apache.commons.collections4.bag.TransformedBag.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e377" source="org.apache.commons.collections4.bag.TransformedBag.add(E,int)" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e378" source="org.apache.commons.collections4.bag.TransformedBag.add(E,int)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e379" source="org.apache.commons.collections4.bag.TransformedBag.remove(java.lang.Object,int)" target="org.apache.commons.collections4.bag.TransformedBag.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e380" source="org.apache.commons.collections4.bag.TransformedBag.remove(java.lang.Object,int)" target="org.apache.commons.collections4.Bag.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e381" source="org.apache.commons.collections4.bag.TransformedBag.getCount(java.lang.Object)" target="org.apache.commons.collections4.bag.TransformedBag.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e382" source="org.apache.commons.collections4.bag.TransformedBag.getCount(java.lang.Object)" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e383" source="org.apache.commons.collections4.bag.TransformedBag.uniqueSet()" target="org.apache.commons.collections4.bag.TransformedBag.getBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e384" source="org.apache.commons.collections4.bag.TransformedBag.uniqueSet()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e385" source="org.apache.commons.collections4.bag.TransformedBag.uniqueSet()" target="org.apache.commons.collections4.set.TransformedSet.transformingSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e386" source="org.apache.commons.collections4.bag.TransformedBag.getBag()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e387" source="org.apache.commons.collections4.bag.TransformedBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e388" source="org.apache.commons.collections4.bag.TransformedBagTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e389" source="org.apache.commons.collections4.bag.TransformedBagTest.makeObject()" target="org.apache.commons.collections4.bag.TransformedBag.transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e390" source="org.apache.commons.collections4.bag.TransformedBagTest.makeObject()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e391" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag()" target="org.apache.commons.collections4.bag.TransformedBag.transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e392" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e393" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e394" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e395" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e396" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e397" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e398" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.bag.TransformedBag.transformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e399" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e400" source="org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e401" source="org.apache.commons.collections4.bag.TransformedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.bag.TransformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e402" source="org.apache.commons.collections4.bag.TransformedSortedBag.transformedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.bag.TransformedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e403" source="org.apache.commons.collections4.bag.TransformedSortedBag.transformedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e404" source="org.apache.commons.collections4.bag.TransformedSortedBag.transformedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e405" source="org.apache.commons.collections4.bag.TransformedSortedBag.transformedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e406" source="org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.bag.TransformedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e407" source="org.apache.commons.collections4.bag.TransformedSortedBag.first()" target="org.apache.commons.collections4.bag.TransformedSortedBag.getSortedBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e408" source="org.apache.commons.collections4.bag.TransformedSortedBag.first()" target="org.apache.commons.collections4.SortedBag.first()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e409" source="org.apache.commons.collections4.bag.TransformedSortedBag.last()" target="org.apache.commons.collections4.bag.TransformedSortedBag.getSortedBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e410" source="org.apache.commons.collections4.bag.TransformedSortedBag.last()" target="org.apache.commons.collections4.SortedBag.last()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e411" source="org.apache.commons.collections4.bag.TransformedSortedBag.comparator()" target="org.apache.commons.collections4.bag.TransformedSortedBag.getSortedBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e412" source="org.apache.commons.collections4.bag.TransformedSortedBag.comparator()" target="org.apache.commons.collections4.SortedBag.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e413" source="org.apache.commons.collections4.bag.TransformedSortedBag.getSortedBag()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e414" source="org.apache.commons.collections4.bag.TransformedSortedBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractSortedBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e415" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e416" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.makeObject()" target="org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e417" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.makeObject()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e418" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag()" target="org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e419" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e420" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e421" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e422" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e423" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e424" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e425" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.bag.TransformedBag.transformedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e426" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e427" source="org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e428" source="org.apache.commons.collections4.bag.TreeBag()" target="org.apache.commons.collections4.bag.AbstractMapBag(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e429" source="org.apache.commons.collections4.bag.TreeBag(java.util.Collection)" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e430" source="org.apache.commons.collections4.bag.TreeBag(java.util.Collection)" target="org.apache.commons.collections4.bag.AbstractMapBag.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e431" source="org.apache.commons.collections4.bag.TreeBag(java.util.Comparator)" target="org.apache.commons.collections4.bag.AbstractMapBag(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e432" source="org.apache.commons.collections4.bag.TreeBag.first()" target="org.apache.commons.collections4.bag.TreeBag.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e433" source="org.apache.commons.collections4.bag.TreeBag.last()" target="org.apache.commons.collections4.bag.TreeBag.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e434" source="org.apache.commons.collections4.bag.TreeBag.add(E)" target="org.apache.commons.collections4.bag.TreeBag.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e435" source="org.apache.commons.collections4.bag.TreeBag.add(E)" target="org.apache.commons.collections4.bag.AbstractMapBag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e436" source="org.apache.commons.collections4.bag.TreeBag.comparator()" target="org.apache.commons.collections4.bag.TreeBag.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e437" source="org.apache.commons.collections4.bag.TreeBag.getMap()" target="org.apache.commons.collections4.bag.AbstractMapBag.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e438" source="org.apache.commons.collections4.bag.TreeBag.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.bag.AbstractMapBag.doReadObject(java.util.Map,java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e439" source="org.apache.commons.collections4.bag.TreeBag.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.bag.TreeBag.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e440" source="org.apache.commons.collections4.bag.TreeBag.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.bag.AbstractMapBag.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e441" source="org.apache.commons.collections4.bag.TreeBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractSortedBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e442" source="org.apache.commons.collections4.bag.TreeBagTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e443" source="org.apache.commons.collections4.bag.TreeBagTest.makeObject()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e444" source="org.apache.commons.collections4.bag.TreeBagTest.setupBag()" target="org.apache.commons.collections4.bag.TreeBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e445" source="org.apache.commons.collections4.bag.TreeBagTest.setupBag()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e446" source="org.apache.commons.collections4.bag.TreeBagTest.testCollections265()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e447" source="org.apache.commons.collections4.bag.TreeBagTest.testCollections265()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e448" source="org.apache.commons.collections4.bag.TreeBagTest.testOrdering()" target="org.apache.commons.collections4.bag.TreeBagTest.setupBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e449" source="org.apache.commons.collections4.bag.TreeBagTest.testOrdering()" target="org.apache.commons.collections4.SortedBag.first()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e450" source="org.apache.commons.collections4.bag.TreeBagTest.testOrdering()" target="org.apache.commons.collections4.SortedBag.last()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e451" source="org.apache.commons.collections4.bag.UnmodifiableBag(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.AbstractBagDecorator(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e452" source="org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.UnmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e453" source="org.apache.commons.collections4.bag.UnmodifiableBag.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e454" source="org.apache.commons.collections4.bag.UnmodifiableBag.iterator()" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e455" source="org.apache.commons.collections4.bag.UnmodifiableBag.iterator()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e456" source="org.apache.commons.collections4.bag.UnmodifiableBag.uniqueSet()" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e457" source="org.apache.commons.collections4.bag.UnmodifiableBag.uniqueSet()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e458" source="org.apache.commons.collections4.bag.UnmodifiableBag.uniqueSet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e459" source="org.apache.commons.collections4.bag.UnmodifiableBag.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e460" source="org.apache.commons.collections4.bag.UnmodifiableBag.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.bag.AbstractBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e461" source="org.apache.commons.collections4.bag.UnmodifiableBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e462" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e463" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.getCollection()" target="org.apache.commons.collections4.bag.AbstractBagTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e464" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeFullCollection()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e465" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e466" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeFullCollection()" target="org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e467" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeObject()" target="org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e468" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeObject()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e469" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory()" target="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e470" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory()" target="org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e471" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable()" target="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e472" source="org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable()" target="org.apache.commons.collections4.bag.UnmodifiableBagTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e473" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag(org.apache.commons.collections4.SortedBag)" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e474" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)" target="org.apache.commons.collections4.bag.UnmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e475" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e476" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag.iterator()" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e477" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag.iterator()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e478" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag.uniqueSet()" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e479" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag.uniqueSet()" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e480" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag.uniqueSet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e481" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e482" source="org.apache.commons.collections4.bag.UnmodifiableSortedBag.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.bag.AbstractSortedBagDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e483" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest(java.lang.String)" target="org.apache.commons.collections4.bag.AbstractSortedBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e484" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e485" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.getCollection()" target="org.apache.commons.collections4.bag.AbstractSortedBagTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e486" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeFullCollection()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e487" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e488" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeFullCollection()" target="org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e489" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeObject()" target="org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e490" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeObject()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e491" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory()" target="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e492" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory()" target="org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e493" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable()" target="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e494" source="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable()" target="org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e495" source="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.contains(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e496" source="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e497" source="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e498" source="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.size()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e499" source="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.iterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.createEntrySetIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e500" source="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.clear()" target="org.apache.commons.collections4.map.AbstractHashedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e501" source="org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e502" source="org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e503" source="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e504" source="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e505" source="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.hashCode()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e506" source="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.hashCode()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e507" source="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.toString()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e508" source="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.toString()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e509" source="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.toString()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e510" source="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.toString()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e511" source="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.remove()" target="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e512" source="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.remove()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e513" source="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e514" source="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.getKey()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.currentEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e515" source="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.getKey()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e516" source="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e517" source="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e518" source="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.getValue()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.currentEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e519" source="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.getValue()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e520" source="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.setValue(V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.currentEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e521" source="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.setValue(V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e522" source="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.contains(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e523" source="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e524" source="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e525" source="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.size()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e526" source="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.iterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.createKeySetIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e527" source="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.clear()" target="org.apache.commons.collections4.map.AbstractHashedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e528" source="org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e529" source="org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e530" source="org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e531" source="org.apache.commons.collections4.map.AbstractHashedMap$Values.contains(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e532" source="org.apache.commons.collections4.map.AbstractHashedMap$Values.size()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e533" source="org.apache.commons.collections4.map.AbstractHashedMap$Values.iterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.createValuesIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e534" source="org.apache.commons.collections4.map.AbstractHashedMap$Values.clear()" target="org.apache.commons.collections4.map.AbstractHashedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e535" source="org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e536" source="org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e537" source="org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e538" source="org.apache.commons.collections4.map.AbstractHashedMap(int)" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e539" source="org.apache.commons.collections4.map.AbstractHashedMap(int,float)" target="org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e540" source="org.apache.commons.collections4.map.AbstractHashedMap(int,float)" target="org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e541" source="org.apache.commons.collections4.map.AbstractHashedMap(int,float)" target="org.apache.commons.collections4.map.AbstractHashedMap.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e542" source="org.apache.commons.collections4.map.AbstractHashedMap(int,float,int)" target="org.apache.commons.collections4.map.AbstractHashedMap.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e543" source="org.apache.commons.collections4.map.AbstractHashedMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e544" source="org.apache.commons.collections4.map.AbstractHashedMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap._putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e545" source="org.apache.commons.collections4.map.AbstractHashedMap.entryKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e546" source="org.apache.commons.collections4.map.AbstractHashedMap.entryValue(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e547" source="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e548" source="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e549" source="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e550" source="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e551" source="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e552" source="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e553" source="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e554" source="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e555" source="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e556" source="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e557" source="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e558" source="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e559" source="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e560" source="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e561" source="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e562" source="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e563" source="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e564" source="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e565" source="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e566" source="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e567" source="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e568" source="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e569" source="org.apache.commons.collections4.map.AbstractHashedMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e570" source="org.apache.commons.collections4.map.AbstractHashedMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.isEqualValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e571" source="org.apache.commons.collections4.map.AbstractHashedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e572" source="org.apache.commons.collections4.map.AbstractHashedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e573" source="org.apache.commons.collections4.map.AbstractHashedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e574" source="org.apache.commons.collections4.map.AbstractHashedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e575" source="org.apache.commons.collections4.map.AbstractHashedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e576" source="org.apache.commons.collections4.map.AbstractHashedMap.hashCode()" target="org.apache.commons.collections4.map.AbstractHashedMap.createEntrySetIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e577" source="org.apache.commons.collections4.map.AbstractHashedMap.toString()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e578" source="org.apache.commons.collections4.map.AbstractHashedMap.toString()" target="org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e579" source="org.apache.commons.collections4.map.AbstractHashedMap.toString()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e580" source="org.apache.commons.collections4.map.AbstractHashedMap.toString()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e581" source="org.apache.commons.collections4.map.AbstractHashedMap.toString()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e582" source="org.apache.commons.collections4.map.AbstractHashedMap.values()" target="org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e583" source="org.apache.commons.collections4.map.AbstractHashedMap.createEntrySetIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e584" source="org.apache.commons.collections4.map.AbstractHashedMap.createEntrySetIterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e585" source="org.apache.commons.collections4.map.AbstractHashedMap.createEntrySetIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e586" source="org.apache.commons.collections4.map.AbstractHashedMap.createKeySetIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e587" source="org.apache.commons.collections4.map.AbstractHashedMap.createKeySetIterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e588" source="org.apache.commons.collections4.map.AbstractHashedMap.createKeySetIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e589" source="org.apache.commons.collections4.map.AbstractHashedMap.createValuesIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e590" source="org.apache.commons.collections4.map.AbstractHashedMap.createValuesIterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e591" source="org.apache.commons.collections4.map.AbstractHashedMap.createValuesIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e592" source="org.apache.commons.collections4.map.AbstractHashedMap.entrySet()" target="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e593" source="org.apache.commons.collections4.map.AbstractHashedMap.keySet()" target="org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e594" source="org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()" target="org.apache.commons.collections4.iterators.EmptyMapIterator.emptyMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e595" source="org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e596" source="org.apache.commons.collections4.map.AbstractHashedMap.clone()" target="org.apache.commons.collections4.map.AbstractHashedMap.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e597" source="org.apache.commons.collections4.map.AbstractHashedMap.clone()" target="org.apache.commons.collections4.map.AbstractHashedMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e598" source="org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e599" source="org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e600" source="org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e601" source="org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e602" source="org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e603" source="org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e604" source="org.apache.commons.collections4.map.AbstractHashedMap._putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e605" source="org.apache.commons.collections4.map.AbstractHashedMap._putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e606" source="org.apache.commons.collections4.map.AbstractHashedMap._putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e607" source="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e608" source="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e609" source="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e610" source="org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()" target="org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e611" source="org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e612" source="org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e613" source="org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e614" source="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e615" source="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e616" source="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e617" source="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e618" source="org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)" target="org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e619" source="org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e620" source="org.apache.commons.collections4.map.AbstractHashedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap._putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e621" source="org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)" target="org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e622" source="org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)" target="org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e623" source="org.apache.commons.collections4.map.AbstractHashedMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e624" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet(java.util.Set,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)" target="org.apache.commons.collections4.set.AbstractSetDecorator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e625" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.toArray(T[])" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e626" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.toArray(T[])" target="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry(java.util.Map$Entry,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e627" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.toArray()" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e628" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.toArray()" target="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry(java.util.Map$Entry,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e629" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.iterator()" target="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator(java.util.Iterator,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e630" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.iterator()" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e631" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator(java.util.Iterator,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e632" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.next()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e633" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.next()" target="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry(java.util.Map$Entry,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e634" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry(java.util.Map$Entry,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e635" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry.setValue(V)" target="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.checkSetValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e636" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry.setValue(V)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.getMapEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e637" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator()" target="org.apache.commons.collections4.map.AbstractMapDecorator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e638" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e639" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.entrySet()" target="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.isSetValueChecking()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e640" source="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.entrySet()" target="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet(java.util.Set,org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e641" source="org.apache.commons.collections4.map.AbstractIterableMap.mapIterator()" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e642" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e643" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.addSetValues()" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e644" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.isGetStructuralModify()" target="org.apache.commons.collections4.map.AbstractMapTest.isGetStructuralModify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e645" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.supportsRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e646" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.supportsSetValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e647" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.getConfirmedMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e648" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.getMap()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e649" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e650" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e651" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e652" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e653" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.makeObject()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e654" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.makeObject()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e655" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.verify()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e656" source="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e657" source="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e658" source="org.apache.commons.collections4.map.AbstractIterableMapTest.bulkTestMapIterator()" target="org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e659" source="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e660" source="org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e661" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e662" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isFailFastExpected()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e663" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e664" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastEntrySet()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e665" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastKeySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e666" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastKeySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isFailFastExpected()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e667" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastKeySet()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e668" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastKeySet()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e669" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastValues()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e670" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastValues()" target="org.apache.commons.collections4.map.AbstractMapTest.isFailFastExpected()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e671" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastValues()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e672" source="org.apache.commons.collections4.map.AbstractIterableMapTest.testFailFastValues()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e673" source="org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e674" source="org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.next()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e675" source="org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.previous()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.previousEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e676" source="org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e677" source="org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator.next()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e678" source="org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e679" source="org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator.previous()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.previousEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e680" source="org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator.previous()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e681" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e682" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.toString()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e683" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.toString()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e684" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.remove()" target="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e685" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.remove()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e686" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator(org.apache.commons.collections4.map.AbstractLinkedMap)" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e687" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.getKey()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.currentEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e688" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.getKey()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e689" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.next()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e690" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e691" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.previous()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.previousEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e692" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.previous()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e693" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.getValue()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.currentEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e694" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.getValue()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e695" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.setValue(V)" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.currentEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e696" source="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.setValue(V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e697" source="org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractLinkedMap)" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e698" source="org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.next()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e699" source="org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.next()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e700" source="org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.previous()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.previousEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e701" source="org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.previous()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e702" source="org.apache.commons.collections4.map.AbstractLinkedMap()" target="org.apache.commons.collections4.map.AbstractHashedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e703" source="org.apache.commons.collections4.map.AbstractLinkedMap(int)" target="org.apache.commons.collections4.map.AbstractHashedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e704" source="org.apache.commons.collections4.map.AbstractLinkedMap(int,float)" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e705" source="org.apache.commons.collections4.map.AbstractLinkedMap(int,float,int)" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e706" source="org.apache.commons.collections4.map.AbstractLinkedMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e707" source="org.apache.commons.collections4.map.AbstractLinkedMap.firstKey()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e708" source="org.apache.commons.collections4.map.AbstractLinkedMap.lastKey()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e709" source="org.apache.commons.collections4.map.AbstractLinkedMap.nextKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e710" source="org.apache.commons.collections4.map.AbstractLinkedMap.nextKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e711" source="org.apache.commons.collections4.map.AbstractLinkedMap.previousKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e712" source="org.apache.commons.collections4.map.AbstractLinkedMap.previousKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e713" source="org.apache.commons.collections4.map.AbstractLinkedMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e714" source="org.apache.commons.collections4.map.AbstractLinkedMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.isEqualValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e715" source="org.apache.commons.collections4.map.AbstractLinkedMap.createEntrySetIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e716" source="org.apache.commons.collections4.map.AbstractLinkedMap.createEntrySetIterator()" target="org.apache.commons.collections4.iterators.EmptyOrderedIterator.emptyOrderedIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e717" source="org.apache.commons.collections4.map.AbstractLinkedMap.createEntrySetIterator()" target="org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e718" source="org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e719" source="org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator()" target="org.apache.commons.collections4.iterators.EmptyOrderedIterator.emptyOrderedIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e720" source="org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator()" target="org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e721" source="org.apache.commons.collections4.map.AbstractLinkedMap.createValuesIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e722" source="org.apache.commons.collections4.map.AbstractLinkedMap.createValuesIterator()" target="org.apache.commons.collections4.iterators.EmptyOrderedIterator.emptyOrderedIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e723" source="org.apache.commons.collections4.map.AbstractLinkedMap.createValuesIterator()" target="org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e724" source="org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()" target="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.emptyOrderedMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e725" source="org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator(org.apache.commons.collections4.map.AbstractLinkedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e726" source="org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)" target="org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e727" source="org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e728" source="org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e729" source="org.apache.commons.collections4.map.AbstractLinkedMap.clear()" target="org.apache.commons.collections4.map.AbstractHashedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e730" source="org.apache.commons.collections4.map.AbstractLinkedMap.init()" target="org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e731" source="org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)" target="org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e732" source="org.apache.commons.collections4.map.AbstractMapDecorator()" target="org.apache.commons.collections4.map.AbstractIterableMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e733" source="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)" target="org.apache.commons.collections4.map.AbstractIterableMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e734" source="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e735" source="org.apache.commons.collections4.map.AbstractMapDecorator.put(K,V)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e736" source="org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e737" source="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e738" source="org.apache.commons.collections4.map.AbstractMapDecorator.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e739" source="org.apache.commons.collections4.map.AbstractMapDecorator.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e740" source="org.apache.commons.collections4.map.AbstractMapDecorator.isEmpty()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e741" source="org.apache.commons.collections4.map.AbstractMapDecorator.hashCode()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e742" source="org.apache.commons.collections4.map.AbstractMapDecorator.size()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e743" source="org.apache.commons.collections4.map.AbstractMapDecorator.toString()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e744" source="org.apache.commons.collections4.map.AbstractMapDecorator.values()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e745" source="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e746" source="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e747" source="org.apache.commons.collections4.map.AbstractMapDecorator.clear()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e748" source="org.apache.commons.collections4.map.AbstractMapDecorator.putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e749" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet()" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e750" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.isGetStructuralModify()" target="org.apache.commons.collections4.map.AbstractMapTest.isGetStructuralModify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e751" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.isRemoveSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e752" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getFullElements()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getFullNonNullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e753" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getFullNonNullElements()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e754" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getFullNonNullElements()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e755" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getFullNonNullElements()" target="org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[],V[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e756" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getOtherElements()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e757" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getOtherElements()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e758" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getOtherElements()" target="org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[],V[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e759" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.makeFullCollection()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e760" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e761" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e762" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e763" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e764" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e765" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e766" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e767" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e768" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e769" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e770" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e771" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntry()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e772" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntry()" target="org.apache.commons.collections4.set.AbstractSetTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e773" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntry()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e774" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntry()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.isGetStructuralModify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e775" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e776" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e777" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e778" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()" target="org.apache.commons.collections4.set.AbstractSetTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e779" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getEntry(java.util.Iterator,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e780" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()" target="org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e781" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e782" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e783" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetIteratorEntrySetValue()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e784" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetRemoveNonMapEntry()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e785" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetRemoveNonMapEntry()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e786" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.testMapEntrySetRemoveNonMapEntry()" target="org.apache.commons.collections4.set.AbstractSetTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e787" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.verify()" target="org.apache.commons.collections4.set.AbstractSetTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e788" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e789" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet()" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e790" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.getFullElements()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e791" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.getOtherElements()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e792" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.isNullSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e793" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.isRemoveSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e794" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.makeFullCollection()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e795" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e796" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e797" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e798" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e799" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e800" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e801" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e802" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e803" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e804" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e805" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e806" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.verify()" target="org.apache.commons.collections4.set.AbstractSetTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e807" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e808" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues()" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e809" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.getFullElements()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e810" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.getOtherElements()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e811" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.isNullSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e812" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.isRemoveSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e813" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.makeFullCollection()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e814" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e815" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e816" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e817" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e818" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e819" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e820" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e821" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e822" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e823" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e824" source="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e825" source="org.apache.commons.collections4.map.AbstractMapTest(java.lang.String)" target="org.apache.commons.collections4.AbstractObjectTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e826" source="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e827" source="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e828" source="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e829" source="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e830" source="org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e831" source="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e832" source="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e833" source="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e834" source="org.apache.commons.collections4.map.AbstractMapTest.getCompatibilityVersion()" target="org.apache.commons.collections4.AbstractObjectTest.getCompatibilityVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e835" source="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e836" source="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e837" source="org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[],V[])" target="org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e838" source="org.apache.commons.collections4.map.AbstractMapTest.bulkTestMapEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e839" source="org.apache.commons.collections4.map.AbstractMapTest.bulkTestMapKeySet()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e840" source="org.apache.commons.collections4.map.AbstractMapTest.bulkTestMapValues()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e841" source="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e842" source="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e843" source="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e844" source="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e845" source="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e846" source="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.views()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e847" source="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e848" source="org.apache.commons.collections4.map.AbstractMapTest.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e849" source="org.apache.commons.collections4.map.AbstractMapTest.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.views()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e850" source="org.apache.commons.collections4.map.AbstractMapTest.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e851" source="org.apache.commons.collections4.map.AbstractMapTest.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e852" source="org.apache.commons.collections4.map.AbstractMapTest.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e853" source="org.apache.commons.collections4.map.AbstractMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e854" source="org.apache.commons.collections4.map.AbstractMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e855" source="org.apache.commons.collections4.map.AbstractMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e856" source="org.apache.commons.collections4.map.AbstractMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e857" source="org.apache.commons.collections4.map.AbstractMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e858" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetClearChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e859" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetClearChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e860" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetClearChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e861" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains1()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e862" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains1()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e863" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains2()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e864" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains2()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e865" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains2()" target="org.apache.commons.collections4.map.AbstractMapTest.cloneMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e866" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains3()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e867" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetContains3()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e868" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetIteratorRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e869" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetIteratorRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e870" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove1()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e871" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove1()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e872" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove1()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e873" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove2()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e874" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove2()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e875" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove2()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e876" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove2()" target="org.apache.commons.collections4.map.AbstractMapTest.cloneMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e877" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove3()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e878" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove3()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e879" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemove3()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e880" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e881" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e882" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e883" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e884" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e885" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e886" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e887" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e888" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRemoveChangesMap()" target="org.apache.commons.collections4.keyvalue.DefaultMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e889" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e890" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e891" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e892" source="org.apache.commons.collections4.map.AbstractMapTest.testEntrySetRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e893" source="org.apache.commons.collections4.map.AbstractMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e894" source="org.apache.commons.collections4.map.AbstractMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e895" source="org.apache.commons.collections4.map.AbstractMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e896" source="org.apache.commons.collections4.map.AbstractMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e897" source="org.apache.commons.collections4.map.AbstractMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e898" source="org.apache.commons.collections4.map.AbstractMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e899" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetClearChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e900" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetClearChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e901" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetClearChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e902" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetIteratorRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e903" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetIteratorRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e904" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e905" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e906" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e907" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e908" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e909" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e910" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e911" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e912" source="org.apache.commons.collections4.map.AbstractMapTest.testKeySetRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e913" source="org.apache.commons.collections4.map.AbstractMapTest.testMakeMap()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e914" source="org.apache.commons.collections4.map.AbstractMapTest.testMakeMap()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e915" source="org.apache.commons.collections4.map.AbstractMapTest.testMapClear()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e916" source="org.apache.commons.collections4.map.AbstractMapTest.testMapClear()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e917" source="org.apache.commons.collections4.map.AbstractMapTest.testMapClear()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e918" source="org.apache.commons.collections4.map.AbstractMapTest.testMapClear()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e919" source="org.apache.commons.collections4.map.AbstractMapTest.testMapClear()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e920" source="org.apache.commons.collections4.map.AbstractMapTest.testMapClear()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e921" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e922" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e923" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e924" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsKey()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e925" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e926" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsValue()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e927" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsValue()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e928" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsValue()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e929" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsValue()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e930" source="org.apache.commons.collections4.map.AbstractMapTest.testMapContainsValue()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e931" source="org.apache.commons.collections4.map.AbstractMapTest.testMapEquals()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e932" source="org.apache.commons.collections4.map.AbstractMapTest.testMapEquals()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e933" source="org.apache.commons.collections4.map.AbstractMapTest.testMapEquals()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e934" source="org.apache.commons.collections4.map.AbstractMapTest.testMapEquals()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e935" source="org.apache.commons.collections4.map.AbstractMapTest.testMapGet()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e936" source="org.apache.commons.collections4.map.AbstractMapTest.testMapGet()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e937" source="org.apache.commons.collections4.map.AbstractMapTest.testMapGet()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e938" source="org.apache.commons.collections4.map.AbstractMapTest.testMapGet()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e939" source="org.apache.commons.collections4.map.AbstractMapTest.testMapGet()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e940" source="org.apache.commons.collections4.map.AbstractMapTest.testMapGet()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e941" source="org.apache.commons.collections4.map.AbstractMapTest.testMapHashCode()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e942" source="org.apache.commons.collections4.map.AbstractMapTest.testMapHashCode()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e943" source="org.apache.commons.collections4.map.AbstractMapTest.testMapHashCode()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e944" source="org.apache.commons.collections4.map.AbstractMapTest.testMapIsEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e945" source="org.apache.commons.collections4.map.AbstractMapTest.testMapIsEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e946" source="org.apache.commons.collections4.map.AbstractMapTest.testMapIsEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e947" source="org.apache.commons.collections4.map.AbstractMapTest.testMapIsEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e948" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e949" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e950" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e951" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e952" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e953" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e954" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e955" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e956" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e957" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e958" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPut()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e959" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e960" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e961" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e962" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e963" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e964" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e965" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e966" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e967" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e968" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e969" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e970" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e971" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e972" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullKey()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e973" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullKey()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e974" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e975" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullValue()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e976" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullValue()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e977" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e978" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e979" source="org.apache.commons.collections4.map.AbstractMapTest.testMapPutNullValue()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e980" source="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e981" source="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e982" source="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e983" source="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e984" source="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e985" source="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e986" source="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e987" source="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e988" source="org.apache.commons.collections4.map.AbstractMapTest.testMapRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e989" source="org.apache.commons.collections4.map.AbstractMapTest.testMapSize()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e990" source="org.apache.commons.collections4.map.AbstractMapTest.testMapSize()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e991" source="org.apache.commons.collections4.map.AbstractMapTest.testMapSize()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e992" source="org.apache.commons.collections4.map.AbstractMapTest.testMapSize()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e993" source="org.apache.commons.collections4.map.AbstractMapTest.testMapSize()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e994" source="org.apache.commons.collections4.map.AbstractMapTest.testMapToString()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e995" source="org.apache.commons.collections4.map.AbstractMapTest.testMapToString()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e996" source="org.apache.commons.collections4.map.AbstractMapTest.testMapToString()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e997" source="org.apache.commons.collections4.map.AbstractMapTest.testMapToString()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e998" source="org.apache.commons.collections4.map.AbstractMapTest.testSampleMappings()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e999" source="org.apache.commons.collections4.map.AbstractMapTest.testSampleMappings()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1000" source="org.apache.commons.collections4.map.AbstractMapTest.testSampleMappings()" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1001" source="org.apache.commons.collections4.map.AbstractMapTest.testSampleMappings()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1002" source="org.apache.commons.collections4.map.AbstractMapTest.testSampleMappings()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1003" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesClearChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1004" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesClearChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1005" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesClearChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1006" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesIteratorRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1007" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesIteratorRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1008" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesIteratorRemoveChangesMap()" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1009" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesIteratorRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1010" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1011" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1012" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesRemoveAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1013" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1014" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1015" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesRemoveChangesMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1016" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1017" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1018" source="org.apache.commons.collections4.map.AbstractMapTest.testValuesRetainAll()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1019" source="org.apache.commons.collections4.map.AbstractMapTest.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verifyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1020" source="org.apache.commons.collections4.map.AbstractMapTest.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1021" source="org.apache.commons.collections4.map.AbstractMapTest.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1022" source="org.apache.commons.collections4.map.AbstractMapTest.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verifyValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1023" source="org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1024" source="org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1025" source="org.apache.commons.collections4.map.AbstractMapTest.verifyMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1026" source="org.apache.commons.collections4.map.AbstractMapTest.verifyMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1027" source="org.apache.commons.collections4.map.AbstractMapTest.verifyValues()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1028" source="org.apache.commons.collections4.map.AbstractMapTest.verifyValues()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1029" source="org.apache.commons.collections4.map.AbstractMapTest.views()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1030" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator()" target="org.apache.commons.collections4.map.AbstractMapDecorator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1031" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator(org.apache.commons.collections4.OrderedMap)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1032" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.firstKey()" target="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1033" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.firstKey()" target="org.apache.commons.collections4.OrderedMap.firstKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1034" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.lastKey()" target="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1035" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.lastKey()" target="org.apache.commons.collections4.OrderedMap.lastKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1036" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.nextKey(K)" target="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1037" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.nextKey(K)" target="org.apache.commons.collections4.OrderedMap.nextKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1038" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.previousKey(K)" target="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1039" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.previousKey(K)" target="org.apache.commons.collections4.OrderedMap.previousKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1040" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.decorated()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1041" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.mapIterator()" target="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1042" source="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.mapIterator()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1043" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator()" target="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1044" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.isGetStructuralModify()" target="org.apache.commons.collections4.map.AbstractMapTest.isGetStructuralModify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1045" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.supportsRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1046" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.supportsSetValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1047" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.getConfirmedMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1048" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.getMap()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1049" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1050" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1051" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1052" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1053" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.makeObject()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1054" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.makeObject()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1055" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.verify()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1056" source="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1057" source="org.apache.commons.collections4.map.AbstractOrderedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1058" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1059" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()" target="org.apache.commons.collections4.comparators.NullComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1060" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.makeConfirmedMap()" target="org.apache.commons.collections4.comparators.NullComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1061" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.bulkTestOrderedMapIterator()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1062" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1063" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1064" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testFirstKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1065" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testFirstKey()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1066" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testFirstKey()" target="org.apache.commons.collections4.OrderedMap.firstKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1067" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testFirstKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1068" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testLastKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1069" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testLastKey()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1070" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testLastKey()" target="org.apache.commons.collections4.OrderedMap.lastKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1071" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testLastKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1072" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testNextKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1073" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testNextKey()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1074" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testNextKey()" target="org.apache.commons.collections4.OrderedMap.nextKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1075" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testNextKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1076" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testNextKey()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1077" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testNextKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1078" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testPreviousKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1079" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testPreviousKey()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1080" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testPreviousKey()" target="org.apache.commons.collections4.OrderedMap.previousKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1081" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testPreviousKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1082" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testPreviousKey()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1083" source="org.apache.commons.collections4.map.AbstractOrderedMapTest.testPreviousKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1084" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)" target="org.apache.commons.collections4.map.AbstractReferenceMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1085" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.hasNext()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.checkMod()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1086" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.hasNext()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1087" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.hasNext()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1088" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.hasNext()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1089" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.hasNext()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1090" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.currentEntry()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.checkMod()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1091" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextEntry()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.checkMod()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1092" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextEntry()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextNull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1093" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextEntry()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1094" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextEntry()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1095" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.remove()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.checkMod()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1096" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.remove()" target="org.apache.commons.collections4.map.AbstractReferenceMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1097" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry(org.apache.commons.collections4.map.AbstractReferenceMap,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1098" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry(org.apache.commons.collections4.map.AbstractReferenceMap,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,T,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1099" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,T,int)" target="org.apache.commons.collections4.map.AbstractReferenceMap$SoftRef(int,T,java.lang.ref.ReferenceQueue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1100" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,T,int)" target="org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1101" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.setValue(V)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1102" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.setValue(V)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,T,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1103" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractReferenceMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1104" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.isEqualValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1105" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1106" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.hashCode()" target="org.apache.commons.collections4.map.AbstractReferenceMap.hashEntry(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1107" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.hashCode()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1108" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.hashCode()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1109" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1110" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet.toArray(T[])" target="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1111" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet.toArray(T[])" target="org.apache.commons.collections4.keyvalue.DefaultMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1112" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet.toArray()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet.toArray(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1113" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet.toArray()" target="org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1114" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1115" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySetIterator.next()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1116" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1117" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet.toArray(T[])" target="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1118" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet.toArray()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet.toArray(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1119" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet.toArray()" target="org.apache.commons.collections4.map.AbstractHashedMap$KeySet.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1120" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1121" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.next()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1122" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.next()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1123" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator(org.apache.commons.collections4.map.AbstractReferenceMap)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1124" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.getKey()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.currentEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1125" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.getKey()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1126" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.next()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1127" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.next()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1128" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.getValue()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.currentEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1129" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.getValue()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1130" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.setValue(V)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.currentEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1131" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.setValue(V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1132" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1133" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.toArray(T[])" target="org.apache.commons.collections4.map.AbstractHashedMap$Values.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1134" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.toArray()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.toArray(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1135" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.toArray()" target="org.apache.commons.collections4.map.AbstractHashedMap$Values.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1136" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator(org.apache.commons.collections4.map.AbstractReferenceMap)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1137" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator.next()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1138" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator.next()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1139" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength#HARD" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1140" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength#SOFT" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1141" source="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength#WEAK" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1142" source="org.apache.commons.collections4.map.AbstractReferenceMap()" target="org.apache.commons.collections4.map.AbstractHashedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1143" source="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1144" source="org.apache.commons.collections4.map.AbstractReferenceMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeRead()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1145" source="org.apache.commons.collections4.map.AbstractReferenceMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractReferenceMap.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1146" source="org.apache.commons.collections4.map.AbstractReferenceMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeWrite()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1147" source="org.apache.commons.collections4.map.AbstractReferenceMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1148" source="org.apache.commons.collections4.map.AbstractReferenceMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeWrite()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1149" source="org.apache.commons.collections4.map.AbstractReferenceMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1150" source="org.apache.commons.collections4.map.AbstractReferenceMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeRead()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1151" source="org.apache.commons.collections4.map.AbstractReferenceMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractReferenceMap.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1152" source="org.apache.commons.collections4.map.AbstractReferenceMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeRead()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1153" source="org.apache.commons.collections4.map.AbstractReferenceMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1154" source="org.apache.commons.collections4.map.AbstractReferenceMap.isEmpty()" target="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeRead()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1155" source="org.apache.commons.collections4.map.AbstractReferenceMap.isEmpty()" target="org.apache.commons.collections4.map.AbstractHashedMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1156" source="org.apache.commons.collections4.map.AbstractReferenceMap.size()" target="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeRead()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1157" source="org.apache.commons.collections4.map.AbstractReferenceMap.size()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1158" source="org.apache.commons.collections4.map.AbstractReferenceMap.values()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1159" source="org.apache.commons.collections4.map.AbstractReferenceMap.createEntrySetIterator()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1160" source="org.apache.commons.collections4.map.AbstractReferenceMap.createKeySetIterator()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1161" source="org.apache.commons.collections4.map.AbstractReferenceMap.createValuesIterator()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1162" source="org.apache.commons.collections4.map.AbstractReferenceMap.entrySet()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1163" source="org.apache.commons.collections4.map.AbstractReferenceMap.keySet()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1164" source="org.apache.commons.collections4.map.AbstractReferenceMap.mapIterator()" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator(org.apache.commons.collections4.map.AbstractReferenceMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1165" source="org.apache.commons.collections4.map.AbstractReferenceMap.getEntry(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1166" source="org.apache.commons.collections4.map.AbstractReferenceMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry(org.apache.commons.collections4.map.AbstractReferenceMap,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1167" source="org.apache.commons.collections4.map.AbstractReferenceMap.clear()" target="org.apache.commons.collections4.map.AbstractHashedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1168" source="org.apache.commons.collections4.map.AbstractReferenceMap.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength.resolve(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1169" source="org.apache.commons.collections4.map.AbstractReferenceMap.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractReferenceMap.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1170" source="org.apache.commons.collections4.map.AbstractReferenceMap.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractReferenceMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1171" source="org.apache.commons.collections4.map.AbstractReferenceMap.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1172" source="org.apache.commons.collections4.map.AbstractReferenceMap.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.AbstractReferenceMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1173" source="org.apache.commons.collections4.map.AbstractReferenceMap.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1174" source="org.apache.commons.collections4.map.AbstractReferenceMap.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1175" source="org.apache.commons.collections4.map.AbstractReferenceMap.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1176" source="org.apache.commons.collections4.map.AbstractReferenceMap.purge()" target="org.apache.commons.collections4.map.AbstractReferenceMap.purge(java.lang.ref.Reference)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1177" source="org.apache.commons.collections4.map.AbstractReferenceMap.purge(java.lang.ref.Reference)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1178" source="org.apache.commons.collections4.map.AbstractReferenceMap.purge(java.lang.ref.Reference)" target="org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.purge(java.lang.ref.Reference)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1179" source="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeRead()" target="org.apache.commons.collections4.map.AbstractReferenceMap.purge()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1180" source="org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeWrite()" target="org.apache.commons.collections4.map.AbstractReferenceMap.purge()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1181" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator(java.util.Set)" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1182" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator.previous()" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1183" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator.reset()" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1184" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator.reset()" target="org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1185" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator()" target="org.apache.commons.collections4.map.AbstractMapDecorator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1186" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1187" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.firstKey()" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1188" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.lastKey()" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1189" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.nextKey(K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.tailMap(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1190" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.previousKey(K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.headMap(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1191" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.comparator()" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1192" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1193" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.headMap(K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1194" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.subMap(K,K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1195" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.tailMap(K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1196" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.mapIterator()" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1197" source="org.apache.commons.collections4.map.AbstractSortedMapDecorator.mapIterator()" target="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1198" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap(org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap(java.lang.String,org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1199" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap(org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1200" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap(org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1201" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.getCompatibilityVersion()" target="org.apache.commons.collections4.map.AbstractMapTest.getCompatibilityVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1202" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1203" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1204" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.testHeadMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1205" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.testHeadMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1206" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.testHeadMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1207" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap.testHeadMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1208" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap(org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap(java.lang.String,org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1209" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap(org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1210" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap(org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1211" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.getCompatibilityVersion()" target="org.apache.commons.collections4.map.AbstractMapTest.getCompatibilityVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1212" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1213" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1214" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.testSubMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1215" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.testSubMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1216" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.testSubMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1217" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap.testSubMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1218" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap(org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap(java.lang.String,org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1219" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap(org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1220" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap(org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1221" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.getCompatibilityVersion()" target="org.apache.commons.collections4.map.AbstractMapTest.getCompatibilityVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1222" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1223" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1224" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.testTailMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1225" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.testTailMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1226" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.testTailMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1227" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap.testTailMapOutOfRange()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1228" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap(java.lang.String,org.apache.commons.collections4.map.AbstractMapTest)" target="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1229" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isAllowNullKey()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1230" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isAllowNullValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1231" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isPutAddSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1232" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isPutChangeSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1233" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.isRemoveSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1234" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.resetEmpty()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1235" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.resetFull()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1236" source="org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1237" source="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1238" source="org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1239" source="org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1240" source="org.apache.commons.collections4.map.AbstractSortedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1241" source="org.apache.commons.collections4.map.AbstractSortedMapTest.bulkTestHeadMap()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap(org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1242" source="org.apache.commons.collections4.map.AbstractSortedMapTest.bulkTestSubMap()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap(org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1243" source="org.apache.commons.collections4.map.AbstractSortedMapTest.bulkTestTailMap()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap(org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1244" source="org.apache.commons.collections4.map.AbstractSortedMapTest.testFirstKey()" target="org.apache.commons.collections4.map.AbstractSortedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1245" source="org.apache.commons.collections4.map.AbstractSortedMapTest.testLastKey()" target="org.apache.commons.collections4.map.AbstractSortedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1246" source="org.apache.commons.collections4.map.CaseInsensitiveMap()" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1247" source="org.apache.commons.collections4.map.CaseInsensitiveMap(int)" target="org.apache.commons.collections4.map.AbstractHashedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1248" source="org.apache.commons.collections4.map.CaseInsensitiveMap(int,float)" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1249" source="org.apache.commons.collections4.map.CaseInsensitiveMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1250" source="org.apache.commons.collections4.map.CaseInsensitiveMap.clone()" target="org.apache.commons.collections4.map.AbstractHashedMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1251" source="org.apache.commons.collections4.map.CaseInsensitiveMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1252" source="org.apache.commons.collections4.map.CaseInsensitiveMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1253" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1254" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1255" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.makeObject()" target="org.apache.commons.collections4.map.CaseInsensitiveMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1256" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive()" target="org.apache.commons.collections4.map.CaseInsensitiveMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1257" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone()" target="org.apache.commons.collections4.map.CaseInsensitiveMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1258" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1259" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone()" target="org.apache.commons.collections4.map.CaseInsensitiveMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1260" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1261" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1262" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero()" target="org.apache.commons.collections4.map.CaseInsensitiveMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1263" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence()" target="org.apache.commons.collections4.map.CaseInsensitiveMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1264" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1265" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence()" target="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1266" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling()" target="org.apache.commons.collections4.map.CaseInsensitiveMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1267" source="org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll()" target="org.apache.commons.collections4.map.CaseInsensitiveMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1268" source="org.apache.commons.collections4.map.CompositeMap()" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1269" source="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map)" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1270" source="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map,org.apache.commons.collections4.map.CompositeMap$MapMutator)" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1271" source="org.apache.commons.collections4.map.CompositeMap(java.util.Map[])" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1272" source="org.apache.commons.collections4.map.CompositeMap(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)" target="org.apache.commons.collections4.map.AbstractIterableMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1273" source="org.apache.commons.collections4.map.CompositeMap(java.util.Map[],org.apache.commons.collections4.map.CompositeMap$MapMutator)" target="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1274" source="org.apache.commons.collections4.map.CompositeMap.put(K,V)" target="org.apache.commons.collections4.map.CompositeMap$MapMutator.put(org.apache.commons.collections4.map.CompositeMap,java.util.Map[],K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1275" source="org.apache.commons.collections4.map.CompositeMap.equals(java.lang.Object)" target="org.apache.commons.collections4.map.CompositeMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1276" source="org.apache.commons.collections4.map.CompositeMap.hashCode()" target="org.apache.commons.collections4.map.CompositeMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1277" source="org.apache.commons.collections4.map.CompositeMap.values()" target="org.apache.commons.collections4.collection.CompositeCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1278" source="org.apache.commons.collections4.map.CompositeMap.values()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1279" source="org.apache.commons.collections4.map.CompositeMap.entrySet()" target="org.apache.commons.collections4.set.CompositeSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1280" source="org.apache.commons.collections4.map.CompositeMap.entrySet()" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1281" source="org.apache.commons.collections4.map.CompositeMap.keySet()" target="org.apache.commons.collections4.set.CompositeSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1282" source="org.apache.commons.collections4.map.CompositeMap.keySet()" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1283" source="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)" target="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1284" source="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)" target="org.apache.commons.collections4.map.CompositeMap$MapMutator.resolveCollision(org.apache.commons.collections4.map.CompositeMap,java.util.Map,java.util.Map,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1285" source="org.apache.commons.collections4.map.CompositeMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.CompositeMap$MapMutator.putAll(org.apache.commons.collections4.map.CompositeMap,java.util.Map[],java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1286" source="org.apache.commons.collections4.map.CompositeMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1287" source="org.apache.commons.collections4.map.CompositeMapTest.makeObject()" target="org.apache.commons.collections4.map.CompositeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1288" source="org.apache.commons.collections4.map.CompositeMapTest.makeObject()" target="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1289" source="org.apache.commons.collections4.map.CompositeMapTest.makeObject()" target="org.apache.commons.collections4.map.CompositeMap.setMutator(org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1290" source="org.apache.commons.collections4.map.CompositeMapTest.makeObject()" target="org.apache.commons.collections4.map.EmptyMapMutator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1291" source="org.apache.commons.collections4.map.CompositeMapTest.testAddComposited()" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1292" source="org.apache.commons.collections4.map.CompositeMapTest.testAddComposited()" target="org.apache.commons.collections4.map.CompositeMapTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1293" source="org.apache.commons.collections4.map.CompositeMapTest.testAddComposited()" target="org.apache.commons.collections4.map.CompositeMapTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1294" source="org.apache.commons.collections4.map.CompositeMapTest.testAddComposited()" target="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1295" source="org.apache.commons.collections4.map.CompositeMapTest.testAddComposited()" target="org.apache.commons.collections4.map.CompositeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1296" source="org.apache.commons.collections4.map.CompositeMapTest.testGet()" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1297" source="org.apache.commons.collections4.map.CompositeMapTest.testGet()" target="org.apache.commons.collections4.map.CompositeMapTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1298" source="org.apache.commons.collections4.map.CompositeMapTest.testGet()" target="org.apache.commons.collections4.map.CompositeMapTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1299" source="org.apache.commons.collections4.map.CompositeMapTest.testGet()" target="org.apache.commons.collections4.map.CompositeMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1300" source="org.apache.commons.collections4.map.CompositeMapTest.testPut()" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map,org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1301" source="org.apache.commons.collections4.map.CompositeMapTest.testPut()" target="org.apache.commons.collections4.map.CompositeMapTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1302" source="org.apache.commons.collections4.map.CompositeMapTest.testPut()" target="org.apache.commons.collections4.map.CompositeMapTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1303" source="org.apache.commons.collections4.map.CompositeMapTest.testPut()" target="org.apache.commons.collections4.map.CompositeMapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1304" source="org.apache.commons.collections4.map.CompositeMapTest.testPut()" target="org.apache.commons.collections4.map.CompositeMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1305" source="org.apache.commons.collections4.map.CompositeMapTest.testPutAll()" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map,org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1306" source="org.apache.commons.collections4.map.CompositeMapTest.testPutAll()" target="org.apache.commons.collections4.map.CompositeMapTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1307" source="org.apache.commons.collections4.map.CompositeMapTest.testPutAll()" target="org.apache.commons.collections4.map.CompositeMapTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1308" source="org.apache.commons.collections4.map.CompositeMapTest.testPutAll()" target="org.apache.commons.collections4.map.CompositeMapTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1309" source="org.apache.commons.collections4.map.CompositeMapTest.testPutAll()" target="org.apache.commons.collections4.map.CompositeMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1310" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited()" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1311" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited()" target="org.apache.commons.collections4.map.CompositeMapTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1312" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited()" target="org.apache.commons.collections4.map.CompositeMapTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1313" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited()" target="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1314" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited()" target="org.apache.commons.collections4.map.CompositeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1315" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited()" target="org.apache.commons.collections4.map.CompositeMap.removeComposited(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1316" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited()" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1317" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited()" target="org.apache.commons.collections4.map.CompositeMapTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1318" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited()" target="org.apache.commons.collections4.map.CompositeMapTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1319" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited()" target="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1320" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited()" target="org.apache.commons.collections4.map.CompositeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1321" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited()" target="org.apache.commons.collections4.map.CompositeMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1322" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying()" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1323" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying()" target="org.apache.commons.collections4.map.CompositeMapTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1324" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying()" target="org.apache.commons.collections4.map.CompositeMapTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1325" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying()" target="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1326" source="org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying()" target="org.apache.commons.collections4.map.CompositeMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1327" source="org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision()" target="org.apache.commons.collections4.map.CompositeMap(java.util.Map,java.util.Map,org.apache.commons.collections4.map.CompositeMap$MapMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1328" source="org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision()" target="org.apache.commons.collections4.map.CompositeMapTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1329" source="org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision()" target="org.apache.commons.collections4.map.CompositeMapTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1330" source="org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision()" target="org.apache.commons.collections4.map.CompositeMapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1331" source="org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision()" target="org.apache.commons.collections4.map.CompositeMap.addComposited(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1332" source="org.apache.commons.collections4.map.DefaultedMap(V)" target="org.apache.commons.collections4.map.DefaultedMap(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1333" source="org.apache.commons.collections4.map.DefaultedMap(V)" target="org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1334" source="org.apache.commons.collections4.map.DefaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1335" source="org.apache.commons.collections4.map.DefaultedMap(org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.DefaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1336" source="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.DefaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1337" source="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,V)" target="org.apache.commons.collections4.map.DefaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1338" source="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,V)" target="org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1339" source="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.DefaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1340" source="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1341" source="org.apache.commons.collections4.map.DefaultedMap.get(java.lang.Object)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1342" source="org.apache.commons.collections4.map.DefaultedMapTest#nullFactory" target="org.apache.commons.collections4.FactoryUtils.nullFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1343" source="org.apache.commons.collections4.map.DefaultedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1344" source="org.apache.commons.collections4.map.DefaultedMapTest.makeObject()" target="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1345" source="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet()" target="org.apache.commons.collections4.map.DefaultedMap(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1346" source="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2()" target="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1347" source="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3()" target="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1348" source="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3()" target="org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1349" source="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4()" target="org.apache.commons.collections4.map.DefaultedMap.defaultedMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1350" source="org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4()" target="org.apache.commons.collections4.map.DefaultedMapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1351" source="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter(java.util.Set)" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1352" source="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.getKey()" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.current()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1353" source="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.next()" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1354" source="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.getValue()" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.current()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1355" source="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.setValue(V)" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.current()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1356" source="org.apache.commons.collections4.map.FixedSizeMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1357" source="org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(java.util.Map)" target="org.apache.commons.collections4.map.FixedSizeMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1358" source="org.apache.commons.collections4.map.FixedSizeMap.maxSize()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1359" source="org.apache.commons.collections4.map.FixedSizeMap.values()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1360" source="org.apache.commons.collections4.map.FixedSizeMap.entrySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1361" source="org.apache.commons.collections4.map.FixedSizeMap.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1362" source="org.apache.commons.collections4.map.FixedSizeMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1363" source="org.apache.commons.collections4.map.FixedSizeMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1364" source="org.apache.commons.collections4.map.FixedSizeMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1365" source="org.apache.commons.collections4.map.FixedSizeMapTest.makeFullMap()" target="org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1366" source="org.apache.commons.collections4.map.FixedSizeMapTest.makeObject()" target="org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1367" source="org.apache.commons.collections4.map.FixedSizeSortedMap(java.util.SortedMap)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1368" source="org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap)" target="org.apache.commons.collections4.map.FixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1369" source="org.apache.commons.collections4.map.FixedSizeSortedMap.maxSize()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1370" source="org.apache.commons.collections4.map.FixedSizeSortedMap.values()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1371" source="org.apache.commons.collections4.map.FixedSizeSortedMap.entrySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1372" source="org.apache.commons.collections4.map.FixedSizeSortedMap.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1373" source="org.apache.commons.collections4.map.FixedSizeSortedMap.headMap(K)" target="org.apache.commons.collections4.map.FixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1374" source="org.apache.commons.collections4.map.FixedSizeSortedMap.headMap(K)" target="org.apache.commons.collections4.map.FixedSizeSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1375" source="org.apache.commons.collections4.map.FixedSizeSortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.FixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1376" source="org.apache.commons.collections4.map.FixedSizeSortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.FixedSizeSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1377" source="org.apache.commons.collections4.map.FixedSizeSortedMap.tailMap(K)" target="org.apache.commons.collections4.map.FixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1378" source="org.apache.commons.collections4.map.FixedSizeSortedMap.tailMap(K)" target="org.apache.commons.collections4.map.FixedSizeSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1379" source="org.apache.commons.collections4.map.FixedSizeSortedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1380" source="org.apache.commons.collections4.map.FixedSizeSortedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.FixedSizeSortedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1381" source="org.apache.commons.collections4.map.FixedSizeSortedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1382" source="org.apache.commons.collections4.map.FixedSizeSortedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1383" source="org.apache.commons.collections4.map.FixedSizeSortedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1384" source="org.apache.commons.collections4.map.FixedSizeSortedMapTest.makeObject()" target="org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1385" source="org.apache.commons.collections4.map.FixedSizeSortedMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1386" source="org.apache.commons.collections4.map.Flat3Map$EntryIterator.nextEntry()" target="org.apache.commons.collections4.map.Flat3Map$EntryIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1387" source="org.apache.commons.collections4.map.Flat3Map$EntryIterator.nextEntry()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry(org.apache.commons.collections4.map.Flat3Map,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1388" source="org.apache.commons.collections4.map.Flat3Map$EntryIterator.remove()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.setRemoved(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1389" source="org.apache.commons.collections4.map.Flat3Map$EntryIterator.remove()" target="org.apache.commons.collections4.map.Flat3Map.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1390" source="org.apache.commons.collections4.map.Flat3Map$EntryIterator.remove()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1391" source="org.apache.commons.collections4.map.Flat3Map$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1392" source="org.apache.commons.collections4.map.Flat3Map$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.Flat3Map.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1393" source="org.apache.commons.collections4.map.Flat3Map$EntrySet.size()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1394" source="org.apache.commons.collections4.map.Flat3Map$EntrySet.iterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1395" source="org.apache.commons.collections4.map.Flat3Map$EntrySet.iterator()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1396" source="org.apache.commons.collections4.map.Flat3Map$EntrySet.iterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1397" source="org.apache.commons.collections4.map.Flat3Map$EntrySet.iterator()" target="org.apache.commons.collections4.map.Flat3Map$EntrySetIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1398" source="org.apache.commons.collections4.map.Flat3Map$EntrySet.clear()" target="org.apache.commons.collections4.map.Flat3Map.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1399" source="org.apache.commons.collections4.map.Flat3Map$EntrySetIterator(org.apache.commons.collections4.map.Flat3Map)" target="org.apache.commons.collections4.map.Flat3Map$EntryIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1400" source="org.apache.commons.collections4.map.Flat3Map$EntrySetIterator.next()" target="org.apache.commons.collections4.map.Flat3Map$EntryIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1401" source="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.setValue(V)" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1402" source="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1403" source="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1404" source="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.hashCode()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1405" source="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.hashCode()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1406" source="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.toString()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1407" source="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.toString()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1408" source="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.next()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1409" source="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.next()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1410" source="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.setValue(V)" target="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1411" source="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.toString()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1412" source="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.toString()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1413" source="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.remove()" target="org.apache.commons.collections4.map.Flat3Map.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1414" source="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.remove()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1415" source="org.apache.commons.collections4.map.Flat3Map$KeySet.contains(java.lang.Object)" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1416" source="org.apache.commons.collections4.map.Flat3Map$KeySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1417" source="org.apache.commons.collections4.map.Flat3Map$KeySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.Flat3Map.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1418" source="org.apache.commons.collections4.map.Flat3Map$KeySet.size()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1419" source="org.apache.commons.collections4.map.Flat3Map$KeySet.iterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1420" source="org.apache.commons.collections4.map.Flat3Map$KeySet.iterator()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1421" source="org.apache.commons.collections4.map.Flat3Map$KeySet.iterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1422" source="org.apache.commons.collections4.map.Flat3Map$KeySet.iterator()" target="org.apache.commons.collections4.map.Flat3Map$KeySetIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1423" source="org.apache.commons.collections4.map.Flat3Map$KeySet.clear()" target="org.apache.commons.collections4.map.Flat3Map.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1424" source="org.apache.commons.collections4.map.Flat3Map$KeySetIterator(org.apache.commons.collections4.map.Flat3Map)" target="org.apache.commons.collections4.map.Flat3Map$EntryIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1425" source="org.apache.commons.collections4.map.Flat3Map$KeySetIterator.next()" target="org.apache.commons.collections4.map.Flat3Map$EntryIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1426" source="org.apache.commons.collections4.map.Flat3Map$Values.contains(java.lang.Object)" target="org.apache.commons.collections4.map.Flat3Map.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1427" source="org.apache.commons.collections4.map.Flat3Map$Values.size()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1428" source="org.apache.commons.collections4.map.Flat3Map$Values.iterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1429" source="org.apache.commons.collections4.map.Flat3Map$Values.iterator()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1430" source="org.apache.commons.collections4.map.Flat3Map$Values.iterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1431" source="org.apache.commons.collections4.map.Flat3Map$Values.iterator()" target="org.apache.commons.collections4.map.Flat3Map$ValuesIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1432" source="org.apache.commons.collections4.map.Flat3Map$Values.clear()" target="org.apache.commons.collections4.map.Flat3Map.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1433" source="org.apache.commons.collections4.map.Flat3Map$ValuesIterator(org.apache.commons.collections4.map.Flat3Map)" target="org.apache.commons.collections4.map.Flat3Map$EntryIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1434" source="org.apache.commons.collections4.map.Flat3Map$ValuesIterator.next()" target="org.apache.commons.collections4.map.Flat3Map$EntryIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1435" source="org.apache.commons.collections4.map.Flat3Map(java.util.Map)" target="org.apache.commons.collections4.map.Flat3Map.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1436" source="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1437" source="org.apache.commons.collections4.map.Flat3Map.put(K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1438" source="org.apache.commons.collections4.map.Flat3Map.put(K,V)" target="org.apache.commons.collections4.map.Flat3Map.convertToMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1439" source="org.apache.commons.collections4.map.Flat3Map.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1440" source="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1441" source="org.apache.commons.collections4.map.Flat3Map.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1442" source="org.apache.commons.collections4.map.Flat3Map.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1443" source="org.apache.commons.collections4.map.Flat3Map.isEmpty()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1444" source="org.apache.commons.collections4.map.Flat3Map.hashCode()" target="org.apache.commons.collections4.map.AbstractHashedMap.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1445" source="org.apache.commons.collections4.map.Flat3Map.size()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1446" source="org.apache.commons.collections4.map.Flat3Map.toString()" target="org.apache.commons.collections4.map.AbstractHashedMap.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1447" source="org.apache.commons.collections4.map.Flat3Map.values()" target="org.apache.commons.collections4.map.AbstractHashedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1448" source="org.apache.commons.collections4.map.Flat3Map.values()" target="org.apache.commons.collections4.map.Flat3Map$Values(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1449" source="org.apache.commons.collections4.map.Flat3Map.entrySet()" target="org.apache.commons.collections4.map.AbstractHashedMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1450" source="org.apache.commons.collections4.map.Flat3Map.entrySet()" target="org.apache.commons.collections4.map.Flat3Map$EntrySet(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1451" source="org.apache.commons.collections4.map.Flat3Map.keySet()" target="org.apache.commons.collections4.map.AbstractHashedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1452" source="org.apache.commons.collections4.map.Flat3Map.keySet()" target="org.apache.commons.collections4.map.Flat3Map$KeySet(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1453" source="org.apache.commons.collections4.map.Flat3Map.mapIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1454" source="org.apache.commons.collections4.map.Flat3Map.mapIterator()" target="org.apache.commons.collections4.iterators.EmptyMapIterator.emptyMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1455" source="org.apache.commons.collections4.map.Flat3Map.mapIterator()" target="org.apache.commons.collections4.map.Flat3Map$FlatMapIterator(org.apache.commons.collections4.map.Flat3Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1456" source="org.apache.commons.collections4.map.Flat3Map.createDelegateMap()" target="org.apache.commons.collections4.map.HashedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1457" source="org.apache.commons.collections4.map.Flat3Map.clone()" target="org.apache.commons.collections4.map.AbstractHashedMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1458" source="org.apache.commons.collections4.map.Flat3Map.clear()" target="org.apache.commons.collections4.map.AbstractHashedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1459" source="org.apache.commons.collections4.map.Flat3Map.convertToMap()" target="org.apache.commons.collections4.map.Flat3Map.createDelegateMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1460" source="org.apache.commons.collections4.map.Flat3Map.convertToMap()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1461" source="org.apache.commons.collections4.map.Flat3Map.putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1462" source="org.apache.commons.collections4.map.Flat3Map.putAll(java.util.Map)" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1463" source="org.apache.commons.collections4.map.Flat3Map.putAll(java.util.Map)" target="org.apache.commons.collections4.map.Flat3Map.convertToMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1464" source="org.apache.commons.collections4.map.Flat3Map.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.Flat3Map.createDelegateMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1465" source="org.apache.commons.collections4.map.Flat3Map.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1466" source="org.apache.commons.collections4.map.Flat3Map.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1467" source="org.apache.commons.collections4.map.Flat3Map.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.Flat3Map.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1468" source="org.apache.commons.collections4.map.Flat3Map.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1469" source="org.apache.commons.collections4.map.Flat3Map.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1470" source="org.apache.commons.collections4.map.Flat3Map.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1471" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1472" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.addSetValues()" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1473" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.supportsRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1474" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.supportsSetValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1475" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.getConfirmedMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1476" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.getMap()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1477" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1478" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1479" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1480" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1481" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.makeObject()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1482" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.makeObject()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1483" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.verify()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1484" source="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1485" source="org.apache.commons.collections4.map.Flat3MapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1486" source="org.apache.commons.collections4.map.Flat3MapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1487" source="org.apache.commons.collections4.map.Flat3MapTest.bulkTestMapIterator()" target="org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1488" source="org.apache.commons.collections4.map.Flat3MapTest.makeObject()" target="org.apache.commons.collections4.map.Flat3Map()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1489" source="org.apache.commons.collections4.map.Flat3MapTest.testClone2()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1490" source="org.apache.commons.collections4.map.Flat3MapTest.testClone2()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1491" source="org.apache.commons.collections4.map.Flat3MapTest.testClone2()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1492" source="org.apache.commons.collections4.map.Flat3MapTest.testClone2()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1493" source="org.apache.commons.collections4.map.Flat3MapTest.testClone2()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1494" source="org.apache.commons.collections4.map.Flat3MapTest.testClone2()" target="org.apache.commons.collections4.map.Flat3Map.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1495" source="org.apache.commons.collections4.map.Flat3MapTest.testClone4()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1496" source="org.apache.commons.collections4.map.Flat3MapTest.testClone4()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1497" source="org.apache.commons.collections4.map.Flat3MapTest.testClone4()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1498" source="org.apache.commons.collections4.map.Flat3MapTest.testClone4()" target="org.apache.commons.collections4.map.Flat3Map.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1499" source="org.apache.commons.collections4.map.Flat3MapTest.testClone4()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1500" source="org.apache.commons.collections4.map.Flat3MapTest.testClone4()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1501" source="org.apache.commons.collections4.map.Flat3MapTest.testClone4()" target="org.apache.commons.collections4.map.Flat3Map.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1502" source="org.apache.commons.collections4.map.Flat3MapTest.testCollections261()" target="org.apache.commons.collections4.map.Flat3Map()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1503" source="org.apache.commons.collections4.map.Flat3MapTest.testCollections261()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1504" source="org.apache.commons.collections4.map.Flat3MapTest.testCollections261()" target="org.apache.commons.collections4.map.Flat3Map.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1505" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1506" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1507" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1508" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1509" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1510" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1511" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1512" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1513" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1514" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1515" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1516" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1517" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1518" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1519" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1520" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1521" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1522" source="org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1523" source="org.apache.commons.collections4.map.Flat3MapTest.testEquals1()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1524" source="org.apache.commons.collections4.map.Flat3MapTest.testEquals1()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1525" source="org.apache.commons.collections4.map.Flat3MapTest.testEquals1()" target="org.apache.commons.collections4.map.Flat3Map.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1526" source="org.apache.commons.collections4.map.Flat3MapTest.testEquals2()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1527" source="org.apache.commons.collections4.map.Flat3MapTest.testEquals2()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1528" source="org.apache.commons.collections4.map.Flat3MapTest.testEquals2()" target="org.apache.commons.collections4.map.Flat3Map.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1529" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1530" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1531" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1532" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1533" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1534" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1535" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1536" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1537" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1538" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1539" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1540" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1541" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1542" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1543" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1544" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1545" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1546" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1547" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1548" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1549" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1550" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1551" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1552" source="org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1553" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1554" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1555" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1556" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1557" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1558" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1559" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1560" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4()" target="org.apache.commons.collections4.map.Flat3MapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1561" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1562" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4()" target="org.apache.commons.collections4.map.Flat3Map.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1563" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4()" target="org.apache.commons.collections4.map.Flat3Map.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1564" source="org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4()" target="org.apache.commons.collections4.map.Flat3Map.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1565" source="org.apache.commons.collections4.map.Flat3MapTest.testToString()" target="org.apache.commons.collections4.map.Flat3Map()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1566" source="org.apache.commons.collections4.map.Flat3MapTest.testToString()" target="org.apache.commons.collections4.map.Flat3Map.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1567" source="org.apache.commons.collections4.map.Flat3MapTest.testToString()" target="org.apache.commons.collections4.map.Flat3Map.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1568" source="org.apache.commons.collections4.map.HashedMap()" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1569" source="org.apache.commons.collections4.map.HashedMap(int)" target="org.apache.commons.collections4.map.AbstractHashedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1570" source="org.apache.commons.collections4.map.HashedMap(int,float)" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1571" source="org.apache.commons.collections4.map.HashedMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1572" source="org.apache.commons.collections4.map.HashedMap.clone()" target="org.apache.commons.collections4.map.AbstractHashedMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1573" source="org.apache.commons.collections4.map.HashedMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1574" source="org.apache.commons.collections4.map.HashedMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1575" source="org.apache.commons.collections4.map.HashedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1576" source="org.apache.commons.collections4.map.HashedMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1577" source="org.apache.commons.collections4.map.HashedMapTest.makeObject()" target="org.apache.commons.collections4.map.HashedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1578" source="org.apache.commons.collections4.map.HashedMapTest.testClone()" target="org.apache.commons.collections4.map.HashedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1579" source="org.apache.commons.collections4.map.HashedMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1580" source="org.apache.commons.collections4.map.HashedMapTest.testClone()" target="org.apache.commons.collections4.map.HashedMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1581" source="org.apache.commons.collections4.map.HashedMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1582" source="org.apache.commons.collections4.map.HashedMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1583" source="org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero()" target="org.apache.commons.collections4.map.HashedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1584" source="org.apache.commons.collections4.map.HashedMapTest.testInternalState()" target="org.apache.commons.collections4.map.HashedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1585" source="org.apache.commons.collections4.map.IdentityMap$IdentityEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1586" source="org.apache.commons.collections4.map.IdentityMap$IdentityEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1587" source="org.apache.commons.collections4.map.IdentityMap$IdentityEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1588" source="org.apache.commons.collections4.map.IdentityMap$IdentityEntry.hashCode()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1589" source="org.apache.commons.collections4.map.IdentityMap$IdentityEntry.hashCode()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1590" source="org.apache.commons.collections4.map.IdentityMap()" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1591" source="org.apache.commons.collections4.map.IdentityMap(int)" target="org.apache.commons.collections4.map.AbstractHashedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1592" source="org.apache.commons.collections4.map.IdentityMap(int,float)" target="org.apache.commons.collections4.map.AbstractHashedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1593" source="org.apache.commons.collections4.map.IdentityMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractHashedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1594" source="org.apache.commons.collections4.map.IdentityMap.clone()" target="org.apache.commons.collections4.map.AbstractHashedMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1595" source="org.apache.commons.collections4.map.IdentityMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)" target="org.apache.commons.collections4.map.IdentityMap$IdentityEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1596" source="org.apache.commons.collections4.map.IdentityMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1597" source="org.apache.commons.collections4.map.IdentityMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1598" source="org.apache.commons.collections4.map.LRUMap()" target="org.apache.commons.collections4.map.LRUMap(int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1599" source="org.apache.commons.collections4.map.LRUMap(int)" target="org.apache.commons.collections4.map.LRUMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1600" source="org.apache.commons.collections4.map.LRUMap(int,boolean)" target="org.apache.commons.collections4.map.LRUMap(int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1601" source="org.apache.commons.collections4.map.LRUMap(int,float)" target="org.apache.commons.collections4.map.LRUMap(int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1602" source="org.apache.commons.collections4.map.LRUMap(int,float,boolean)" target="org.apache.commons.collections4.map.AbstractLinkedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1603" source="org.apache.commons.collections4.map.LRUMap(java.util.Map)" target="org.apache.commons.collections4.map.LRUMap(java.util.Map,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1604" source="org.apache.commons.collections4.map.LRUMap(java.util.Map,boolean)" target="org.apache.commons.collections4.map.LRUMap(int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1605" source="org.apache.commons.collections4.map.LRUMap(java.util.Map,boolean)" target="org.apache.commons.collections4.map.AbstractHashedMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1606" source="org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1607" source="org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.LRUMap.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1608" source="org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1609" source="org.apache.commons.collections4.map.LRUMap.clone()" target="org.apache.commons.collections4.map.AbstractHashedMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1610" source="org.apache.commons.collections4.map.LRUMap.addMapping(int,int,K,V)" target="org.apache.commons.collections4.map.LRUMap.isFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1611" source="org.apache.commons.collections4.map.LRUMap.addMapping(int,int,K,V)" target="org.apache.commons.collections4.map.LRUMap.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1612" source="org.apache.commons.collections4.map.LRUMap.addMapping(int,int,K,V)" target="org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry,int,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1613" source="org.apache.commons.collections4.map.LRUMap.addMapping(int,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1614" source="org.apache.commons.collections4.map.LRUMap.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1615" source="org.apache.commons.collections4.map.LRUMap.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1616" source="org.apache.commons.collections4.map.LRUMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.LRUMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1617" source="org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry,int,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1618" source="org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry,int,int,K,V)" target="org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1619" source="org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry,int,int,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1620" source="org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry,int,int,K,V)" target="org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1621" source="org.apache.commons.collections4.map.LRUMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)" target="org.apache.commons.collections4.map.LRUMap.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1622" source="org.apache.commons.collections4.map.LRUMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1623" source="org.apache.commons.collections4.map.LRUMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.LRUMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1624" source="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclass(int)" target="org.apache.commons.collections4.map.LRUMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1625" source="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclass.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1626" source="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclass.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1627" source="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassBlocksRemove(int,boolean)" target="org.apache.commons.collections4.map.LRUMap(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1628" source="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassFirstBlocksRemove(int)" target="org.apache.commons.collections4.map.LRUMap(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1629" source="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassFirstBlocksRemove.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1630" source="org.apache.commons.collections4.map.LRUMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractOrderedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1631" source="org.apache.commons.collections4.map.LRUMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1632" source="org.apache.commons.collections4.map.LRUMapTest.getMap()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1633" source="org.apache.commons.collections4.map.LRUMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1634" source="org.apache.commons.collections4.map.LRUMapTest.makeObject()" target="org.apache.commons.collections4.map.LRUMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1635" source="org.apache.commons.collections4.map.LRUMapTest.testAccessOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1636" source="org.apache.commons.collections4.map.LRUMapTest.testAccessOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1637" source="org.apache.commons.collections4.map.LRUMapTest.testAccessOrder()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1638" source="org.apache.commons.collections4.map.LRUMapTest.testAccessOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1639" source="org.apache.commons.collections4.map.LRUMapTest.testAccessOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1640" source="org.apache.commons.collections4.map.LRUMapTest.testClone()" target="org.apache.commons.collections4.map.LRUMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1641" source="org.apache.commons.collections4.map.LRUMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1642" source="org.apache.commons.collections4.map.LRUMapTest.testClone()" target="org.apache.commons.collections4.map.LRUMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1643" source="org.apache.commons.collections4.map.LRUMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1644" source="org.apache.commons.collections4.map.LRUMapTest.testClone()" target="org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1645" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1646" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1647" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets()" target="org.apache.commons.collections4.map.LRUMapTest$SingleHashCode(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1648" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets()" target="org.apache.commons.collections4.map.LRUMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1649" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets()" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1650" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets()" target="org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1651" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1652" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets()" target="org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1653" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1654" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1655" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int()" target="org.apache.commons.collections4.map.LRUMapTest$SingleHashCode(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1656" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int()" target="org.apache.commons.collections4.map.LRUMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1657" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1658" source="org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int()" target="org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1659" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1660" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1661" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1662" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1663" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.LRUMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1664" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1665" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.LRUMap.isFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1666" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.LRUMap.maxSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1667" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1668" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.AbstractHashedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1669" source="org.apache.commons.collections4.map.LRUMapTest.testLRU()" target="org.apache.commons.collections4.map.AbstractHashedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1670" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU()" target="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclass(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1671" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1672" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1673" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU()" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1674" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU()" target="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1675" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove()" target="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassBlocksRemove(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1676" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1677" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1678" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove()" target="org.apache.commons.collections4.map.LRUMap.maxSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1679" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove()" target="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1680" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan()" target="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassBlocksRemove(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1681" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1682" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1683" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan()" target="org.apache.commons.collections4.map.LRUMap.maxSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1684" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan()" target="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1685" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove()" target="org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassFirstBlocksRemove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1686" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1687" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1688" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove()" target="org.apache.commons.collections4.map.LRUMap.maxSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1689" source="org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove()" target="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1690" source="org.apache.commons.collections4.map.LRUMapTest.testReset()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1691" source="org.apache.commons.collections4.map.LRUMapTest.testReset()" target="org.apache.commons.collections4.map.LRUMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1692" source="org.apache.commons.collections4.map.LRUMapTest.testReset()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1693" source="org.apache.commons.collections4.map.LRUMapTest.testReset()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1694" source="org.apache.commons.collections4.map.LRUMapTest.testReset()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1695" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet()" target="org.apache.commons.collections4.map.LRUMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1696" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet()" target="org.apache.commons.collections4.map.LRUMapTest$3(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1697" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet()" target="org.apache.commons.collections4.map.LRUMapTest$4(java.lang.ThreadGroup,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1698" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet()" target="org.apache.commons.collections4.map.LRUMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1699" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet()" target="org.apache.commons.collections4.map.LRUMapTest$5(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1700" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet()" target="org.apache.commons.collections4.map.LRUMapTest$6(java.lang.ThreadGroup,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1701" source="org.apache.commons.collections4.map.LRUMapTest$2.run()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1702" source="org.apache.commons.collections4.map.LRUMapTest$2.run()" target="org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1703" source="org.apache.commons.collections4.map.LRUMapTest$2.run()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1704" source="org.apache.commons.collections4.map.LRUMapTest$2.run()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1705" source="org.apache.commons.collections4.map.LRUMapTest$2.run()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1706" source="org.apache.commons.collections4.map.LRUMapTest$2.run()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1707" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()" target="org.apache.commons.collections4.map.LRUMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1708" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()" target="org.apache.commons.collections4.map.LRUMapTest$1(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1709" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()" target="org.apache.commons.collections4.map.LRUMapTest$2(java.lang.ThreadGroup,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1710" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1711" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()" target="org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1712" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1713" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1714" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1715" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1716" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues()" target="org.apache.commons.collections4.map.LRUMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1717" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues()" target="org.apache.commons.collections4.map.LRUMapTest$7(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1718" source="org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues()" target="org.apache.commons.collections4.map.LRUMapTest$8(java.lang.ThreadGroup,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1719" source="org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1720" source="org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1721" source="org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1722" source="org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1723" source="org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1724" source="org.apache.commons.collections4.map.LazyMap.get(java.lang.Object)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1725" source="org.apache.commons.collections4.map.LazyMapTest#oneFactory" target="org.apache.commons.collections4.FactoryUtils.constantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1726" source="org.apache.commons.collections4.map.LazyMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1727" source="org.apache.commons.collections4.map.LazyMapTest.makeObject()" target="org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1728" source="org.apache.commons.collections4.map.LazyMapTest.makeObject()" target="org.apache.commons.collections4.FactoryUtils.nullFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1729" source="org.apache.commons.collections4.map.LazyMapTest.mapGetWithFactory()" target="org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1730" source="org.apache.commons.collections4.map.LazyMapTest.mapGetWithFactory()" target="org.apache.commons.collections4.FactoryUtils.nullFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1731" source="org.apache.commons.collections4.map.LazyMapTest.mapGetWithTransformer()" target="org.apache.commons.collections4.map.LazyMapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1732" source="org.apache.commons.collections4.map.LazyMapTest.mapGetWithTransformer()" target="org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1733" source="org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1734" source="org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1735" source="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1736" source="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1737" source="org.apache.commons.collections4.map.LazySortedMap.firstKey()" target="org.apache.commons.collections4.map.LazySortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1738" source="org.apache.commons.collections4.map.LazySortedMap.lastKey()" target="org.apache.commons.collections4.map.LazySortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1739" source="org.apache.commons.collections4.map.LazySortedMap.comparator()" target="org.apache.commons.collections4.map.LazySortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1740" source="org.apache.commons.collections4.map.LazySortedMap.headMap(K)" target="org.apache.commons.collections4.map.LazySortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1741" source="org.apache.commons.collections4.map.LazySortedMap.headMap(K)" target="org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1742" source="org.apache.commons.collections4.map.LazySortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.LazySortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1743" source="org.apache.commons.collections4.map.LazySortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1744" source="org.apache.commons.collections4.map.LazySortedMap.tailMap(K)" target="org.apache.commons.collections4.map.LazySortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1745" source="org.apache.commons.collections4.map.LazySortedMap.tailMap(K)" target="org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1746" source="org.apache.commons.collections4.map.LazySortedMapTest#oneFactory" target="org.apache.commons.collections4.FactoryUtils.constantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1747" source="org.apache.commons.collections4.map.LazySortedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1748" source="org.apache.commons.collections4.map.LazySortedMapTest.makeObject()" target="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1749" source="org.apache.commons.collections4.map.LazySortedMapTest.makeObject()" target="org.apache.commons.collections4.FactoryUtils.nullFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1750" source="org.apache.commons.collections4.map.LazySortedMapTest.mapGet()" target="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1751" source="org.apache.commons.collections4.map.LazySortedMapTest.mapGet()" target="org.apache.commons.collections4.FactoryUtils.nullFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1752" source="org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder()" target="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1753" source="org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate()" target="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1754" source="org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate()" target="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1755" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.toArray(T[])" target="org.apache.commons.collections4.map.AbstractHashedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1756" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.get(int)" target="org.apache.commons.collections4.map.LinkedMap.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1757" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.contains(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1758" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.containsAll(java.util.Collection)" target="org.apache.commons.collections4.map.AbstractHashedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1759" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.indexOf(java.lang.Object)" target="org.apache.commons.collections4.map.LinkedMap.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1760" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.lastIndexOf(java.lang.Object)" target="org.apache.commons.collections4.map.LinkedMap.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1761" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.size()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1762" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.toArray()" target="org.apache.commons.collections4.map.AbstractHashedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1763" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1764" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.iterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1765" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.subList(int,int)" target="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1766" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.listIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1767" source="org.apache.commons.collections4.map.LinkedMap$LinkedMapList.listIterator(int)" target="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1768" source="org.apache.commons.collections4.map.LinkedMap()" target="org.apache.commons.collections4.map.AbstractLinkedMap(int,float,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1769" source="org.apache.commons.collections4.map.LinkedMap(int)" target="org.apache.commons.collections4.map.AbstractLinkedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1770" source="org.apache.commons.collections4.map.LinkedMap(int,float)" target="org.apache.commons.collections4.map.AbstractLinkedMap(int,float)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1771" source="org.apache.commons.collections4.map.LinkedMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractLinkedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1772" source="org.apache.commons.collections4.map.LinkedMap.get(int)" target="org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1773" source="org.apache.commons.collections4.map.LinkedMap.get(int)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1774" source="org.apache.commons.collections4.map.LinkedMap.getValue(int)" target="org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1775" source="org.apache.commons.collections4.map.LinkedMap.getValue(int)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1776" source="org.apache.commons.collections4.map.LinkedMap.remove(int)" target="org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1777" source="org.apache.commons.collections4.map.LinkedMap.remove(int)" target="org.apache.commons.collections4.map.LinkedMap.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1778" source="org.apache.commons.collections4.map.LinkedMap.indexOf(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1779" source="org.apache.commons.collections4.map.LinkedMap.indexOf(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1780" source="org.apache.commons.collections4.map.LinkedMap.asList()" target="org.apache.commons.collections4.map.LinkedMap$LinkedMapList(org.apache.commons.collections4.map.LinkedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1781" source="org.apache.commons.collections4.map.LinkedMap.clone()" target="org.apache.commons.collections4.map.AbstractHashedMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1782" source="org.apache.commons.collections4.map.LinkedMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1783" source="org.apache.commons.collections4.map.LinkedMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1784" source="org.apache.commons.collections4.map.LinkedMapTest$TestListView()" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1785" source="org.apache.commons.collections4.map.LinkedMapTest$TestListView.getFullElements()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1786" source="org.apache.commons.collections4.map.LinkedMapTest$TestListView.isNullSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1787" source="org.apache.commons.collections4.map.LinkedMapTest$TestListView.makeFullCollection()" target="org.apache.commons.collections4.map.LinkedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1788" source="org.apache.commons.collections4.map.LinkedMapTest$TestListView.makeFullCollection()" target="org.apache.commons.collections4.map.LinkedMap.asList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1789" source="org.apache.commons.collections4.map.LinkedMapTest$TestListView.makeObject()" target="org.apache.commons.collections4.map.LinkedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1790" source="org.apache.commons.collections4.map.LinkedMapTest$TestListView.makeObject()" target="org.apache.commons.collections4.map.LinkedMap.asList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1791" source="org.apache.commons.collections4.map.LinkedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractOrderedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1792" source="org.apache.commons.collections4.map.LinkedMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1793" source="org.apache.commons.collections4.map.LinkedMapTest.bulkTestListView()" target="org.apache.commons.collections4.map.LinkedMapTest$TestListView()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1794" source="org.apache.commons.collections4.map.LinkedMapTest.getMap()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1795" source="org.apache.commons.collections4.map.LinkedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1796" source="org.apache.commons.collections4.map.LinkedMapTest.makeObject()" target="org.apache.commons.collections4.map.LinkedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1797" source="org.apache.commons.collections4.map.LinkedMapTest.testClone()" target="org.apache.commons.collections4.map.LinkedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1798" source="org.apache.commons.collections4.map.LinkedMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1799" source="org.apache.commons.collections4.map.LinkedMapTest.testClone()" target="org.apache.commons.collections4.map.LinkedMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1800" source="org.apache.commons.collections4.map.LinkedMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1801" source="org.apache.commons.collections4.map.LinkedMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1802" source="org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1803" source="org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.LinkedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1804" source="org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.LinkedMap.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1805" source="org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1806" source="org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1807" source="org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1808" source="org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1809" source="org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1810" source="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1811" source="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.LinkedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1812" source="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.LinkedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1813" source="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1814" source="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1815" source="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1816" source="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1817" source="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1818" source="org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1819" source="org.apache.commons.collections4.map.LinkedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1820" source="org.apache.commons.collections4.map.LinkedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.LinkedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1821" source="org.apache.commons.collections4.map.LinkedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.LinkedMap.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1822" source="org.apache.commons.collections4.map.LinkedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1823" source="org.apache.commons.collections4.map.LinkedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1824" source="org.apache.commons.collections4.map.LinkedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1825" source="org.apache.commons.collections4.map.LinkedMapTest.testIndexOf()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1826" source="org.apache.commons.collections4.map.LinkedMapTest.testIndexOf()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1827" source="org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero()" target="org.apache.commons.collections4.map.LinkedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1828" source="org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1829" source="org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1830" source="org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1831" source="org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1832" source="org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1833" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1834" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.LinkedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1835" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.LinkedMap.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1836" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1837" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1838" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1839" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1840" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1841" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1842" source="org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1843" source="org.apache.commons.collections4.map.LinkedMapTest.testReset()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1844" source="org.apache.commons.collections4.map.LinkedMapTest.testReset()" target="org.apache.commons.collections4.map.LinkedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1845" source="org.apache.commons.collections4.map.LinkedMapTest.testReset()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1846" source="org.apache.commons.collections4.map.LinkedMapTest.testReset()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1847" source="org.apache.commons.collections4.map.LinkedMapTest.testReset()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1848" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.contains(java.lang.Object)" target="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.getEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1849" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.containsAll(java.util.Collection)" target="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.getEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1850" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.equals(java.lang.Object)" target="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.getEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1851" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.isEmpty()" target="org.apache.commons.collections4.map.AbstractMapDecorator.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1852" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.remove(java.lang.Object)" target="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.getEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1853" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.remove(java.lang.Object)" target="org.apache.commons.collections4.map.ListOrderedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1854" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.hashCode()" target="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.getEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1855" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.size()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1856" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.toString()" target="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.getEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1857" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.iterator()" target="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator(org.apache.commons.collections4.map.ListOrderedMap,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1858" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.getEntrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1859" source="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.clear()" target="org.apache.commons.collections4.map.ListOrderedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1860" source="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.contains(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1861" source="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.size()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1862" source="org.apache.commons.collections4.map.ListOrderedMap$KeySetView$1(java.util.Iterator)" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1863" source="org.apache.commons.collections4.map.ListOrderedMap$KeySetView$1.next()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1864" source="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.iterator()" target="org.apache.commons.collections4.map.ListOrderedMap$KeySetView$1(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1865" source="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.iterator()" target="org.apache.commons.collections4.map.ListOrderedMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1866" source="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.iterator()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1867" source="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.iterator()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1868" source="org.apache.commons.collections4.map.ListOrderedMap$KeySetView.clear()" target="org.apache.commons.collections4.map.ListOrderedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1869" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator(org.apache.commons.collections4.map.ListOrderedMap,java.util.List)" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1870" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.next()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1871" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.next()" target="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry(org.apache.commons.collections4.map.ListOrderedMap,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1872" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.remove()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1873" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.remove()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1874" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry(org.apache.commons.collections4.map.ListOrderedMap,K)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1875" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.getValue()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1876" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.getValue()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1877" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.setValue(V)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1878" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.setValue(V)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1879" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.getValue()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1880" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.toString()" target="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1881" source="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.toString()" target="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1882" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.get(int)" target="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1883" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.remove(int)" target="org.apache.commons.collections4.map.ListOrderedMap.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1884" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.set(int,V)" target="org.apache.commons.collections4.map.ListOrderedMap.setValue(int,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1885" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.contains(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1886" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.size()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1887" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView$1(java.util.Iterator)" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1888" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView$1.next()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1889" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.iterator()" target="org.apache.commons.collections4.map.ListOrderedMap$ValuesView$1(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1890" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.iterator()" target="org.apache.commons.collections4.map.ListOrderedMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1891" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.iterator()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1892" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.iterator()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1893" source="org.apache.commons.collections4.map.ListOrderedMap$ValuesView.clear()" target="org.apache.commons.collections4.map.ListOrderedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1894" source="org.apache.commons.collections4.map.ListOrderedMap()" target="org.apache.commons.collections4.map.ListOrderedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1895" source="org.apache.commons.collections4.map.ListOrderedMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1896" source="org.apache.commons.collections4.map.ListOrderedMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1897" source="org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map)" target="org.apache.commons.collections4.map.ListOrderedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1898" source="org.apache.commons.collections4.map.ListOrderedMap.firstKey()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1899" source="org.apache.commons.collections4.map.ListOrderedMap.lastKey()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1900" source="org.apache.commons.collections4.map.ListOrderedMap.nextKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1901" source="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1902" source="org.apache.commons.collections4.map.ListOrderedMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1903" source="org.apache.commons.collections4.map.ListOrderedMap.put(int,K,V)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1904" source="org.apache.commons.collections4.map.ListOrderedMap.remove(int)" target="org.apache.commons.collections4.map.ListOrderedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1905" source="org.apache.commons.collections4.map.ListOrderedMap.remove(int)" target="org.apache.commons.collections4.map.ListOrderedMap.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1906" source="org.apache.commons.collections4.map.ListOrderedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1907" source="org.apache.commons.collections4.map.ListOrderedMap.setValue(int,V)" target="org.apache.commons.collections4.map.ListOrderedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1908" source="org.apache.commons.collections4.map.ListOrderedMap.toString()" target="org.apache.commons.collections4.map.AbstractMapDecorator.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1909" source="org.apache.commons.collections4.map.ListOrderedMap.toString()" target="org.apache.commons.collections4.map.ListOrderedMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1910" source="org.apache.commons.collections4.map.ListOrderedMap.values()" target="org.apache.commons.collections4.map.ListOrderedMap$ValuesView(org.apache.commons.collections4.map.ListOrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1911" source="org.apache.commons.collections4.map.ListOrderedMap.asList()" target="org.apache.commons.collections4.map.ListOrderedMap.keyList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1912" source="org.apache.commons.collections4.map.ListOrderedMap.keyList()" target="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1913" source="org.apache.commons.collections4.map.ListOrderedMap.valueList()" target="org.apache.commons.collections4.map.ListOrderedMap$ValuesView(org.apache.commons.collections4.map.ListOrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1914" source="org.apache.commons.collections4.map.ListOrderedMap.entrySet()" target="org.apache.commons.collections4.map.ListOrderedMap$EntrySetView(org.apache.commons.collections4.map.ListOrderedMap,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1915" source="org.apache.commons.collections4.map.ListOrderedMap.keySet()" target="org.apache.commons.collections4.map.ListOrderedMap$KeySetView(org.apache.commons.collections4.map.ListOrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1916" source="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()" target="org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator(org.apache.commons.collections4.map.ListOrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1917" source="org.apache.commons.collections4.map.ListOrderedMap.clear()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1918" source="org.apache.commons.collections4.map.ListOrderedMap.putAll(int,java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1919" source="org.apache.commons.collections4.map.ListOrderedMap.putAll(int,java.util.Map)" target="org.apache.commons.collections4.map.ListOrderedMap.put(int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1920" source="org.apache.commons.collections4.map.ListOrderedMap.putAll(int,java.util.Map)" target="org.apache.commons.collections4.map.ListOrderedMap.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1921" source="org.apache.commons.collections4.map.ListOrderedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.ListOrderedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1922" source="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView()" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1923" source="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.getFullElements()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1924" source="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.isNullSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1925" source="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.makeFullCollection()" target="org.apache.commons.collections4.map.ListOrderedMap2Test.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1926" source="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.makeFullCollection()" target="org.apache.commons.collections4.map.ListOrderedMap.asList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1927" source="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMap2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1928" source="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMap.asList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1929" source="org.apache.commons.collections4.map.ListOrderedMap2Test(java.lang.String)" target="org.apache.commons.collections4.map.AbstractOrderedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1930" source="org.apache.commons.collections4.map.ListOrderedMap2Test.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1931" source="org.apache.commons.collections4.map.ListOrderedMap2Test.bulkTestListView()" target="org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1932" source="org.apache.commons.collections4.map.ListOrderedMap2Test.getMap()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1933" source="org.apache.commons.collections4.map.ListOrderedMap2Test.makeFullMap()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1934" source="org.apache.commons.collections4.map.ListOrderedMap2Test.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1935" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1936" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap2Test.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1937" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1938" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1939" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1940" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1941" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1942" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1943" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1944" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap2Test.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1945" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1946" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1947" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1948" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1949" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1950" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1951" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1952" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1953" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf()" target="org.apache.commons.collections4.map.ListOrderedMap2Test.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1954" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf()" target="org.apache.commons.collections4.map.ListOrderedMap.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1955" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1956" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1957" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf()" target="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1958" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1959" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1960" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1961" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap2Test.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1962" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1963" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1964" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1965" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1966" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1967" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1968" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1969" source="org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1970" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView()" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1971" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.getFullElements()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1972" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.isNullSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1973" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.makeFullCollection()" target="org.apache.commons.collections4.map.ListOrderedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1974" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.makeFullCollection()" target="org.apache.commons.collections4.map.ListOrderedMap.keyList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1975" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1976" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMap.keyList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1977" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView()" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1978" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.getFullElements()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1979" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.isNullSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1980" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.makeFullCollection()" target="org.apache.commons.collections4.map.ListOrderedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1981" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.makeFullCollection()" target="org.apache.commons.collections4.map.ListOrderedMap.valueList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1982" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1983" source="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMap.valueList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1984" source="org.apache.commons.collections4.map.ListOrderedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractOrderedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1985" source="org.apache.commons.collections4.map.ListOrderedMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1986" source="org.apache.commons.collections4.map.ListOrderedMapTest.bulkTestKeyListView()" target="org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1987" source="org.apache.commons.collections4.map.ListOrderedMapTest.bulkTestValueListView()" target="org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1988" source="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1989" source="org.apache.commons.collections4.map.ListOrderedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1990" source="org.apache.commons.collections4.map.ListOrderedMapTest.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1991" source="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues()" target="org.apache.commons.collections4.map.ListOrderedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1992" source="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues()" target="org.apache.commons.collections4.map.ListOrderedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1993" source="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1994" source="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues()" target="org.apache.commons.collections4.map.ListOrderedMap.putAll(int,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1995" source="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues()" target="org.apache.commons.collections4.map.ListOrderedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1996" source="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues()" target="org.apache.commons.collections4.map.ListOrderedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1997" source="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1998" source="org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues()" target="org.apache.commons.collections4.map.ListOrderedMap.putAll(int,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1999" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2000" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2001" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2002" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2003" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2004" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2005" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2006" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2007" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2008" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2009" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2010" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2011" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2012" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2013" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2014" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2015" source="org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2016" source="org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2017" source="org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2018" source="org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.ListOrderedMap.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2019" source="org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2020" source="org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2021" source="org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf()" target="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2022" source="org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2023" source="org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2024" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2025" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2026" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2027" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex()" target="org.apache.commons.collections4.map.ListOrderedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2028" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.putAll(int,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2029" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2030" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2031" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441()" target="org.apache.commons.collections4.map.ListOrderedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2032" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441()" target="org.apache.commons.collections4.map.ListOrderedMap.putAll(int,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2033" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441()" target="org.apache.commons.collections4.map.ListOrderedMap.asList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2034" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2035" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2036" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.ListOrderedMap.put(int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2037" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2038" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.ListOrderedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2039" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2040" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.ListOrderedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2041" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.ListOrderedMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2042" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2043" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.ListOrderedMap.keyList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2044" source="org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject()" target="org.apache.commons.collections4.map.ListOrderedMap.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2045" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2046" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2047" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2048" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2049" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2050" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2051" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2052" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2053" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2054" source="org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2055" source="org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2056" source="org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2057" source="org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.setValue(int,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2058" source="org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2059" source="org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2060" source="org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2061" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2062" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2063" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2064" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2065" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.valueList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2066" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2067" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2068" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2069" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2070" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.valueList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2071" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2072" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex()" target="org.apache.commons.collections4.map.ListOrderedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2073" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2074" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.getValue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2075" source="org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex()" target="org.apache.commons.collections4.map.ListOrderedMap.valueList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2076" source="org.apache.commons.collections4.map.MultiKeyMap()" target="org.apache.commons.collections4.map.MultiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2077" source="org.apache.commons.collections4.map.MultiKeyMap()" target="org.apache.commons.collections4.map.HashedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2078" source="org.apache.commons.collections4.map.MultiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2079" source="org.apache.commons.collections4.map.MultiKeyMap.multiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.AbstractHashedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2080" source="org.apache.commons.collections4.map.MultiKeyMap.multiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)" target="org.apache.commons.collections4.map.MultiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2081" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2082" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2083" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2084" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2085" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2086" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2087" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2088" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2089" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2090" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2091" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2092" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2093" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2094" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2095" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2096" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2097" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2098" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2099" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2100" source="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2101" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2102" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2103" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2104" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2105" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2106" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2107" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2108" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2109" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2110" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2111" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2112" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2113" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2114" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2115" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2116" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2117" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2118" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2119" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2120" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2121" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2122" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2123" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2124" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2125" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2126" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2127" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2128" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2129" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2130" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2131" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)" target="org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int,int,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2132" source="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2133" source="org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey,V)" target="org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2134" source="org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey,V)" target="org.apache.commons.collections4.map.AbstractMapDecorator.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2135" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2136" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2137" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2138" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2139" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2140" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2141" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2142" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2143" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2144" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2145" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2146" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2147" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2148" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2149" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2150" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2151" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2152" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2153" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2154" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2155" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2156" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2157" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2158" source="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2159" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2160" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2161" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2162" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2163" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2164" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2165" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2166" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2167" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2168" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2169" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2170" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2171" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2172" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2173" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2174" source="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2175" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2176" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2177" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2178" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2179" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2180" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2181" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2182" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2183" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2184" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2185" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2186" source="org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2187" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2188" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2189" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2190" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2191" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2192" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object)" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2193" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2194" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2195" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2196" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2197" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2198" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2199" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2200" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2201" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2202" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2203" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2204" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2205" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2206" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2207" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2208" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2209" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2210" source="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2211" source="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()" target="org.apache.commons.collections4.map.MultiKeyMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2212" source="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()" target="org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2213" source="org.apache.commons.collections4.map.MultiKeyMap.decorated()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2214" source="org.apache.commons.collections4.map.MultiKeyMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2215" source="org.apache.commons.collections4.map.MultiKeyMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2216" source="org.apache.commons.collections4.map.MultiKeyMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2217" source="org.apache.commons.collections4.map.MultiKeyMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2218" source="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2219" source="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2220" source="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2221" source="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2222" source="org.apache.commons.collections4.map.MultiKeyMapTest.getOtherKeys()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2223" source="org.apache.commons.collections4.map.MultiKeyMapTest.getSampleKeys()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2224" source="org.apache.commons.collections4.map.MultiKeyMapTest.getMap()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2225" source="org.apache.commons.collections4.map.MultiKeyMapTest.makeObject()" target="org.apache.commons.collections4.map.MultiKeyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2226" source="org.apache.commons.collections4.map.MultiKeyMapTest.testClone()" target="org.apache.commons.collections4.map.MultiKeyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2227" source="org.apache.commons.collections4.map.MultiKeyMapTest.testClone()" target="org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2228" source="org.apache.commons.collections4.map.MultiKeyMapTest.testClone()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2229" source="org.apache.commons.collections4.map.MultiKeyMapTest.testClone()" target="org.apache.commons.collections4.map.MultiKeyMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2230" source="org.apache.commons.collections4.map.MultiKeyMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2231" source="org.apache.commons.collections4.map.MultiKeyMapTest.testClone()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2232" source="org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap()" target="org.apache.commons.collections4.map.MultiKeyMap.multiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2233" source="org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap()" target="org.apache.commons.collections4.map.LRUMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2234" source="org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap()" target="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2235" source="org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2236" source="org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2237" source="org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap()" target="org.apache.commons.collections4.map.MultiKeyMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2238" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2239" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2240" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2241" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2242" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2243" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2244" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2245" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2246" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2247" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2248" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2249" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2250" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2251" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2252" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2253" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2254" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2255" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2256" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet()" target="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2257" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2258" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2259" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2260" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2261" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2262" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2263" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2264" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2265" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2266" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2267" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2268" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2269" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2270" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2271" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2272" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2273" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2274" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2275" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2276" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,K,K,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2277" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2278" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2279" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2280" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPutWithNullKey()" target="org.apache.commons.collections4.map.MultiKeyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2281" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPutWithNullKey()" target="org.apache.commons.collections4.map.MultiKeyMap.put(K,K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2282" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPutWithNullKey()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2283" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPutWithNullKey()" target="org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2284" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMultiKeyKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2285" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2286" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2287" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2288" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2289" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2290" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2291" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2292" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2293" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2294" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2295" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2296" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2297" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2298" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove()" target="org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2299" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2300" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2301" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2302" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1()" target="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2303" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1()" target="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2304" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2305" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2306" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2307" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2308" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2309" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2310" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2()" target="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2311" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2()" target="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2312" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2313" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2314" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2315" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2316" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2317" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2318" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3()" target="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2319" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3()" target="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2320" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2321" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2322" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2323" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2324" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()" target="org.apache.commons.collections4.map.MultiKeyMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2325" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2326" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()" target="org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2327" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()" target="org.apache.commons.collections4.map.MultiKeyMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2328" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2329" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2330" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2331" source="org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4()" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2332" source="org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2333" source="org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2334" source="org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory.create()" target="org.apache.commons.collections4.FunctorException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2335" source="org.apache.commons.collections4.map.MultiValueMap$Values.size()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2336" source="org.apache.commons.collections4.map.MultiValueMap$Values.iterator()" target="org.apache.commons.collections4.iterators.IteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2337" source="org.apache.commons.collections4.map.MultiValueMap$Values.iterator()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2338" source="org.apache.commons.collections4.map.MultiValueMap$Values.iterator()" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2339" source="org.apache.commons.collections4.map.MultiValueMap$Values.iterator()" target="org.apache.commons.collections4.map.MultiValueMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2340" source="org.apache.commons.collections4.map.MultiValueMap$Values.clear()" target="org.apache.commons.collections4.map.MultiValueMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2341" source="org.apache.commons.collections4.map.MultiValueMap$ValuesIterator(java.lang.Object)" target="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2342" source="org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.remove()" target="org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2343" source="org.apache.commons.collections4.map.MultiValueMap()" target="org.apache.commons.collections4.map.MultiValueMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2344" source="org.apache.commons.collections4.map.MultiValueMap()" target="org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2345" source="org.apache.commons.collections4.map.MultiValueMap(java.util.Map,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2346" source="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,java.lang.Class)" target="org.apache.commons.collections4.map.MultiValueMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2347" source="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,java.lang.Class)" target="org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2348" source="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.MultiValueMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2349" source="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map)" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2350" source="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2351" source="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2352" source="org.apache.commons.collections4.map.MultiValueMap.putAll(K,java.util.Collection)" target="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2353" source="org.apache.commons.collections4.map.MultiValueMap.putAll(K,java.util.Collection)" target="org.apache.commons.collections4.map.MultiValueMap.createCollection(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2354" source="org.apache.commons.collections4.map.MultiValueMap.putAll(K,java.util.Collection)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2355" source="org.apache.commons.collections4.map.MultiValueMap.removeMapping(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2356" source="org.apache.commons.collections4.map.MultiValueMap.removeMapping(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2357" source="org.apache.commons.collections4.map.MultiValueMap.size(java.lang.Object)" target="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2358" source="org.apache.commons.collections4.map.MultiValueMap.totalSize()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2359" source="org.apache.commons.collections4.map.MultiValueMap.totalSize()" target="org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2360" source="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)" target="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2361" source="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)" target="org.apache.commons.collections4.map.MultiValueMap.createCollection(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2362" source="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2363" source="org.apache.commons.collections4.map.MultiValueMap.createCollection(int)" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2364" source="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2365" source="org.apache.commons.collections4.map.MultiValueMap.values()" target="org.apache.commons.collections4.map.MultiValueMap$Values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2366" source="org.apache.commons.collections4.map.MultiValueMap$1()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2367" source="org.apache.commons.collections4.map.MultiValueMap$1$1.transform(V)" target="org.apache.commons.collections4.map.MultiValueMap$1$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2368" source="org.apache.commons.collections4.map.MultiValueMap$1.nextIterator(int)" target="org.apache.commons.collections4.map.MultiValueMap$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2369" source="org.apache.commons.collections4.map.MultiValueMap$1.nextIterator(int)" target="org.apache.commons.collections4.map.MultiValueMap$1$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2370" source="org.apache.commons.collections4.map.MultiValueMap$1.nextIterator(int)" target="org.apache.commons.collections4.iterators.TransformIterator(java.util.Iterator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2371" source="org.apache.commons.collections4.map.MultiValueMap$1.nextIterator(int)" target="org.apache.commons.collections4.map.MultiValueMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2372" source="org.apache.commons.collections4.map.MultiValueMap.iterator()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2373" source="org.apache.commons.collections4.map.MultiValueMap.iterator()" target="org.apache.commons.collections4.map.MultiValueMap$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2374" source="org.apache.commons.collections4.map.MultiValueMap.iterator()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2375" source="org.apache.commons.collections4.map.MultiValueMap.iterator()" target="org.apache.commons.collections4.map.MultiValueMap$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2376" source="org.apache.commons.collections4.map.MultiValueMap.iterator()" target="org.apache.commons.collections4.map.MultiValueMap$1$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2377" source="org.apache.commons.collections4.map.MultiValueMap.iterator()" target="org.apache.commons.collections4.iterators.TransformIterator(java.util.Iterator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2378" source="org.apache.commons.collections4.map.MultiValueMap.iterator()" target="org.apache.commons.collections4.map.MultiValueMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2379" source="org.apache.commons.collections4.map.MultiValueMap.iterator(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2380" source="org.apache.commons.collections4.map.MultiValueMap.iterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2381" source="org.apache.commons.collections4.map.MultiValueMap.iterator(java.lang.Object)" target="org.apache.commons.collections4.map.MultiValueMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2382" source="org.apache.commons.collections4.map.MultiValueMap.entrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2383" source="org.apache.commons.collections4.map.MultiValueMap.clear()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2384" source="org.apache.commons.collections4.map.MultiValueMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.MultiValueMap.putAll(K,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2385" source="org.apache.commons.collections4.map.MultiValueMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2386" source="org.apache.commons.collections4.map.MultiValueMapTest(java.lang.String)" target="org.apache.commons.collections4.AbstractObjectTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2387" source="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap(java.lang.Class)" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2388" source="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap(java.lang.Class)" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2389" source="org.apache.commons.collections4.map.MultiValueMapTest.makeObject()" target="org.apache.commons.collections4.map.MultiValueMapTest.makeEmptyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2390" source="org.apache.commons.collections4.map.MultiValueMapTest.makeEmptyMap()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2391" source="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2392" source="org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2393" source="org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue()" target="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2394" source="org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2395" source="org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key()" target="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2396" source="org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2397" source="org.apache.commons.collections4.map.MultiValueMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.map.MultiValueMapTest.makeEmptyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2398" source="org.apache.commons.collections4.map.MultiValueMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2399" source="org.apache.commons.collections4.map.MultiValueMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2400" source="org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.map.MultiValueMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2401" source="org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2402" source="org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2403" source="org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2404" source="org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2405" source="org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2406" source="org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection()" target="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2407" source="org.apache.commons.collections4.map.MultiValueMapTest.testIterator()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2408" source="org.apache.commons.collections4.map.MultiValueMapTest.testIterator()" target="org.apache.commons.collections4.map.MultiValueMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2409" source="org.apache.commons.collections4.map.MultiValueMapTest.testIterator()" target="org.apache.commons.collections4.map.MultiValueMap.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2410" source="org.apache.commons.collections4.map.MultiValueMapTest.testIterator()" target="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2411" source="org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2412" source="org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key()" target="org.apache.commons.collections4.map.MultiValueMap.iterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2413" source="org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2414" source="org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2415" source="org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue()" target="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2416" source="org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2417" source="org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator()" target="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2418" source="org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator()" target="org.apache.commons.collections4.map.MultiValueMap.iterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2419" source="org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2420" source="org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2421" source="org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals()" target="org.apache.commons.collections4.map.MultiValueMap.removeMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2422" source="org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2423" source="org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2424" source="org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2425" source="org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2426" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2427" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection()" target="org.apache.commons.collections4.map.MultiValueMap.putAll(K,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2428" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection()" target="org.apache.commons.collections4.map.MultiValueMap.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2429" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection()" target="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2430" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2431" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.MultiMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2432" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2433" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.map.MultiValueMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2434" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2435" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2436" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2437" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2438" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2439" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2440" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.map.MultiValueMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2441" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2442" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2443" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.map.MultiValueMap.getCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2444" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2445" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList()" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2446" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2447" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2448" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList()" target="org.apache.commons.collections4.map.MultiValueMap.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2449" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2450" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet()" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2451" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2452" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2453" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet()" target="org.apache.commons.collections4.map.MultiValueMap.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2454" source="org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2455" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2456" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator()" target="org.apache.commons.collections4.map.MultiValueMap.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2457" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2458" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2459" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2460" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator()" target="org.apache.commons.collections4.map.MultiValueMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2461" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2462" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator()" target="org.apache.commons.collections4.map.AbstractMapDecorator.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2463" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2464" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator()" target="org.apache.commons.collections4.map.MultiValueMap.iterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2465" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2466" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2467" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2468" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2469" source="org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem()" target="org.apache.commons.collections4.map.MultiValueMap.removeMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2470" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2471" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2472" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2473" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize()" target="org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2474" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize()" target="org.apache.commons.collections4.map.MultiValueMap.removeMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2475" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2476" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key()" target="org.apache.commons.collections4.map.MultiValueMap.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2477" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2478" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key()" target="org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2479" source="org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key()" target="org.apache.commons.collections4.map.MultiValueMap.removeMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2480" source="org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize()" target="org.apache.commons.collections4.map.MultiValueMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2481" source="org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2482" source="org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize()" target="org.apache.commons.collections4.map.MultiValueMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2483" source="org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize()" target="org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2484" source="org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize()" target="org.apache.commons.collections4.map.MultiValueMap.removeMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2485" source="org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2486" source="org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2487" source="org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2488" source="org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType()" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2489" source="org.apache.commons.collections4.map.MultiValueMapTest.testValues()" target="org.apache.commons.collections4.map.MultiValueMapTest.createTestMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2490" source="org.apache.commons.collections4.map.MultiValueMapTest.testValues()" target="org.apache.commons.collections4.map.MultiValueMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2491" source="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy()" target="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2492" source="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long,java.util.concurrent.TimeUnit)" target="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2493" source="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long,java.util.concurrent.TimeUnit)" target="org.apache.commons.collections4.map.PassiveExpiringMap.validateAndConvertToMillis(long,java.util.concurrent.TimeUnit)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2494" source="org.apache.commons.collections4.map.PassiveExpiringMap()" target="org.apache.commons.collections4.map.PassiveExpiringMap(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2495" source="org.apache.commons.collections4.map.PassiveExpiringMap(java.util.Map)" target="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2496" source="org.apache.commons.collections4.map.PassiveExpiringMap(long)" target="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2497" source="org.apache.commons.collections4.map.PassiveExpiringMap(long)" target="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2498" source="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.Map)" target="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2499" source="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.Map)" target="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2500" source="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.concurrent.TimeUnit)" target="org.apache.commons.collections4.map.PassiveExpiringMap(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2501" source="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.concurrent.TimeUnit)" target="org.apache.commons.collections4.map.PassiveExpiringMap.validateAndConvertToMillis(long,java.util.concurrent.TimeUnit)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2502" source="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.concurrent.TimeUnit,java.util.Map)" target="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2503" source="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.concurrent.TimeUnit,java.util.Map)" target="org.apache.commons.collections4.map.PassiveExpiringMap.validateAndConvertToMillis(long,java.util.concurrent.TimeUnit)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2504" source="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy)" target="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2505" source="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy,java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2506" source="org.apache.commons.collections4.map.PassiveExpiringMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.PassiveExpiringMap.removeIfExpired(java.lang.Object,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2507" source="org.apache.commons.collections4.map.PassiveExpiringMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.PassiveExpiringMap.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2508" source="org.apache.commons.collections4.map.PassiveExpiringMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2509" source="org.apache.commons.collections4.map.PassiveExpiringMap.put(K,V)" target="org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy.expirationTime(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2510" source="org.apache.commons.collections4.map.PassiveExpiringMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractMapDecorator.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2511" source="org.apache.commons.collections4.map.PassiveExpiringMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2512" source="org.apache.commons.collections4.map.PassiveExpiringMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.PassiveExpiringMap.removeIfExpired(java.lang.Object,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2513" source="org.apache.commons.collections4.map.PassiveExpiringMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.PassiveExpiringMap.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2514" source="org.apache.commons.collections4.map.PassiveExpiringMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2515" source="org.apache.commons.collections4.map.PassiveExpiringMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2516" source="org.apache.commons.collections4.map.PassiveExpiringMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.PassiveExpiringMap.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2517" source="org.apache.commons.collections4.map.PassiveExpiringMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2518" source="org.apache.commons.collections4.map.PassiveExpiringMap.isEmpty()" target="org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2519" source="org.apache.commons.collections4.map.PassiveExpiringMap.isEmpty()" target="org.apache.commons.collections4.map.PassiveExpiringMap.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2520" source="org.apache.commons.collections4.map.PassiveExpiringMap.isEmpty()" target="org.apache.commons.collections4.map.AbstractMapDecorator.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2521" source="org.apache.commons.collections4.map.PassiveExpiringMap.size()" target="org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2522" source="org.apache.commons.collections4.map.PassiveExpiringMap.size()" target="org.apache.commons.collections4.map.PassiveExpiringMap.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2523" source="org.apache.commons.collections4.map.PassiveExpiringMap.size()" target="org.apache.commons.collections4.map.AbstractMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2524" source="org.apache.commons.collections4.map.PassiveExpiringMap.values()" target="org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2525" source="org.apache.commons.collections4.map.PassiveExpiringMap.values()" target="org.apache.commons.collections4.map.PassiveExpiringMap.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2526" source="org.apache.commons.collections4.map.PassiveExpiringMap.values()" target="org.apache.commons.collections4.map.AbstractMapDecorator.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2527" source="org.apache.commons.collections4.map.PassiveExpiringMap.entrySet()" target="org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2528" source="org.apache.commons.collections4.map.PassiveExpiringMap.entrySet()" target="org.apache.commons.collections4.map.PassiveExpiringMap.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2529" source="org.apache.commons.collections4.map.PassiveExpiringMap.entrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2530" source="org.apache.commons.collections4.map.PassiveExpiringMap.keySet()" target="org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2531" source="org.apache.commons.collections4.map.PassiveExpiringMap.keySet()" target="org.apache.commons.collections4.map.PassiveExpiringMap.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2532" source="org.apache.commons.collections4.map.PassiveExpiringMap.keySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2533" source="org.apache.commons.collections4.map.PassiveExpiringMap.clear()" target="org.apache.commons.collections4.map.AbstractMapDecorator.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2534" source="org.apache.commons.collections4.map.PassiveExpiringMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.PassiveExpiringMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2535" source="org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long)" target="org.apache.commons.collections4.map.PassiveExpiringMap.isExpired(long,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2536" source="org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long)" target="org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2537" source="org.apache.commons.collections4.map.PassiveExpiringMap.removeIfExpired(java.lang.Object,long)" target="org.apache.commons.collections4.map.PassiveExpiringMap.isExpired(long,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2538" source="org.apache.commons.collections4.map.PassiveExpiringMap.removeIfExpired(java.lang.Object,long)" target="org.apache.commons.collections4.map.PassiveExpiringMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2539" source="org.apache.commons.collections4.map.PassiveExpiringMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2540" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeDecoratedTestMap()" target="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2541" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeDecoratedTestMap()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest$TestExpirationPolicy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2542" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeObject()" target="org.apache.commons.collections4.map.PassiveExpiringMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2543" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()" target="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2544" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest$TestExpirationPolicy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2545" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2546" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors()" target="org.apache.commons.collections4.map.PassiveExpiringMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2547" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors()" target="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2548" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors()" target="org.apache.commons.collections4.map.PassiveExpiringMap(long,java.util.concurrent.TimeUnit)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2549" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2550" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2551" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeDecoratedTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2552" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2553" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.validateExpiration(java.util.Map,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2554" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration()" target="org.apache.commons.collections4.map.PassiveExpiringMap(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2555" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration()" target="org.apache.commons.collections4.map.PassiveExpiringMap(org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2556" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration()" target="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2557" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration()" target="org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy(long,java.util.concurrent.TimeUnit)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2558" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2559" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2560" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2561" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2562" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues()" target="org.apache.commons.collections4.map.PassiveExpiringMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2563" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive()" target="org.apache.commons.collections4.map.PassiveExpiringMap(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2564" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive()" target="org.apache.commons.collections4.map.PassiveExpiringMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2565" source="org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive()" target="org.apache.commons.collections4.map.PassiveExpiringMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2566" source="org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2567" source="org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.map.PredicatedMap.validate(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2568" source="org.apache.commons.collections4.map.PredicatedMap.predicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2569" source="org.apache.commons.collections4.map.PredicatedMap.checkSetValue(V)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2570" source="org.apache.commons.collections4.map.PredicatedMap.put(K,V)" target="org.apache.commons.collections4.map.PredicatedMap.validate(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2571" source="org.apache.commons.collections4.map.PredicatedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.PredicatedMap.validate(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2572" source="org.apache.commons.collections4.map.PredicatedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2573" source="org.apache.commons.collections4.map.PredicatedMap.validate(K,V)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2574" source="org.apache.commons.collections4.map.PredicatedMapTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2575" source="org.apache.commons.collections4.map.PredicatedMapTest#testPredicate" target="org.apache.commons.collections4.map.PredicatedMapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2576" source="org.apache.commons.collections4.map.PredicatedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2577" source="org.apache.commons.collections4.map.PredicatedMapTest.decorateMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.map.PredicatedMap.predicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2578" source="org.apache.commons.collections4.map.PredicatedMapTest.makeObject()" target="org.apache.commons.collections4.map.PredicatedMapTest.decorateMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2579" source="org.apache.commons.collections4.map.PredicatedMapTest.makeTestMap()" target="org.apache.commons.collections4.map.PredicatedMapTest.decorateMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2580" source="org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet()" target="org.apache.commons.collections4.map.PredicatedMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2581" source="org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet()" target="org.apache.commons.collections4.map.PredicatedMapTest.decorateMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2582" source="org.apache.commons.collections4.map.PredicatedMapTest.testPut()" target="org.apache.commons.collections4.map.PredicatedMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2583" source="org.apache.commons.collections4.map.PredicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2584" source="org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.map.PredicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2585" source="org.apache.commons.collections4.map.PredicatedSortedMap.firstKey()" target="org.apache.commons.collections4.map.PredicatedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2586" source="org.apache.commons.collections4.map.PredicatedSortedMap.lastKey()" target="org.apache.commons.collections4.map.PredicatedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2587" source="org.apache.commons.collections4.map.PredicatedSortedMap.comparator()" target="org.apache.commons.collections4.map.PredicatedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2588" source="org.apache.commons.collections4.map.PredicatedSortedMap.headMap(K)" target="org.apache.commons.collections4.map.PredicatedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2589" source="org.apache.commons.collections4.map.PredicatedSortedMap.headMap(K)" target="org.apache.commons.collections4.map.PredicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2590" source="org.apache.commons.collections4.map.PredicatedSortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.PredicatedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2591" source="org.apache.commons.collections4.map.PredicatedSortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.PredicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2592" source="org.apache.commons.collections4.map.PredicatedSortedMap.tailMap(K)" target="org.apache.commons.collections4.map.PredicatedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2593" source="org.apache.commons.collections4.map.PredicatedSortedMap.tailMap(K)" target="org.apache.commons.collections4.map.PredicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2594" source="org.apache.commons.collections4.map.PredicatedSortedMapTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2595" source="org.apache.commons.collections4.map.PredicatedSortedMapTest#testPredicate" target="org.apache.commons.collections4.map.PredicatedSortedMapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2596" source="org.apache.commons.collections4.map.PredicatedSortedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2597" source="org.apache.commons.collections4.map.PredicatedSortedMapTest.decorateMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2598" source="org.apache.commons.collections4.map.PredicatedSortedMapTest.makeObject()" target="org.apache.commons.collections4.map.PredicatedSortedMapTest.decorateMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2599" source="org.apache.commons.collections4.map.PredicatedSortedMapTest.makeTestMap()" target="org.apache.commons.collections4.map.PredicatedSortedMapTest.decorateMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2600" source="org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet()" target="org.apache.commons.collections4.map.PredicatedSortedMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2601" source="org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet()" target="org.apache.commons.collections4.map.PredicatedSortedMapTest.decorateMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2602" source="org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut()" target="org.apache.commons.collections4.map.PredicatedSortedMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2603" source="org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder()" target="org.apache.commons.collections4.map.PredicatedSortedMapTest.makeTestMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2604" source="org.apache.commons.collections4.map.ReferenceIdentityMap()" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2605" source="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2606" source="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,boolean)" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2607" source="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float)" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2608" source="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2609" source="org.apache.commons.collections4.map.ReferenceIdentityMap.isEqualKey(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.map.AbstractReferenceMap.isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2610" source="org.apache.commons.collections4.map.ReferenceIdentityMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractReferenceMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2611" source="org.apache.commons.collections4.map.ReferenceIdentityMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.AbstractReferenceMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2612" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2613" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest.buildRefMap()" target="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2614" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest.makeConfirmedMap()" target="org.apache.commons.collections4.map.IdentityMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2615" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2616" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest.makeObject()" target="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2617" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics()" target="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2618" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry()" target="org.apache.commons.collections4.map.ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2619" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2620" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2621" source="org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues()" target="org.apache.commons.collections4.map.ReferenceIdentityMapTest.buildRefMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2622" source="org.apache.commons.collections4.map.ReferenceMap()" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2623" source="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2624" source="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,boolean)" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2625" source="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float)" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2626" source="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)" target="org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,int,float,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2627" source="org.apache.commons.collections4.map.ReferenceMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.map.AbstractReferenceMap.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2628" source="org.apache.commons.collections4.map.ReferenceMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.map.AbstractReferenceMap.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2629" source="org.apache.commons.collections4.map.ReferenceMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2630" source="org.apache.commons.collections4.map.ReferenceMapTest.buildRefMap()" target="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2631" source="org.apache.commons.collections4.map.ReferenceMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2632" source="org.apache.commons.collections4.map.ReferenceMapTest.makeObject()" target="org.apache.commons.collections4.map.ReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2633" source="org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2634" source="org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues()" target="org.apache.commons.collections4.map.ReferenceMapTest.buildRefMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2635" source="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.getKey()" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2636" source="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.next()" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2637" source="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.previous()" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2638" source="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.getValue()" target="org.apache.commons.collections4.map.SingletonMap.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2639" source="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.setValue(V)" target="org.apache.commons.collections4.map.SingletonMap.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2640" source="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.toString()" target="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2641" source="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.toString()" target="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2642" source="org.apache.commons.collections4.map.SingletonMap$SingletonValues.contains(java.lang.Object)" target="org.apache.commons.collections4.map.SingletonMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2643" source="org.apache.commons.collections4.map.SingletonMap$SingletonValues.iterator()" target="org.apache.commons.collections4.iterators.SingletonIterator(E,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2644" source="org.apache.commons.collections4.map.SingletonMap$SingletonValues.iterator()" target="org.apache.commons.collections4.map.SingletonMap.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2645" source="org.apache.commons.collections4.map.SingletonMap(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.KeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2646" source="org.apache.commons.collections4.map.SingletonMap(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.KeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2647" source="org.apache.commons.collections4.map.SingletonMap.firstKey()" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2648" source="org.apache.commons.collections4.map.SingletonMap.lastKey()" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2649" source="org.apache.commons.collections4.map.SingletonMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.SingletonMap.isEqualKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2650" source="org.apache.commons.collections4.map.SingletonMap.put(K,V)" target="org.apache.commons.collections4.map.SingletonMap.isEqualKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2651" source="org.apache.commons.collections4.map.SingletonMap.put(K,V)" target="org.apache.commons.collections4.map.SingletonMap.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2652" source="org.apache.commons.collections4.map.SingletonMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.SingletonMap.isEqualKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2653" source="org.apache.commons.collections4.map.SingletonMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.map.SingletonMap.isEqualValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2654" source="org.apache.commons.collections4.map.SingletonMap.equals(java.lang.Object)" target="org.apache.commons.collections4.map.SingletonMap.isEqualKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2655" source="org.apache.commons.collections4.map.SingletonMap.equals(java.lang.Object)" target="org.apache.commons.collections4.map.SingletonMap.isEqualValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2656" source="org.apache.commons.collections4.map.SingletonMap.isEqualKey(java.lang.Object)" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2657" source="org.apache.commons.collections4.map.SingletonMap.isEqualValue(java.lang.Object)" target="org.apache.commons.collections4.map.SingletonMap.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2658" source="org.apache.commons.collections4.map.SingletonMap.hashCode()" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2659" source="org.apache.commons.collections4.map.SingletonMap.hashCode()" target="org.apache.commons.collections4.map.SingletonMap.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2660" source="org.apache.commons.collections4.map.SingletonMap.toString()" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2661" source="org.apache.commons.collections4.map.SingletonMap.toString()" target="org.apache.commons.collections4.map.SingletonMap.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2662" source="org.apache.commons.collections4.map.SingletonMap.values()" target="org.apache.commons.collections4.map.SingletonMap$SingletonValues(org.apache.commons.collections4.map.SingletonMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2663" source="org.apache.commons.collections4.map.SingletonMap.entrySet()" target="org.apache.commons.collections4.keyvalue.TiedMapEntry(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2664" source="org.apache.commons.collections4.map.SingletonMap.entrySet()" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2665" source="org.apache.commons.collections4.map.SingletonMap.mapIterator()" target="org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator(org.apache.commons.collections4.map.SingletonMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2666" source="org.apache.commons.collections4.map.SingletonMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.SingletonMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2667" source="org.apache.commons.collections4.map.SingletonMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractOrderedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2668" source="org.apache.commons.collections4.map.SingletonMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2669" source="org.apache.commons.collections4.map.SingletonMapTest.makeObject()" target="org.apache.commons.collections4.map.UnmodifiableOrderedMap.unmodifiableOrderedMap(org.apache.commons.collections4.OrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2670" source="org.apache.commons.collections4.map.SingletonMapTest.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2671" source="org.apache.commons.collections4.map.SingletonMapTest.makeFullMap()" target="org.apache.commons.collections4.map.SingletonMap(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2672" source="org.apache.commons.collections4.map.SingletonMapTest.testBoundedMap()" target="org.apache.commons.collections4.map.SingletonMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2673" source="org.apache.commons.collections4.map.SingletonMapTest.testBoundedMap()" target="org.apache.commons.collections4.map.SingletonMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2674" source="org.apache.commons.collections4.map.SingletonMapTest.testBoundedMap()" target="org.apache.commons.collections4.map.SingletonMap.isFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2675" source="org.apache.commons.collections4.map.SingletonMapTest.testBoundedMap()" target="org.apache.commons.collections4.map.SingletonMap.maxSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2676" source="org.apache.commons.collections4.map.SingletonMapTest.testClone()" target="org.apache.commons.collections4.map.SingletonMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2677" source="org.apache.commons.collections4.map.SingletonMapTest.testClone()" target="org.apache.commons.collections4.map.SingletonMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2678" source="org.apache.commons.collections4.map.SingletonMapTest.testClone()" target="org.apache.commons.collections4.map.SingletonMap.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2679" source="org.apache.commons.collections4.map.SingletonMapTest.testClone()" target="org.apache.commons.collections4.map.SingletonMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2680" source="org.apache.commons.collections4.map.SingletonMapTest.testClone()" target="org.apache.commons.collections4.map.SingletonMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2681" source="org.apache.commons.collections4.map.SingletonMapTest.testKeyValue()" target="org.apache.commons.collections4.map.SingletonMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2682" source="org.apache.commons.collections4.map.SingletonMapTest.testKeyValue()" target="org.apache.commons.collections4.map.SingletonMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2683" source="org.apache.commons.collections4.map.SingletonMapTest.testKeyValue()" target="org.apache.commons.collections4.map.SingletonMap.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2684" source="org.apache.commons.collections4.map.SingletonMapTest.testKeyValue()" target="org.apache.commons.collections4.map.SingletonMap.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2685" source="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.nextEntry()" target="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2686" source="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.remove()" target="org.apache.commons.collections4.map.StaticBucketMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2687" source="org.apache.commons.collections4.map.StaticBucketMap$EntryIterator()" target="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2688" source="org.apache.commons.collections4.map.StaticBucketMap$EntryIterator.next()" target="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2689" source="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.contains(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.getHash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2690" source="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.contains(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap$Node.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2691" source="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.getHash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2692" source="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap$Node.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2693" source="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2694" source="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2695" source="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.size()" target="org.apache.commons.collections4.map.StaticBucketMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2696" source="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.iterator()" target="org.apache.commons.collections4.map.StaticBucketMap$EntryIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2697" source="org.apache.commons.collections4.map.StaticBucketMap$EntrySet.clear()" target="org.apache.commons.collections4.map.StaticBucketMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2698" source="org.apache.commons.collections4.map.StaticBucketMap$KeyIterator()" target="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2699" source="org.apache.commons.collections4.map.StaticBucketMap$KeyIterator.next()" target="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2700" source="org.apache.commons.collections4.map.StaticBucketMap$KeySet.contains(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2701" source="org.apache.commons.collections4.map.StaticBucketMap$KeySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.getHash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2702" source="org.apache.commons.collections4.map.StaticBucketMap$KeySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2703" source="org.apache.commons.collections4.map.StaticBucketMap$KeySet.remove(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2704" source="org.apache.commons.collections4.map.StaticBucketMap$KeySet.size()" target="org.apache.commons.collections4.map.StaticBucketMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2705" source="org.apache.commons.collections4.map.StaticBucketMap$KeySet.iterator()" target="org.apache.commons.collections4.map.StaticBucketMap$KeyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2706" source="org.apache.commons.collections4.map.StaticBucketMap$KeySet.clear()" target="org.apache.commons.collections4.map.StaticBucketMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2707" source="org.apache.commons.collections4.map.StaticBucketMap$ValueIterator()" target="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2708" source="org.apache.commons.collections4.map.StaticBucketMap$ValueIterator.next()" target="org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2709" source="org.apache.commons.collections4.map.StaticBucketMap$Values.size()" target="org.apache.commons.collections4.map.StaticBucketMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2710" source="org.apache.commons.collections4.map.StaticBucketMap$Values.iterator()" target="org.apache.commons.collections4.map.StaticBucketMap$ValueIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2711" source="org.apache.commons.collections4.map.StaticBucketMap$Values.clear()" target="org.apache.commons.collections4.map.StaticBucketMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2712" source="org.apache.commons.collections4.map.StaticBucketMap()" target="org.apache.commons.collections4.map.StaticBucketMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2713" source="org.apache.commons.collections4.map.StaticBucketMap(int)" target="org.apache.commons.collections4.map.AbstractIterableMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2714" source="org.apache.commons.collections4.map.StaticBucketMap(int)" target="org.apache.commons.collections4.map.StaticBucketMap$Lock()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2715" source="org.apache.commons.collections4.map.StaticBucketMap.get(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.getHash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2716" source="org.apache.commons.collections4.map.StaticBucketMap.put(K,V)" target="org.apache.commons.collections4.map.StaticBucketMap.getHash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2717" source="org.apache.commons.collections4.map.StaticBucketMap.put(K,V)" target="org.apache.commons.collections4.map.StaticBucketMap$Node()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2718" source="org.apache.commons.collections4.map.StaticBucketMap.remove(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.getHash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2719" source="org.apache.commons.collections4.map.StaticBucketMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.getHash(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2720" source="org.apache.commons.collections4.map.StaticBucketMap.equals(java.lang.Object)" target="org.apache.commons.collections4.map.StaticBucketMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2721" source="org.apache.commons.collections4.map.StaticBucketMap.isEmpty()" target="org.apache.commons.collections4.map.StaticBucketMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2722" source="org.apache.commons.collections4.map.StaticBucketMap.hashCode()" target="org.apache.commons.collections4.map.StaticBucketMap$Node.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2723" source="org.apache.commons.collections4.map.StaticBucketMap.values()" target="org.apache.commons.collections4.map.StaticBucketMap$Values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2724" source="org.apache.commons.collections4.map.StaticBucketMap.entrySet()" target="org.apache.commons.collections4.map.StaticBucketMap$EntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2725" source="org.apache.commons.collections4.map.StaticBucketMap.keySet()" target="org.apache.commons.collections4.map.StaticBucketMap$KeySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2726" source="org.apache.commons.collections4.map.StaticBucketMap.atomic(java.lang.Runnable)" target="org.apache.commons.collections4.map.StaticBucketMap.atomic(java.lang.Runnable,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2727" source="org.apache.commons.collections4.map.StaticBucketMap.atomic(java.lang.Runnable,int)" target="org.apache.commons.collections4.map.StaticBucketMap.atomic(java.lang.Runnable,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2728" source="org.apache.commons.collections4.map.StaticBucketMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.StaticBucketMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2729" source="org.apache.commons.collections4.map.StaticBucketMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2730" source="org.apache.commons.collections4.map.StaticBucketMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2731" source="org.apache.commons.collections4.map.StaticBucketMapTest.makeObject()" target="org.apache.commons.collections4.map.StaticBucketMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2732" source="org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly()" target="org.apache.commons.collections4.map.StaticBucketMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2733" source="org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly()" target="org.apache.commons.collections4.map.StaticBucketMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2734" source="org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly()" target="org.apache.commons.collections4.map.StaticBucketMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2735" source="org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly()" target="org.apache.commons.collections4.map.StaticBucketMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2736" source="org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly()" target="org.apache.commons.collections4.map.StaticBucketMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2737" source="org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly()" target="org.apache.commons.collections4.map.StaticBucketMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2738" source="org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly()" target="org.apache.commons.collections4.map.StaticBucketMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2739" source="org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly()" target="org.apache.commons.collections4.map.StaticBucketMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2740" source="org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly()" target="org.apache.commons.collections4.map.StaticBucketMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2741" source="org.apache.commons.collections4.map.TransformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2742" source="org.apache.commons.collections4.map.TransformedMap.transformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.TransformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2743" source="org.apache.commons.collections4.map.TransformedMap.transformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.TransformedMap.transformMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2744" source="org.apache.commons.collections4.map.TransformedMap.transformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.AbstractMapDecorator.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2745" source="org.apache.commons.collections4.map.TransformedMap.transformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2746" source="org.apache.commons.collections4.map.TransformedMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.TransformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2747" source="org.apache.commons.collections4.map.TransformedMap.transformKey(K)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2748" source="org.apache.commons.collections4.map.TransformedMap.checkSetValue(V)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2749" source="org.apache.commons.collections4.map.TransformedMap.put(K,V)" target="org.apache.commons.collections4.map.TransformedMap.transformKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2750" source="org.apache.commons.collections4.map.TransformedMap.put(K,V)" target="org.apache.commons.collections4.map.TransformedMap.transformValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2751" source="org.apache.commons.collections4.map.TransformedMap.put(K,V)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2752" source="org.apache.commons.collections4.map.TransformedMap.transformValue(V)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2753" source="org.apache.commons.collections4.map.TransformedMap.transformMap(java.util.Map)" target="org.apache.commons.collections4.map.LinkedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2754" source="org.apache.commons.collections4.map.TransformedMap.transformMap(java.util.Map)" target="org.apache.commons.collections4.map.TransformedMap.transformKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2755" source="org.apache.commons.collections4.map.TransformedMap.transformMap(java.util.Map)" target="org.apache.commons.collections4.map.TransformedMap.transformValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2756" source="org.apache.commons.collections4.map.TransformedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.TransformedMap.transformMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2757" source="org.apache.commons.collections4.map.TransformedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2758" source="org.apache.commons.collections4.map.TransformedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2759" source="org.apache.commons.collections4.map.TransformedMapTest.makeObject()" target="org.apache.commons.collections4.map.TransformedMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2760" source="org.apache.commons.collections4.map.TransformedMapTest.makeObject()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2761" source="org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate()" target="org.apache.commons.collections4.map.TransformedMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2762" source="org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform()" target="org.apache.commons.collections4.map.TransformedMap.transformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2763" source="org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap()" target="org.apache.commons.collections4.map.TransformedMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2764" source="org.apache.commons.collections4.map.TransformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.TransformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2765" source="org.apache.commons.collections4.map.TransformedSortedMap.transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.TransformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2766" source="org.apache.commons.collections4.map.TransformedSortedMap.transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.TransformedMap.transformMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2767" source="org.apache.commons.collections4.map.TransformedSortedMap.transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.AbstractMapDecorator.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2768" source="org.apache.commons.collections4.map.TransformedSortedMap.transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2769" source="org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.TransformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2770" source="org.apache.commons.collections4.map.TransformedSortedMap.firstKey()" target="org.apache.commons.collections4.map.TransformedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2771" source="org.apache.commons.collections4.map.TransformedSortedMap.lastKey()" target="org.apache.commons.collections4.map.TransformedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2772" source="org.apache.commons.collections4.map.TransformedSortedMap.comparator()" target="org.apache.commons.collections4.map.TransformedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2773" source="org.apache.commons.collections4.map.TransformedSortedMap.headMap(K)" target="org.apache.commons.collections4.map.TransformedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2774" source="org.apache.commons.collections4.map.TransformedSortedMap.headMap(K)" target="org.apache.commons.collections4.map.TransformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2775" source="org.apache.commons.collections4.map.TransformedSortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.TransformedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2776" source="org.apache.commons.collections4.map.TransformedSortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.TransformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2777" source="org.apache.commons.collections4.map.TransformedSortedMap.tailMap(K)" target="org.apache.commons.collections4.map.TransformedSortedMap.getSortedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2778" source="org.apache.commons.collections4.map.TransformedSortedMap.tailMap(K)" target="org.apache.commons.collections4.map.TransformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2779" source="org.apache.commons.collections4.map.TransformedSortedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2780" source="org.apache.commons.collections4.map.TransformedSortedMapTest.makeObject()" target="org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2781" source="org.apache.commons.collections4.map.TransformedSortedMapTest.makeObject()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2782" source="org.apache.commons.collections4.map.TransformedSortedMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2783" source="org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate()" target="org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2784" source="org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform()" target="org.apache.commons.collections4.map.TransformedSortedMap.transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2785" source="org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap()" target="org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2786" source="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2787" source="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2788" source="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.next()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2789" source="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.next()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2790" source="org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)" target="org.apache.commons.collections4.set.AbstractSetDecorator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2791" source="org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set)" target="org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2792" source="org.apache.commons.collections4.map.UnmodifiableEntrySet.toArray(T[])" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2793" source="org.apache.commons.collections4.map.UnmodifiableEntrySet.toArray(T[])" target="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2794" source="org.apache.commons.collections4.map.UnmodifiableEntrySet.toArray()" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2795" source="org.apache.commons.collections4.map.UnmodifiableEntrySet.toArray()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2796" source="org.apache.commons.collections4.map.UnmodifiableEntrySet.iterator()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2797" source="org.apache.commons.collections4.map.UnmodifiableEntrySet.iterator()" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2798" source="org.apache.commons.collections4.map.UnmodifiableMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2799" source="org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(java.util.Map)" target="org.apache.commons.collections4.map.UnmodifiableMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2800" source="org.apache.commons.collections4.map.UnmodifiableMap.values()" target="org.apache.commons.collections4.map.AbstractMapDecorator.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2801" source="org.apache.commons.collections4.map.UnmodifiableMap.values()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2802" source="org.apache.commons.collections4.map.UnmodifiableMap.entrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2803" source="org.apache.commons.collections4.map.UnmodifiableMap.entrySet()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2804" source="org.apache.commons.collections4.map.UnmodifiableMap.keySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2805" source="org.apache.commons.collections4.map.UnmodifiableMap.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2806" source="org.apache.commons.collections4.map.UnmodifiableMap.mapIterator()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2807" source="org.apache.commons.collections4.map.UnmodifiableMap.mapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2808" source="org.apache.commons.collections4.map.UnmodifiableMap.mapIterator()" target="org.apache.commons.collections4.iterators.EntrySetMapIterator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2809" source="org.apache.commons.collections4.map.UnmodifiableMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2810" source="org.apache.commons.collections4.map.UnmodifiableMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2811" source="org.apache.commons.collections4.map.UnmodifiableMapTest.makeFullMap()" target="org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2812" source="org.apache.commons.collections4.map.UnmodifiableMapTest.makeObject()" target="org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2813" source="org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory()" target="org.apache.commons.collections4.map.UnmodifiableMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2814" source="org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory()" target="org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2815" source="org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable()" target="org.apache.commons.collections4.map.UnmodifiableMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2816" source="org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable()" target="org.apache.commons.collections4.map.UnmodifiableMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2817" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap(org.apache.commons.collections4.OrderedMap)" target="org.apache.commons.collections4.map.AbstractOrderedMapDecorator(org.apache.commons.collections4.OrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2818" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.unmodifiableOrderedMap(org.apache.commons.collections4.OrderedMap)" target="org.apache.commons.collections4.map.UnmodifiableOrderedMap(org.apache.commons.collections4.OrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2819" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.values()" target="org.apache.commons.collections4.map.AbstractMapDecorator.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2820" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.values()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2821" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.entrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2822" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.entrySet()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2823" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.keySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2824" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2825" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.mapIterator()" target="org.apache.commons.collections4.map.AbstractOrderedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2826" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.mapIterator()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2827" source="org.apache.commons.collections4.map.UnmodifiableOrderedMap.mapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2828" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractOrderedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2829" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2830" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2831" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.UnmodifiableOrderedMap.unmodifiableOrderedMap(org.apache.commons.collections4.OrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2832" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeObject()" target="org.apache.commons.collections4.map.UnmodifiableOrderedMap.unmodifiableOrderedMap(org.apache.commons.collections4.OrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2833" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeObject()" target="org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2834" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory()" target="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2835" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory()" target="org.apache.commons.collections4.map.UnmodifiableOrderedMap.unmodifiableOrderedMap(org.apache.commons.collections4.OrderedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2836" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable()" target="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2837" source="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable()" target="org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2838" source="org.apache.commons.collections4.map.UnmodifiableSortedMap(java.util.SortedMap)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2839" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)" target="org.apache.commons.collections4.map.UnmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2840" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.firstKey()" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2841" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.lastKey()" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2842" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.values()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2843" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.values()" target="org.apache.commons.collections4.map.AbstractMapDecorator.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2844" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.comparator()" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2845" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.entrySet()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2846" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.entrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2847" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2848" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.keySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2849" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.headMap(K)" target="org.apache.commons.collections4.map.UnmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2850" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.headMap(K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2851" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.UnmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2852" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.subMap(K,K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2853" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.tailMap(K)" target="org.apache.commons.collections4.map.UnmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2854" source="org.apache.commons.collections4.map.UnmodifiableSortedMap.tailMap(K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2855" source="org.apache.commons.collections4.map.UnmodifiableSortedMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2856" source="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2857" source="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.makeFullMap()" target="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2858" source="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.makeObject()" target="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2859" source="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory()" target="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2860" source="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory()" target="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2861" source="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable()" target="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2862" source="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable()" target="org.apache.commons.collections4.map.UnmodifiableSortedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2863" source="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest(T)" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2864" source="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest.singleElementArrayToGetInstance()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.createMockPredicate(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2865" source="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest.singleElementArrayToGetInstance()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2866" source="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest.singleValues()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.lang.Boolean[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2867" source="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest.singleValues()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2868" source="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest.singletonCollectionToGetInstance()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.createMockPredicate(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2869" source="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest.singletonCollectionToGetInstance()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2870" source="org.apache.commons.collections4.functors.AbstractClosureTest.closureSanityTests()" target="org.apache.commons.collections4.functors.AbstractClosureTest.generateClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2871" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest(T)" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2872" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.lang.Boolean[])" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.createMockPredicate(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2873" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.lang.Boolean[])" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2874" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullArrayToGetInstance()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2875" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullCollectionToGetInstance()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2876" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullElementInArrayToGetInstance()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2877" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullElementsInArrayToGetInstance()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2878" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.nullElementsInCollectionToGetInstance()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2879" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.singleElementArrayToGetInstance()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.createMockPredicate(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2880" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.singleElementArrayToGetInstance()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2881" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.singletonCollectionToGetInstance()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.createMockPredicate(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2882" source="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.singletonCollectionToGetInstance()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2883" source="org.apache.commons.collections4.functors.AbstractMockPredicateTest.createMockPredicate(java.lang.Boolean)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2884" source="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2885" source="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2886" source="org.apache.commons.collections4.functors.AbstractPredicateTest.predicateSanityTests()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.generatePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2887" source="org.apache.commons.collections4.functors.AbstractQuantifierPredicate.getPredicates()" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2888" source="org.apache.commons.collections4.functors.AllPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2889" source="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2890" source="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2891" source="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.AllPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2892" source="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2893" source="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2894" source="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2895" source="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.AllPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2896" source="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2897" source="org.apache.commons.collections4.functors.AllPredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2898" source="org.apache.commons.collections4.functors.AllPredicateTest()" target="org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2899" source="org.apache.commons.collections4.functors.AllPredicateTest.getPredicateInstance(java.util.Collection)" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2900" source="org.apache.commons.collections4.functors.AllPredicateTest.getPredicateInstance(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2901" source="org.apache.commons.collections4.functors.AllPredicateTest.allTrue()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.lang.Boolean[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2902" source="org.apache.commons.collections4.functors.AllPredicateTest.allTrue()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2903" source="org.apache.commons.collections4.functors.AllPredicateTest.allTrue()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.getTestValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2904" source="org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance()" target="org.apache.commons.collections4.functors.AllPredicateTest.getPredicateInstance(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2905" source="org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2906" source="org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance()" target="org.apache.commons.collections4.functors.AllPredicateTest.getPredicateInstance(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2907" source="org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2908" source="org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.getTestValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2909" source="org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.createMockPredicate(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2910" source="org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2911" source="org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2912" source="org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.getTestValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2913" source="org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.createMockPredicate(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2914" source="org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2915" source="org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2916" source="org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.getTestValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2917" source="org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined()" target="org.apache.commons.collections4.functors.AbstractCompositePredicateTest.getPredicateInstance(java.lang.Boolean[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2918" source="org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2919" source="org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined()" target="org.apache.commons.collections4.functors.AbstractMockPredicateTest.getTestValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2920" source="org.apache.commons.collections4.functors.AndPredicate.andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.AndPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2921" source="org.apache.commons.collections4.functors.AndPredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2922" source="org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2923" source="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2924" source="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2925" source="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2926" source="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2927" source="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2928" source="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2929" source="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2930" source="org.apache.commons.collections4.functors.AnyPredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2931" source="org.apache.commons.collections4.functors.CatchAndRethrowClosure.execute(E)" target="org.apache.commons.collections4.functors.CatchAndRethrowClosure.executeAndThrow(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2932" source="org.apache.commons.collections4.functors.CatchAndRethrowClosure.execute(E)" target="org.apache.commons.collections4.FunctorException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2933" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest()" target="org.apache.commons.collections4.functors.AbstractClosureTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2934" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateNoExceptionClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2935" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$1()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2936" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateIOExceptionClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2937" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateIOExceptionClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2938" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$3()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2939" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateNoExceptionClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2940" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateNoExceptionClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2941" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$2()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2942" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateNullPointerExceptionClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2943" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateNullPointerExceptionClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2944" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateNoExceptionClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2945" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2946" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateIOExceptionClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2947" source="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure()" target="org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.generateNullPointerExceptionClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2948" source="org.apache.commons.collections4.functors.ChainedClosure(boolean,org.apache.commons.collections4.Closure[])" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2949" source="org.apache.commons.collections4.functors.ChainedClosure(org.apache.commons.collections4.Closure[])" target="org.apache.commons.collections4.functors.ChainedClosure(boolean,org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2950" source="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(java.util.Collection)" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2951" source="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(java.util.Collection)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2952" source="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(java.util.Collection)" target="org.apache.commons.collections4.functors.ChainedClosure(boolean,org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2953" source="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(org.apache.commons.collections4.Closure[])" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2954" source="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(org.apache.commons.collections4.Closure[])" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2955" source="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(org.apache.commons.collections4.Closure[])" target="org.apache.commons.collections4.functors.ChainedClosure(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2956" source="org.apache.commons.collections4.functors.ChainedClosure.getClosures()" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2957" source="org.apache.commons.collections4.functors.ChainedClosure.execute(E)" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2958" source="org.apache.commons.collections4.functors.ChainedTransformer(boolean,org.apache.commons.collections4.Transformer[])" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2959" source="org.apache.commons.collections4.functors.ChainedTransformer(org.apache.commons.collections4.Transformer[])" target="org.apache.commons.collections4.functors.ChainedTransformer(boolean,org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2960" source="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(java.util.Collection)" target="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2961" source="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(java.util.Collection)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2962" source="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(java.util.Collection)" target="org.apache.commons.collections4.functors.ChainedTransformer(boolean,org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2963" source="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(org.apache.commons.collections4.Transformer[])" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2964" source="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(org.apache.commons.collections4.Transformer[])" target="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2965" source="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(org.apache.commons.collections4.Transformer[])" target="org.apache.commons.collections4.functors.ChainedTransformer(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2966" source="org.apache.commons.collections4.functors.ChainedTransformer.transform(T)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2967" source="org.apache.commons.collections4.functors.ChainedTransformer.getTransformers()" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2968" source="org.apache.commons.collections4.functors.CloneTransformer#INSTANCE" target="org.apache.commons.collections4.functors.CloneTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2969" source="org.apache.commons.collections4.functors.CloneTransformer.transform(T)" target="org.apache.commons.collections4.functors.PrototypeFactory.prototypeFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2970" source="org.apache.commons.collections4.functors.CloneTransformer.transform(T)" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2971" source="org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.ClosureTransformer(org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2972" source="org.apache.commons.collections4.functors.ClosureTransformer.transform(T)" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2973" source="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#EQUAL" target="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2974" source="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#GREATER" target="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2975" source="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#LESS" target="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2976" source="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#GREATER_OR_EQUAL" target="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2977" source="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion#LESS_OR_EQUAL" target="org.apache.commons.collections4.functors.ComparatorPredicate$Criterion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2978" source="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator)" target="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2979" source="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)" target="org.apache.commons.collections4.functors.ComparatorPredicate(T,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2980" source="org.apache.commons.collections4.functors.ComparatorPredicateTest()" target="org.apache.commons.collections4.functors.AbstractPredicateTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2981" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.generatePredicate()" target="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2982" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.generatePredicate()" target="org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2983" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals()" target="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2984" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals()" target="org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2985" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2986" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2987" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater()" target="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2988" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater()" target="org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2989" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2990" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2991" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual()" target="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2992" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual()" target="org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2993" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2994" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2995" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess()" target="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2996" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess()" target="org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2997" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2998" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2999" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual()" target="org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3000" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual()" target="org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3001" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3002" source="org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3003" source="org.apache.commons.collections4.functors.ConstantFactory#NULL_INSTANCE" target="org.apache.commons.collections4.functors.ConstantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3004" source="org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)" target="org.apache.commons.collections4.functors.ConstantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3005" source="org.apache.commons.collections4.functors.ConstantTransformer#NULL_INSTANCE" target="org.apache.commons.collections4.functors.ConstantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3006" source="org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(O)" target="org.apache.commons.collections4.functors.ConstantTransformer.nullTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3007" source="org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(O)" target="org.apache.commons.collections4.functors.ConstantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3008" source="org.apache.commons.collections4.functors.ConstantTransformer.equals(java.lang.Object)" target="org.apache.commons.collections4.functors.ConstantTransformer.getConstant()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3009" source="org.apache.commons.collections4.functors.ConstantTransformer.hashCode()" target="org.apache.commons.collections4.functors.ConstantTransformer.getConstant()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3010" source="org.apache.commons.collections4.functors.DefaultEquator#INSTANCE" target="org.apache.commons.collections4.functors.DefaultEquator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3011" source="org.apache.commons.collections4.functors.EqualPredicate(T)" target="org.apache.commons.collections4.functors.EqualPredicate(T,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3012" source="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)" target="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3013" source="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)" target="org.apache.commons.collections4.functors.EqualPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3014" source="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3015" source="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.functors.EqualPredicate(T,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3016" source="org.apache.commons.collections4.functors.EqualPredicate.evaluate(T)" target="org.apache.commons.collections4.Equator.equate(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3017" source="org.apache.commons.collections4.functors.EqualPredicateTest#FALSE_OBJECT" target="org.apache.commons.collections4.functors.EqualPredicateTest$EqualsTestObject(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3018" source="org.apache.commons.collections4.functors.EqualPredicateTest#TRUE_OBJECT" target="org.apache.commons.collections4.functors.EqualPredicateTest$EqualsTestObject(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3019" source="org.apache.commons.collections4.functors.EqualPredicateTest()" target="org.apache.commons.collections4.functors.AbstractPredicateTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3020" source="org.apache.commons.collections4.functors.EqualPredicateTest.generatePredicate()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3021" source="org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3022" source="org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3023" source="org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3024" source="org.apache.commons.collections4.functors.EqualPredicateTest.testNullArgumentEqualsNullPredicate()" target="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3025" source="org.apache.commons.collections4.functors.EqualPredicateTest.testNullArgumentEqualsNullPredicate()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3026" source="org.apache.commons.collections4.functors.EqualPredicateTest.testPredicateTypeCanBeSuperClassOfObject()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3027" source="org.apache.commons.collections4.functors.EqualPredicateTest.testPredicateTypeCanBeSuperClassOfObject()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3028" source="org.apache.commons.collections4.functors.ExceptionClosure#INSTANCE" target="org.apache.commons.collections4.functors.ExceptionClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3029" source="org.apache.commons.collections4.functors.ExceptionClosure.execute(E)" target="org.apache.commons.collections4.FunctorException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3030" source="org.apache.commons.collections4.functors.ExceptionFactory#INSTANCE" target="org.apache.commons.collections4.functors.ExceptionFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3031" source="org.apache.commons.collections4.functors.ExceptionFactory.create()" target="org.apache.commons.collections4.FunctorException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3032" source="org.apache.commons.collections4.functors.ExceptionPredicate#INSTANCE" target="org.apache.commons.collections4.functors.ExceptionPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3033" source="org.apache.commons.collections4.functors.ExceptionPredicate.evaluate(T)" target="org.apache.commons.collections4.FunctorException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3034" source="org.apache.commons.collections4.functors.ExceptionTransformer#INSTANCE" target="org.apache.commons.collections4.functors.ExceptionTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3035" source="org.apache.commons.collections4.functors.ExceptionTransformer.transform(I)" target="org.apache.commons.collections4.FunctorException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3036" source="org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.functors.FactoryTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3037" source="org.apache.commons.collections4.functors.FactoryTransformer.transform(I)" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3038" source="org.apache.commons.collections4.functors.FalsePredicate#INSTANCE" target="org.apache.commons.collections4.functors.FalsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3039" source="org.apache.commons.collections4.functors.ForClosure.forClosure(int,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3040" source="org.apache.commons.collections4.functors.ForClosure.forClosure(int,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.ForClosure(int,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3041" source="org.apache.commons.collections4.functors.ForClosure.execute(E)" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3042" source="org.apache.commons.collections4.functors.IdentityPredicate.identityPredicate(T)" target="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3043" source="org.apache.commons.collections4.functors.IdentityPredicate.identityPredicate(T)" target="org.apache.commons.collections4.functors.IdentityPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3044" source="org.apache.commons.collections4.functors.IfClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.IfClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3045" source="org.apache.commons.collections4.functors.IfClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3046" source="org.apache.commons.collections4.functors.IfClosure.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.IfClosure.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3047" source="org.apache.commons.collections4.functors.IfClosure.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3048" source="org.apache.commons.collections4.functors.IfClosure.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.IfClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3049" source="org.apache.commons.collections4.functors.IfClosure.execute(E)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3050" source="org.apache.commons.collections4.functors.IfClosure.execute(E)" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3051" source="org.apache.commons.collections4.functors.IfTransformer.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.IfTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3052" source="org.apache.commons.collections4.functors.IfTransformer.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.IfTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3053" source="org.apache.commons.collections4.functors.IfTransformer.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3054" source="org.apache.commons.collections4.functors.IfTransformer.transform(I)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3055" source="org.apache.commons.collections4.functors.IfTransformer.transform(I)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3056" source="org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class)" target="org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3057" source="org.apache.commons.collections4.functors.InstantiateFactory(java.lang.Class)" target="org.apache.commons.collections4.functors.InstantiateFactory.findConstructor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3058" source="org.apache.commons.collections4.functors.InstantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InstantiateFactory.findConstructor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3059" source="org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InstantiateFactory(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3060" source="org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InstantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3061" source="org.apache.commons.collections4.functors.InstantiateFactory.create()" target="org.apache.commons.collections4.functors.InstantiateFactory.findConstructor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3062" source="org.apache.commons.collections4.functors.InstantiateFactory.create()" target="org.apache.commons.collections4.FunctorException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3063" source="org.apache.commons.collections4.functors.InstantiateTransformer#NO_ARG_INSTANCE" target="org.apache.commons.collections4.functors.InstantiateTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3064" source="org.apache.commons.collections4.functors.InstantiateTransformer.instantiateTransformer(java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InstantiateTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3065" source="org.apache.commons.collections4.functors.InstantiateTransformer.instantiateTransformer(java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InstantiateTransformer(java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3066" source="org.apache.commons.collections4.functors.InstantiateTransformer.transform(java.lang.Class)" target="org.apache.commons.collections4.FunctorException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3067" source="org.apache.commons.collections4.functors.InstantiateTransformer.transform(java.lang.Class)" target="org.apache.commons.collections4.FunctorException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3068" source="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String)" target="org.apache.commons.collections4.functors.InvokerTransformer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3069" source="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InvokerTransformer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3070" source="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InvokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3071" source="org.apache.commons.collections4.functors.InvokerTransformer.transform(java.lang.Object)" target="org.apache.commons.collections4.FunctorException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3072" source="org.apache.commons.collections4.functors.InvokerTransformer.transform(java.lang.Object)" target="org.apache.commons.collections4.FunctorException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3073" source="org.apache.commons.collections4.functors.MapTransformer.mapTransformer(java.util.Map)" target="org.apache.commons.collections4.functors.ConstantTransformer.nullTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3074" source="org.apache.commons.collections4.functors.MapTransformer.mapTransformer(java.util.Map)" target="org.apache.commons.collections4.functors.MapTransformer(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3075" source="org.apache.commons.collections4.functors.NOPClosure#INSTANCE" target="org.apache.commons.collections4.functors.NOPClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3076" source="org.apache.commons.collections4.functors.NOPTransformer#INSTANCE" target="org.apache.commons.collections4.functors.NOPTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3077" source="org.apache.commons.collections4.functors.NonePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3078" source="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3079" source="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3080" source="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.NonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3081" source="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3082" source="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3083" source="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.NonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3084" source="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3085" source="org.apache.commons.collections4.functors.NonePredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3086" source="org.apache.commons.collections4.functors.NotNullPredicate#INSTANCE" target="org.apache.commons.collections4.functors.NotNullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3087" source="org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.NotPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3088" source="org.apache.commons.collections4.functors.NotPredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3089" source="org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.NullIsExceptionPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3090" source="org.apache.commons.collections4.functors.NullIsExceptionPredicate.evaluate(T)" target="org.apache.commons.collections4.FunctorException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3091" source="org.apache.commons.collections4.functors.NullIsExceptionPredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3092" source="org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.NullIsFalsePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3093" source="org.apache.commons.collections4.functors.NullIsFalsePredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3094" source="org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.NullIsTruePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3095" source="org.apache.commons.collections4.functors.NullIsTruePredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3096" source="org.apache.commons.collections4.functors.NullPredicate#INSTANCE" target="org.apache.commons.collections4.functors.NullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3097" source="org.apache.commons.collections4.functors.NullPredicateTest()" target="org.apache.commons.collections4.functors.AbstractPredicateTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3098" source="org.apache.commons.collections4.functors.NullPredicateTest.generatePredicate()" target="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3099" source="org.apache.commons.collections4.functors.NullPredicateTest.ensurePredicateCanBeTypedWithoutWarning()" target="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3100" source="org.apache.commons.collections4.functors.NullPredicateTest.ensurePredicateCanBeTypedWithoutWarning()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3101" source="org.apache.commons.collections4.functors.NullPredicateTest.testNullPredicate()" target="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3102" source="org.apache.commons.collections4.functors.NullPredicateTest.testNullPredicate()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3103" source="org.apache.commons.collections4.functors.OnePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3104" source="org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3105" source="org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.OnePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3106" source="org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3107" source="org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3108" source="org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.OnePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3109" source="org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3110" source="org.apache.commons.collections4.functors.OnePredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3111" source="org.apache.commons.collections4.functors.OrPredicate.orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.OrPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3112" source="org.apache.commons.collections4.functors.OrPredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3113" source="org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.PredicateTransformer(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3114" source="org.apache.commons.collections4.functors.PredicateTransformer.transform(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3115" source="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory.create()" target="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory.findCloneMethod()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3116" source="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory.create()" target="org.apache.commons.collections4.FunctorException(java.lang.String,java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3117" source="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeSerializationFactory.create()" target="org.apache.commons.collections4.FunctorException(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3118" source="org.apache.commons.collections4.functors.PrototypeFactory.prototypeFactory(T)" target="org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3119" source="org.apache.commons.collections4.functors.PrototypeFactory.prototypeFactory(T)" target="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory(T,java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3120" source="org.apache.commons.collections4.functors.PrototypeFactory.prototypeFactory(T)" target="org.apache.commons.collections4.functors.InstantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3121" source="org.apache.commons.collections4.functors.PrototypeFactory.prototypeFactory(T)" target="org.apache.commons.collections4.functors.PrototypeFactory$PrototypeSerializationFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3122" source="org.apache.commons.collections4.functors.StringValueTransformer#INSTANCE" target="org.apache.commons.collections4.functors.StringValueTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3123" source="org.apache.commons.collections4.functors.SwitchClosure(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3124" source="org.apache.commons.collections4.functors.SwitchClosure(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3125" source="org.apache.commons.collections4.functors.SwitchClosure(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3126" source="org.apache.commons.collections4.functors.SwitchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.SwitchClosure(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3127" source="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(java.util.Map)" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3128" source="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(java.util.Map)" target="org.apache.commons.collections4.functors.SwitchClosure(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3129" source="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3130" source="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3131" source="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3132" source="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.SwitchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3133" source="org.apache.commons.collections4.functors.SwitchClosure.getClosures()" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3134" source="org.apache.commons.collections4.functors.SwitchClosure.getPredicates()" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3135" source="org.apache.commons.collections4.functors.SwitchClosure.execute(E)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3136" source="org.apache.commons.collections4.functors.SwitchClosure.execute(E)" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3137" source="org.apache.commons.collections4.functors.SwitchTransformer(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3138" source="org.apache.commons.collections4.functors.SwitchTransformer(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3139" source="org.apache.commons.collections4.functors.SwitchTransformer(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.ConstantTransformer.nullTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3140" source="org.apache.commons.collections4.functors.SwitchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.SwitchTransformer(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3141" source="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(java.util.Map)" target="org.apache.commons.collections4.functors.ConstantTransformer.nullTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3142" source="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(java.util.Map)" target="org.apache.commons.collections4.functors.SwitchTransformer(boolean,org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3143" source="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3144" source="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3145" source="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.ConstantTransformer.nullTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3146" source="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.SwitchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3147" source="org.apache.commons.collections4.functors.SwitchTransformer.transform(I)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3148" source="org.apache.commons.collections4.functors.SwitchTransformer.transform(I)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3149" source="org.apache.commons.collections4.functors.SwitchTransformer.getPredicates()" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3150" source="org.apache.commons.collections4.functors.SwitchTransformer.getTransformers()" target="org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3151" source="org.apache.commons.collections4.functors.TransformedPredicate.transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.TransformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3152" source="org.apache.commons.collections4.functors.TransformedPredicate.evaluate(T)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3153" source="org.apache.commons.collections4.functors.TransformedPredicate.evaluate(T)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3154" source="org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3155" source="org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.TransformerClosure(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3156" source="org.apache.commons.collections4.functors.TransformerClosure.execute(E)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3157" source="org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.TransformerPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3158" source="org.apache.commons.collections4.functors.TransformerPredicate.evaluate(T)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3159" source="org.apache.commons.collections4.functors.TransformerPredicate.evaluate(T)" target="org.apache.commons.collections4.FunctorException(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3160" source="org.apache.commons.collections4.functors.TruePredicate#INSTANCE" target="org.apache.commons.collections4.functors.TruePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3161" source="org.apache.commons.collections4.functors.UniquePredicate.uniquePredicate()" target="org.apache.commons.collections4.functors.UniquePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3162" source="org.apache.commons.collections4.functors.WhileClosure.whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,boolean)" target="org.apache.commons.collections4.functors.WhileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3163" source="org.apache.commons.collections4.functors.WhileClosure.execute(E)" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3164" source="org.apache.commons.collections4.functors.WhileClosure.execute(E)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3165" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator(org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3166" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.getKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3167" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.getKey(java.lang.Object)" target="org.apache.commons.collections4.BidiMap.getKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3168" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.removeValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3169" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.removeValue(java.lang.Object)" target="org.apache.commons.collections4.BidiMap.removeValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3170" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.values()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3171" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.values()" target="org.apache.commons.collections4.BidiMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3172" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()" target="org.apache.commons.collections4.map.AbstractMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3173" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3174" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.inverseBidiMap()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3175" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.mapIterator()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3176" source="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.mapIterator()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3177" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3178" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3179" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3180" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3181" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.set.AbstractSetTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3182" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.getEntry(java.util.Iterator,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3183" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3184" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3185" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3186" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3187" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3188" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet.testMapEntrySetIteratorEntrySetValueCrossCheck()" target="org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3189" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3190" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.addSetValues()" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3191" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.supportsRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3192" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.supportsSetValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3193" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.getConfirmedMap()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3194" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.getMap()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3195" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3196" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3197" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3198" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3199" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.makeObject()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3200" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.makeObject()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3201" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.verify()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3202" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator.verify()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3203" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap(org.apache.commons.collections4.bidimap.AbstractBidiMapTest)" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3204" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.getSampleValues()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3205" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.getSampleKeys()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3206" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isAllowNullKey()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3207" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isAllowNullValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3208" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isPutAddSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3209" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isPutChangeSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3210" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isRemoveSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3211" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.isSetValueSupported()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3212" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.getCompatibilityVersion()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getCompatibilityVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3213" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.makeFullMap()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3214" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.makeFullMap()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3215" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.makeObject()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3216" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap.makeObject()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3217" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest()" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3218" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractIterableMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3219" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.modifyEntrySet(org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.BidiMap.getKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3220" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getMap()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3221" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3222" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.bulkTestBidiMapIterator()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3223" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.bulkTestInverseMap()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap(org.apache.commons.collections4.bidimap.AbstractBidiMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3224" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.bulkTestMapEntrySet()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3225" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.doTestGetKey(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.BidiMap.getKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3226" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.remove(org.apache.commons.collections4.BidiMap,java.lang.Object)" target="org.apache.commons.collections4.BidiMap.getKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3227" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeByEntrySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3228" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeByKeySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3229" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeValue(org.apache.commons.collections4.BidiMap,java.lang.Object)" target="org.apache.commons.collections4.BidiMap.removeValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3230" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeValue(org.apache.commons.collections4.BidiMap,java.lang.Object)" target="org.apache.commons.collections4.BidiMap.getKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3231" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiClear()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3232" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiClear()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3233" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiClear()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3234" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKey()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.doTestGetKey(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3235" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKey()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3236" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3237" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3238" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKeyInverse()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.doTestGetKey(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3239" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKeyInverse()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3240" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKeyInverse()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3241" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKeyInverse()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3242" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiGetKeyInverse()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3243" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiInverse()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3244" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiInverse()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3245" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiInverse()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3246" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiInverse()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3247" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiInverse()" target="org.apache.commons.collections4.BidiMap.getKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3248" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiKeySetValuesOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3249" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3250" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3251" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3252" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3253" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3254" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3255" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3256" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3257" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3258" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3259" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3260" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3261" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3262" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3263" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiModifyEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3264" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiModifyEntrySet()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.modifyEntrySet(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3265" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiModifyEntrySet()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3266" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiModifyEntrySet()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3267" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiPut()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3268" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiPut()" target="org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3269" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiPut()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3270" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiPut()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3271" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiPut()" target="org.apache.commons.collections4.BidiMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3272" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3273" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemove()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3274" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3275" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemove()" target="org.apache.commons.collections4.BidiMap.removeValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3276" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3277" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemove()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.remove(org.apache.commons.collections4.BidiMap,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3278" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemove()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3279" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemove()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeValue(org.apache.commons.collections4.BidiMap,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3280" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3281" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByEntrySet()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeByEntrySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3282" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByEntrySet()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3283" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3284" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3285" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByEntrySet()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3286" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByKeySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3287" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByKeySet()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.removeByKeySet(org.apache.commons.collections4.BidiMap,java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3288" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByKeySet()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3289" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByKeySet()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3290" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByKeySet()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3291" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.testBidiRemoveByKeySet()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3292" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.verify()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.verifyInverse()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3293" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.verify()" target="org.apache.commons.collections4.map.AbstractMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3294" source="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.verifyInverse()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3295" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.setValue(V)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3296" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.toString()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3297" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.toString()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3298" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View(java.util.Collection,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3299" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3300" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.iterator()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createEntrySetIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3301" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.iterator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3302" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3303" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.next()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry(java.util.Map$Entry,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3304" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.next()" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3305" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.remove()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3306" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View(java.util.Collection,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3307" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet.iterator()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createKeySetIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3308" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet.iterator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3309" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3310" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator.next()" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3311" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator.remove()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3312" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry(java.util.Map$Entry,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3313" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry.setValue(V)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3314" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry.setValue(V)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3315" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry.setValue(V)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3316" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View(java.util.Collection,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3317" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values.iterator()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createValuesIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3318" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values.iterator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3319" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3320" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator.next()" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3321" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator.remove()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3322" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View(java.util.Collection,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3323" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.removeAll(java.util.Collection)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3324" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.removeAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3325" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.retainAll(java.util.Collection)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3326" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.retainAll(java.util.Collection)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3327" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.retainAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3328" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.clear()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3329" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createEntrySetIterator(java.util.Iterator)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3330" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createKeySetIterator(java.util.Iterator)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3331" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createValuesIterator(java.util.Iterator)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator(java.util.Iterator,org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3332" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.entrySet()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3333" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.keySet()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3334" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.values()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3335" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3336" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.mapIterator()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3337" source="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.putAll(java.util.Map)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3338" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator(org.apache.commons.collections4.OrderedBidiMap)" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3339" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.firstKey()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3340" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.firstKey()" target="org.apache.commons.collections4.OrderedMap.firstKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3341" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.lastKey()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3342" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.lastKey()" target="org.apache.commons.collections4.OrderedMap.lastKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3343" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.nextKey(K)" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3344" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.nextKey(K)" target="org.apache.commons.collections4.OrderedMap.nextKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3345" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.previousKey(K)" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3346" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.previousKey(K)" target="org.apache.commons.collections4.OrderedMap.previousKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3347" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3348" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3349" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.inverseBidiMap()" target="org.apache.commons.collections4.OrderedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3350" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.mapIterator()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3351" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.mapIterator()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3352" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3353" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3354" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3355" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3356" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3357" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.OrderedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3358" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3359" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest.makeObject()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3360" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3361" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.addSetValues()" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3362" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.supportsRemove()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3363" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.supportsSetValue()" target="org.apache.commons.collections4.map.AbstractMapTest.isSetValueSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3364" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3365" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3366" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.makeEmptyIterator()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3367" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.makeObject()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3368" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.makeObject()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3369" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.makeObject()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3370" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.verify()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3371" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator.verify()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3372" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3373" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3374" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.bulkTestOrderedMapIterator()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3375" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.getMap()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3376" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testFirstKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3377" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testFirstKey()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3378" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testFirstKey()" target="org.apache.commons.collections4.OrderedMap.firstKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3379" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testFirstKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3380" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testLastKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3381" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testLastKey()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3382" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testLastKey()" target="org.apache.commons.collections4.OrderedMap.lastKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3383" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testLastKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3384" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testNextKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3385" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testNextKey()" target="org.apache.commons.collections4.OrderedMap.nextKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3386" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testNextKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3387" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testNextKey()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3388" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testNextKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3389" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testPreviousKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3390" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testPreviousKey()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3391" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testPreviousKey()" target="org.apache.commons.collections4.OrderedMap.previousKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3392" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testPreviousKey()" target="org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3393" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testPreviousKey()" target="org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3394" source="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest.testPreviousKey()" target="org.apache.commons.collections4.map.AbstractMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3395" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator(org.apache.commons.collections4.SortedBidiMap)" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3396" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.comparator()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3397" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.valueComparator()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3398" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.valueComparator()" target="org.apache.commons.collections4.SortedBidiMap.valueComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3399" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.headMap(K)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3400" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.subMap(K,K)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3401" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.tailMap(K)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3402" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3403" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3404" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.inverseBidiMap()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3405" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3406" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractMapTest.getAsList(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3407" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3408" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3409" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractMapTest.getNewSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3410" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.bulkTestHeadMap()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap(org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3411" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.bulkTestSubMap()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap(org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3412" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.bulkTestTailMap()" target="org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap(org.apache.commons.collections4.map.AbstractMapTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3413" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3414" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearByHeadMap()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3415" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearByHeadMap()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3416" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearByHeadMap()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3417" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearBySubMap()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3418" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearBySubMap()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3419" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearBySubMap()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3420" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearByTailMap()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3421" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearByTailMap()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3422" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiClearByTailMap()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3423" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiHeadMapContains()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3424" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByHeadMap()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3425" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByHeadMap()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3426" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByHeadMap()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3427" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByHeadMapEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3428" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByHeadMapEntrySet()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3429" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByHeadMapEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.cloneMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3430" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByHeadMapEntrySet()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3431" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveBySubMap()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3432" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveBySubMap()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3433" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveBySubMap()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3434" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveBySubMapEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3435" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveBySubMapEntrySet()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3436" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveBySubMapEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.cloneMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3437" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveBySubMapEntrySet()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3438" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByTailMap()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3439" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByTailMap()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3440" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByTailMap()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3441" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByTailMapEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3442" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByTailMapEntrySet()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3443" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByTailMapEntrySet()" target="org.apache.commons.collections4.map.AbstractMapTest.cloneMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3444" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiRemoveByTailMapEntrySet()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3445" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiSubMapContains()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3446" source="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.testBidiTailMapContains()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3447" source="org.apache.commons.collections4.bidimap.DualHashBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3448" source="org.apache.commons.collections4.bidimap.DualHashBidiMap(java.util.Map)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3449" source="org.apache.commons.collections4.bidimap.DualHashBidiMap(java.util.Map)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3450" source="org.apache.commons.collections4.bidimap.DualHashBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3451" source="org.apache.commons.collections4.bidimap.DualHashBidiMap.createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.bidimap.DualHashBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3452" source="org.apache.commons.collections4.bidimap.DualHashBidiMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3453" source="org.apache.commons.collections4.bidimap.DualHashBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3454" source="org.apache.commons.collections4.bidimap.DualHashBidiMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3455" source="org.apache.commons.collections4.bidimap.DualHashBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.DualHashBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3456" source="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3457" source="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap(java.util.Map)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3458" source="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap(java.util.Map)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3459" source="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3460" source="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap.createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3461" source="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3462" source="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3463" source="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3464" source="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3465" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3466" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.setValue(V)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3467" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.toString()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3468" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.toString()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3469" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.remove()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3470" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.reset()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3471" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap(org.apache.commons.collections4.bidimap.DualTreeBidiMap,java.util.SortedMap)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3472" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap(org.apache.commons.collections4.bidimap.DualTreeBidiMap,java.util.SortedMap)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3473" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.nextKey(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3474" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.nextKey(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap.nextKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3475" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.previousKey(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3476" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.previousKey(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap.previousKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3477" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3478" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.headMap(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap(org.apache.commons.collections4.bidimap.DualTreeBidiMap,java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3479" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.headMap(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3480" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.headMap(K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.headMap(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3481" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.subMap(K,K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap(org.apache.commons.collections4.bidimap.DualTreeBidiMap,java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3482" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.subMap(K,K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3483" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.subMap(K,K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.subMap(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3484" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.tailMap(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap(org.apache.commons.collections4.bidimap.DualTreeBidiMap,java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3485" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.tailMap(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3486" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.tailMap(K)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.tailMap(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3487" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.decorated()" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3488" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap.clear()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3489" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3490" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Comparator,java.util.Comparator)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3491" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Map)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3492" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Map)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3493" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3494" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.nextKey(K)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3495" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.nextKey(K)" target="org.apache.commons.collections4.OrderedMap.nextKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3496" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.previousKey(K)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3497" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.previousKey(K)" target="org.apache.commons.collections4.OrderedMap.previousKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3498" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.headMap(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap(org.apache.commons.collections4.bidimap.DualTreeBidiMap,java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3499" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.subMap(K,K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap(org.apache.commons.collections4.bidimap.DualTreeBidiMap,java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3500" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.tailMap(K)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap(org.apache.commons.collections4.bidimap.DualTreeBidiMap,java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3501" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.inverseOrderedBidiMap()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3502" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.mapIterator()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator(org.apache.commons.collections4.bidimap.AbstractDualBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3503" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3504" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.inverseSortedBidiMap()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3505" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.createBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Map,java.util.Map,org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3506" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3507" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3508" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.makeConfirmedMap()" target="org.apache.commons.collections4.comparators.ReverseComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3509" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.makeConfirmedMap()" target="org.apache.commons.collections4.comparators.ComparableComparator.comparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3510" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3511" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.makeObject()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Comparator,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3512" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.makeObject()" target="org.apache.commons.collections4.comparators.ReverseComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3513" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.makeObject()" target="org.apache.commons.collections4.comparators.ComparableComparator.comparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3514" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Comparator,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3515" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3516" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3517" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap.valueComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3518" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testComparator()" target="org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3519" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testComparator2()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap(java.util.Comparator,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3520" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testComparator2()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3521" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testComparator2()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap.firstKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3522" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testComparator2()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap.lastKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3523" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3524" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3525" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3526" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.getAsList(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3527" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder()" target="org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3528" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder()" target="org.apache.commons.collections4.comparators.ReverseComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3529" source="org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder()" target="org.apache.commons.collections4.comparators.ComparableComparator.comparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3530" source="org.apache.commons.collections4.bidimap.DualTreeBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3531" source="org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3532" source="org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3533" source="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$View(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3534" source="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView.contains(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3535" source="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView.contains(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3536" source="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3537" source="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3538" source="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3539" source="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView.iterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3540" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.get(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3541" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.put(V,K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3542" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.put(V,K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3543" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.removeValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3544" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.firstKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3545" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.firstKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3546" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.getKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3547" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.lastKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3548" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.lastKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3549" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.nextKey(V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3550" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.nextKey(V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3551" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.nextKey(V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3552" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.nextKey(V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3553" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.previousKey(V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3554" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.previousKey(V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3555" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.previousKey(V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3556" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.previousKey(V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3557" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.removeValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3558" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.containsKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3559" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.containsValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3560" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.equals(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3561" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.isEmpty()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3562" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.hashCode()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3563" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.size()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3564" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.toString()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3565" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.entrySet()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3566" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.keySet()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3567" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.values()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3568" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.mapIterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3569" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.mapIterator()" target="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.emptyOrderedMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3570" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.mapIterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3571" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.clear()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3572" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.putAll(java.util.Map)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.put(V,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3573" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$View(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3574" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView.contains(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3575" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView.contains(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3576" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3577" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3578" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3579" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView.iterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3580" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3581" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.createEntry(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3582" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.createEntry(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3583" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.createEntry(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3584" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.next()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.createEntry(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3585" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.next()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigateNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3586" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.previous()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.createEntry(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3587" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator.previous()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigatePrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3588" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3589" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.getValue()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3590" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.getKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3591" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.next()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigateNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3592" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.next()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3593" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.previous()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigatePrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3594" source="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator.previous()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3595" source="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$View(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3596" source="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView.contains(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3597" source="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView.contains(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3598" source="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3599" source="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView.iterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3600" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.equals(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3601" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.equals(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3602" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.hashCode()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3603" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.hashCode()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3604" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getData(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3605" source="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getData(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3606" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$View(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3607" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView.contains(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3608" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView.contains(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3609" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3610" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView.iterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3611" source="org.apache.commons.collections4.bidimap.TreeBidiMap$View.size()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3612" source="org.apache.commons.collections4.bidimap.TreeBidiMap$View.clear()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3613" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3614" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigateNext()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3615" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigatePrevious()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3616" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigatePrevious()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3617" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.remove()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3618" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.remove()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3619" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.remove()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3620" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3621" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator.next()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigateNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3622" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator.previous()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigatePrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3623" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3624" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.getKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3625" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.next()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigateNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3626" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.next()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3627" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.previous()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.navigatePrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3628" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.previous()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3629" source="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.getValue()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3630" source="org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement#KEY" target="org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3631" source="org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement#VALUE" target="org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3632" source="org.apache.commons.collections4.bidimap.TreeBidiMap(java.util.Map)" target="org.apache.commons.collections4.bidimap.TreeBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3633" source="org.apache.commons.collections4.bidimap.TreeBidiMap(java.util.Map)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3634" source="org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.compare(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3635" source="org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getData(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3636" source="org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3637" source="org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3638" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3639" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3640" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3641" source="org.apache.commons.collections4.bidimap.TreeBidiMap.firstKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3642" source="org.apache.commons.collections4.bidimap.TreeBidiMap.firstKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3643" source="org.apache.commons.collections4.bidimap.TreeBidiMap.getKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3644" source="org.apache.commons.collections4.bidimap.TreeBidiMap.getKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3645" source="org.apache.commons.collections4.bidimap.TreeBidiMap.getKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3646" source="org.apache.commons.collections4.bidimap.TreeBidiMap.lastKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3647" source="org.apache.commons.collections4.bidimap.TreeBidiMap.lastKey()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3648" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextKey(K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3649" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextKey(K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3650" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextKey(K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3651" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextKey(K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3652" source="org.apache.commons.collections4.bidimap.TreeBidiMap.previousKey(K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3653" source="org.apache.commons.collections4.bidimap.TreeBidiMap.previousKey(K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3654" source="org.apache.commons.collections4.bidimap.TreeBidiMap.previousKey(K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3655" source="org.apache.commons.collections4.bidimap.TreeBidiMap.previousKey(K)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3656" source="org.apache.commons.collections4.bidimap.TreeBidiMap.removeValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3657" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3658" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3659" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3660" source="org.apache.commons.collections4.bidimap.TreeBidiMap.get(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3661" source="org.apache.commons.collections4.bidimap.TreeBidiMap.get(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3662" source="org.apache.commons.collections4.bidimap.TreeBidiMap.get(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3663" source="org.apache.commons.collections4.bidimap.TreeBidiMap.put(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3664" source="org.apache.commons.collections4.bidimap.TreeBidiMap.put(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3665" source="org.apache.commons.collections4.bidimap.TreeBidiMap.remove(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3666" source="org.apache.commons.collections4.bidimap.TreeBidiMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3667" source="org.apache.commons.collections4.bidimap.TreeBidiMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3668" source="org.apache.commons.collections4.bidimap.TreeBidiMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3669" source="org.apache.commons.collections4.bidimap.TreeBidiMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3670" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3671" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3672" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3673" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3674" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3675" source="org.apache.commons.collections4.bidimap.TreeBidiMap.equals(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3676" source="org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3677" source="org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3678" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3679" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3680" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3681" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3682" source="org.apache.commons.collections4.bidimap.TreeBidiMap.hashCode()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3683" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3684" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3685" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3686" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3687" source="org.apache.commons.collections4.bidimap.TreeBidiMap.toString()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3688" source="org.apache.commons.collections4.bidimap.TreeBidiMap.entrySet()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3689" source="org.apache.commons.collections4.bidimap.TreeBidiMap.keySet()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3690" source="org.apache.commons.collections4.bidimap.TreeBidiMap.values()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3691" source="org.apache.commons.collections4.bidimap.TreeBidiMap.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3692" source="org.apache.commons.collections4.bidimap.TreeBidiMap.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3693" source="org.apache.commons.collections4.bidimap.TreeBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3694" source="org.apache.commons.collections4.bidimap.TreeBidiMap.mapIterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3695" source="org.apache.commons.collections4.bidimap.TreeBidiMap.mapIterator()" target="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.emptyOrderedMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3696" source="org.apache.commons.collections4.bidimap.TreeBidiMap.mapIterator()" target="org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3697" source="org.apache.commons.collections4.bidimap.TreeBidiMap.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3698" source="org.apache.commons.collections4.bidimap.TreeBidiMap.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3699" source="org.apache.commons.collections4.bidimap.TreeBidiMap.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3700" source="org.apache.commons.collections4.bidimap.TreeBidiMap.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3701" source="org.apache.commons.collections4.bidimap.TreeBidiMap.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3702" source="org.apache.commons.collections4.bidimap.TreeBidiMap.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3703" source="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3704" source="org.apache.commons.collections4.bidimap.TreeBidiMap.lookupValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3705" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3706" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3707" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3708" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3709" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3710" source="org.apache.commons.collections4.bidimap.TreeBidiMap.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3711" source="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3712" source="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKeyAndValue(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3713" source="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKeyAndValue(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3714" source="org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(java.lang.Object)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3715" source="org.apache.commons.collections4.bidimap.TreeBidiMap.clear()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.modify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3716" source="org.apache.commons.collections4.bidimap.TreeBidiMap.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3717" source="org.apache.commons.collections4.bidimap.TreeBidiMap.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3718" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.checkKeyAndValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3719" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3720" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3721" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3722" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.grow()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3723" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.compare(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3724" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3725" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3726" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3727" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3728" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3729" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3730" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3731" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doPut(K,V)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3732" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3733" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3734" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3735" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3736" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3737" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3738" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3739" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3740" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3741" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3742" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.shrink()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3743" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3744" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3745" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3746" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3747" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3748" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3749" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3750" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3751" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3752" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3753" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3754" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3755" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3756" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3757" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3758" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3759" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3760" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3761" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3762" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3763" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3764" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3765" source="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3766" source="org.apache.commons.collections4.bidimap.TreeBidiMap.grow()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.modify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3767" source="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.compare(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3768" source="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3769" source="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getData(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3770" source="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3771" source="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3772" source="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3773" source="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3774" source="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3775" source="org.apache.commons.collections4.bidimap.TreeBidiMap.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3776" source="org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3777" source="org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3778" source="org.apache.commons.collections4.bidimap.TreeBidiMap.putAll(java.util.Map)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3779" source="org.apache.commons.collections4.bidimap.TreeBidiMap.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3780" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3781" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3782" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3783" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3784" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3785" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3786" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3787" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3788" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3789" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3790" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3791" source="org.apache.commons.collections4.bidimap.TreeBidiMap.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3792" source="org.apache.commons.collections4.bidimap.TreeBidiMap.shrink()" target="org.apache.commons.collections4.bidimap.TreeBidiMap.modify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3793" source="org.apache.commons.collections4.bidimap.TreeBidiMap.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3794" source="org.apache.commons.collections4.bidimap.TreeBidiMap.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3795" source="org.apache.commons.collections4.bidimap.TreeBidiMap.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3796" source="org.apache.commons.collections4.bidimap.TreeBidiMap.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3797" source="org.apache.commons.collections4.bidimap.TreeBidiMap.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3798" source="org.apache.commons.collections4.bidimap.TreeBidiMap.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3799" source="org.apache.commons.collections4.bidimap.TreeBidiMap.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)" target="org.apache.commons.collections4.bidimap.TreeBidiMap$Node.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3800" source="org.apache.commons.collections4.bidimap.TreeBidiMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3801" source="org.apache.commons.collections4.bidimap.TreeBidiMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.bidimap.TreeBidiMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3802" source="org.apache.commons.collections4.bidimap.TreeBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3803" source="org.apache.commons.collections4.bidimap.TreeBidiMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3804" source="org.apache.commons.collections4.bidimap.TreeBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.TreeBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3805" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap(org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3806" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.unmodifiableBidiMap(org.apache.commons.collections4.BidiMap)" target="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3807" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.entrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3808" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.entrySet()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3809" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.keySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3810" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3811" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.values()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3812" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.values()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3813" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3814" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3815" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.BidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3816" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.mapIterator()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3817" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.mapIterator()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3818" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.mapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3819" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3820" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3821" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.bidimap.DualHashBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3822" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3823" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.unmodifiableBidiMap(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3824" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.unmodifiableBidiMap(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3825" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.DualHashBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3826" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory()" target="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3827" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory()" target="org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.unmodifiableBidiMap(org.apache.commons.collections4.BidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3828" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable()" target="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3829" source="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable()" target="org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3830" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3831" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.unmodifiableOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)" target="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3832" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.entrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3833" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.entrySet()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3834" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.keySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3835" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3836" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.values()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3837" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.values()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3838" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.inverseOrderedBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3839" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.inverseOrderedBidiMap()" target="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3840" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.inverseOrderedBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3841" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.inverseOrderedBidiMap()" target="org.apache.commons.collections4.OrderedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3842" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.mapIterator()" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3843" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.mapIterator()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3844" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.mapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3845" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3846" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3847" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.bidimap.TreeBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3848" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3849" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.unmodifiableOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3850" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.unmodifiableOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3851" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.TreeBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3852" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory()" target="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3853" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory()" target="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.unmodifiableOrderedBidiMap(org.apache.commons.collections4.OrderedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3854" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable()" target="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3855" source="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable()" target="org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3856" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap(org.apache.commons.collections4.SortedBidiMap)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator(org.apache.commons.collections4.SortedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3857" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.unmodifiableSortedBidiMap(org.apache.commons.collections4.SortedBidiMap)" target="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap(org.apache.commons.collections4.SortedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3858" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.entrySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3859" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.entrySet()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3860" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.keySet()" target="org.apache.commons.collections4.map.AbstractMapDecorator.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3861" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3862" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.values()" target="org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3863" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.values()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3864" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.headMap(K)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3865" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.headMap(K)" target="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3866" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.subMap(K,K)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3867" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.subMap(K,K)" target="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3868" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.tailMap(K)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3869" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.tailMap(K)" target="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3870" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.mapIterator()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3871" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.mapIterator()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3872" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.mapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3873" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap(org.apache.commons.collections4.SortedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3874" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3875" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.inverseBidiMap()" target="org.apache.commons.collections4.SortedBidiMap.inverseBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3876" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest(java.lang.String)" target="org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3877" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3878" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3879" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3880" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeFullMap()" target="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.unmodifiableSortedBidiMap(org.apache.commons.collections4.SortedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3881" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.unmodifiableSortedBidiMap(org.apache.commons.collections4.SortedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3882" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeObject()" target="org.apache.commons.collections4.bidimap.DualTreeBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3883" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory()" target="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3884" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory()" target="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.unmodifiableSortedBidiMap(org.apache.commons.collections4.SortedBidiMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3885" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testUnmodifiable()" target="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3886" source="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testUnmodifiable()" target="org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3887" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.toArray(T[])" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3888" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.add(E)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3889" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.addAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3890" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3891" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.containsAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3892" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.equals(java.lang.Object)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3893" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.isEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3894" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.remove(java.lang.Object)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3895" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.removeAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3896" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.retainAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3897" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.hashCode()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3898" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3899" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.toArray()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3900" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.toString()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3901" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.iterator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3902" source="org.apache.commons.collections4.collection.AbstractCollectionDecorator.clear()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3903" source="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)" target="org.apache.commons.collections4.AbstractObjectTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3904" source="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isNullSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3905" source="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullNonNullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3906" source="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherNonNullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3907" source="org.apache.commons.collections4.collection.AbstractCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3908" source="org.apache.commons.collections4.collection.AbstractCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3909" source="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3910" source="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3911" source="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3912" source="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3913" source="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3914" source="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3915" source="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3916" source="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.makeConfirmedFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3917" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3918" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3919" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3920" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3921" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3922" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3923" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3924" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3925" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3926" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3927" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3928" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3929" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3930" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3931" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionClear()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3932" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionClear()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3933" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionClear()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3934" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionClear()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3935" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionClear()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3936" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionClear()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3937" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContains()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3938" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContains()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3939" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContains()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3940" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContains()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3941" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContains()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3942" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContains()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3943" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContainsAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3944" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContainsAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3945" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContainsAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3946" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContainsAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3947" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContainsAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3948" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionContainsAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3949" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIsEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3950" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIsEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3951" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIsEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3952" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIsEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3953" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIterator()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3954" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIterator()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3955" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIterator()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3956" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIterator()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3957" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isFailFastSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3958" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3959" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3960" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3961" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3962" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3963" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3964" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3965" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorFailFast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3966" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3967" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3968" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3969" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3970" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3971" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.cloneMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3972" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.areEqualElementsDistinguishable()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3973" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3974" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3975" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3976" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3977" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3978" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3979" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3980" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3981" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.areEqualElementsDistinguishable()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3982" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3983" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemoveAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3984" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemoveAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3985" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemoveAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3986" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemoveAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3987" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemoveAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3988" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemoveAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3989" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemoveAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3990" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRemoveAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3991" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3992" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3993" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3994" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3995" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3996" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3997" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3998" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3999" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionSize()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4000" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionSize()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4001" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionSize()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4002" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4003" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4004" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4005" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4006" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4007" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4008" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4009" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToArray2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4010" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToString()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4011" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToString()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4012" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionToString()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4013" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4014" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4015" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isEqualsCheckable()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4016" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4017" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4018" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4019" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4020" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullNonNullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4021" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4022" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4023" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4024" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4025" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4026" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4027" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4028" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4029" source="org.apache.commons.collections4.collection.AbstractCollectionTest.testUnsupportedRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4030" source="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4031" source="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4032" source="org.apache.commons.collections4.collection.CompositeCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4033" source="org.apache.commons.collections4.collection.CompositeCollection(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4034" source="org.apache.commons.collections4.collection.CompositeCollection(java.util.Collection[])" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4035" source="org.apache.commons.collections4.collection.CompositeCollection.toArray(T[])" target="org.apache.commons.collections4.collection.CompositeCollection.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4036" source="org.apache.commons.collections4.collection.CompositeCollection.add(E)" target="org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator.add(org.apache.commons.collections4.collection.CompositeCollection,java.util.List,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4037" source="org.apache.commons.collections4.collection.CompositeCollection.addAll(java.util.Collection)" target="org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator.addAll(org.apache.commons.collections4.collection.CompositeCollection,java.util.List,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4038" source="org.apache.commons.collections4.collection.CompositeCollection.containsAll(java.util.Collection)" target="org.apache.commons.collections4.collection.CompositeCollection.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4039" source="org.apache.commons.collections4.collection.CompositeCollection.remove(java.lang.Object)" target="org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator.remove(org.apache.commons.collections4.collection.CompositeCollection,java.util.List,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4040" source="org.apache.commons.collections4.collection.CompositeCollection.toArray()" target="org.apache.commons.collections4.collection.CompositeCollection.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4041" source="org.apache.commons.collections4.collection.CompositeCollection.toArray()" target="org.apache.commons.collections4.collection.CompositeCollection.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4042" source="org.apache.commons.collections4.collection.CompositeCollection.iterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4043" source="org.apache.commons.collections4.collection.CompositeCollection.iterator()" target="org.apache.commons.collections4.iterators.IteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4044" source="org.apache.commons.collections4.collection.CompositeCollection.iterator()" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4045" source="org.apache.commons.collections4.collection.CompositeCollection.getCollections()" target="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4046" source="org.apache.commons.collections4.collection.CompositeCollectionTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4047" source="org.apache.commons.collections4.collection.CompositeCollectionTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4048" source="org.apache.commons.collections4.collection.CompositeCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.CompositeCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4049" source="org.apache.commons.collections4.collection.CompositeCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4050" source="org.apache.commons.collections4.collection.CompositeCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4051" source="org.apache.commons.collections4.collection.CompositeCollectionTest.makeObject()" target="org.apache.commons.collections4.collection.CompositeCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4052" source="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpMutatorTest()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4053" source="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpMutatorTest()" target="org.apache.commons.collections4.collection.CompositeCollection.setMutator(org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4054" source="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpMutatorTest()" target="org.apache.commons.collections4.collection.CompositeCollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4055" source="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()" target="org.apache.commons.collections4.collection.CompositeCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4056" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4057" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator()" target="org.apache.commons.collections4.collection.CompositeCollection.setMutator(org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4058" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator()" target="org.apache.commons.collections4.collection.CompositeCollectionTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4059" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4060" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator()" target="org.apache.commons.collections4.collection.CompositeCollection.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4061" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator()" target="org.apache.commons.collections4.collection.CompositeCollection.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4062" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4063" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4064" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection()" target="org.apache.commons.collections4.collection.CompositeCollection.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4065" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4066" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator()" target="org.apache.commons.collections4.collection.CompositeCollection.setMutator(org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4067" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator()" target="org.apache.commons.collections4.collection.CompositeCollectionTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4068" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4069" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator()" target="org.apache.commons.collections4.collection.CompositeCollection.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4070" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator()" target="org.apache.commons.collections4.collection.CompositeCollection.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4071" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testClear()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4072" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testClear()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4073" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testClear()" target="org.apache.commons.collections4.collection.CompositeCollection.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4074" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testClear()" target="org.apache.commons.collections4.collection.CompositeCollection.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4075" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4076" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4077" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll()" target="org.apache.commons.collections4.collection.CompositeCollection.containsAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4078" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4079" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty()" target="org.apache.commons.collections4.collection.CompositeCollection.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4080" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4081" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4082" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4083" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator()" target="org.apache.commons.collections4.collection.CompositeCollection.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4084" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator()" target="org.apache.commons.collections4.collection.CompositeCollection.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4085" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4086" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4087" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize()" target="org.apache.commons.collections4.collection.CompositeCollection.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4088" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpMutatorTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4089" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4090" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove()" target="org.apache.commons.collections4.collection.CompositeCollection.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4091" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove()" target="org.apache.commons.collections4.collection.CompositeCollection.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4092" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpMutatorTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4093" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4094" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll()" target="org.apache.commons.collections4.collection.CompositeCollection.removeAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4095" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll()" target="org.apache.commons.collections4.collection.CompositeCollection.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4096" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpMutatorTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4097" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4098" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited()" target="org.apache.commons.collections4.collection.CompositeCollection.removeComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4099" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited()" target="org.apache.commons.collections4.collection.CompositeCollection.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4100" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited()" target="org.apache.commons.collections4.collection.CompositeCollection.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4101" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4102" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4103" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll()" target="org.apache.commons.collections4.collection.CompositeCollection.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4104" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll()" target="org.apache.commons.collections4.collection.CompositeCollection.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4105" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testSize()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4106" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testSize()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4107" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testSize()" target="org.apache.commons.collections4.collection.CompositeCollection.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4108" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection()" target="org.apache.commons.collections4.collection.CompositeCollectionTest.setUpTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4109" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection()" target="org.apache.commons.collections4.collection.CompositeCollection.addComposited(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4110" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection()" target="org.apache.commons.collections4.collection.CompositeCollection.toCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4111" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection()" target="org.apache.commons.collections4.collection.CompositeCollection.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4112" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4113" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4114" source="org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4115" source="org.apache.commons.collections4.collection.IndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.MultiMap,boolean)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4116" source="org.apache.commons.collections4.collection.IndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.MultiMap,boolean)" target="org.apache.commons.collections4.collection.IndexedCollection.reindex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4117" source="org.apache.commons.collections4.collection.IndexedCollection.nonUniqueIndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.IndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.MultiMap,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4118" source="org.apache.commons.collections4.collection.IndexedCollection.nonUniqueIndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4119" source="org.apache.commons.collections4.collection.IndexedCollection.uniqueIndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.IndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.MultiMap,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4120" source="org.apache.commons.collections4.collection.IndexedCollection.uniqueIndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4121" source="org.apache.commons.collections4.collection.IndexedCollection.get(K)" target="org.apache.commons.collections4.MultiMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4122" source="org.apache.commons.collections4.collection.IndexedCollection.add(C)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4123" source="org.apache.commons.collections4.collection.IndexedCollection.add(C)" target="org.apache.commons.collections4.collection.IndexedCollection.addToIndex(C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4124" source="org.apache.commons.collections4.collection.IndexedCollection.addAll(java.util.Collection)" target="org.apache.commons.collections4.collection.IndexedCollection.add(C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4125" source="org.apache.commons.collections4.collection.IndexedCollection.contains(java.lang.Object)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4126" source="org.apache.commons.collections4.collection.IndexedCollection.containsAll(java.util.Collection)" target="org.apache.commons.collections4.collection.IndexedCollection.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4127" source="org.apache.commons.collections4.collection.IndexedCollection.remove(java.lang.Object)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4128" source="org.apache.commons.collections4.collection.IndexedCollection.remove(java.lang.Object)" target="org.apache.commons.collections4.collection.IndexedCollection.removeFromIndex(C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4129" source="org.apache.commons.collections4.collection.IndexedCollection.removeAll(java.util.Collection)" target="org.apache.commons.collections4.collection.IndexedCollection.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4130" source="org.apache.commons.collections4.collection.IndexedCollection.retainAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4131" source="org.apache.commons.collections4.collection.IndexedCollection.retainAll(java.util.Collection)" target="org.apache.commons.collections4.collection.IndexedCollection.reindex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4132" source="org.apache.commons.collections4.collection.IndexedCollection.values(K)" target="org.apache.commons.collections4.MultiMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4133" source="org.apache.commons.collections4.collection.IndexedCollection.addToIndex(C)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4134" source="org.apache.commons.collections4.collection.IndexedCollection.addToIndex(C)" target="org.apache.commons.collections4.MultiMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4135" source="org.apache.commons.collections4.collection.IndexedCollection.clear()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4136" source="org.apache.commons.collections4.collection.IndexedCollection.reindex()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4137" source="org.apache.commons.collections4.collection.IndexedCollection.reindex()" target="org.apache.commons.collections4.collection.IndexedCollection.addToIndex(C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4138" source="org.apache.commons.collections4.collection.IndexedCollection.removeFromIndex(C)" target="org.apache.commons.collections4.MultiMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4139" source="org.apache.commons.collections4.collection.IndexedCollection.removeFromIndex(C)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4140" source="org.apache.commons.collections4.collection.IndexedCollectionTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4141" source="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.IndexedCollection.nonUniqueIndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4142" source="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.IndexedCollectionTest$IntegerTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4143" source="org.apache.commons.collections4.collection.IndexedCollectionTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4144" source="org.apache.commons.collections4.collection.IndexedCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4145" source="org.apache.commons.collections4.collection.IndexedCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4146" source="org.apache.commons.collections4.collection.IndexedCollectionTest.makeObject()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4147" source="org.apache.commons.collections4.collection.IndexedCollectionTest.makeTestCollection()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4148" source="org.apache.commons.collections4.collection.IndexedCollectionTest.makeUniqueTestCollection()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateUniqueCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4149" source="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateUniqueCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.IndexedCollection.uniqueIndexedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4150" source="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateUniqueCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.IndexedCollectionTest$IntegerTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4151" source="org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.makeTestCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4152" source="org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey()" target="org.apache.commons.collections4.collection.IndexedCollection.get(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4153" source="org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4154" source="org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateUniqueCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4155" source="org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation()" target="org.apache.commons.collections4.collection.IndexedCollection.get(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4156" source="org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.makeUniqueTestCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4157" source="org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately()" target="org.apache.commons.collections4.collection.IndexedCollectionTest.decorateUniqueCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4158" source="org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately()" target="org.apache.commons.collections4.collection.IndexedCollection.get(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4159" source="org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately()" target="org.apache.commons.collections4.collection.IndexedCollection.reindex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4160" source="org.apache.commons.collections4.collection.PredicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4161" source="org.apache.commons.collections4.collection.PredicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4162" source="org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.collection.PredicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4163" source="org.apache.commons.collections4.collection.PredicatedCollection.add(E)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4164" source="org.apache.commons.collections4.collection.PredicatedCollection.add(E)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4165" source="org.apache.commons.collections4.collection.PredicatedCollection.addAll(java.util.Collection)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4166" source="org.apache.commons.collections4.collection.PredicatedCollection.addAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4167" source="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4168" source="org.apache.commons.collections4.collection.PredicatedCollectionTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4169" source="org.apache.commons.collections4.collection.PredicatedCollectionTest#testPredicate" target="org.apache.commons.collections4.collection.PredicatedCollectionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4170" source="org.apache.commons.collections4.collection.PredicatedCollectionTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4171" source="org.apache.commons.collections4.collection.PredicatedCollectionTest.decorateCollection(java.util.Collection,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4172" source="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.PredicatedCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4173" source="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.PredicatedCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4174" source="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.PredicatedCollectionTest.decorateCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4175" source="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeObject()" target="org.apache.commons.collections4.collection.PredicatedCollectionTest.decorateCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4176" source="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeTestCollection()" target="org.apache.commons.collections4.collection.PredicatedCollectionTest.decorateCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4177" source="org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd()" target="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeTestCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4178" source="org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll()" target="org.apache.commons.collections4.collection.PredicatedCollectionTest.makeTestCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4179" source="org.apache.commons.collections4.collection.SynchronizedCollection.toArray(T[])" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4180" source="org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.SynchronizedCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4181" source="org.apache.commons.collections4.collection.SynchronizedCollection.add(E)" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4182" source="org.apache.commons.collections4.collection.SynchronizedCollection.addAll(java.util.Collection)" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4183" source="org.apache.commons.collections4.collection.SynchronizedCollection.contains(java.lang.Object)" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4184" source="org.apache.commons.collections4.collection.SynchronizedCollection.containsAll(java.util.Collection)" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4185" source="org.apache.commons.collections4.collection.SynchronizedCollection.equals(java.lang.Object)" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4186" source="org.apache.commons.collections4.collection.SynchronizedCollection.isEmpty()" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4187" source="org.apache.commons.collections4.collection.SynchronizedCollection.remove(java.lang.Object)" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4188" source="org.apache.commons.collections4.collection.SynchronizedCollection.removeAll(java.util.Collection)" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4189" source="org.apache.commons.collections4.collection.SynchronizedCollection.retainAll(java.util.Collection)" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4190" source="org.apache.commons.collections4.collection.SynchronizedCollection.hashCode()" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4191" source="org.apache.commons.collections4.collection.SynchronizedCollection.size()" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4192" source="org.apache.commons.collections4.collection.SynchronizedCollection.toArray()" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4193" source="org.apache.commons.collections4.collection.SynchronizedCollection.toString()" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4194" source="org.apache.commons.collections4.collection.SynchronizedCollection.iterator()" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4195" source="org.apache.commons.collections4.collection.SynchronizedCollection.clear()" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4196" source="org.apache.commons.collections4.collection.SynchronizedCollectionTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4197" source="org.apache.commons.collections4.collection.SynchronizedCollectionTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4198" source="org.apache.commons.collections4.collection.SynchronizedCollectionTest.makeObject()" target="org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4199" source="org.apache.commons.collections4.collection.TransformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4200" source="org.apache.commons.collections4.collection.TransformedCollection.transformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.TransformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4201" source="org.apache.commons.collections4.collection.TransformedCollection.transformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4202" source="org.apache.commons.collections4.collection.TransformedCollection.transformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4203" source="org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.TransformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4204" source="org.apache.commons.collections4.collection.TransformedCollection.transform(E)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4205" source="org.apache.commons.collections4.collection.TransformedCollection.add(E)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4206" source="org.apache.commons.collections4.collection.TransformedCollection.add(E)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4207" source="org.apache.commons.collections4.collection.TransformedCollection.addAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4208" source="org.apache.commons.collections4.collection.TransformedCollection.addAll(java.util.Collection)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4209" source="org.apache.commons.collections4.collection.TransformedCollection.transform(java.util.Collection)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4210" source="org.apache.commons.collections4.collection.TransformedCollectionTest#NOOP_TRANSFORMER" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4211" source="org.apache.commons.collections4.collection.TransformedCollectionTest#STRING_TO_INTEGER_TRANSFORMER" target="org.apache.commons.collections4.collection.TransformedCollectionTest$StringToInteger()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4212" source="org.apache.commons.collections4.collection.TransformedCollectionTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4213" source="org.apache.commons.collections4.collection.TransformedCollectionTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.TransformedCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4214" source="org.apache.commons.collections4.collection.TransformedCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.TransformedCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4215" source="org.apache.commons.collections4.collection.TransformedCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4216" source="org.apache.commons.collections4.collection.TransformedCollectionTest.makeObject()" target="org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4217" source="org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection()" target="org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4218" source="org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection()" target="org.apache.commons.collections4.collection.TransformedCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4219" source="org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform()" target="org.apache.commons.collections4.collection.TransformedCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4220" source="org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform()" target="org.apache.commons.collections4.collection.TransformedCollection.transformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4221" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection(org.apache.commons.collections4.BoundedCollection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4222" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4223" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.SynchronizedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4224" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection(org.apache.commons.collections4.BoundedCollection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4225" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(org.apache.commons.collections4.BoundedCollection)" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection(org.apache.commons.collections4.BoundedCollection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4226" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.isFull()" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4227" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.isFull()" target="org.apache.commons.collections4.BoundedCollection.isFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4228" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.maxSize()" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4229" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.maxSize()" target="org.apache.commons.collections4.BoundedCollection.maxSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4230" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4231" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.iterator()" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4232" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.decorated()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4233" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4234" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4235" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeObject()" target="org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4236" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeObject()" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(org.apache.commons.collections4.BoundedCollection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4237" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4238" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4239" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(org.apache.commons.collections4.BoundedCollection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4240" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory()" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4241" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory()" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(org.apache.commons.collections4.BoundedCollection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4242" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable()" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4243" source="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable()" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4244" source="org.apache.commons.collections4.collection.UnmodifiableCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4245" source="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.UnmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4246" source="org.apache.commons.collections4.collection.UnmodifiableCollection.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4247" source="org.apache.commons.collections4.collection.UnmodifiableCollection.iterator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4248" source="org.apache.commons.collections4.collection.UnmodifiableCollectionTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4249" source="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4250" source="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4251" source="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeFullCollection()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4252" source="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeObject()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4253" source="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory()" target="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4254" source="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4255" source="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable()" target="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4256" source="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable()" target="org.apache.commons.collections4.collection.UnmodifiableCollectionTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4257" source="org.apache.commons.collections4.keyvalue.AbstractKeyValue.toString()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4258" source="org.apache.commons.collections4.keyvalue.AbstractKeyValue.toString()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4259" source="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4260" source="org.apache.commons.collections4.keyvalue.AbstractMapEntry.setValue(V)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4261" source="org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4262" source="org.apache.commons.collections4.keyvalue.AbstractMapEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4263" source="org.apache.commons.collections4.keyvalue.AbstractMapEntry.hashCode()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4264" source="org.apache.commons.collections4.keyvalue.AbstractMapEntry.hashCode()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4265" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeKnownMapEntry()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeKnownMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4266" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4267" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testAccessorsAndMutators()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4268" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4269" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeKnownMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4270" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4271" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeKnownMapEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4272" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testSelfReferenceHandling()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4273" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testToString()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4274" source="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.testToString()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest.makeMapEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4275" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4276" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue(K,V)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4277" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue(java.util.Map$Entry)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4278" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4279" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.KeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4280" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.KeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4281" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setKey(K)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.setKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4282" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setValue(V)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4283" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue.equals(java.lang.Object)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4284" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue.equals(java.lang.Object)" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4285" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue.hashCode()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4286" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue.hashCode()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4287" source="org.apache.commons.collections4.keyvalue.DefaultKeyValue.toMapEntry()" target="org.apache.commons.collections4.keyvalue.DefaultMapEntry(org.apache.commons.collections4.KeyValue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4288" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.makeDefaultKeyValue()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4289" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.makeDefaultKeyValue(K,V)" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4290" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testAccessorsAndMutators()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.makeDefaultKeyValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4291" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testAccessorsAndMutators()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4292" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testAccessorsAndMutators()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4293" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testAccessorsAndMutators()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4294" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testAccessorsAndMutators()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4295" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4296" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4297" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4298" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4299" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue(org.apache.commons.collections4.KeyValue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4300" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4301" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4302" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4303" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.makeDefaultKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4304" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4305" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4306" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testSelfReferenceHandling()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.makeDefaultKeyValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4307" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testSelfReferenceHandling()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4308" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testSelfReferenceHandling()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4309" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testSelfReferenceHandling()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4310" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testSelfReferenceHandling()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4311" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToMapEntry()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.makeDefaultKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4312" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToMapEntry()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4313" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToMapEntry()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4314" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToMapEntry()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.toMapEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4315" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToMapEntry()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4316" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.makeDefaultKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4317" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4318" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4319" source="org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString()" target="org.apache.commons.collections4.keyvalue.AbstractKeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4320" source="org.apache.commons.collections4.keyvalue.DefaultMapEntry(K,V)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4321" source="org.apache.commons.collections4.keyvalue.DefaultMapEntry(java.util.Map$Entry)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4322" source="org.apache.commons.collections4.keyvalue.DefaultMapEntry(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4323" source="org.apache.commons.collections4.keyvalue.DefaultMapEntry(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.KeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4324" source="org.apache.commons.collections4.keyvalue.DefaultMapEntry(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.KeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4325" source="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4326" source="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.makeMapEntry()" target="org.apache.commons.collections4.keyvalue.DefaultMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4327" source="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.makeMapEntry(K,V)" target="org.apache.commons.collections4.keyvalue.DefaultMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4328" source="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4329" source="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4330" source="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testConstructors()" target="org.apache.commons.collections4.KeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4331" source="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testConstructors()" target="org.apache.commons.collections4.KeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4332" source="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4333" source="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testSelfReferenceHandling()" target="org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.makeMapEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4334" source="org.apache.commons.collections4.keyvalue.MultiKey(K,K)" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4335" source="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K)" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4336" source="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K)" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4337" source="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K,K)" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4338" source="org.apache.commons.collections4.keyvalue.MultiKey(K[])" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4339" source="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)" target="org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4340" source="org.apache.commons.collections4.keyvalue.MultiKey.readResolve()" target="org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4341" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4342" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4343" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4344" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4345" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4346" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4347" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray()" target="org.apache.commons.collections4.keyvalue.MultiKey(K[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4348" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4349" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray()" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4350" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArrayNull()" target="org.apache.commons.collections4.keyvalue.MultiKey(K[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4351" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArrayNull()" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4352" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4353" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals()" target="org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4354" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization()" target="org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4355" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4356" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization()" target="org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4357" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4358" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4359" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorCloned()" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4360" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorCloned()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4361" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorNonCloned()" target="org.apache.commons.collections4.keyvalue.MultiKey(K[],boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4362" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorNonCloned()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4363" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysSimpleConstructor()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4364" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysSimpleConstructor()" target="org.apache.commons.collections4.keyvalue.MultiKey.getKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4365" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4366" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode()" target="org.apache.commons.collections4.keyvalue.MultiKey.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4367" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4368" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize()" target="org.apache.commons.collections4.keyvalue.MultiKey.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4369" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4370" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4371" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize()" target="org.apache.commons.collections4.keyvalue.MultiKey(K,K,K,K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4372" source="org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize()" target="org.apache.commons.collections4.keyvalue.MultiKey(K[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4373" source="org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.keyvalue.TiedMapEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4374" source="org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode()" target="org.apache.commons.collections4.keyvalue.TiedMapEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4375" source="org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode()" target="org.apache.commons.collections4.keyvalue.TiedMapEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4376" source="org.apache.commons.collections4.keyvalue.TiedMapEntry.toString()" target="org.apache.commons.collections4.keyvalue.TiedMapEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4377" source="org.apache.commons.collections4.keyvalue.TiedMapEntry.toString()" target="org.apache.commons.collections4.keyvalue.TiedMapEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4378" source="org.apache.commons.collections4.keyvalue.TiedMapEntryTest()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4379" source="org.apache.commons.collections4.keyvalue.TiedMapEntryTest.makeMapEntry(K,V)" target="org.apache.commons.collections4.keyvalue.TiedMapEntry(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4380" source="org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testSetValue()" target="org.apache.commons.collections4.keyvalue.TiedMapEntry(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4381" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(K,V)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4382" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(java.util.Map$Entry)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4383" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4384" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.KeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4385" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(org.apache.commons.collections4.KeyValue)" target="org.apache.commons.collections4.KeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4386" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest()" target="org.apache.commons.collections4.keyvalue.AbstractMapEntryTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4387" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.makeMapEntry()" target="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4388" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.makeMapEntry(K,V)" target="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4389" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testAccessorsAndMutators()" target="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.makeMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4390" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4391" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4392" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(org.apache.commons.collections4.KeyValue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4393" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testConstructors()" target="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry(java.util.Map$Entry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4394" source="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testUnmodifiable()" target="org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.makeMapEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4395" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator(org.apache.commons.collections4.list.AbstractLinkedList,int)" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4396" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4397" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4398" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4399" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4400" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4401" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4402" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previousIndex()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4403" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.add(E)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4404" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.add(E)" target="org.apache.commons.collections4.list.AbstractLinkedList.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4405" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.remove()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4406" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.remove()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4407" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.remove()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.getLastNodeReturned()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4408" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.set(E)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4409" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.set(E)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.getLastNodeReturned()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4410" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.set(E)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.setValue(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4411" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList(org.apache.commons.collections4.list.AbstractLinkedList,int,int)" target="org.apache.commons.collections4.list.AbstractLinkedList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4412" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.get(int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.rangeCheck(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4413" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.get(int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4414" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.get(int)" target="org.apache.commons.collections4.list.AbstractLinkedList.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4415" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.remove(int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.rangeCheck(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4416" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.remove(int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4417" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.remove(int)" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4418" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.set(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.rangeCheck(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4419" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.set(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4420" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.set(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4421" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.rangeCheck(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4422" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4423" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4424" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.addAll(java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.addAll(int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4425" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.size()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4426" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.iterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4427" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.iterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.createSubListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4428" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.subList(int,int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList(org.apache.commons.collections4.list.AbstractLinkedList,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4429" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.listIterator(int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.rangeCheck(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4430" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.listIterator(int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4431" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.listIterator(int)" target="org.apache.commons.collections4.list.AbstractLinkedList.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4432" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.add(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.rangeCheck(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4433" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.add(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4434" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.add(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4435" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.clear()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4436" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.clear()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4437" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator(org.apache.commons.collections4.list.AbstractLinkedList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4438" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.hasNext()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4439" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.hasPrevious()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previousIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4440" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.nextIndex()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4441" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.add(E)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4442" source="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.remove()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4443" source="org.apache.commons.collections4.list.AbstractLinkedList(java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4444" source="org.apache.commons.collections4.list.AbstractLinkedList(java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4445" source="org.apache.commons.collections4.list.AbstractLinkedList.toArray(T[])" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4446" source="org.apache.commons.collections4.list.AbstractLinkedList.get(int)" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4447" source="org.apache.commons.collections4.list.AbstractLinkedList.get(int)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4448" source="org.apache.commons.collections4.list.AbstractLinkedList.getFirst()" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4449" source="org.apache.commons.collections4.list.AbstractLinkedList.getLast()" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4450" source="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4451" source="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4452" source="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4453" source="org.apache.commons.collections4.list.AbstractLinkedList.removeFirst()" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4454" source="org.apache.commons.collections4.list.AbstractLinkedList.removeFirst()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4455" source="org.apache.commons.collections4.list.AbstractLinkedList.removeLast()" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4456" source="org.apache.commons.collections4.list.AbstractLinkedList.removeLast()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4457" source="org.apache.commons.collections4.list.AbstractLinkedList.set(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4458" source="org.apache.commons.collections4.list.AbstractLinkedList.set(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4459" source="org.apache.commons.collections4.list.AbstractLinkedList.set(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4460" source="org.apache.commons.collections4.list.AbstractLinkedList.add(E)" target="org.apache.commons.collections4.list.AbstractLinkedList.addLast(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4461" source="org.apache.commons.collections4.list.AbstractLinkedList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4462" source="org.apache.commons.collections4.list.AbstractLinkedList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4463" source="org.apache.commons.collections4.list.AbstractLinkedList.addAll(java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4464" source="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)" target="org.apache.commons.collections4.list.AbstractLinkedList.addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4465" source="org.apache.commons.collections4.list.AbstractLinkedList.addLast(E)" target="org.apache.commons.collections4.list.AbstractLinkedList.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4466" source="org.apache.commons.collections4.list.AbstractLinkedList.contains(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4467" source="org.apache.commons.collections4.list.AbstractLinkedList.containsAll(java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4468" source="org.apache.commons.collections4.list.AbstractLinkedList.equals(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4469" source="org.apache.commons.collections4.list.AbstractLinkedList.equals(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4470" source="org.apache.commons.collections4.list.AbstractLinkedList.isEmpty()" target="org.apache.commons.collections4.list.AbstractLinkedList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4471" source="org.apache.commons.collections4.list.AbstractLinkedList.remove(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList.isEqualValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4472" source="org.apache.commons.collections4.list.AbstractLinkedList.remove(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4473" source="org.apache.commons.collections4.list.AbstractLinkedList.remove(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4474" source="org.apache.commons.collections4.list.AbstractLinkedList.removeAll(java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4475" source="org.apache.commons.collections4.list.AbstractLinkedList.retainAll(java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4476" source="org.apache.commons.collections4.list.AbstractLinkedList.indexOf(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList.isEqualValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4477" source="org.apache.commons.collections4.list.AbstractLinkedList.indexOf(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4478" source="org.apache.commons.collections4.list.AbstractLinkedList.lastIndexOf(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList.isEqualValue(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4479" source="org.apache.commons.collections4.list.AbstractLinkedList.lastIndexOf(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4480" source="org.apache.commons.collections4.list.AbstractLinkedList.toArray()" target="org.apache.commons.collections4.list.AbstractLinkedList.toArray(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4481" source="org.apache.commons.collections4.list.AbstractLinkedList.toString()" target="org.apache.commons.collections4.list.AbstractLinkedList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4482" source="org.apache.commons.collections4.list.AbstractLinkedList.toString()" target="org.apache.commons.collections4.list.AbstractLinkedList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4483" source="org.apache.commons.collections4.list.AbstractLinkedList.createSubListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList)" target="org.apache.commons.collections4.list.AbstractLinkedList.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4484" source="org.apache.commons.collections4.list.AbstractLinkedList.iterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4485" source="org.apache.commons.collections4.list.AbstractLinkedList.subList(int,int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList(org.apache.commons.collections4.list.AbstractLinkedList,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4486" source="org.apache.commons.collections4.list.AbstractLinkedList.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4487" source="org.apache.commons.collections4.list.AbstractLinkedList.listIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator(org.apache.commons.collections4.list.AbstractLinkedList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4488" source="org.apache.commons.collections4.list.AbstractLinkedList.listIterator(int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator(org.apache.commons.collections4.list.AbstractLinkedList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4489" source="org.apache.commons.collections4.list.AbstractLinkedList.createHeaderNode()" target="org.apache.commons.collections4.list.AbstractLinkedList$Node()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4490" source="org.apache.commons.collections4.list.AbstractLinkedList.createNode(E)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4491" source="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4492" source="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4493" source="org.apache.commons.collections4.list.AbstractLinkedList.addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.createNode(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4494" source="org.apache.commons.collections4.list.AbstractLinkedList.addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4495" source="org.apache.commons.collections4.list.AbstractLinkedList.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.createNode(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4496" source="org.apache.commons.collections4.list.AbstractLinkedList.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4497" source="org.apache.commons.collections4.list.AbstractLinkedList.clear()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeAllNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4498" source="org.apache.commons.collections4.list.AbstractLinkedList.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.list.AbstractLinkedList.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4499" source="org.apache.commons.collections4.list.AbstractLinkedList.doReadObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4500" source="org.apache.commons.collections4.list.AbstractLinkedList.doWriteObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.list.AbstractLinkedList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4501" source="org.apache.commons.collections4.list.AbstractLinkedList.init()" target="org.apache.commons.collections4.list.AbstractLinkedList.createHeaderNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4502" source="org.apache.commons.collections4.list.AbstractLinkedList.updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.setValue(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4503" source="org.apache.commons.collections4.list.AbstractLinkedListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4504" source="org.apache.commons.collections4.list.AbstractLinkedListTest.getCollection()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4505" source="org.apache.commons.collections4.list.AbstractLinkedListTest.checkNodes()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4506" source="org.apache.commons.collections4.list.AbstractLinkedListTest.checkNodes()" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4507" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4508" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4509" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4510" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4511" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList.addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4512" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4513" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList.getFirst()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4514" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList.getLast()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4515" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeFirst()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4516" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.checkNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4517" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testAddNodeAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4518" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testGetNode()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4519" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testGetNode()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4520" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testGetNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4521" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testGetNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4522" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testGetNode()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.checkNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4523" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testGetNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4524" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testGetNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4525" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4526" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveFirst()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4527" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4528" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveFirst()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeFirst()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4529" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveFirst()" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4530" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveFirst()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.checkNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4531" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveFirst()" target="org.apache.commons.collections4.list.AbstractLinkedList.addLast(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4532" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4533" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveLast()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4534" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4535" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveLast()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeLast()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4536" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveLast()" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4537" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveLast()" target="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4538" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveLast()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.checkNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4539" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveLast()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeFirst()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4540" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4541" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4542" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4543" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4544" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4545" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4546" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4547" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.checkNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4548" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.getFirst()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4549" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.getLast()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4550" source="org.apache.commons.collections4.list.AbstractLinkedListTest.testRemoveNode()" target="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4551" source="org.apache.commons.collections4.list.AbstractListDecorator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4552" source="org.apache.commons.collections4.list.AbstractListDecorator(java.util.List)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4553" source="org.apache.commons.collections4.list.AbstractListDecorator.get(int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4554" source="org.apache.commons.collections4.list.AbstractListDecorator.remove(int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4555" source="org.apache.commons.collections4.list.AbstractListDecorator.set(int,E)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4556" source="org.apache.commons.collections4.list.AbstractListDecorator.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4557" source="org.apache.commons.collections4.list.AbstractListDecorator.indexOf(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4558" source="org.apache.commons.collections4.list.AbstractListDecorator.lastIndexOf(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4559" source="org.apache.commons.collections4.list.AbstractListDecorator.decorated()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4560" source="org.apache.commons.collections4.list.AbstractListDecorator.subList(int,int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4561" source="org.apache.commons.collections4.list.AbstractListDecorator.listIterator()" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4562" source="org.apache.commons.collections4.list.AbstractListDecorator.listIterator(int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4563" source="org.apache.commons.collections4.list.AbstractListDecorator.add(int,E)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4564" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList(org.apache.commons.collections4.list.AbstractListTest)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4565" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.getFullElements()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4566" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.getOtherElements()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4567" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.isAddSupported()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4568" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.isRemoveSupported()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4569" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.isSetSupported()" target="org.apache.commons.collections4.list.AbstractListTest.isSetSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4570" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.makeFullCollection()" target="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4571" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.makeFullCollection()" target="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4572" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.makeObject()" target="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4573" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4574" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4575" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetEmpty()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4576" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4577" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetEmpty()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4578" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4579" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetFull()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4580" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4581" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetFull()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4582" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4583" source="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList.verify()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4584" source="org.apache.commons.collections4.list.AbstractListTest$TestListIterator()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4585" source="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.addSetValue()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4586" source="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.supportsAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4587" source="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.supportsRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4588" source="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.supportsSet()" target="org.apache.commons.collections4.list.AbstractListTest.isSetSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4589" source="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.makeEmptyIterator()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4590" source="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.makeEmptyIterator()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4591" source="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.makeObject()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4592" source="org.apache.commons.collections4.list.AbstractListTest$TestListIterator.makeObject()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4593" source="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4594" source="org.apache.commons.collections4.list.AbstractListTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4595" source="org.apache.commons.collections4.list.AbstractListTest.getCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4596" source="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4597" source="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()" target="org.apache.commons.collections4.list.AbstractListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4598" source="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4599" source="org.apache.commons.collections4.list.AbstractListTest.bulkTestListIterator()" target="org.apache.commons.collections4.list.AbstractListTest$TestListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4600" source="org.apache.commons.collections4.list.AbstractListTest.bulkTestSubList()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4601" source="org.apache.commons.collections4.list.AbstractListTest.bulkTestSubList()" target="org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList(org.apache.commons.collections4.list.AbstractListTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4602" source="org.apache.commons.collections4.list.AbstractListTest.backwardTest(java.util.ListIterator,int)" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4603" source="org.apache.commons.collections4.list.AbstractListTest.failFastAll(java.util.List)" target="org.apache.commons.collections4.list.AbstractListTest.failFastMethod(java.util.List,java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4604" source="org.apache.commons.collections4.list.AbstractListTest.failFastMethod(java.util.List,java.lang.reflect.Method)" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4605" source="org.apache.commons.collections4.list.AbstractListTest.forwardTest(java.util.ListIterator,int)" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4606" source="org.apache.commons.collections4.list.AbstractListTest.forwardTest(java.util.ListIterator,int)" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4607" source="org.apache.commons.collections4.list.AbstractListTest.testEmptyListCompatibility()" target="org.apache.commons.collections4.list.AbstractListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4608" source="org.apache.commons.collections4.list.AbstractListTest.testEmptyListCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4609" source="org.apache.commons.collections4.list.AbstractListTest.testEmptyListCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4610" source="org.apache.commons.collections4.list.AbstractListTest.testEmptyListCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4611" source="org.apache.commons.collections4.list.AbstractListTest.testEmptyListCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4612" source="org.apache.commons.collections4.list.AbstractListTest.testEmptyListSerialization()" target="org.apache.commons.collections4.list.AbstractListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4613" source="org.apache.commons.collections4.list.AbstractListTest.testEmptyListSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4614" source="org.apache.commons.collections4.list.AbstractListTest.testEmptyListSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToBytes(java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4615" source="org.apache.commons.collections4.list.AbstractListTest.testEmptyListSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromBytes(byte[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4616" source="org.apache.commons.collections4.list.AbstractListTest.testFullListCompatibility()" target="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4617" source="org.apache.commons.collections4.list.AbstractListTest.testFullListCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4618" source="org.apache.commons.collections4.list.AbstractListTest.testFullListCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4619" source="org.apache.commons.collections4.list.AbstractListTest.testFullListCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4620" source="org.apache.commons.collections4.list.AbstractListTest.testFullListCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4621" source="org.apache.commons.collections4.list.AbstractListTest.testFullListSerialization()" target="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4622" source="org.apache.commons.collections4.list.AbstractListTest.testFullListSerialization()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4623" source="org.apache.commons.collections4.list.AbstractListTest.testFullListSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4624" source="org.apache.commons.collections4.list.AbstractListTest.testFullListSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToBytes(java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4625" source="org.apache.commons.collections4.list.AbstractListTest.testFullListSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromBytes(byte[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4626" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4627" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4628" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4629" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4630" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4631" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4632" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4633" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndexBoundsChecking()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4634" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndexBoundsChecking()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4635" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndexBoundsChecking()" target="org.apache.commons.collections4.list.AbstractListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4636" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndexBoundsChecking2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4637" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndexBoundsChecking2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4638" source="org.apache.commons.collections4.list.AbstractListTest.testListAddByIndexBoundsChecking2()" target="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4639" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4640" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4641" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4642" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4643" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4644" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4645" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4646" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.list.AbstractListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4647" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4648" source="org.apache.commons.collections4.list.AbstractListTest.testListEquals()" target="org.apache.commons.collections4.list.AbstractListTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4649" source="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4650" source="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4651" source="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4652" source="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4653" source="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndexBoundsChecking()" target="org.apache.commons.collections4.list.AbstractListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4654" source="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndexBoundsChecking2()" target="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4655" source="org.apache.commons.collections4.list.AbstractListTest.testListGetByIndexBoundsChecking2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4656" source="org.apache.commons.collections4.list.AbstractListTest.testListHashCode()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4657" source="org.apache.commons.collections4.list.AbstractListTest.testListHashCode()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4658" source="org.apache.commons.collections4.list.AbstractListTest.testListHashCode()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4659" source="org.apache.commons.collections4.list.AbstractListTest.testListHashCode()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4660" source="org.apache.commons.collections4.list.AbstractListTest.testListHashCode()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4661" source="org.apache.commons.collections4.list.AbstractListTest.testListIndexOf()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4662" source="org.apache.commons.collections4.list.AbstractListTest.testListIndexOf()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4663" source="org.apache.commons.collections4.list.AbstractListTest.testListIndexOf()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4664" source="org.apache.commons.collections4.list.AbstractListTest.testListIndexOf()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4665" source="org.apache.commons.collections4.list.AbstractListTest.testListIndexOf()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4666" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4667" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4668" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorAdd()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4669" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorAdd()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4670" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4671" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorAdd()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4672" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4673" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorSet()" target="org.apache.commons.collections4.list.AbstractListTest.isSetSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4674" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorSet()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4675" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorSet()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4676" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorSet()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4677" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorSet()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4678" source="org.apache.commons.collections4.list.AbstractListTest.testListIteratorSet()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4679" source="org.apache.commons.collections4.list.AbstractListTest.testListLastIndexOf()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4680" source="org.apache.commons.collections4.list.AbstractListTest.testListLastIndexOf()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4681" source="org.apache.commons.collections4.list.AbstractListTest.testListLastIndexOf()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4682" source="org.apache.commons.collections4.list.AbstractListTest.testListLastIndexOf()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4683" source="org.apache.commons.collections4.list.AbstractListTest.testListLastIndexOf()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4684" source="org.apache.commons.collections4.list.AbstractListTest.testListListIterator()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4685" source="org.apache.commons.collections4.list.AbstractListTest.testListListIterator()" target="org.apache.commons.collections4.list.AbstractListTest.forwardTest(java.util.ListIterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4686" source="org.apache.commons.collections4.list.AbstractListTest.testListListIterator()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4687" source="org.apache.commons.collections4.list.AbstractListTest.testListListIterator()" target="org.apache.commons.collections4.list.AbstractListTest.backwardTest(java.util.ListIterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4688" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4689" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4690" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4691" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.forwardTest(java.util.ListIterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4692" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.backwardTest(java.util.ListIterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4693" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorNextRemoveNext()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4694" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorNextRemoveNext()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4695" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorNextRemoveNext()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4696" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorNextRemovePrevious()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4697" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorNextRemovePrevious()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4698" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorNextRemovePrevious()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4699" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorPreviousRemoveNext()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4700" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorPreviousRemoveNext()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4701" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorPreviousRemoveNext()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4702" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorPreviousRemovePrevious()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4703" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorPreviousRemovePrevious()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4704" source="org.apache.commons.collections4.list.AbstractListTest.testListListIteratorPreviousRemovePrevious()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4705" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4706" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4707" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4708" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4709" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4710" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4711" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndexBoundsChecking()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4712" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndexBoundsChecking()" target="org.apache.commons.collections4.list.AbstractListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4713" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndexBoundsChecking2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4714" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndexBoundsChecking2()" target="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4715" source="org.apache.commons.collections4.list.AbstractListTest.testListRemoveByIndexBoundsChecking2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4716" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.isSetSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4717" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4718" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4719" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4720" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4721" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4722" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4723" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndexBoundsChecking()" target="org.apache.commons.collections4.list.AbstractListTest.isSetSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4724" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndexBoundsChecking()" target="org.apache.commons.collections4.list.AbstractListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4725" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndexBoundsChecking()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4726" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndexBoundsChecking2()" target="org.apache.commons.collections4.list.AbstractListTest.isSetSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4727" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndexBoundsChecking2()" target="org.apache.commons.collections4.list.AbstractListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4728" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndexBoundsChecking2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4729" source="org.apache.commons.collections4.list.AbstractListTest.testListSetByIndexBoundsChecking2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4730" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isFailFastSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4731" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4732" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4733" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnAdd()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4734" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4735" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnAdd()" target="org.apache.commons.collections4.list.AbstractListTest.failFastAll(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4736" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isFailFastSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4737" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4738" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4739" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnRemove()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4740" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnRemove()" target="org.apache.commons.collections4.list.AbstractListTest.failFastAll(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4741" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4742" source="org.apache.commons.collections4.list.AbstractListTest.testListSubListFailFastOnRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4743" source="org.apache.commons.collections4.list.AbstractListTest.testUnsupportedSet()" target="org.apache.commons.collections4.list.AbstractListTest.isSetSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4744" source="org.apache.commons.collections4.list.AbstractListTest.testUnsupportedSet()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4745" source="org.apache.commons.collections4.list.AbstractListTest.testUnsupportedSet()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4746" source="org.apache.commons.collections4.list.AbstractListTest.testUnsupportedSet()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4747" source="org.apache.commons.collections4.list.AbstractListTest.testUnsupportedSet()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4748" source="org.apache.commons.collections4.list.AbstractListTest.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4749" source="org.apache.commons.collections4.list.AbstractListTest.verify()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4750" source="org.apache.commons.collections4.list.AbstractListTest.verify()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4751" source="org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)" target="org.apache.commons.collections4.list.AbstractListDecorator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4752" source="org.apache.commons.collections4.list.AbstractSerializableListDecorator.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4753" source="org.apache.commons.collections4.list.AbstractSerializableListDecorator.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4754" source="org.apache.commons.collections4.list.CursorableLinkedList$Cursor(org.apache.commons.collections4.list.CursorableLinkedList,int)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator(org.apache.commons.collections4.list.AbstractLinkedList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4755" source="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nextIndex()" target="org.apache.commons.collections4.list.AbstractLinkedList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4756" source="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.add(E)" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4757" source="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.close()" target="org.apache.commons.collections4.list.CursorableLinkedList.unregisterCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4758" source="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4759" source="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4760" source="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.getLastNodeReturned()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4761" source="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor(org.apache.commons.collections4.list.CursorableLinkedList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4762" source="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.hasNext()" target="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4763" source="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.hasPrevious()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previousIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4764" source="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.nextIndex()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4765" source="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.add(E)" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4766" source="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.remove()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4767" source="org.apache.commons.collections4.list.CursorableLinkedList()" target="org.apache.commons.collections4.list.AbstractLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4768" source="org.apache.commons.collections4.list.CursorableLinkedList()" target="org.apache.commons.collections4.list.CursorableLinkedList.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4769" source="org.apache.commons.collections4.list.CursorableLinkedList(java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4770" source="org.apache.commons.collections4.list.CursorableLinkedList.iterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.listIterator(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4771" source="org.apache.commons.collections4.list.CursorableLinkedList.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)" target="org.apache.commons.collections4.list.CursorableLinkedList$SubCursor(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4772" source="org.apache.commons.collections4.list.CursorableLinkedList.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList,int)" target="org.apache.commons.collections4.list.CursorableLinkedList.registerCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4773" source="org.apache.commons.collections4.list.CursorableLinkedList.listIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4774" source="org.apache.commons.collections4.list.CursorableLinkedList.listIterator(int)" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4775" source="org.apache.commons.collections4.list.CursorableLinkedList.cursor()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4776" source="org.apache.commons.collections4.list.CursorableLinkedList.cursor(int)" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor(org.apache.commons.collections4.list.CursorableLinkedList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4777" source="org.apache.commons.collections4.list.CursorableLinkedList.cursor(int)" target="org.apache.commons.collections4.list.CursorableLinkedList.registerCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4778" source="org.apache.commons.collections4.list.CursorableLinkedList.addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.AbstractLinkedList.addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4779" source="org.apache.commons.collections4.list.CursorableLinkedList.addNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4780" source="org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4781" source="org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4782" source="org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4783" source="org.apache.commons.collections4.list.CursorableLinkedList.init()" target="org.apache.commons.collections4.list.AbstractLinkedList.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4784" source="org.apache.commons.collections4.list.CursorableLinkedList.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.list.AbstractLinkedList.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4785" source="org.apache.commons.collections4.list.CursorableLinkedList.removeAllNodes()" target="org.apache.commons.collections4.list.AbstractLinkedList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4786" source="org.apache.commons.collections4.list.CursorableLinkedList.removeAllNodes()" target="org.apache.commons.collections4.list.CursorableLinkedList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4787" source="org.apache.commons.collections4.list.CursorableLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4788" source="org.apache.commons.collections4.list.CursorableLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4789" source="org.apache.commons.collections4.list.CursorableLinkedList.updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)" target="org.apache.commons.collections4.list.AbstractLinkedList.updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4790" source="org.apache.commons.collections4.list.CursorableLinkedList.updateNode(org.apache.commons.collections4.list.AbstractLinkedList$Node,E)" target="org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4791" source="org.apache.commons.collections4.list.CursorableLinkedList.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.list.AbstractLinkedList.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4792" source="org.apache.commons.collections4.list.CursorableLinkedListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractLinkedListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4793" source="org.apache.commons.collections4.list.CursorableLinkedListTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4794" source="org.apache.commons.collections4.list.CursorableLinkedListTest.makeObject()" target="org.apache.commons.collections4.list.CursorableLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4795" source="org.apache.commons.collections4.list.CursorableLinkedListTest.setUp()" target="org.apache.commons.collections4.list.CursorableLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4796" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4797" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4798" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4799" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList.addLast(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4800" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4801" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4802" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4803" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testClear()" target="org.apache.commons.collections4.list.AbstractLinkedList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4804" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testClear()" target="org.apache.commons.collections4.list.AbstractLinkedList.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4805" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testClear()" target="org.apache.commons.collections4.list.AbstractLinkedList.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4806" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testClear()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4807" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testContains()" target="org.apache.commons.collections4.list.AbstractLinkedList.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4808" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testContains()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4809" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testContains()" target="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4810" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testContains()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4811" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll()" target="org.apache.commons.collections4.list.AbstractLinkedList.containsAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4812" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4813" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4814" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4815" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4816" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4817" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4818" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4819" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4820" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification()" target="org.apache.commons.collections4.list.CursorableLinkedList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4821" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4822" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4823" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4824" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4825" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4826" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4827" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4828" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4829" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4830" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4831" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4832" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4833" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4834" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4835" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4836" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4837" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4838" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4839" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4840" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4841" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4842" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4843" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4844" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4845" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4846" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4847" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4848" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4849" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4850" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4851" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4852" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4853" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4854" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4855" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid()" target="org.apache.commons.collections4.list.CursorableLinkedList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4856" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4857" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4858" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4859" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4860" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4861" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4862" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4863" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4864" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4865" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4866" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4867" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4868" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4869" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.set(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4870" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4871" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4872" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4873" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.list.AbstractLinkedList.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4874" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.list.AbstractLinkedList.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4875" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4876" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.list.CursorableLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4877" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode()" target="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4878" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testGet()" target="org.apache.commons.collections4.list.AbstractLinkedList.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4879" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testGet()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4880" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf()" target="org.apache.commons.collections4.list.AbstractLinkedList.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4881" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf()" target="org.apache.commons.collections4.list.AbstractLinkedList.lastIndexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4882" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4883" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf()" target="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4884" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4885" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4886" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4887" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4888" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4889" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4890" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4891" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4892" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4893" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4894" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4895" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4896" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4897" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4898" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4899" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4900" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4901" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4902" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4903" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4904" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4905" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4906" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4907" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4908" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4909" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4910" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4911" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4912" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4913" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4914" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4915" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4916" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4917" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4918" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4919" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4920" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4921" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4922" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4923" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4924" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4925" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4926" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4927" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4928" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4929" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4930" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4931" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4932" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4933" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4934" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4935" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4936" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4937" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4938" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4939" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.set(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4940" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4941" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4942" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4943" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4944" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4945" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4946" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4947" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4948" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4949" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4950" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4951" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4952" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.set(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4953" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4954" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4955" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4956" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4957" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4958" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4959" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4960" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4961" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4962" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.set(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4963" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4964" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4965" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4966" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList.cursor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4967" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4968" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4969" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4970" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList()" target="org.apache.commons.collections4.list.CursorableLinkedList$Cursor.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4971" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty()" target="org.apache.commons.collections4.list.AbstractLinkedList.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4972" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4973" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4974" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty()" target="org.apache.commons.collections4.list.AbstractLinkedList.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4975" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4976" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator()" target="org.apache.commons.collections4.list.CursorableLinkedList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4977" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4978" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd()" target="org.apache.commons.collections4.list.CursorableLinkedList.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4979" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4980" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4981" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation()" target="org.apache.commons.collections4.list.CursorableLinkedList.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4982" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4983" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove()" target="org.apache.commons.collections4.list.CursorableLinkedList.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4984" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4985" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4986" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet()" target="org.apache.commons.collections4.list.CursorableLinkedList.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4987" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4988" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4989" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization()" target="org.apache.commons.collections4.list.AbstractLinkedList.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4990" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4991" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4992" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4993" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4994" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4995" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4996" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4997" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4998" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4999" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5000" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll()" target="org.apache.commons.collections4.list.AbstractLinkedList.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5001" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5002" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5003" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization()" target="org.apache.commons.collections4.list.AbstractLinkedList.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5004" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5005" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor()" target="org.apache.commons.collections4.list.AbstractLinkedList.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5006" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSet()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5007" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSet()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5008" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSet()" target="org.apache.commons.collections4.list.AbstractLinkedList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5009" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5010" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5011" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList()" target="org.apache.commons.collections4.list.AbstractLinkedList.subList(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5012" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5013" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin()" target="org.apache.commons.collections4.list.AbstractLinkedList.subList(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5014" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5015" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5016" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd()" target="org.apache.commons.collections4.list.AbstractLinkedList.subList(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5017" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5018" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5019" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle()" target="org.apache.commons.collections4.list.AbstractLinkedList.subList(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5020" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5021" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5022" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.subList(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5023" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove()" target="org.apache.commons.collections4.list.AbstractLinkedList.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5024" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5025" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray()" target="org.apache.commons.collections4.list.AbstractLinkedList.toArray()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5026" source="org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray()" target="org.apache.commons.collections4.list.AbstractLinkedList.toArray(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5027" source="org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator)" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5028" source="org.apache.commons.collections4.list.FixedSizeList(java.util.List)" target="org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5029" source="org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List)" target="org.apache.commons.collections4.list.FixedSizeList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5030" source="org.apache.commons.collections4.list.FixedSizeList.get(int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5031" source="org.apache.commons.collections4.list.FixedSizeList.set(int,E)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5032" source="org.apache.commons.collections4.list.FixedSizeList.indexOf(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5033" source="org.apache.commons.collections4.list.FixedSizeList.lastIndexOf(java.lang.Object)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5034" source="org.apache.commons.collections4.list.FixedSizeList.maxSize()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5035" source="org.apache.commons.collections4.list.FixedSizeList.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5036" source="org.apache.commons.collections4.list.FixedSizeList.iterator()" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5037" source="org.apache.commons.collections4.list.FixedSizeList.subList(int,int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5038" source="org.apache.commons.collections4.list.FixedSizeList.subList(int,int)" target="org.apache.commons.collections4.list.FixedSizeList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5039" source="org.apache.commons.collections4.list.FixedSizeList.listIterator()" target="org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5040" source="org.apache.commons.collections4.list.FixedSizeList.listIterator()" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5041" source="org.apache.commons.collections4.list.FixedSizeList.listIterator(int)" target="org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5042" source="org.apache.commons.collections4.list.FixedSizeList.listIterator(int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5043" source="org.apache.commons.collections4.list.FixedSizeListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5044" source="org.apache.commons.collections4.list.FixedSizeListTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5045" source="org.apache.commons.collections4.list.FixedSizeListTest.makeFullCollection()" target="org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5046" source="org.apache.commons.collections4.list.FixedSizeListTest.makeObject()" target="org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5047" source="org.apache.commons.collections4.list.GrowthList()" target="org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5048" source="org.apache.commons.collections4.list.GrowthList(int)" target="org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5049" source="org.apache.commons.collections4.list.GrowthList(java.util.List)" target="org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5050" source="org.apache.commons.collections4.list.GrowthList.growthList(java.util.List)" target="org.apache.commons.collections4.list.GrowthList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5051" source="org.apache.commons.collections4.list.GrowthList.set(int,E)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5052" source="org.apache.commons.collections4.list.GrowthList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5053" source="org.apache.commons.collections4.list.GrowthList.add(int,E)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5054" source="org.apache.commons.collections4.list.GrowthListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5055" source="org.apache.commons.collections4.list.GrowthListTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5056" source="org.apache.commons.collections4.list.GrowthListTest.makeFullCollection()" target="org.apache.commons.collections4.list.GrowthList.growthList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5057" source="org.apache.commons.collections4.list.GrowthListTest.makeObject()" target="org.apache.commons.collections4.list.GrowthList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5058" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd()" target="org.apache.commons.collections4.list.GrowthList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5059" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5060" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd()" target="org.apache.commons.collections4.list.GrowthList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5061" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd()" target="org.apache.commons.collections4.list.AbstractListDecorator.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5062" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll()" target="org.apache.commons.collections4.list.GrowthList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5063" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5064" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll()" target="org.apache.commons.collections4.list.GrowthList.addAll(int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5065" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll()" target="org.apache.commons.collections4.list.AbstractListDecorator.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5066" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1()" target="org.apache.commons.collections4.list.GrowthList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5067" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5068" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1()" target="org.apache.commons.collections4.list.GrowthList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5069" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1()" target="org.apache.commons.collections4.list.AbstractListDecorator.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5070" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2()" target="org.apache.commons.collections4.list.GrowthList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5071" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5072" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2()" target="org.apache.commons.collections4.list.GrowthList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5073" source="org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2()" target="org.apache.commons.collections4.list.AbstractListDecorator.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5074" source="org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5075" source="org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking()" target="org.apache.commons.collections4.list.GrowthListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5076" source="org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5077" source="org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2()" target="org.apache.commons.collections4.list.GrowthListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5078" source="org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking()" target="org.apache.commons.collections4.list.GrowthListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5079" source="org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5080" source="org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2()" target="org.apache.commons.collections4.list.GrowthListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5081" source="org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5082" source="org.apache.commons.collections4.list.LazyList(java.util.List,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5083" source="org.apache.commons.collections4.list.LazyList.lazyList(java.util.List,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.list.LazyList(java.util.List,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5084" source="org.apache.commons.collections4.list.LazyList.get(int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5085" source="org.apache.commons.collections4.list.LazyList.get(int)" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5086" source="org.apache.commons.collections4.list.LazyList.subList(int,int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5087" source="org.apache.commons.collections4.list.LazyList.subList(int,int)" target="org.apache.commons.collections4.list.LazyList(java.util.List,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5088" source="org.apache.commons.collections4.list.NodeCachingLinkedList()" target="org.apache.commons.collections4.list.NodeCachingLinkedList(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5089" source="org.apache.commons.collections4.list.NodeCachingLinkedList(int)" target="org.apache.commons.collections4.list.AbstractLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5090" source="org.apache.commons.collections4.list.NodeCachingLinkedList(int)" target="org.apache.commons.collections4.list.AbstractLinkedList.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5091" source="org.apache.commons.collections4.list.NodeCachingLinkedList(java.util.Collection)" target="org.apache.commons.collections4.list.AbstractLinkedList(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5092" source="org.apache.commons.collections4.list.NodeCachingLinkedList.createNode(E)" target="org.apache.commons.collections4.list.NodeCachingLinkedList.getNodeFromCache()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5093" source="org.apache.commons.collections4.list.NodeCachingLinkedList.createNode(E)" target="org.apache.commons.collections4.list.AbstractLinkedList.createNode(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5094" source="org.apache.commons.collections4.list.NodeCachingLinkedList.createNode(E)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.setValue(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5095" source="org.apache.commons.collections4.list.NodeCachingLinkedList.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.NodeCachingLinkedList.isCacheFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5096" source="org.apache.commons.collections4.list.NodeCachingLinkedList.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.AbstractLinkedList$Node.setValue(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5097" source="org.apache.commons.collections4.list.NodeCachingLinkedList.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.list.AbstractLinkedList.doReadObject(java.io.ObjectInputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5098" source="org.apache.commons.collections4.list.NodeCachingLinkedList.removeAllNodes()" target="org.apache.commons.collections4.list.NodeCachingLinkedList.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5099" source="org.apache.commons.collections4.list.NodeCachingLinkedList.removeAllNodes()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeAllNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5100" source="org.apache.commons.collections4.list.NodeCachingLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.AbstractLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5101" source="org.apache.commons.collections4.list.NodeCachingLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)" target="org.apache.commons.collections4.list.NodeCachingLinkedList.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5102" source="org.apache.commons.collections4.list.NodeCachingLinkedList.setMaximumCacheSize(int)" target="org.apache.commons.collections4.list.NodeCachingLinkedList.shrinkCacheToMaximumSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5103" source="org.apache.commons.collections4.list.NodeCachingLinkedList.shrinkCacheToMaximumSize()" target="org.apache.commons.collections4.list.NodeCachingLinkedList.getNodeFromCache()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5104" source="org.apache.commons.collections4.list.NodeCachingLinkedList.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.list.AbstractLinkedList.doWriteObject(java.io.ObjectOutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5105" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractLinkedListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5106" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5107" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.getCollection()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5108" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.makeObject()" target="org.apache.commons.collections4.list.NodeCachingLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5109" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.compareSpeed()" target="org.apache.commons.collections4.list.NodeCachingLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5110" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.compareSpeed()" target="org.apache.commons.collections4.list.AbstractLinkedList.addFirst(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5111" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.compareSpeed()" target="org.apache.commons.collections4.list.AbstractLinkedList.addLast(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5112" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.compareSpeed()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeFirst()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5113" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.compareSpeed()" target="org.apache.commons.collections4.list.AbstractLinkedList.removeLast()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5114" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.compareSpeed()" target="org.apache.commons.collections4.list.AbstractLinkedList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5115" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.compareSpeed()" target="org.apache.commons.collections4.list.AbstractLinkedList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5116" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5117" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5118" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5119" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.list.NodeCachingLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5120" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.list.AbstractLinkedList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5121" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.list.NodeCachingLinkedList.removeAllNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5122" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.list.NodeCachingLinkedList.setMaximumCacheSize(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5123" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.list.AbstractLinkedListTest.checkNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5124" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.list.NodeCachingLinkedList.removeNode(org.apache.commons.collections4.list.AbstractLinkedList$Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5125" source="org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache()" target="org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5126" source="org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator(java.util.ListIterator)" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5127" source="org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator.add(E)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5128" source="org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator.add(E)" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.getListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5129" source="org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator.set(E)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5130" source="org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator.set(E)" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.getListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5131" source="org.apache.commons.collections4.list.PredicatedList(java.util.List,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.collection.PredicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5132" source="org.apache.commons.collections4.list.PredicatedList.predicatedList(java.util.List,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.list.PredicatedList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5133" source="org.apache.commons.collections4.list.PredicatedList.get(int)" target="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5134" source="org.apache.commons.collections4.list.PredicatedList.remove(int)" target="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5135" source="org.apache.commons.collections4.list.PredicatedList.set(int,E)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5136" source="org.apache.commons.collections4.list.PredicatedList.set(int,E)" target="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5137" source="org.apache.commons.collections4.list.PredicatedList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5138" source="org.apache.commons.collections4.list.PredicatedList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5139" source="org.apache.commons.collections4.list.PredicatedList.indexOf(java.lang.Object)" target="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5140" source="org.apache.commons.collections4.list.PredicatedList.lastIndexOf(java.lang.Object)" target="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5141" source="org.apache.commons.collections4.list.PredicatedList.decorated()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5142" source="org.apache.commons.collections4.list.PredicatedList.subList(int,int)" target="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5143" source="org.apache.commons.collections4.list.PredicatedList.subList(int,int)" target="org.apache.commons.collections4.list.PredicatedList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5144" source="org.apache.commons.collections4.list.PredicatedList.listIterator()" target="org.apache.commons.collections4.list.PredicatedList.listIterator(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5145" source="org.apache.commons.collections4.list.PredicatedList.listIterator(int)" target="org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5146" source="org.apache.commons.collections4.list.PredicatedList.listIterator(int)" target="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5147" source="org.apache.commons.collections4.list.PredicatedList.add(int,E)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5148" source="org.apache.commons.collections4.list.PredicatedList.add(int,E)" target="org.apache.commons.collections4.list.PredicatedList.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5149" source="org.apache.commons.collections4.list.PredicatedListTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5150" source="org.apache.commons.collections4.list.PredicatedListTest#testPredicate" target="org.apache.commons.collections4.list.PredicatedListTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5151" source="org.apache.commons.collections4.list.PredicatedListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5152" source="org.apache.commons.collections4.list.PredicatedListTest.decorateList(java.util.List,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.list.PredicatedList.predicatedList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5153" source="org.apache.commons.collections4.list.PredicatedListTest.makeObject()" target="org.apache.commons.collections4.list.PredicatedListTest.decorateList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5154" source="org.apache.commons.collections4.list.PredicatedListTest.makeTestList()" target="org.apache.commons.collections4.list.PredicatedListTest.decorateList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5155" source="org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd()" target="org.apache.commons.collections4.list.PredicatedListTest.makeTestList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5156" source="org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll()" target="org.apache.commons.collections4.list.PredicatedListTest.makeTestList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5157" source="org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet()" target="org.apache.commons.collections4.list.PredicatedListTest.makeTestList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5158" source="org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll()" target="org.apache.commons.collections4.list.PredicatedListTest.makeTestList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5159" source="org.apache.commons.collections4.list.SetUniqueList$SetListIterator(java.util.Iterator,java.util.Set)" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5160" source="org.apache.commons.collections4.list.SetUniqueList$SetListIterator.next()" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5161" source="org.apache.commons.collections4.list.SetUniqueList$SetListIterator.remove()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5162" source="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator(java.util.ListIterator,java.util.Set)" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5163" source="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.next()" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5164" source="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.previous()" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5165" source="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.add(E)" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5166" source="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.remove()" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5167" source="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)" target="org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5168" source="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5169" source="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)" target="org.apache.commons.collections4.list.SetUniqueList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5170" source="org.apache.commons.collections4.list.SetUniqueList.remove(int)" target="org.apache.commons.collections4.list.AbstractListDecorator.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5171" source="org.apache.commons.collections4.list.SetUniqueList.set(int,E)" target="org.apache.commons.collections4.list.AbstractListDecorator.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5172" source="org.apache.commons.collections4.list.SetUniqueList.set(int,E)" target="org.apache.commons.collections4.list.AbstractListDecorator.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5173" source="org.apache.commons.collections4.list.SetUniqueList.set(int,E)" target="org.apache.commons.collections4.list.AbstractListDecorator.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5174" source="org.apache.commons.collections4.list.SetUniqueList.add(E)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5175" source="org.apache.commons.collections4.list.SetUniqueList.add(E)" target="org.apache.commons.collections4.list.SetUniqueList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5176" source="org.apache.commons.collections4.list.SetUniqueList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.AbstractListDecorator.addAll(int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5177" source="org.apache.commons.collections4.list.SetUniqueList.addAll(java.util.Collection)" target="org.apache.commons.collections4.list.SetUniqueList.addAll(int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5178" source="org.apache.commons.collections4.list.SetUniqueList.addAll(java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5179" source="org.apache.commons.collections4.list.SetUniqueList.remove(java.lang.Object)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5180" source="org.apache.commons.collections4.list.SetUniqueList.removeAll(java.util.Collection)" target="org.apache.commons.collections4.list.SetUniqueList.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5181" source="org.apache.commons.collections4.list.SetUniqueList.retainAll(java.util.Collection)" target="org.apache.commons.collections4.list.SetUniqueList.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5182" source="org.apache.commons.collections4.list.SetUniqueList.retainAll(java.util.Collection)" target="org.apache.commons.collections4.list.SetUniqueList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5183" source="org.apache.commons.collections4.list.SetUniqueList.iterator()" target="org.apache.commons.collections4.list.SetUniqueList$SetListIterator(java.util.Iterator,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5184" source="org.apache.commons.collections4.list.SetUniqueList.iterator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5185" source="org.apache.commons.collections4.list.SetUniqueList.subList(int,int)" target="org.apache.commons.collections4.list.AbstractListDecorator.subList(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5186" source="org.apache.commons.collections4.list.SetUniqueList.subList(int,int)" target="org.apache.commons.collections4.list.SetUniqueList.createSetBasedOnList(java.util.Set,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5187" source="org.apache.commons.collections4.list.SetUniqueList.subList(int,int)" target="org.apache.commons.collections4.ListUtils.unmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5188" source="org.apache.commons.collections4.list.SetUniqueList.subList(int,int)" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5189" source="org.apache.commons.collections4.list.SetUniqueList.listIterator()" target="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator(java.util.ListIterator,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5190" source="org.apache.commons.collections4.list.SetUniqueList.listIterator()" target="org.apache.commons.collections4.list.AbstractListDecorator.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5191" source="org.apache.commons.collections4.list.SetUniqueList.listIterator(int)" target="org.apache.commons.collections4.list.SetUniqueList$SetListListIterator(java.util.ListIterator,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5192" source="org.apache.commons.collections4.list.SetUniqueList.listIterator(int)" target="org.apache.commons.collections4.list.AbstractListDecorator.listIterator(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5193" source="org.apache.commons.collections4.list.SetUniqueList.asSet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5194" source="org.apache.commons.collections4.list.SetUniqueList.add(int,E)" target="org.apache.commons.collections4.list.AbstractListDecorator.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5195" source="org.apache.commons.collections4.list.SetUniqueList.clear()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5196" source="org.apache.commons.collections4.list.SetUniqueListTest$SetUniqueList307(java.util.List,java.util.Set)" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5197" source="org.apache.commons.collections4.list.SetUniqueListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5198" source="org.apache.commons.collections4.list.SetUniqueListTest.makeObject()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5199" source="org.apache.commons.collections4.list.SetUniqueListTest.testAdd()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5200" source="org.apache.commons.collections4.list.SetUniqueListTest.testAdd()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5201" source="org.apache.commons.collections4.list.SetUniqueListTest.testAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5202" source="org.apache.commons.collections4.list.SetUniqueListTest.testAddAll()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5203" source="org.apache.commons.collections4.list.SetUniqueListTest.testAddAll()" target="org.apache.commons.collections4.list.SetUniqueList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5204" source="org.apache.commons.collections4.list.SetUniqueListTest.testAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5205" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5206" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5207" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5208" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5209" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll()" target="org.apache.commons.collections4.list.SetUniqueListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5210" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5211" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5212" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.testCollectionIteratorRemove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5213" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollections304()" target="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5214" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollections304()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5215" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollections304()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5216" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollections304()" target="org.apache.commons.collections4.list.SetUniqueList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5217" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollections304()" target="org.apache.commons.collections4.list.SetUniqueList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5218" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollections307()" target="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5219" source="org.apache.commons.collections4.list.SetUniqueListTest.testCollections307()" target="org.apache.commons.collections4.list.SetUniqueListTest$SetUniqueList307(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5220" source="org.apache.commons.collections4.list.SetUniqueListTest.testFactory()" target="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5221" source="org.apache.commons.collections4.list.SetUniqueListTest.testFactory()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5222" source="org.apache.commons.collections4.list.SetUniqueListTest.testFactory()" target="org.apache.commons.collections4.list.AbstractListDecorator.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5223" source="org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5224" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIterator()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5225" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIterator()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5226" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIterator()" target="org.apache.commons.collections4.list.SetUniqueList.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5227" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIterator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5228" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5229" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5230" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5231" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5232" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5233" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5234" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5235" source="org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5236" source="org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5237" source="org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5238" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll()" target="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5239" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5240" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll()" target="org.apache.commons.collections4.list.SetUniqueList.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5241" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5242" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll()" target="org.apache.commons.collections4.list.SetUniqueList.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5243" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427()" target="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5244" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427()" target="org.apache.commons.collections4.list.SetUniqueList.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5245" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList()" target="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5246" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5247" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList()" target="org.apache.commons.collections4.list.SetUniqueList.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5248" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5249" source="org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList()" target="org.apache.commons.collections4.list.SetUniqueList.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5250" source="org.apache.commons.collections4.list.SetUniqueListTest.testSet()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5251" source="org.apache.commons.collections4.list.SetUniqueListTest.testSet()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5252" source="org.apache.commons.collections4.list.SetUniqueListTest.testSet()" target="org.apache.commons.collections4.list.SetUniqueList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5253" source="org.apache.commons.collections4.list.SetUniqueListTest.testSet()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5254" source="org.apache.commons.collections4.list.SetUniqueListTest.testSet()" target="org.apache.commons.collections4.list.AbstractListDecorator.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5255" source="org.apache.commons.collections4.list.SetUniqueListTest.testSet()" target="org.apache.commons.collections4.list.SetUniqueList.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5256" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5257" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5258" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444()" target="org.apache.commons.collections4.list.SetUniqueList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5259" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5260" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444()" target="org.apache.commons.collections4.list.AbstractListDecorator.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5261" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444()" target="org.apache.commons.collections4.list.SetUniqueList.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5262" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5263" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5264" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList()" target="org.apache.commons.collections4.list.SetUniqueList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5265" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5266" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5267" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList()" target="org.apache.commons.collections4.list.SetUniqueList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5268" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList()" target="org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5269" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList()" target="org.apache.commons.collections4.list.SetUniqueList.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5270" source="org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList()" target="org.apache.commons.collections4.list.SetUniqueList.set(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5271" source="org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5272" source="org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5273" source="org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert()" target="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5274" source="org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert()" target="org.apache.commons.collections4.list.SetUniqueList.setUniqueList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5275" source="org.apache.commons.collections4.list.SetUniqueListTest.verify()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5276" source="org.apache.commons.collections4.list.SetUniqueListTest.verify()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5277" source="org.apache.commons.collections4.list.TransformedList$TransformedListIterator(java.util.ListIterator)" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5278" source="org.apache.commons.collections4.list.TransformedList$TransformedListIterator.add(E)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5279" source="org.apache.commons.collections4.list.TransformedList$TransformedListIterator.add(E)" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.getListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5280" source="org.apache.commons.collections4.list.TransformedList$TransformedListIterator.set(E)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5281" source="org.apache.commons.collections4.list.TransformedList$TransformedListIterator.set(E)" target="org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.getListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5282" source="org.apache.commons.collections4.list.TransformedList(java.util.List,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.TransformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5283" source="org.apache.commons.collections4.list.TransformedList.transformedList(java.util.List,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.list.TransformedList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5284" source="org.apache.commons.collections4.list.TransformedList.transformedList(java.util.List,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5285" source="org.apache.commons.collections4.list.TransformedList.transformedList(java.util.List,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5286" source="org.apache.commons.collections4.list.TransformedList.transformingList(java.util.List,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.list.TransformedList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5287" source="org.apache.commons.collections4.list.TransformedList.get(int)" target="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5288" source="org.apache.commons.collections4.list.TransformedList.remove(int)" target="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5289" source="org.apache.commons.collections4.list.TransformedList.set(int,E)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5290" source="org.apache.commons.collections4.list.TransformedList.set(int,E)" target="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5291" source="org.apache.commons.collections4.list.TransformedList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5292" source="org.apache.commons.collections4.list.TransformedList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5293" source="org.apache.commons.collections4.list.TransformedList.indexOf(java.lang.Object)" target="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5294" source="org.apache.commons.collections4.list.TransformedList.lastIndexOf(java.lang.Object)" target="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5295" source="org.apache.commons.collections4.list.TransformedList.getList()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5296" source="org.apache.commons.collections4.list.TransformedList.subList(int,int)" target="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5297" source="org.apache.commons.collections4.list.TransformedList.subList(int,int)" target="org.apache.commons.collections4.list.TransformedList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5298" source="org.apache.commons.collections4.list.TransformedList.listIterator()" target="org.apache.commons.collections4.list.TransformedList.listIterator(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5299" source="org.apache.commons.collections4.list.TransformedList.listIterator(int)" target="org.apache.commons.collections4.list.TransformedList$TransformedListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5300" source="org.apache.commons.collections4.list.TransformedList.listIterator(int)" target="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5301" source="org.apache.commons.collections4.list.TransformedList.add(int,E)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5302" source="org.apache.commons.collections4.list.TransformedList.add(int,E)" target="org.apache.commons.collections4.list.TransformedList.getList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5303" source="org.apache.commons.collections4.list.TransformedListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5304" source="org.apache.commons.collections4.list.TransformedListTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5305" source="org.apache.commons.collections4.list.TransformedListTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5306" source="org.apache.commons.collections4.list.TransformedListTest.makeFullCollection()" target="org.apache.commons.collections4.list.TransformedList.transformingList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5307" source="org.apache.commons.collections4.list.TransformedListTest.makeObject()" target="org.apache.commons.collections4.list.TransformedList.transformingList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5308" source="org.apache.commons.collections4.list.TransformedListTest.testTransformedList()" target="org.apache.commons.collections4.list.TransformedList.transformingList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5309" source="org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform()" target="org.apache.commons.collections4.list.TransformedList.transformedList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5310" source="org.apache.commons.collections4.list.TreeList$AVLNode(java.util.Collection)" target="org.apache.commons.collections4.list.TreeList$AVLNode(java.util.Iterator,int,int,int,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5311" source="org.apache.commons.collections4.list.TreeList$AVLNode(java.util.Iterator,int,int,int,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)" target="org.apache.commons.collections4.list.TreeList$AVLNode(java.util.Iterator,int,int,int,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5312" source="org.apache.commons.collections4.list.TreeList$AVLNode(java.util.Iterator,int,int,int,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)" target="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5313" source="org.apache.commons.collections4.list.TreeList$AVLNode.heightRightMinusLeft()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getHeight(org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5314" source="org.apache.commons.collections4.list.TreeList$AVLNode.heightRightMinusLeft()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5315" source="org.apache.commons.collections4.list.TreeList$AVLNode.heightRightMinusLeft()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5316" source="org.apache.commons.collections4.list.TreeList$AVLNode.indexOf(java.lang.Object,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5317" source="org.apache.commons.collections4.list.TreeList$AVLNode.indexOf(java.lang.Object,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.indexOf(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5318" source="org.apache.commons.collections4.list.TreeList$AVLNode.indexOf(java.lang.Object,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5319" source="org.apache.commons.collections4.list.TreeList$AVLNode.setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5320" source="org.apache.commons.collections4.list.TreeList$AVLNode.toString()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5321" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.max()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5322" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.min()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5323" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5324" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.ArrayStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5325" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getHeight(org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5326" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.ArrayStack.push(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5327" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5328" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5329" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.ArrayStack.pop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5330" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.balance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5331" source="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5332" source="org.apache.commons.collections4.list.TreeList$AVLNode.balance()" target="org.apache.commons.collections4.list.TreeList$AVLNode.heightRightMinusLeft()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5333" source="org.apache.commons.collections4.list.TreeList$AVLNode.balance()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5334" source="org.apache.commons.collections4.list.TreeList$AVLNode.balance()" target="org.apache.commons.collections4.list.TreeList$AVLNode.rotateLeft()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5335" source="org.apache.commons.collections4.list.TreeList$AVLNode.balance()" target="org.apache.commons.collections4.list.TreeList$AVLNode.rotateRight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5336" source="org.apache.commons.collections4.list.TreeList$AVLNode.balance()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5337" source="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5338" source="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5339" source="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5340" source="org.apache.commons.collections4.list.TreeList$AVLNode.insert(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnLeft(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5341" source="org.apache.commons.collections4.list.TreeList$AVLNode.insert(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnRight(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5342" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnLeft(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5343" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnLeft(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5344" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnLeft(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode(int,E,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5345" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnLeft(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.insert(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5346" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnLeft(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.balance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5347" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnLeft(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5348" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnRight(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5349" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnRight(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5350" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnRight(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode(int,E,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5351" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnRight(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.insert(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5352" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnRight(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.balance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5353" source="org.apache.commons.collections4.list.TreeList$AVLNode.insertOnRight(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5354" source="org.apache.commons.collections4.list.TreeList$AVLNode.max()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5355" source="org.apache.commons.collections4.list.TreeList$AVLNode.max()" target="org.apache.commons.collections4.list.TreeList$AVLNode.max()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5356" source="org.apache.commons.collections4.list.TreeList$AVLNode.min()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5357" source="org.apache.commons.collections4.list.TreeList$AVLNode.min()" target="org.apache.commons.collections4.list.TreeList$AVLNode.min()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5358" source="org.apache.commons.collections4.list.TreeList$AVLNode.next()" target="org.apache.commons.collections4.list.TreeList$AVLNode.min()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5359" source="org.apache.commons.collections4.list.TreeList$AVLNode.previous()" target="org.apache.commons.collections4.list.TreeList$AVLNode.max()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5360" source="org.apache.commons.collections4.list.TreeList$AVLNode.remove(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5361" source="org.apache.commons.collections4.list.TreeList$AVLNode.remove(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5362" source="org.apache.commons.collections4.list.TreeList$AVLNode.remove(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5363" source="org.apache.commons.collections4.list.TreeList$AVLNode.remove(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5364" source="org.apache.commons.collections4.list.TreeList$AVLNode.remove(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5365" source="org.apache.commons.collections4.list.TreeList$AVLNode.remove(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.balance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5366" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5367" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()" target="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5368" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5369" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()" target="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5370" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()" target="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5371" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()" target="org.apache.commons.collections4.list.TreeList$AVLNode.balance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5372" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5373" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()" target="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5374" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5375" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()" target="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5376" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()" target="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5377" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()" target="org.apache.commons.collections4.list.TreeList$AVLNode.balance()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5378" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5379" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5380" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.max()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5381" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5382" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.min()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5383" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5384" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.heightRightMinusLeft()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5385" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.removeMin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5386" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.removeMax()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5387" source="org.apache.commons.collections4.list.TreeList$AVLNode.removeSelf()" target="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5388" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateLeft()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5389" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateLeft()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5390" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateLeft()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5391" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateLeft()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5392" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateLeft()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5393" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateLeft()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5394" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateRight()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5395" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateRight()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5396" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateRight()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getOffset(org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5397" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateRight()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5398" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateRight()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5399" source="org.apache.commons.collections4.list.TreeList$AVLNode.rotateRight()" target="org.apache.commons.collections4.list.TreeList$AVLNode.setOffset(org.apache.commons.collections4.list.TreeList$AVLNode,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5400" source="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5401" source="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5402" source="org.apache.commons.collections4.list.TreeList$AVLNode.setLeft(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)" target="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5403" source="org.apache.commons.collections4.list.TreeList$AVLNode.setRight(org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)" target="org.apache.commons.collections4.list.TreeList$AVLNode.recalcHeight()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5404" source="org.apache.commons.collections4.list.TreeList$AVLNode.toArray(java.lang.Object[],int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getLeftSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5405" source="org.apache.commons.collections4.list.TreeList$AVLNode.toArray(java.lang.Object[],int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.toArray(java.lang.Object[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5406" source="org.apache.commons.collections4.list.TreeList$AVLNode.toArray(java.lang.Object[],int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getRightSubTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5407" source="org.apache.commons.collections4.list.TreeList$TreeListIterator(org.apache.commons.collections4.list.TreeList,int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5408" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.next()" target="org.apache.commons.collections4.list.TreeList$TreeListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5409" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.next()" target="org.apache.commons.collections4.list.TreeList$TreeListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5410" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.next()" target="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5411" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.next()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5412" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.next()" target="org.apache.commons.collections4.list.TreeList$AVLNode.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5413" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.previous()" target="org.apache.commons.collections4.list.TreeList$TreeListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5414" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.previous()" target="org.apache.commons.collections4.list.TreeList$TreeListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5415" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.previous()" target="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5416" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.previous()" target="org.apache.commons.collections4.list.TreeList$AVLNode.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5417" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.previous()" target="org.apache.commons.collections4.list.TreeList$AVLNode.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5418" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.hasNext()" target="org.apache.commons.collections4.list.TreeList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5419" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.previousIndex()" target="org.apache.commons.collections4.list.TreeList$TreeListIterator.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5420" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.add(E)" target="org.apache.commons.collections4.list.TreeList$TreeListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5421" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.add(E)" target="org.apache.commons.collections4.list.TreeList.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5422" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.remove()" target="org.apache.commons.collections4.list.TreeList$TreeListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5423" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.remove()" target="org.apache.commons.collections4.list.TreeList.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5424" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.set(E)" target="org.apache.commons.collections4.list.TreeList$TreeListIterator.checkModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5425" source="org.apache.commons.collections4.list.TreeList$TreeListIterator.set(E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.setValue(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5426" source="org.apache.commons.collections4.list.TreeList(java.util.Collection)" target="org.apache.commons.collections4.list.TreeList$AVLNode(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5427" source="org.apache.commons.collections4.list.TreeList.get(int)" target="org.apache.commons.collections4.list.TreeList.checkInterval(int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5428" source="org.apache.commons.collections4.list.TreeList.get(int)" target="org.apache.commons.collections4.list.TreeList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5429" source="org.apache.commons.collections4.list.TreeList.get(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5430" source="org.apache.commons.collections4.list.TreeList.get(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5431" source="org.apache.commons.collections4.list.TreeList.remove(int)" target="org.apache.commons.collections4.list.TreeList.checkInterval(int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5432" source="org.apache.commons.collections4.list.TreeList.remove(int)" target="org.apache.commons.collections4.list.TreeList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5433" source="org.apache.commons.collections4.list.TreeList.remove(int)" target="org.apache.commons.collections4.list.TreeList.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5434" source="org.apache.commons.collections4.list.TreeList.remove(int)" target="org.apache.commons.collections4.list.TreeList$AVLNode.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5435" source="org.apache.commons.collections4.list.TreeList.set(int,E)" target="org.apache.commons.collections4.list.TreeList.checkInterval(int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5436" source="org.apache.commons.collections4.list.TreeList.set(int,E)" target="org.apache.commons.collections4.list.TreeList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5437" source="org.apache.commons.collections4.list.TreeList.set(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5438" source="org.apache.commons.collections4.list.TreeList.set(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.setValue(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5439" source="org.apache.commons.collections4.list.TreeList.addAll(java.util.Collection)" target="org.apache.commons.collections4.list.TreeList$AVLNode(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5440" source="org.apache.commons.collections4.list.TreeList.addAll(java.util.Collection)" target="org.apache.commons.collections4.list.TreeList$AVLNode.addAll(org.apache.commons.collections4.list.TreeList$AVLNode,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5441" source="org.apache.commons.collections4.list.TreeList.contains(java.lang.Object)" target="org.apache.commons.collections4.list.TreeList.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5442" source="org.apache.commons.collections4.list.TreeList.indexOf(java.lang.Object)" target="org.apache.commons.collections4.list.TreeList$AVLNode.indexOf(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5443" source="org.apache.commons.collections4.list.TreeList.toArray()" target="org.apache.commons.collections4.list.TreeList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5444" source="org.apache.commons.collections4.list.TreeList.toArray()" target="org.apache.commons.collections4.list.TreeList$AVLNode.toArray(java.lang.Object[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5445" source="org.apache.commons.collections4.list.TreeList.iterator()" target="org.apache.commons.collections4.list.TreeList.listIterator(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5446" source="org.apache.commons.collections4.list.TreeList.listIterator()" target="org.apache.commons.collections4.list.TreeList.listIterator(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5447" source="org.apache.commons.collections4.list.TreeList.listIterator(int)" target="org.apache.commons.collections4.list.TreeList.checkInterval(int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5448" source="org.apache.commons.collections4.list.TreeList.listIterator(int)" target="org.apache.commons.collections4.list.TreeList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5449" source="org.apache.commons.collections4.list.TreeList.listIterator(int)" target="org.apache.commons.collections4.list.TreeList$TreeListIterator(org.apache.commons.collections4.list.TreeList,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5450" source="org.apache.commons.collections4.list.TreeList.add(int,E)" target="org.apache.commons.collections4.list.TreeList.checkInterval(int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5451" source="org.apache.commons.collections4.list.TreeList.add(int,E)" target="org.apache.commons.collections4.list.TreeList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5452" source="org.apache.commons.collections4.list.TreeList.add(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode(int,E,org.apache.commons.collections4.list.TreeList$AVLNode,org.apache.commons.collections4.list.TreeList$AVLNode)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5453" source="org.apache.commons.collections4.list.TreeList.add(int,E)" target="org.apache.commons.collections4.list.TreeList$AVLNode.insert(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5454" source="org.apache.commons.collections4.list.TreeList.checkInterval(int,int,int)" target="org.apache.commons.collections4.list.TreeList.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5455" source="org.apache.commons.collections4.list.TreeListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5456" source="org.apache.commons.collections4.list.TreeListTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5457" source="org.apache.commons.collections4.list.TreeListTest.makeObject()" target="org.apache.commons.collections4.list.TreeList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5458" source="org.apache.commons.collections4.list.TreeListTest.testAddMultiple()" target="org.apache.commons.collections4.list.TreeListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5459" source="org.apache.commons.collections4.list.TreeListTest.testBug35258()" target="org.apache.commons.collections4.list.TreeList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5460" source="org.apache.commons.collections4.list.TreeListTest.testBugCollections447()" target="org.apache.commons.collections4.list.TreeList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5461" source="org.apache.commons.collections4.list.TreeListTest.testIndexOf()" target="org.apache.commons.collections4.list.TreeListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5462" source="org.apache.commons.collections4.list.TreeListTest.testInsertBefore()" target="org.apache.commons.collections4.list.TreeListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5463" source="org.apache.commons.collections4.list.TreeListTest.testIterationOrder()" target="org.apache.commons.collections4.list.TreeList(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5464" source="org.apache.commons.collections4.list.TreeListTest.testIterationOrder()" target="org.apache.commons.collections4.list.TreeList.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5465" source="org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll()" target="org.apache.commons.collections4.list.TreeList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5466" source="org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll()" target="org.apache.commons.collections4.list.TreeList.addAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5467" source="org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll()" target="org.apache.commons.collections4.list.TreeList.listIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5468" source="org.apache.commons.collections4.list.TreeListTest.testRemove()" target="org.apache.commons.collections4.list.TreeListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5469" source="org.apache.commons.collections4.list.UnmodifiableList(java.util.List)" target="org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5470" source="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)" target="org.apache.commons.collections4.list.UnmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5471" source="org.apache.commons.collections4.list.UnmodifiableList.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5472" source="org.apache.commons.collections4.list.UnmodifiableList.iterator()" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5473" source="org.apache.commons.collections4.list.UnmodifiableList.subList(int,int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5474" source="org.apache.commons.collections4.list.UnmodifiableList.subList(int,int)" target="org.apache.commons.collections4.list.UnmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5475" source="org.apache.commons.collections4.list.UnmodifiableList.listIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5476" source="org.apache.commons.collections4.list.UnmodifiableList.listIterator()" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5477" source="org.apache.commons.collections4.list.UnmodifiableList.listIterator(int)" target="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5478" source="org.apache.commons.collections4.list.UnmodifiableList.listIterator(int)" target="org.apache.commons.collections4.list.AbstractListDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5479" source="org.apache.commons.collections4.list.UnmodifiableListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5480" source="org.apache.commons.collections4.list.UnmodifiableListTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5481" source="org.apache.commons.collections4.list.UnmodifiableListTest.makeFullCollection()" target="org.apache.commons.collections4.list.UnmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5482" source="org.apache.commons.collections4.list.UnmodifiableListTest.makeObject()" target="org.apache.commons.collections4.list.UnmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5483" source="org.apache.commons.collections4.list.UnmodifiableListTest.setupList()" target="org.apache.commons.collections4.list.UnmodifiableListTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5484" source="org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory()" target="org.apache.commons.collections4.list.UnmodifiableListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5485" source="org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory()" target="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5486" source="org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable()" target="org.apache.commons.collections4.list.UnmodifiableListTest.setupList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5487" source="org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable()" target="org.apache.commons.collections4.list.UnmodifiableListTest.verifyUnmodifiable(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5488" source="org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable()" target="org.apache.commons.collections4.list.UnmodifiableList.subList(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5489" source="org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator()" target="org.apache.commons.collections4.list.UnmodifiableListTest.setupList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5490" source="org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator()" target="org.apache.commons.collections4.list.UnmodifiableList.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5491" source="org.apache.commons.collections4.comparators.AbstractComparatorTest(java.lang.String)" target="org.apache.commons.collections4.AbstractObjectTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5492" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.getCanonicalComparatorName(java.lang.Object)" target="org.apache.commons.collections4.AbstractObjectTest.getCompatibilityVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5493" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5494" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5495" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorCompatibility()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.getCanonicalComparatorName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5496" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorCompatibility()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5497" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToDisk(java.io.Serializable,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5498" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorCompatibility()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.getComparableObjectsOrdered()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5499" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorCompatibility()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.reverseObjects(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5500" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorCompatibility()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.sortObjects(java.util.List,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5501" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testComparatorIsSerializable()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5502" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testEmptyListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.sortObjects(java.util.List,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5503" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testEmptyListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5504" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testRandomListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5505" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testRandomListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.getComparableObjectsOrdered()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5506" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testRandomListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.randomizeObjects(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5507" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testRandomListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.sortObjects(java.util.List,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5508" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testReverseListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5509" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testReverseListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.getComparableObjectsOrdered()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5510" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testReverseListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.reverseObjects(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5511" source="org.apache.commons.collections4.comparators.AbstractComparatorTest.testReverseListSort()" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.sortObjects(java.util.List,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5512" source="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator1(java.lang.String)" target="org.apache.commons.collections4.comparators.AbstractNullComparatorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5513" source="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator1.getCanonicalComparatorName(java.lang.Object)" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.getCanonicalComparatorName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5514" source="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator1.makeObject()" target="org.apache.commons.collections4.comparators.NullComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5515" source="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator2(java.lang.String)" target="org.apache.commons.collections4.comparators.AbstractNullComparatorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5516" source="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator2.getCanonicalComparatorName(java.lang.Object)" target="org.apache.commons.collections4.comparators.AbstractComparatorTest.getCanonicalComparatorName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5517" source="org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator2.makeObject()" target="org.apache.commons.collections4.comparators.NullComparator(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5518" source="org.apache.commons.collections4.comparators.AbstractNullComparatorTest(java.lang.String)" target="org.apache.commons.collections4.comparators.AbstractComparatorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5519" source="org.apache.commons.collections4.comparators.BooleanComparator#TRUE_FIRST" target="org.apache.commons.collections4.comparators.BooleanComparator(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5520" source="org.apache.commons.collections4.comparators.BooleanComparator#FALSE_FIRST" target="org.apache.commons.collections4.comparators.BooleanComparator(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5521" source="org.apache.commons.collections4.comparators.BooleanComparator()" target="org.apache.commons.collections4.comparators.BooleanComparator(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5522" source="org.apache.commons.collections4.comparators.BooleanComparatorTest(java.lang.String)" target="org.apache.commons.collections4.comparators.AbstractComparatorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5523" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.makeObject()" target="org.apache.commons.collections4.comparators.BooleanComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5524" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)" target="org.apache.commons.collections4.comparators.BooleanComparatorTest.orderIndependentTests(org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5525" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)" target="org.apache.commons.collections4.comparators.BooleanComparatorTest.trueFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5526" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)" target="org.apache.commons.collections4.comparators.BooleanComparatorTest.falseFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5527" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.falseFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)" target="org.apache.commons.collections4.comparators.BooleanComparator.compare(java.lang.Boolean,java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5528" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.nullArgumentTests(org.apache.commons.collections4.comparators.BooleanComparator)" target="org.apache.commons.collections4.comparators.BooleanComparator.compare(java.lang.Boolean,java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5529" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.orderIndependentTests(org.apache.commons.collections4.comparators.BooleanComparator)" target="org.apache.commons.collections4.comparators.BooleanComparatorTest.nullArgumentTests(org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5530" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testConstructors()" target="org.apache.commons.collections4.comparators.BooleanComparatorTest.allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5531" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testConstructors()" target="org.apache.commons.collections4.comparators.BooleanComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5532" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testConstructors()" target="org.apache.commons.collections4.comparators.BooleanComparator(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5533" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance()" target="org.apache.commons.collections4.comparators.BooleanComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5534" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance()" target="org.apache.commons.collections4.comparators.BooleanComparator(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5535" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance()" target="org.apache.commons.collections4.comparators.BooleanComparator.getFalseFirstComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5536" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance()" target="org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5537" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance()" target="org.apache.commons.collections4.comparators.BooleanComparator.getTrueFirstComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5538" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance()" target="org.apache.commons.collections4.comparators.BooleanComparator.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5539" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods()" target="org.apache.commons.collections4.comparators.BooleanComparatorTest.allTests(boolean,org.apache.commons.collections4.comparators.BooleanComparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5540" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods()" target="org.apache.commons.collections4.comparators.BooleanComparator.getFalseFirstComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5541" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods()" target="org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5542" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods()" target="org.apache.commons.collections4.comparators.BooleanComparator.getTrueFirstComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5543" source="org.apache.commons.collections4.comparators.BooleanComparatorTest.trueFirstTests(org.apache.commons.collections4.comparators.BooleanComparator)" target="org.apache.commons.collections4.comparators.BooleanComparator.compare(java.lang.Boolean,java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5544" source="org.apache.commons.collections4.comparators.ComparableComparator#INSTANCE" target="org.apache.commons.collections4.comparators.ComparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5545" source="org.apache.commons.collections4.comparators.ComparableComparatorTest(java.lang.String)" target="org.apache.commons.collections4.comparators.AbstractComparatorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5546" source="org.apache.commons.collections4.comparators.ComparableComparatorTest.makeObject()" target="org.apache.commons.collections4.comparators.ComparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5547" source="org.apache.commons.collections4.comparators.ComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain(java.util.List,java.util.BitSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5548" source="org.apache.commons.collections4.comparators.ComparatorChain(java.util.Comparator)" target="org.apache.commons.collections4.comparators.ComparatorChain(java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5549" source="org.apache.commons.collections4.comparators.ComparatorChain(java.util.List)" target="org.apache.commons.collections4.comparators.ComparatorChain(java.util.List,java.util.BitSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5550" source="org.apache.commons.collections4.comparators.ComparatorChain.compare(E,E)" target="org.apache.commons.collections4.comparators.ComparatorChain.checkChainIntegrity()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5551" source="org.apache.commons.collections4.comparators.ComparatorChain.addComparator(java.util.Comparator)" target="org.apache.commons.collections4.comparators.ComparatorChain.addComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5552" source="org.apache.commons.collections4.comparators.ComparatorChain.addComparator(java.util.Comparator,boolean)" target="org.apache.commons.collections4.comparators.ComparatorChain.checkLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5553" source="org.apache.commons.collections4.comparators.ComparatorChain.setComparator(int,java.util.Comparator)" target="org.apache.commons.collections4.comparators.ComparatorChain.setComparator(int,java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5554" source="org.apache.commons.collections4.comparators.ComparatorChain.setComparator(int,java.util.Comparator,boolean)" target="org.apache.commons.collections4.comparators.ComparatorChain.checkLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5555" source="org.apache.commons.collections4.comparators.ComparatorChain.setForwardSort(int)" target="org.apache.commons.collections4.comparators.ComparatorChain.checkLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5556" source="org.apache.commons.collections4.comparators.ComparatorChain.setReverseSort(int)" target="org.apache.commons.collections4.comparators.ComparatorChain.checkLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5557" source="org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator.compare(org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow,org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow)" target="org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow.getColumn(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5558" source="org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow.equals(java.lang.Object)" target="org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow.getColumn(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5559" source="org.apache.commons.collections4.comparators.ComparatorChainTest(java.lang.String)" target="org.apache.commons.collections4.comparators.AbstractComparatorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5560" source="org.apache.commons.collections4.comparators.ComparatorChainTest.makeObject()" target="org.apache.commons.collections4.comparators.ComparatorChain(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5561" source="org.apache.commons.collections4.comparators.ComparatorChainTest.makeObject()" target="org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5562" source="org.apache.commons.collections4.comparators.ComparatorChainTest.makeObject()" target="org.apache.commons.collections4.comparators.ComparatorChain.addComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5563" source="org.apache.commons.collections4.comparators.ComparatorChainTest.getComparableObjectsOrdered()" target="org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow(int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5564" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5565" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain.compare(E,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5566" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5567" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain.compare(E,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5568" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator()" target="org.apache.commons.collections4.comparators.ComparatorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5569" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator()" target="org.apache.commons.collections4.comparators.ComparatorChain.addComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5570" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator()" target="org.apache.commons.collections4.comparators.ComparatorChainTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5571" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator()" target="org.apache.commons.collections4.comparators.ComparatorChain.compare(E,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5572" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain()" target="org.apache.commons.collections4.comparators.ComparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5573" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5574" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain.compare(E,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5575" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5576" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain.addComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5577" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain()" target="org.apache.commons.collections4.comparators.ComparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5578" source="org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain()" target="org.apache.commons.collections4.comparators.ComparatorChain.compare(E,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5579" source="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior#BEFORE" target="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5580" source="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior#AFTER" target="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5581" source="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior#EXCEPTION" target="org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5582" source="org.apache.commons.collections4.comparators.FixedOrderComparator(T[])" target="org.apache.commons.collections4.comparators.FixedOrderComparator.add(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5583" source="org.apache.commons.collections4.comparators.FixedOrderComparator(java.util.List)" target="org.apache.commons.collections4.comparators.FixedOrderComparator.add(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5584" source="org.apache.commons.collections4.comparators.FixedOrderComparator.add(T)" target="org.apache.commons.collections4.comparators.FixedOrderComparator.checkLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5585" source="org.apache.commons.collections4.comparators.FixedOrderComparator.addAsEqual(T,T)" target="org.apache.commons.collections4.comparators.FixedOrderComparator.checkLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5586" source="org.apache.commons.collections4.comparators.FixedOrderComparator.checkLocked()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.isLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5587" source="org.apache.commons.collections4.comparators.FixedOrderComparator.setUnknownObjectBehavior(org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior)" target="org.apache.commons.collections4.comparators.FixedOrderComparator.checkLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5588" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest(java.lang.String)" target="org.apache.commons.collections4.comparators.AbstractComparatorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5589" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.makeObject()" target="org.apache.commons.collections4.comparators.FixedOrderComparator(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5590" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual()" target="org.apache.commons.collections4.comparators.FixedOrderComparator(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5591" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.addAsEqual(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5592" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.compare(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5593" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testArrayConstructor()" target="org.apache.commons.collections4.comparators.FixedOrderComparator(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5594" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testArrayConstructor()" target="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.assertComparatorYieldsOrder(java.lang.String[],java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5595" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd()" target="org.apache.commons.collections4.comparators.FixedOrderComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5596" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.add(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5597" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd()" target="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.assertComparatorYieldsOrder(java.lang.String[],java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5598" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor()" target="org.apache.commons.collections4.comparators.FixedOrderComparator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5599" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor()" target="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.assertComparatorYieldsOrder(java.lang.String[],java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5600" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock()" target="org.apache.commons.collections4.comparators.FixedOrderComparator(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5601" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.isLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5602" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.compare(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5603" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.add(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5604" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.addAsEqual(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5605" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior()" target="org.apache.commons.collections4.comparators.FixedOrderComparator(T[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5606" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.compare(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5607" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.getUnknownObjectBehavior()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5608" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior()" target="org.apache.commons.collections4.comparators.FixedOrderComparator.setUnknownObjectBehavior(org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5609" source="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior()" target="org.apache.commons.collections4.comparators.FixedOrderComparatorTest.assertComparatorYieldsOrder(java.lang.String[],java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5610" source="org.apache.commons.collections4.comparators.NullComparator()" target="org.apache.commons.collections4.comparators.NullComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5611" source="org.apache.commons.collections4.comparators.NullComparator(boolean)" target="org.apache.commons.collections4.comparators.NullComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5612" source="org.apache.commons.collections4.comparators.NullComparator(java.util.Comparator)" target="org.apache.commons.collections4.comparators.NullComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5613" source="org.apache.commons.collections4.comparators.ReverseComparator()" target="org.apache.commons.collections4.comparators.ReverseComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5614" source="org.apache.commons.collections4.comparators.ReverseComparatorTest(java.lang.String)" target="org.apache.commons.collections4.comparators.AbstractComparatorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5615" source="org.apache.commons.collections4.comparators.ReverseComparatorTest.makeObject()" target="org.apache.commons.collections4.comparators.ReverseComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5616" source="org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.comparators.ReverseComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5617" source="org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.comparators.ComparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5618" source="org.apache.commons.collections4.comparators.TransformingComparator(org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.comparators.TransformingComparator(org.apache.commons.collections4.Transformer,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5619" source="org.apache.commons.collections4.comparators.TransformingComparator.compare(I,I)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5620" source="org.apache.commons.collections4.comparators.TransformingComparatorTest(java.lang.String)" target="org.apache.commons.collections4.comparators.AbstractComparatorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5621" source="org.apache.commons.collections4.comparators.TransformingComparatorTest.makeObject()" target="org.apache.commons.collections4.comparators.ComparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5622" source="org.apache.commons.collections4.comparators.TransformingComparatorTest.makeObject()" target="org.apache.commons.collections4.ComparatorUtils.transformedComparator(java.util.Comparator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5623" source="org.apache.commons.collections4.comparators.TransformingComparatorTest.makeObject()" target="org.apache.commons.collections4.TransformerUtils.stringValueTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5624" source="org.apache.commons.collections4.comparators.TransformingComparatorTest.testEquals()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5625" source="org.apache.commons.collections4.comparators.TransformingComparatorTest.testEquals()" target="org.apache.commons.collections4.comparators.TransformingComparator(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5626" source="org.apache.commons.collections4.comparators.TransformingComparatorTest.testEquals()" target="org.apache.commons.collections4.comparators.TransformingComparator(org.apache.commons.collections4.Transformer,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5627" source="org.apache.commons.collections4.comparators.TransformingComparatorTest.testEquals()" target="org.apache.commons.collections4.comparators.TransformingComparator.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5628" source="org.apache.commons.collections4.comparators.TransformingComparatorTest.testEquals()" target="org.apache.commons.collections4.comparators.TransformingComparator.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5629" source="org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()" target="org.apache.commons.collections4.iterators.AbstractEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5630" source="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5631" source="org.apache.commons.collections4.iterators.AbstractIteratorDecorator.next()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5632" source="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)" target="org.apache.commons.collections4.AbstractObjectTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5633" source="org.apache.commons.collections4.iterators.AbstractIteratorTest.testEmptyIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5634" source="org.apache.commons.collections4.iterators.AbstractIteratorTest.testEmptyIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5635" source="org.apache.commons.collections4.iterators.AbstractIteratorTest.testEmptyIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5636" source="org.apache.commons.collections4.iterators.AbstractIteratorTest.testFullIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsFullIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5637" source="org.apache.commons.collections4.iterators.AbstractIteratorTest.testFullIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5638" source="org.apache.commons.collections4.iterators.AbstractIteratorTest.testFullIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5639" source="org.apache.commons.collections4.iterators.AbstractIteratorTest.testRemove()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5640" source="org.apache.commons.collections4.iterators.AbstractIteratorTest.testRemove()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsRemove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5641" source="org.apache.commons.collections4.iterators.AbstractIteratorTest.testRemove()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5642" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5643" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAdd()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5644" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAdd()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.addSetValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5645" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAdd()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.supportsAdd()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5646" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenRemove()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5647" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenRemove()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.supportsAdd()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5648" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenRemove()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsRemove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5649" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenRemove()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.addSetValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5650" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5651" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.supportsAdd()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5652" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.supportsSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5653" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testAddThenSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.addSetValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5654" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testEmptyListIteratorIsIndeedEmpty()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5655" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testEmptyListIteratorIsIndeedEmpty()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5656" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testRemoveThenSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5657" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testRemoveThenSet()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsRemove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5658" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testRemoveThenSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.supportsSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5659" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testRemoveThenSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.addSetValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5660" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5661" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.supportsSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5662" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testSet()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.addSetValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5663" source="org.apache.commons.collections4.iterators.AbstractListIteratorTest.testWalkForwardAndBack()" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5664" source="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.getKey()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5665" source="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.next()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5666" source="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.getValue()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5667" source="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.setValue(V)" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5668" source="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.hasNext()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5669" source="org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.remove()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5670" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5671" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5672" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5673" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5674" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5675" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5676" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5677" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.supportsSetValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5678" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5679" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.addSetValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5680" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsFullIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5681" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5682" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5683" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5684" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5685" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5686" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5687" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.isGetStructuralModify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5688" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5689" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetKey()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsRemove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5690" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetKey()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5691" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetKey()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5692" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetKey()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5693" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetKey()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5694" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetKey()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5695" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetKey()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5696" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetKey()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5697" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetValue()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsRemove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5698" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetValue()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5699" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetValue()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5700" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetValue()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5701" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetValue()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5702" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetValue()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5703" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetValue()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5704" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorRemoveGetValue()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5705" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsFullIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5706" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.addSetValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5707" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5708" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5709" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5710" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5711" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5712" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5713" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.supportsSetValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5714" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5715" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5716" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSet()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5717" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.supportsSetValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5718" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsRemove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5719" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.addSetValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5720" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5721" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5722" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5723" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5724" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5725" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5726" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testMapIteratorSetRemoveSet()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5727" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testRemove()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5728" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testRemove()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5729" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testRemove()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5730" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testRemove()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5731" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testRemove()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5732" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testRemove()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsRemove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5733" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testRemove()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5734" source="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testRemove()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5735" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.getKey()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5736" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.next()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5737" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.previous()" target="org.apache.commons.collections4.OrderedMapIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5738" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.getValue()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5739" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.setValue(V)" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5740" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.hasNext()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5741" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.hasPrevious()" target="org.apache.commons.collections4.OrderedMapIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5742" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.remove()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5743" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5744" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5745" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testEmptyMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5746" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5747" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.OrderedMapIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5748" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testEmptyMapIterator()" target="org.apache.commons.collections4.OrderedMapIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5749" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsFullIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5750" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.testFullMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5751" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5752" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5753" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5754" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.OrderedMapIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5755" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5756" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5757" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5758" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.isGetStructuralModify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5759" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5760" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testFullMapIterator()" target="org.apache.commons.collections4.OrderedMapIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5761" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testMapIteratorOrder()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsFullIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5762" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testMapIteratorOrder()" target="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5763" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testMapIteratorOrder()" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5764" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testMapIteratorOrder()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5765" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testMapIteratorOrder()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5766" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testMapIteratorOrder()" target="org.apache.commons.collections4.OrderedMapIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5767" source="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest.testMapIteratorOrder()" target="org.apache.commons.collections4.OrderedMapIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5768" source="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5769" source="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5770" source="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int,int)" target="org.apache.commons.collections4.iterators.ArrayIterator.checkBound(int,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5771" source="org.apache.commons.collections4.iterators.ArrayIterator.next()" target="org.apache.commons.collections4.iterators.ArrayIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5772" source="org.apache.commons.collections4.iterators.ArrayIterator2Test(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5773" source="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeArrayIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5774" source="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeArrayIterator(java.lang.Object,int)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5775" source="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeArrayIterator(java.lang.Object,int,int)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5776" source="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5777" source="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeObject()" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5778" source="org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray()" target="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeArrayIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5779" source="org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray()" target="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeArrayIterator(java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5780" source="org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator()" target="org.apache.commons.collections4.iterators.ArrayIterator2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5781" source="org.apache.commons.collections4.iterators.ArrayIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5782" source="org.apache.commons.collections4.iterators.ArrayIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5783" source="org.apache.commons.collections4.iterators.ArrayIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5784" source="org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator()" target="org.apache.commons.collections4.iterators.ArrayIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5785" source="org.apache.commons.collections4.iterators.ArrayIteratorTest.testNullArray()" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5786" source="org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.ArrayIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5787" source="org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.ArrayIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5788" source="org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.ArrayIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5789" source="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5790" source="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object,int)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5791" source="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object,int,int)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5792" source="org.apache.commons.collections4.iterators.ArrayListIterator.next()" target="org.apache.commons.collections4.iterators.ArrayIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5793" source="org.apache.commons.collections4.iterators.ArrayListIterator.previous()" target="org.apache.commons.collections4.iterators.ArrayListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5794" source="org.apache.commons.collections4.iterators.ArrayListIterator.reset()" target="org.apache.commons.collections4.iterators.ArrayIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5795" source="org.apache.commons.collections4.iterators.ArrayListIterator2Test(java.lang.String)" target="org.apache.commons.collections4.iterators.ArrayIterator2Test(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5796" source="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeArrayListIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5797" source="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeArrayListIterator(java.lang.Object,int)" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5798" source="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeArrayListIterator(java.lang.Object,int,int)" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5799" source="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5800" source="org.apache.commons.collections4.iterators.ArrayListIterator2Test.makeObject()" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5801" source="org.apache.commons.collections4.iterators.ArrayListIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.ArrayIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5802" source="org.apache.commons.collections4.iterators.ArrayListIteratorTest.makeArrayListIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5803" source="org.apache.commons.collections4.iterators.ArrayListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5804" source="org.apache.commons.collections4.iterators.ArrayListIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5805" source="org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator()" target="org.apache.commons.collections4.iterators.ArrayListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5806" source="org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet()" target="org.apache.commons.collections4.iterators.ArrayListIteratorTest.makeArrayListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5807" source="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)" target="org.apache.commons.collections4.iterators.BoundedIterator.init()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5808" source="org.apache.commons.collections4.iterators.BoundedIterator.next()" target="org.apache.commons.collections4.iterators.BoundedIterator.checkBounds()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5809" source="org.apache.commons.collections4.iterators.BoundedIterator.hasNext()" target="org.apache.commons.collections4.iterators.BoundedIterator.checkBounds()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5810" source="org.apache.commons.collections4.iterators.BoundedIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5811" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5812" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5813" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testBounded()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5814" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testEmptyBounded()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5815" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testMaxGreaterThanSize()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5816" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testNegativeMax()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5817" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testNegativeOffset()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5818" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testOffsetGreaterThanSize()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5819" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveCalledTwice()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5820" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveFirst()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5821" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveLast()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5822" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveMiddle()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5823" source="org.apache.commons.collections4.iterators.BoundedIteratorTest$1(java.util.Iterator)" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5824" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveUnsupported()" target="org.apache.commons.collections4.iterators.BoundedIteratorTest$1(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5825" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveUnsupported()" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5826" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveUnsupported()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5827" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testRemoveWithoutCallingNext()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5828" source="org.apache.commons.collections4.iterators.BoundedIteratorTest.testSameAsDecorated()" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5829" source="org.apache.commons.collections4.iterators.CollatingIterator()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5830" source="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator)" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5831" source="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,int)" target="org.apache.commons.collections4.iterators.CollatingIterator.setComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5832" source="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Collection)" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5833" source="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Collection)" target="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5834" source="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5835" source="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)" target="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5836" source="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator[])" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5837" source="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator[])" target="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5838" source="org.apache.commons.collections4.iterators.CollatingIterator.next()" target="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5839" source="org.apache.commons.collections4.iterators.CollatingIterator.next()" target="org.apache.commons.collections4.iterators.CollatingIterator.least()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5840" source="org.apache.commons.collections4.iterators.CollatingIterator.next()" target="org.apache.commons.collections4.iterators.CollatingIterator.clear(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5841" source="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()" target="org.apache.commons.collections4.iterators.CollatingIterator.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5842" source="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()" target="org.apache.commons.collections4.iterators.CollatingIterator.anyValueSet(java.util.BitSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5843" source="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()" target="org.apache.commons.collections4.iterators.CollatingIterator.anyHasNext(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5844" source="org.apache.commons.collections4.iterators.CollatingIterator.least()" target="org.apache.commons.collections4.iterators.CollatingIterator.set(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5845" source="org.apache.commons.collections4.iterators.CollatingIterator.getIterators()" target="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5846" source="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.CollatingIterator.checkNotStarted()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5847" source="org.apache.commons.collections4.iterators.CollatingIterator.setComparator(java.util.Comparator)" target="org.apache.commons.collections4.iterators.CollatingIterator.checkNotStarted()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5848" source="org.apache.commons.collections4.iterators.CollatingIterator.setIterator(int,java.util.Iterator)" target="org.apache.commons.collections4.iterators.CollatingIterator.checkNotStarted()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5849" source="org.apache.commons.collections4.iterators.CollatingIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5850" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5851" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5852" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5853" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.setUp()" target="org.apache.commons.collections4.comparators.ComparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5854" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator()" target="org.apache.commons.collections4.iterators.CollatingIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5855" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator()" target="org.apache.commons.collections4.iterators.CollatingIterator.getComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5856" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator()" target="org.apache.commons.collections4.iterators.CollatingIterator.setComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5857" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5858" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5859" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5860" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5861" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.getIteratorIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5862" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5863" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5864" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5865" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5866" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.getIteratorIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5867" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5868" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd()" target="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5869" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd()" target="org.apache.commons.collections4.iterators.CollatingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5870" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd()" target="org.apache.commons.collections4.iterators.CollatingIterator.getIteratorIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5871" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5872" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd()" target="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5873" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd()" target="org.apache.commons.collections4.iterators.CollatingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5874" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd()" target="org.apache.commons.collections4.iterators.CollatingIterator.getIteratorIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5875" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd()" target="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5876" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5877" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5878" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5879" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven()" target="org.apache.commons.collections4.iterators.CollatingIterator.getIteratorIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5880" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5881" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator()" target="org.apache.commons.collections4.iterators.CollatingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5882" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator()" target="org.apache.commons.collections4.iterators.CollatingIterator.setComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5883" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator()" target="org.apache.commons.collections4.comparators.ComparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5884" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator()" target="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5885" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5886" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble()" target="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5887" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble()" target="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5888" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble()" target="org.apache.commons.collections4.iterators.CollatingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5889" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble()" target="org.apache.commons.collections4.iterators.CollatingIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5890" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle()" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5891" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle()" target="org.apache.commons.collections4.iterators.CollatingIterator.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5892" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle()" target="org.apache.commons.collections4.iterators.CollatingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5893" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle()" target="org.apache.commons.collections4.iterators.CollatingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5894" source="org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle()" target="org.apache.commons.collections4.iterators.CollatingIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5895" source="org.apache.commons.collections4.iterators.EmptyIterator#RESETTABLE_INSTANCE" target="org.apache.commons.collections4.iterators.EmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5896" source="org.apache.commons.collections4.iterators.EmptyIterator()" target="org.apache.commons.collections4.iterators.AbstractEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5897" source="org.apache.commons.collections4.iterators.EmptyListIterator#RESETTABLE_INSTANCE" target="org.apache.commons.collections4.iterators.EmptyListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5898" source="org.apache.commons.collections4.iterators.EmptyListIterator()" target="org.apache.commons.collections4.iterators.AbstractEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5899" source="org.apache.commons.collections4.iterators.EmptyMapIterator#INSTANCE" target="org.apache.commons.collections4.iterators.EmptyMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5900" source="org.apache.commons.collections4.iterators.EmptyMapIterator()" target="org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5901" source="org.apache.commons.collections4.iterators.EmptyOrderedIterator#INSTANCE" target="org.apache.commons.collections4.iterators.EmptyOrderedIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5902" source="org.apache.commons.collections4.iterators.EmptyOrderedIterator()" target="org.apache.commons.collections4.iterators.AbstractEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5903" source="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator#INSTANCE" target="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5904" source="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator()" target="org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5905" source="org.apache.commons.collections4.iterators.EntrySetMapIterator.toString()" target="org.apache.commons.collections4.iterators.EntrySetMapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5906" source="org.apache.commons.collections4.iterators.EntrySetMapIterator.toString()" target="org.apache.commons.collections4.iterators.EntrySetMapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5907" source="org.apache.commons.collections4.iterators.EnumerationIterator()" target="org.apache.commons.collections4.iterators.EnumerationIterator(java.util.Enumeration,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5908" source="org.apache.commons.collections4.iterators.EnumerationIterator(java.util.Enumeration)" target="org.apache.commons.collections4.iterators.EnumerationIterator(java.util.Enumeration,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5909" source="org.apache.commons.collections4.iterators.FilterIterator.next()" target="org.apache.commons.collections4.iterators.FilterIterator.setNextObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5910" source="org.apache.commons.collections4.iterators.FilterIterator.hasNext()" target="org.apache.commons.collections4.iterators.FilterIterator.setNextObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5911" source="org.apache.commons.collections4.iterators.FilterIterator.setNextObject()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5912" source="org.apache.commons.collections4.iterators.FilterIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5913" source="org.apache.commons.collections4.iterators.FilterIteratorTest.makeBlockAllFilter(java.util.Iterator)" target="org.apache.commons.collections4.iterators.FilterIteratorTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5914" source="org.apache.commons.collections4.iterators.FilterIteratorTest.makeBlockAllFilter(java.util.Iterator)" target="org.apache.commons.collections4.iterators.FilterIterator(java.util.Iterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5915" source="org.apache.commons.collections4.iterators.FilterIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.FilterIteratorTest.makeBlockAllFilter(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5916" source="org.apache.commons.collections4.iterators.FilterIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5917" source="org.apache.commons.collections4.iterators.FilterIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.FilterIteratorTest.makePassThroughFilter(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5918" source="org.apache.commons.collections4.iterators.FilterIteratorTest.makePassThroughFilter(java.util.Iterator)" target="org.apache.commons.collections4.iterators.FilterIteratorTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5919" source="org.apache.commons.collections4.iterators.FilterIteratorTest.makePassThroughFilter(java.util.Iterator)" target="org.apache.commons.collections4.iterators.FilterIterator(java.util.Iterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5920" source="org.apache.commons.collections4.iterators.FilterIteratorTest.initIterator()" target="org.apache.commons.collections4.iterators.FilterIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5921" source="org.apache.commons.collections4.iterators.FilterIteratorTest.setUp()" target="org.apache.commons.collections4.iterators.FilterIteratorTest.initIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5922" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext()" target="org.apache.commons.collections4.iterators.FilterIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5923" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext()" target="org.apache.commons.collections4.iterators.FilterIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5924" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext()" target="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyNoMoreElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5925" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues()" target="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyElementsInPredicate(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5926" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator()" target="org.apache.commons.collections4.iterators.FilterIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5927" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator()" target="org.apache.commons.collections4.iterators.FilterIterator.setPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5928" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5929" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator()" target="org.apache.commons.collections4.iterators.FilterIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5930" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator()" target="org.apache.commons.collections4.iterators.FilterIterator.setIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5931" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate()" target="org.apache.commons.collections4.iterators.FilterIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5932" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate()" target="org.apache.commons.collections4.iterators.FilterIterator.setPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5933" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5934" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate()" target="org.apache.commons.collections4.iterators.FilterIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5935" source="org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate()" target="org.apache.commons.collections4.functors.NotNullPredicate.notNullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5936" source="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyElementsInPredicate(java.lang.String[])" target="org.apache.commons.collections4.iterators.FilterIteratorTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5937" source="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyElementsInPredicate(java.lang.String[])" target="org.apache.commons.collections4.iterators.FilterIteratorTest.initIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5938" source="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyElementsInPredicate(java.lang.String[])" target="org.apache.commons.collections4.iterators.FilterIterator.setPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5939" source="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyElementsInPredicate(java.lang.String[])" target="org.apache.commons.collections4.iterators.FilterIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5940" source="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyElementsInPredicate(java.lang.String[])" target="org.apache.commons.collections4.iterators.FilterIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5941" source="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyElementsInPredicate(java.lang.String[])" target="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyNoMoreElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5942" source="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyElementsInPredicate(java.lang.String[])" target="org.apache.commons.collections4.iterators.FilterIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5943" source="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyNoMoreElements()" target="org.apache.commons.collections4.iterators.FilterIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5944" source="org.apache.commons.collections4.iterators.FilterIteratorTest.verifyNoMoreElements()" target="org.apache.commons.collections4.iterators.FilterIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5945" source="org.apache.commons.collections4.iterators.FilterListIterator.next()" target="org.apache.commons.collections4.iterators.FilterListIterator.setNextObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5946" source="org.apache.commons.collections4.iterators.FilterListIterator.next()" target="org.apache.commons.collections4.iterators.FilterListIterator.clearNextObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5947" source="org.apache.commons.collections4.iterators.FilterListIterator.previous()" target="org.apache.commons.collections4.iterators.FilterListIterator.setPreviousObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5948" source="org.apache.commons.collections4.iterators.FilterListIterator.previous()" target="org.apache.commons.collections4.iterators.FilterListIterator.clearPreviousObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5949" source="org.apache.commons.collections4.iterators.FilterListIterator.hasNext()" target="org.apache.commons.collections4.iterators.FilterListIterator.setNextObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5950" source="org.apache.commons.collections4.iterators.FilterListIterator.hasPrevious()" target="org.apache.commons.collections4.iterators.FilterListIterator.setPreviousObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5951" source="org.apache.commons.collections4.iterators.FilterListIterator.setNextObject()" target="org.apache.commons.collections4.iterators.FilterListIterator.clearPreviousObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5952" source="org.apache.commons.collections4.iterators.FilterListIterator.setNextObject()" target="org.apache.commons.collections4.iterators.FilterListIterator.setNextObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5953" source="org.apache.commons.collections4.iterators.FilterListIterator.setNextObject()" target="org.apache.commons.collections4.iterators.FilterListIterator.clearNextObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5954" source="org.apache.commons.collections4.iterators.FilterListIterator.setNextObject()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5955" source="org.apache.commons.collections4.iterators.FilterListIterator.setPreviousObject()" target="org.apache.commons.collections4.iterators.FilterListIterator.clearNextObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5956" source="org.apache.commons.collections4.iterators.FilterListIterator.setPreviousObject()" target="org.apache.commons.collections4.iterators.FilterListIterator.setPreviousObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5957" source="org.apache.commons.collections4.iterators.FilterListIterator.setPreviousObject()" target="org.apache.commons.collections4.iterators.FilterListIterator.clearPreviousObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5958" source="org.apache.commons.collections4.iterators.FilterListIterator.setPreviousObject()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5959" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkForward(java.util.ListIterator,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5960" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkBackward(java.util.ListIterator,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5961" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.setUp()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5962" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.setUp()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5963" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.setUp()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5964" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.setUp()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5965" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.setUp()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5966" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.setUp()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5967" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360()" target="org.apache.commons.collections4.list.GrowthList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5968" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360()" target="org.apache.commons.collections4.PredicateUtils.anyPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5969" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360()" target="org.apache.commons.collections4.iterators.FilterListIterator(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5970" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360()" target="org.apache.commons.collections4.iterators.FilterListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5971" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360()" target="org.apache.commons.collections4.iterators.FilterListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5972" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5973" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5974" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5975" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug()" target="org.apache.commons.collections4.iterators.FilterListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5976" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug()" target="org.apache.commons.collections4.iterators.FilterListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5977" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug()" target="org.apache.commons.collections4.iterators.FilterListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5978" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug()" target="org.apache.commons.collections4.iterators.FilterListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5979" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFalsePredicate()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5980" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFalsePredicate()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5981" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5982" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5983" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5984" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual()" target="org.apache.commons.collections4.iterators.FilterListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5985" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual()" target="org.apache.commons.collections4.iterators.FilterListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5986" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual()" target="org.apache.commons.collections4.iterators.FilterListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5987" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual()" target="org.apache.commons.collections4.iterators.FilterListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5988" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5989" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5990" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5991" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5992" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5993" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5994" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5995" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.nextNextPrevious(java.util.ListIterator,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5996" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5997" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5998" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5999" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkForward(java.util.ListIterator,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6000" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.previousPreviousNext(java.util.ListIterator,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6001" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6002" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6003" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate()" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6004" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6005" source="org.apache.commons.collections4.iterators.FilterListIteratorTest.testWalkLists()" target="org.apache.commons.collections4.iterators.FilterListIteratorTest.walkLists(java.util.List,java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6006" source="org.apache.commons.collections4.iterators.IteratorChain(java.util.Collection)" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6007" source="org.apache.commons.collections4.iterators.IteratorChain(java.util.Iterator)" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6008" source="org.apache.commons.collections4.iterators.IteratorChain(java.util.Iterator,java.util.Iterator)" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6009" source="org.apache.commons.collections4.iterators.IteratorChain(java.util.Iterator[])" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6010" source="org.apache.commons.collections4.iterators.IteratorChain.next()" target="org.apache.commons.collections4.iterators.IteratorChain.lockChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6011" source="org.apache.commons.collections4.iterators.IteratorChain.next()" target="org.apache.commons.collections4.iterators.IteratorChain.updateCurrentIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6012" source="org.apache.commons.collections4.iterators.IteratorChain.hasNext()" target="org.apache.commons.collections4.iterators.IteratorChain.lockChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6013" source="org.apache.commons.collections4.iterators.IteratorChain.hasNext()" target="org.apache.commons.collections4.iterators.IteratorChain.updateCurrentIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6014" source="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.IteratorChain.checkLocked()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6015" source="org.apache.commons.collections4.iterators.IteratorChain.remove()" target="org.apache.commons.collections4.iterators.IteratorChain.lockChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6016" source="org.apache.commons.collections4.iterators.IteratorChain.remove()" target="org.apache.commons.collections4.iterators.IteratorChain.updateCurrentIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6017" source="org.apache.commons.collections4.iterators.IteratorChain.updateCurrentIterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6018" source="org.apache.commons.collections4.iterators.IteratorChainTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6019" source="org.apache.commons.collections4.iterators.IteratorChainTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.IteratorChain(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6020" source="org.apache.commons.collections4.iterators.IteratorChainTest.makeObject()" target="org.apache.commons.collections4.iterators.IteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6021" source="org.apache.commons.collections4.iterators.IteratorChainTest.makeObject()" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6022" source="org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain()" target="org.apache.commons.collections4.iterators.IteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6023" source="org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain()" target="org.apache.commons.collections4.iterators.IteratorChain.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6024" source="org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain()" target="org.apache.commons.collections4.iterators.IteratorChain.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6025" source="org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain()" target="org.apache.commons.collections4.iterators.IteratorChain.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6026" source="org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug()" target="org.apache.commons.collections4.iterators.IteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6027" source="org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug()" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6028" source="org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug()" target="org.apache.commons.collections4.iterators.IteratorChain.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6029" source="org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug()" target="org.apache.commons.collections4.iterators.IteratorChain.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6030" source="org.apache.commons.collections4.iterators.IteratorChainTest.testIterator()" target="org.apache.commons.collections4.iterators.IteratorChainTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6031" source="org.apache.commons.collections4.iterators.IteratorChainTest.testRemove()" target="org.apache.commons.collections4.iterators.IteratorChainTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6032" source="org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator()" target="org.apache.commons.collections4.iterators.IteratorChainTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6033" source="org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator()" target="org.apache.commons.collections4.IteratorUtils.filteredIterator(java.util.Iterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6034" source="org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator()" target="org.apache.commons.collections4.IteratorUtils.chainedIterator(java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6035" source="org.apache.commons.collections4.iterators.IteratorEnumerationTest.testEnumeration()" target="org.apache.commons.collections4.iterators.IteratorEnumeration(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6036" source="org.apache.commons.collections4.iterators.IteratorEnumerationTest.testEnumeration()" target="org.apache.commons.collections4.iterators.IteratorEnumeration.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6037" source="org.apache.commons.collections4.iterators.IteratorEnumerationTest.testEnumeration()" target="org.apache.commons.collections4.iterators.IteratorEnumeration.hasMoreElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6038" source="org.apache.commons.collections4.iterators.IteratorEnumerationTest.testEnumeration()" target="org.apache.commons.collections4.iterators.IteratorEnumeration.nextElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6039" source="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator)" target="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6040" source="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean)" target="org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6041" source="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean)" target="org.apache.commons.collections4.iterators.IteratorIterable.createTypesafeIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6042" source="org.apache.commons.collections4.iterators.IteratorIterable.createTypesafeIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.IteratorIterable$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6043" source="org.apache.commons.collections4.iterators.IteratorIterable.iterator()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6044" source="org.apache.commons.collections4.iterators.IteratorIterableTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6045" source="org.apache.commons.collections4.iterators.IteratorIterableTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6046" source="org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator()" target="org.apache.commons.collections4.iterators.IteratorIterableTest.createIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6047" source="org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator()" target="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6048" source="org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator()" target="org.apache.commons.collections4.iterators.IteratorIterableTest.verifyIteration(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6049" source="org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator()" target="org.apache.commons.collections4.iterators.IteratorIterableTest.createIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6050" source="org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator()" target="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6051" source="org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator()" target="org.apache.commons.collections4.iterators.IteratorIterableTest.verifyIteration(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6052" source="org.apache.commons.collections4.iterators.LazyIteratorChain.next()" target="org.apache.commons.collections4.iterators.LazyIteratorChain.updateCurrentIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6053" source="org.apache.commons.collections4.iterators.LazyIteratorChain.hasNext()" target="org.apache.commons.collections4.iterators.LazyIteratorChain.updateCurrentIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6054" source="org.apache.commons.collections4.iterators.LazyIteratorChain.remove()" target="org.apache.commons.collections4.iterators.LazyIteratorChain.updateCurrentIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6055" source="org.apache.commons.collections4.iterators.LazyIteratorChain.updateCurrentIterator()" target="org.apache.commons.collections4.iterators.LazyIteratorChain.nextIterator(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6056" source="org.apache.commons.collections4.iterators.LazyIteratorChain.updateCurrentIterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6057" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6058" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest$1()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6059" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.LazyIteratorChainTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6060" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6061" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest$2()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6062" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.makeObject()" target="org.apache.commons.collections4.iterators.LazyIteratorChainTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6063" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.makeObject()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6064" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain()" target="org.apache.commons.collections4.iterators.LazyIteratorChainTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6065" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain()" target="org.apache.commons.collections4.iterators.LazyIteratorChain.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6066" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain()" target="org.apache.commons.collections4.iterators.LazyIteratorChain.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6067" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain()" target="org.apache.commons.collections4.iterators.LazyIteratorChain.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6068" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest$4()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6069" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug()" target="org.apache.commons.collections4.iterators.LazyIteratorChainTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6070" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6071" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug()" target="org.apache.commons.collections4.iterators.LazyIteratorChain.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6072" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug()" target="org.apache.commons.collections4.iterators.LazyIteratorChain.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6073" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator()" target="org.apache.commons.collections4.iterators.LazyIteratorChainTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6074" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove()" target="org.apache.commons.collections4.iterators.LazyIteratorChainTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6075" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator()" target="org.apache.commons.collections4.iterators.LazyIteratorChainTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6076" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator()" target="org.apache.commons.collections4.IteratorUtils.filteredIterator(java.util.Iterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6077" source="org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator()" target="org.apache.commons.collections4.IteratorUtils.chainedIterator(java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6078" source="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6079" source="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6080" source="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.makeObject()" target="org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6081" source="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator()" target="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6082" source="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testRemove()" target="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6083" source="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset()" target="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6084" source="org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6085" source="org.apache.commons.collections4.iterators.ListIteratorWrapperTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6086" source="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6087" source="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.makeObject()" target="org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6088" source="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator()" target="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6089" source="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove()" target="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6090" source="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset()" target="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6091" source="org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6092" source="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)" target="org.apache.commons.collections4.iterators.LoopingIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6093" source="org.apache.commons.collections4.iterators.LoopingIterator.next()" target="org.apache.commons.collections4.iterators.LoopingIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6094" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testConstructorEx()" target="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6095" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0()" target="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6096" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0()" target="org.apache.commons.collections4.iterators.LoopingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6097" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0()" target="org.apache.commons.collections4.iterators.LoopingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6098" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1()" target="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6099" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1()" target="org.apache.commons.collections4.iterators.LoopingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6100" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1()" target="org.apache.commons.collections4.iterators.LoopingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6101" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2()" target="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6102" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2()" target="org.apache.commons.collections4.iterators.LoopingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6103" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2()" target="org.apache.commons.collections4.iterators.LoopingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6104" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3()" target="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6105" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3()" target="org.apache.commons.collections4.iterators.LoopingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6106" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3()" target="org.apache.commons.collections4.iterators.LoopingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6107" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1()" target="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6108" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1()" target="org.apache.commons.collections4.iterators.LoopingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6109" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1()" target="org.apache.commons.collections4.iterators.LoopingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6110" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1()" target="org.apache.commons.collections4.iterators.LoopingIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6111" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6112" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.LoopingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6113" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.LoopingIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6114" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize()" target="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6115" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize()" target="org.apache.commons.collections4.iterators.LoopingIterator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6116" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize()" target="org.apache.commons.collections4.iterators.LoopingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6117" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize()" target="org.apache.commons.collections4.iterators.LoopingIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6118" source="org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize()" target="org.apache.commons.collections4.iterators.LoopingIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6119" source="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)" target="org.apache.commons.collections4.iterators.LoopingListIterator._reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6120" source="org.apache.commons.collections4.iterators.LoopingListIterator.next()" target="org.apache.commons.collections4.iterators.LoopingListIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6121" source="org.apache.commons.collections4.iterators.LoopingListIterator.reset()" target="org.apache.commons.collections4.iterators.LoopingListIterator._reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6122" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6123" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd()" target="org.apache.commons.collections4.iterators.LoopingListIterator.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6124" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6125" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd()" target="org.apache.commons.collections4.iterators.LoopingListIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6126" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6127" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testConstructorEx()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6128" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6129" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary()" target="org.apache.commons.collections4.iterators.LoopingListIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6130" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6131" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6132" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6133" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6134" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6135" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6136" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0()" target="org.apache.commons.collections4.iterators.LoopingListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6137" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0()" target="org.apache.commons.collections4.iterators.LoopingListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6138" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6139" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6140" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6141" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1()" target="org.apache.commons.collections4.iterators.LoopingListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6142" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6143" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1()" target="org.apache.commons.collections4.iterators.LoopingListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6144" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6145" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6146" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2()" target="org.apache.commons.collections4.iterators.LoopingListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6147" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6148" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2()" target="org.apache.commons.collections4.iterators.LoopingListIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6149" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2()" target="org.apache.commons.collections4.iterators.LoopingListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6150" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6151" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6152" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex()" target="org.apache.commons.collections4.iterators.LoopingListIterator.nextIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6153" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previousIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6154" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6155" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6156" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6157" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards()" target="org.apache.commons.collections4.iterators.LoopingListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6158" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6159" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards()" target="org.apache.commons.collections4.iterators.LoopingListIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6160" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6161" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward()" target="org.apache.commons.collections4.iterators.LoopingListIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6162" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6163" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward()" target="org.apache.commons.collections4.iterators.LoopingListIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6164" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6165" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6166" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.LoopingListIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6167" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6168" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet()" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6169" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet()" target="org.apache.commons.collections4.iterators.LoopingListIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6170" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet()" target="org.apache.commons.collections4.iterators.LoopingListIterator.set(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6171" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet()" target="org.apache.commons.collections4.iterators.LoopingListIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6172" source="org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet()" target="org.apache.commons.collections4.iterators.LoopingListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6173" source="org.apache.commons.collections4.iterators.NodeListIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6174" source="org.apache.commons.collections4.iterators.NodeListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.NodeListIteratorTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6175" source="org.apache.commons.collections4.iterators.NodeListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.NodeList)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6176" source="org.apache.commons.collections4.iterators.NodeListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6177" source="org.apache.commons.collections4.iterators.NodeListIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.NodeListIteratorTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6178" source="org.apache.commons.collections4.iterators.NodeListIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.NodeList)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6179" source="org.apache.commons.collections4.iterators.NodeListIteratorTest.testEmptyIteratorWithNodeConstructor()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.testEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6180" source="org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIteratorWithNodeConstructor()" target="org.apache.commons.collections4.iterators.AbstractIteratorTest.testFullIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6181" source="org.apache.commons.collections4.iterators.NodeListIteratorTest.testNullConstructor()" target="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6182" source="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[])" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6183" source="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int)" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6184" source="org.apache.commons.collections4.iterators.ObjectArrayIterator.next()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6185" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6186" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6187" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator(E[])" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6188" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator(E[],int)" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6189" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator(E[],int,int)" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6190" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6191" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6192" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testIterator()" target="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6193" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testNullArray()" target="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6194" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.makeArrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6195" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6196" source="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6197" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[])" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6198" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[],int)" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6199" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[],int,int)" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6200" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator.next()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6201" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator.previous()" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6202" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator.hasPrevious()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator.getStartIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6203" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator.nextIndex()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator.getStartIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6204" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator.previousIndex()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator.getStartIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6205" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator.reset()" target="org.apache.commons.collections4.iterators.ObjectArrayIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6206" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6207" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.makeArrayListIterator(E[])" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6208" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6209" source="org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.makeObject()" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6210" source="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.ObjectArrayIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6211" source="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.makeArrayListIterator(E[])" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6212" source="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6213" source="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6214" source="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator()" target="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6215" source="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet()" target="org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.makeArrayListIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6216" source="org.apache.commons.collections4.iterators.ObjectGraphIterator#stack" target="org.apache.commons.collections4.ArrayStack(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6217" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.next()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator.updateCurrentIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6218" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.hasNext()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator.updateCurrentIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6219" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNext(E)" target="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6220" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)" target="org.apache.commons.collections4.ArrayStack.push(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6221" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6222" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNext(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6223" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)" target="org.apache.commons.collections4.ArrayStack.pop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6224" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6225" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.updateCurrentIterator()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNext(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6226" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.updateCurrentIterator()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6227" source="org.apache.commons.collections4.iterators.ObjectGraphIterator.updateCurrentIterator()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6228" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.addLeaf()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6229" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.addLeaf()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.getLeaf(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6230" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.addTree()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6231" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.addTree()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.getTree(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6232" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder.transform(java.lang.Object)" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.treeIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6233" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder.transform(java.lang.Object)" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.branchIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6234" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder.transform(java.lang.Object)" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.leafIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6235" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.addBranch()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6236" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.addBranch()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.getBranch(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6237" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6238" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6239" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6240" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6241" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators()" target="org.apache.commons.collections4.IteratorUtils.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6242" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6243" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6244" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6245" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6246" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6247" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.addTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6248" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.addBranch()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6249" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.addLeaf()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6250" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6251" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6252" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6253" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.addTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6254" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.getTree(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6255" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.addBranch()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6256" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.addLeaf()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6257" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6258" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6259" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6260" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.addTree()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6261" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest.getTree(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6262" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree.addBranch()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6263" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch.addLeaf()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6264" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6265" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3()" target="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6266" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6267" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6268" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6269" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators()" target="org.apache.commons.collections4.IteratorUtils.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6270" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6271" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6272" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6273" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6274" source="org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove()" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6275" source="org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.PeekingIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6276" source="org.apache.commons.collections4.iterators.PeekingIterator.element()" target="org.apache.commons.collections4.iterators.PeekingIterator.fill()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6277" source="org.apache.commons.collections4.iterators.PeekingIterator.next()" target="org.apache.commons.collections4.iterators.PeekingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6278" source="org.apache.commons.collections4.iterators.PeekingIterator.peek()" target="org.apache.commons.collections4.iterators.PeekingIterator.fill()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6279" source="org.apache.commons.collections4.iterators.PeekingIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6280" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6281" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6282" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty()" target="org.apache.commons.collections4.iterators.PeekingIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6283" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove()" target="org.apache.commons.collections4.iterators.PeekingIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6284" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove()" target="org.apache.commons.collections4.iterators.PeekingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6285" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove()" target="org.apache.commons.collections4.iterators.PeekingIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6286" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove()" target="org.apache.commons.collections4.iterators.PeekingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6287" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove()" target="org.apache.commons.collections4.iterators.PeekingIterator.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6288" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted()" target="org.apache.commons.collections4.iterators.PeekingIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6289" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted()" target="org.apache.commons.collections4.iterators.PeekingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6290" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted()" target="org.apache.commons.collections4.iterators.PeekingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6291" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted()" target="org.apache.commons.collections4.iterators.PeekingIterator.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6292" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted()" target="org.apache.commons.collections4.iterators.PeekingIterator.element()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6293" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek()" target="org.apache.commons.collections4.iterators.PeekingIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6294" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek()" target="org.apache.commons.collections4.iterators.PeekingIterator.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6295" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek()" target="org.apache.commons.collections4.iterators.PeekingIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6296" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek()" target="org.apache.commons.collections4.iterators.PeekingIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6297" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek()" target="org.apache.commons.collections4.iterators.PeekingIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6298" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek()" target="org.apache.commons.collections4.iterators.PeekingIterator.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6299" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek()" target="org.apache.commons.collections4.iterators.PeekingIterator.element()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6300" source="org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek()" target="org.apache.commons.collections4.iterators.PeekingIteratorTest.validate(java.util.Iterator,E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6301" source="org.apache.commons.collections4.iterators.PermutationIterator.next()" target="org.apache.commons.collections4.iterators.PermutationIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6302" source="org.apache.commons.collections4.iterators.PermutationIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6303" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.PermutationIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6304" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.PermutationIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6305" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection()" target="org.apache.commons.collections4.iterators.PermutationIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6306" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection()" target="org.apache.commons.collections4.iterators.PermutationIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6307" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection()" target="org.apache.commons.collections4.iterators.PermutationIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6308" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException()" target="org.apache.commons.collections4.iterators.PermutationIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6309" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException()" target="org.apache.commons.collections4.iterators.PermutationIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6310" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException()" target="org.apache.commons.collections4.iterators.PermutationIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6311" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity()" target="org.apache.commons.collections4.iterators.PermutationIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6312" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity()" target="org.apache.commons.collections4.iterators.PermutationIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6313" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity()" target="org.apache.commons.collections4.iterators.PermutationIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6314" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize()" target="org.apache.commons.collections4.iterators.PermutationIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6315" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity()" target="org.apache.commons.collections4.iterators.PermutationIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6316" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity()" target="org.apache.commons.collections4.iterators.PermutationIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6317" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity()" target="org.apache.commons.collections4.iterators.PermutationIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6318" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore()" target="org.apache.commons.collections4.iterators.PermutationIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6319" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore()" target="org.apache.commons.collections4.iterators.PermutationIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6320" source="org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore()" target="org.apache.commons.collections4.iterators.PermutationIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6321" source="org.apache.commons.collections4.iterators.PushbackIterator#items" target="org.apache.commons.collections4.ArrayStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6322" source="org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.PushbackIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6323" source="org.apache.commons.collections4.iterators.PushbackIterator.next()" target="org.apache.commons.collections4.ArrayStack.pop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6324" source="org.apache.commons.collections4.iterators.PushbackIterator.pushback(E)" target="org.apache.commons.collections4.ArrayStack.push(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6325" source="org.apache.commons.collections4.iterators.PushbackIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6326" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6327" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6328" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback()" target="org.apache.commons.collections4.iterators.PushbackIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6329" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback()" target="org.apache.commons.collections4.iterators.PushbackIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6330" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback()" target="org.apache.commons.collections4.iterators.PushbackIterator.pushback(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6331" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback()" target="org.apache.commons.collections4.iterators.PushbackIteratorTest.validate(java.util.Iterator,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6332" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback()" target="org.apache.commons.collections4.iterators.PushbackIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6333" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback()" target="org.apache.commons.collections4.iterators.PushbackIterator.pushback(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6334" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback()" target="org.apache.commons.collections4.iterators.PushbackIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6335" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback()" target="org.apache.commons.collections4.iterators.PushbackIteratorTest.validate(java.util.Iterator,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6336" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback()" target="org.apache.commons.collections4.iterators.PushbackIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6337" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback()" target="org.apache.commons.collections4.iterators.PushbackIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6338" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback()" target="org.apache.commons.collections4.iterators.PushbackIterator.pushback(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6339" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback()" target="org.apache.commons.collections4.iterators.PushbackIteratorTest.validate(java.util.Iterator,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6340" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration()" target="org.apache.commons.collections4.iterators.PushbackIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6341" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration()" target="org.apache.commons.collections4.iterators.PushbackIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6342" source="org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration()" target="org.apache.commons.collections4.iterators.PushbackIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6343" source="org.apache.commons.collections4.iterators.ReverseListIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6344" source="org.apache.commons.collections4.iterators.ReverseListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.ReverseListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6345" source="org.apache.commons.collections4.iterators.ReverseListIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.ReverseListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6346" source="org.apache.commons.collections4.iterators.ReverseListIteratorTest.testEmptyListIteratorIsIndeedEmpty()" target="org.apache.commons.collections4.iterators.ReverseListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6347" source="org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.ReverseListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6348" source="org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReset()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6349" source="org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReverse()" target="org.apache.commons.collections4.iterators.ReverseListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6350" source="org.apache.commons.collections4.iterators.ReverseListIteratorTest.testWalkForwardAndBack()" target="org.apache.commons.collections4.iterators.ReverseListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6351" source="org.apache.commons.collections4.iterators.SingletonIterator(E)" target="org.apache.commons.collections4.iterators.SingletonIterator(E,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6352" source="org.apache.commons.collections4.iterators.SingletonIterator2Test(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6353" source="org.apache.commons.collections4.iterators.SingletonIterator2Test.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonIterator(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6354" source="org.apache.commons.collections4.iterators.SingletonIterator2Test.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6355" source="org.apache.commons.collections4.iterators.SingletonIterator2Test.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6356" source="org.apache.commons.collections4.iterators.SingletonIterator2Test.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6357" source="org.apache.commons.collections4.iterators.SingletonIterator2Test.makeObject()" target="org.apache.commons.collections4.iterators.SingletonIterator(E,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6358" source="org.apache.commons.collections4.iterators.SingletonIterator2Test.testIterator()" target="org.apache.commons.collections4.iterators.SingletonIterator2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6359" source="org.apache.commons.collections4.iterators.SingletonIterator2Test.testReset()" target="org.apache.commons.collections4.iterators.SingletonIterator2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6360" source="org.apache.commons.collections4.iterators.SingletonIterator2Test.testReset()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6361" source="org.apache.commons.collections4.iterators.SingletonIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6362" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6363" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6364" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6365" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6366" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.SingletonIterator(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6367" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.testIterator()" target="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6368" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.SingletonIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6369" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.testReset()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6370" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove()" target="org.apache.commons.collections4.iterators.SingletonIterator(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6371" source="org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6372" source="org.apache.commons.collections4.iterators.SingletonListIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6373" source="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6374" source="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonListIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6375" source="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonListIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6376" source="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.SingletonListIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6377" source="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.SingletonListIterator(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6378" source="org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator()" target="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6379" source="org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset()" target="org.apache.commons.collections4.iterators.SingletonListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6380" source="org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6381" source="org.apache.commons.collections4.iterators.TransformIterator.next()" target="org.apache.commons.collections4.iterators.TransformIterator.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6382" source="org.apache.commons.collections4.iterators.TransformIterator.transform(I)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6383" source="org.apache.commons.collections4.iterators.UniqueFilterIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.FilterIterator(java.util.Iterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6384" source="org.apache.commons.collections4.iterators.UniqueFilterIterator(java.util.Iterator)" target="org.apache.commons.collections4.functors.UniquePredicate.uniquePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6385" source="org.apache.commons.collections4.iterators.UniqueFilterIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6386" source="org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.UniqueFilterIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6387" source="org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.UniqueFilterIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6388" source="org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator()" target="org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6389" source="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.UnmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6390" source="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6391" source="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6392" source="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6393" source="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6394" source="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6395" source="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6396" source="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)" target="org.apache.commons.collections4.iterators.UnmodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6397" source="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractListIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6398" source="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6399" source="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6400" source="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6401" source="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6402" source="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6403" source="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)" target="org.apache.commons.collections4.iterators.UnmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6404" source="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.getKey()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6405" source="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.next()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6406" source="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.getValue()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6407" source="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.hasNext()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6408" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractMapIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6409" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.getMap()" target="org.apache.commons.collections4.bidimap.DualHashBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6410" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6411" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.bidimap.DualHashBidiMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6412" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.bidimap.AbstractDualBidiMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6413" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6414" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6415" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeObject()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6416" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6417" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6418" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6419" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6420" source="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6421" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6422" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.getKey()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6423" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.next()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6424" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.previous()" target="org.apache.commons.collections4.OrderedMapIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6425" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.getValue()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6426" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.hasNext()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6427" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.hasPrevious()" target="org.apache.commons.collections4.OrderedMapIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6428" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest(java.lang.String)" target="org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6429" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.getMap()" target="org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6430" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6431" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6432" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeEmptyIterator()" target="org.apache.commons.collections4.map.ListOrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6433" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6434" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeObject()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6435" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeObject()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6436" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6437" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6438" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6439" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6440" source="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.makeEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6441" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator(java.lang.Object)" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6442" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6443" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator(java.lang.Object,int)" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6444" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator(java.lang.Object,int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6445" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator.add(V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6446" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator.add(V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.createCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6447" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator.remove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6448" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6449" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.get(int)" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6450" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.get(int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6451" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.remove(int)" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6452" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.remove(int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6453" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.remove(int)" target="org.apache.commons.collections4.multimap.AbstractListValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6454" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.set(int,V)" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6455" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.set(int,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6456" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6457" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.createCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6458" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6459" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6460" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.equals(java.lang.Object)" target="org.apache.commons.collections4.ListUtils.isEqualList(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6461" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.hashCode()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6462" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.hashCode()" target="org.apache.commons.collections4.ListUtils.hashCodeForList(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6463" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.indexOf(java.lang.Object)" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6464" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.indexOf(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6465" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.lastIndexOf(java.lang.Object)" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6466" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.lastIndexOf(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6467" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.subList(int,int)" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6468" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.subList(int,int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6469" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.listIterator()" target="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6470" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.listIterator(int)" target="org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6471" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.add(int,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6472" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.add(int,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.createCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6473" source="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList.add(int,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6474" source="org.apache.commons.collections4.multimap.AbstractListValuedMap(java.util.Map,java.lang.Class)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6475" source="org.apache.commons.collections4.multimap.AbstractListValuedMap(java.util.Map,java.lang.Class,int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6476" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6477" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6478" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6479" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractListValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6480" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.ListValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6481" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.ListUtils.isEqualList(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6482" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.hashCode()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6483" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.hashCode()" target="org.apache.commons.collections4.ListUtils.hashCodeForList(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6484" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.get(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6485" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6486" source="org.apache.commons.collections4.multimap.AbstractListValuedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6487" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.size()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6488" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6489" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1$1.transform(V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6490" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1.nextIterator(int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6491" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1.nextIterator(int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6492" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1.nextIterator(int)" target="org.apache.commons.collections4.iterators.TransformIterator(java.util.Iterator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6493" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1.nextIterator(int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6494" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6495" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6496" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.iterator()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6497" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6498" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6499" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.iterator()" target="org.apache.commons.collections4.iterators.TransformIterator(java.util.Iterator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6500" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6501" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.toArray(T[])" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6502" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.toArray(T[])" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6503" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.toArray(T[])" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6504" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.contains(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6505" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.containsAll(java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.containsAll(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6506" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.containsAll(java.util.Collection)" target="org.apache.commons.collections4.bag.HashBag(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6507" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.containsAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.Bag.uniqueSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6508" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.containsAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6509" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.containsAll(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6510" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.isEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6511" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.getCount(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6512" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.size()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6513" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.toArray()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6514" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.toArray()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6515" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.toArray()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6516" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag$1()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6517" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag$1.nextIterator(int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6518" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag$1.nextIterator(int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6519" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6520" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6521" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.iterator()" target="org.apache.commons.collections4.iterators.LazyIteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6522" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6523" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.uniqueSet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6524" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag.uniqueSet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6525" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapEntry(K,V)" target="org.apache.commons.collections4.keyvalue.AbstractMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6526" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6527" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values.size()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6528" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values.iterator()" target="org.apache.commons.collections4.iterators.IteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6529" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6530" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values.iterator()" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6531" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6532" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values.clear()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6533" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6534" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator.remove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6535" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.toArray(T[])" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6536" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.add(V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6537" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.add(V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6538" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.addAll(java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6539" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.addAll(java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(K,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6540" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.contains(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6541" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.containsAll(java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6542" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6543" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.equals(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6544" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.isEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6545" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.remove(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6546" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.remove(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6547" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.removeAll(java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6548" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.removeAll(java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6549" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.retainAll(java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6550" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.retainAll(java.util.Collection)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6551" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.hashCode()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6552" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.size()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6553" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.toArray()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6554" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.toString()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6555" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6556" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6557" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.iterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6558" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.clear()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6559" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.clear()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6560" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class)" target="org.apache.commons.collections4.functors.InstantiateFactory(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6561" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class,int)" target="org.apache.commons.collections4.functors.InstantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6562" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6563" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6564" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.containsValue(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6565" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6566" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6567" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6568" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6569" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6570" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6571" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.isEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6572" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.put(K,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6573" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.put(K,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.createCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6574" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(K,java.lang.Iterable)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6575" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(K,java.lang.Iterable)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.createCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6576" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.removeMapping(K,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6577" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.removeMapping(K,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6578" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.hashCode()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6579" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6580" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.toString()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6581" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.createCollection()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6582" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.entries()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6583" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.get(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6584" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils.emptyIfNull(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6585" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6586" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.values()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6587" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.asMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6588" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keySet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6589" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keys()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6590" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.mapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6591" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.mapIterator()" target="org.apache.commons.collections4.iterators.EmptyMapIterator.emptyMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6592" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.mapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6593" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.clear()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6594" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6595" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6596" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(K,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6597" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6598" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.containsKey(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6599" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.containsKey(java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6600" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.containsMapping(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6601" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.containsMapping(java.lang.Object,java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6602" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.containsValue(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6603" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.containsValue(java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6604" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6605" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.isEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6606" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.isEmpty()" target="org.apache.commons.collections4.MultiValuedMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6607" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.put(K,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6608" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.put(K,V)" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6609" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.putAll(K,java.lang.Iterable)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6610" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.putAll(K,java.lang.Iterable)" target="org.apache.commons.collections4.MultiValuedMap.putAll(K,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6611" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.removeMapping(K,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6612" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.removeMapping(K,V)" target="org.apache.commons.collections4.MultiValuedMap.removeMapping(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6613" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.hashCode()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6614" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.size()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6615" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.size()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6616" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.toString()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6617" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.entries()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6618" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.entries()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6619" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.get(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6620" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.get(java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6621" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.remove(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6622" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.remove(java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6623" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.values()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6624" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.values()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6625" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.asMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6626" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.asMap()" target="org.apache.commons.collections4.MultiValuedMap.asMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6627" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.keySet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6628" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.keySet()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6629" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.keys()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6630" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.keys()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6631" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.mapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6632" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.mapIterator()" target="org.apache.commons.collections4.MultiValuedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6633" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.clear()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6634" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.clear()" target="org.apache.commons.collections4.MultiValuedMap.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6635" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.putAll(java.util.Map)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6636" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.putAll(java.util.Map)" target="org.apache.commons.collections4.MultiValuedMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6637" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.putAll(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6638" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.putAll(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.MultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6639" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap()" target="org.apache.commons.collections4.map.AbstractMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6640" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.getSampleKeys()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6641" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.isAllowNullKey()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6642" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.isPutAddSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6643" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.isPutChangeSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6644" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.isRemoveSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6645" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.getSampleValues()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6646" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.makeFullMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6647" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.makeFullMap()" target="org.apache.commons.collections4.MultiValuedMap.asMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6648" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.makeObject()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6649" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap.makeObject()" target="org.apache.commons.collections4.MultiValuedMap.asMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6650" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries()" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6651" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.isNullSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6652" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.isRemoveSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6653" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.makeFullCollection()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6654" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.makeFullCollection()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6655" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.makeObject()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6656" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.makeObject()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6657" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.getFullElements()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6658" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.getFullElements()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6659" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6660" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6661" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6662" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetEmpty()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6663" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6664" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6665" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6666" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6667" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6668" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetFull()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6669" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6670" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6671" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet()" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6672" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.getFullElements()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6673" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.getFullElements()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6674" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.isNullSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6675" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.isRemoveSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6676" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.makeFullCollection()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6677" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.makeFullCollection()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6678" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.makeObject()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6679" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet.makeObject()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6680" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys()" target="org.apache.commons.collections4.bag.AbstractBagTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6681" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.getFullElements()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6682" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.isNullSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6683" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.makeFullCollection()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6684" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.makeFullCollection()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6685" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.makeObject()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6686" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.makeObject()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6687" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6688" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6689" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetEmpty()" target="org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6690" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6691" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetEmpty()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6692" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6693" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6694" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6695" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6696" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetFull()" target="org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6697" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6698" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetFull()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6699" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6700" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6701" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues()" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6702" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.getFullElements()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6703" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.isNullSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAllowNullKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6704" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.isRemoveSupported()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6705" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.makeFullCollection()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6706" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.makeFullCollection()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6707" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.makeObject()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6708" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.makeObject()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6709" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6710" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6711" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6712" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetEmpty()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6713" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetEmpty()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6714" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6715" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6716" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6717" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6718" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetFull()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6719" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetFull()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.setConfirmed(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6720" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6721" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest(java.lang.String)" target="org.apache.commons.collections4.AbstractObjectTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6722" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestAsMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6723" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestMultiValuedMapEntries()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6724" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestMultiValuedMapKeySet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6725" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestMultiValuedMapKeys()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6726" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.bulkTestMultiValuedMapValues()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6727" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeConfirmedMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6728" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6729" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.addSampleMappings(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6730" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.addSampleMappings(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6731" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.addSampleMappings(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6732" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.addSampleMappings(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6733" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6734" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6735" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6736" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeConfirmedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6737" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6738" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getSampleValues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6739" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6740" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAddMappingThroughGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6741" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAddMappingThroughGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6742" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAddMappingThroughGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6743" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAddMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6744" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAddMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6745" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAddMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6746" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAddMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6747" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAddMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6748" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6749" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6750" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapGet()" target="org.apache.commons.collections4.MultiValuedMap.asMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6751" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6752" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapPut()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6753" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapPut()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6754" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapPut()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6755" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapPut()" target="org.apache.commons.collections4.MultiValuedMap.asMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6756" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapPut()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6757" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapPut()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6758" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapPut()" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6759" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapPut()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6760" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6761" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6762" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6763" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapRemove()" target="org.apache.commons.collections4.MultiValuedMap.asMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6764" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapRemove()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6765" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testAsMapRemove()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6766" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testContainsValue()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6767" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testContainsValue()" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6768" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testContainsValue_Key()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6769" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testContainsValue_Key()" target="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6770" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testContainsValue_Key()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6771" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testContainsValue_Key()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6772" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6773" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6774" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6775" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEmptyMapCompatibility()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6776" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEntriesCollectionIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6777" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEntriesCollectionIterator()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6778" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEntriesCollectionIterator()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6779" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEntriesCollectionIterator()" target="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6780" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testEntriesCollectionIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6781" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6782" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6783" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6784" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6785" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6786" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6787" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6788" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testFullMapCompatibility()" target="org.apache.commons.collections4.MultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6789" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6790" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testGet()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6791" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeyContainsValue()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6792" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeyContainsValue()" target="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6793" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeySetSize()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6794" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeySetSize()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6795" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBag()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6796" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBag()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6797" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBag()" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6798" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBag()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6799" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagContainsAll()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6800" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagContainsAll()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6801" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagContainsAll()" target="org.apache.commons.collections4.Bag.containsAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6802" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6803" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagIterator()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6804" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagIterator()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6805" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagIterator()" target="org.apache.commons.collections4.bag.HashBag(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6806" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagIterator()" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6807" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testKeysBagIterator()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6808" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapEquals()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6809" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapEquals()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6810" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapEquals()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6811" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapEquals()" target="org.apache.commons.collections4.MultiValuedMap.removeMapping(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6812" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6813" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6814" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIterator()" target="org.apache.commons.collections4.MultiValuedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6815" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIterator()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6816" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6817" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIterator()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6818" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIterator()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6819" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIterator()" target="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6820" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6821" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6822" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6823" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorRemove()" target="org.apache.commons.collections4.MultiValuedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6824" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorRemove()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6825" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorRemove()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6826" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorRemove()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6827" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorRemove()" target="org.apache.commons.collections4.MultiValuedMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6828" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorUnsupportedSet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6829" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorUnsupportedSet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6830" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorUnsupportedSet()" target="org.apache.commons.collections4.MultiValuedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6831" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorUnsupportedSet()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6832" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMapIteratorUnsupportedSet()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6833" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMultipleValues()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6834" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testMultipleValues()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6835" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testNoMappingReturnsEmptyCol()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6836" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testNoMappingReturnsEmptyCol()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6837" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_KeyIterable()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6838" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_KeyIterable()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6839" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_KeyIterable()" target="org.apache.commons.collections4.MultiValuedMap.putAll(K,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6840" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_KeyIterable()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6841" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_KeyIterable()" target="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6842" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6843" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6844" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6845" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.MultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6846" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6847" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6848" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6849" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map1()" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6850" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6851" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6852" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6853" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.MultiValuedMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6854" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6855" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6856" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6857" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testPutAll_Map2()" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6858" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaEntriesIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6859" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaEntriesIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6860" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaEntriesIterator()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6861" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaEntriesIterator()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6862" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaEntriesIterator()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6863" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaValuesIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6864" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaValuesIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6865" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaValuesIterator()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6866" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaValuesIterator()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6867" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveAllViaValuesIterator()" target="org.apache.commons.collections4.MultiValuedMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6868" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6869" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6870" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6871" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6872" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6873" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6874" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6875" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6876" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGet()" target="org.apache.commons.collections4.MultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6877" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6878" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6879" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6880" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6881" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6882" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()" target="org.apache.commons.collections4.MultiValuedMap.containsMapping(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6883" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6884" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6885" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveMappingThroughGetIterator()" target="org.apache.commons.collections4.MultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6886" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveViaValuesRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6887" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveViaValuesRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6888" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveViaValuesRemove()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6889" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveViaValuesRemove()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6890" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemoveViaValuesRemove()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6891" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemove_KeyItem()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6892" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemove_KeyItem()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6893" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemove_KeyItem()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6894" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemove_KeyItem()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6895" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testRemove_KeyItem()" target="org.apache.commons.collections4.MultiValuedMap.removeMapping(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6896" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6897" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6898" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSizeWithPutRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6899" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSizeWithPutRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6900" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSizeWithPutRemove()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6901" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSizeWithPutRemove()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6902" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSizeWithPutRemove()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6903" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSizeWithPutRemove()" target="org.apache.commons.collections4.MultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6904" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSizeWithPutRemove()" target="org.apache.commons.collections4.MultiValuedMap.removeMapping(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6905" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize_Key()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6906" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize_Key()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6907" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize_Key()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6908" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize_Key()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6909" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize_Key()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6910" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize_Key()" target="org.apache.commons.collections4.MultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6911" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testSize_Key()" target="org.apache.commons.collections4.MultiValuedMap.removeMapping(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6912" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testValues()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6913" source="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.testValues()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6914" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6915" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6916" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet.equals(java.lang.Object)" target="org.apache.commons.collections4.SetUtils.isEqualSet(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6917" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet.hashCode()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.getMapping()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6918" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet.hashCode()" target="org.apache.commons.collections4.SetUtils.hashCodeForSet(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6919" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap(java.util.Map,java.lang.Class)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6920" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap(java.util.Map,java.lang.Class,int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6921" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6922" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6923" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6924" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractSetValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6925" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.SetValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6926" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.equals(java.lang.Object)" target="org.apache.commons.collections4.SetUtils.isEqualSet(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6927" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.hashCode()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6928" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.hashCode()" target="org.apache.commons.collections4.SetUtils.hashCodeForSet(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6929" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.get(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6930" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.SetUtils.emptyIfNull(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6931" source="org.apache.commons.collections4.multimap.AbstractSetValuedMap.remove(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6932" source="org.apache.commons.collections4.multimap.MultiValuedHashMap$ListValuedHashMap(java.lang.Class)" target="org.apache.commons.collections4.multimap.AbstractListValuedMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6933" source="org.apache.commons.collections4.multimap.MultiValuedHashMap$ListValuedHashMap(java.lang.Class,int)" target="org.apache.commons.collections4.multimap.AbstractListValuedMap(java.util.Map,java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6934" source="org.apache.commons.collections4.multimap.MultiValuedHashMap$SetValuedHashMap(java.lang.Class)" target="org.apache.commons.collections4.multimap.AbstractSetValuedMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6935" source="org.apache.commons.collections4.multimap.MultiValuedHashMap$SetValuedHashMap(java.lang.Class,int)" target="org.apache.commons.collections4.multimap.AbstractSetValuedMap(java.util.Map,java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6936" source="org.apache.commons.collections4.multimap.MultiValuedHashMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6937" source="org.apache.commons.collections4.multimap.MultiValuedHashMap(int)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6938" source="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6939" source="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,int)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6940" source="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6941" source="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class,int)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map,java.lang.Class,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6942" source="org.apache.commons.collections4.multimap.MultiValuedHashMap(java.util.Map)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6943" source="org.apache.commons.collections4.multimap.MultiValuedHashMap(java.util.Map)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6944" source="org.apache.commons.collections4.multimap.MultiValuedHashMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap(int,float,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6945" source="org.apache.commons.collections4.multimap.MultiValuedHashMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6946" source="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap(java.lang.Class)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap$ListValuedHashMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6947" source="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap(java.lang.Class)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap$SetValuedHashMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6948" source="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap$ListValuedHashMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6949" source="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap$SetValuedHashMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6950" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest(java.lang.String)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6951" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6952" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.makeObject()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6953" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testEqualsHashCodeContract()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6954" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testEqualsHashCodeContract()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6955" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAdd()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6956" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAdd()" target="org.apache.commons.collections4.ListValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6957" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAdd()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6958" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAdd()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6959" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAddViaListIterator()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6960" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAddViaListIterator()" target="org.apache.commons.collections4.ListValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6961" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAddViaListIterator()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6962" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapAddViaListIterator()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6963" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapEqualsHashCodeContract()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6964" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapEqualsHashCodeContract()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6965" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemove()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6966" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemove()" target="org.apache.commons.collections4.ListValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6967" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemove()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6968" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemove()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6969" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemoveViaListIterator()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6970" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemoveViaListIterator()" target="org.apache.commons.collections4.ListValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6971" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemoveViaListIterator()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6972" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testListValuedMapRemoveViaListIterator()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6973" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapAdd()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6974" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapAdd()" target="org.apache.commons.collections4.SetValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6975" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapAdd()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6976" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapAdd()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6977" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapEqualsHashCodeContract()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6978" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapEqualsHashCodeContract()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6979" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemove()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6980" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemove()" target="org.apache.commons.collections4.SetValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6981" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemove()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6982" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemove()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6983" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemoveViaIterator()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6984" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemoveViaIterator()" target="org.apache.commons.collections4.SetValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6985" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemoveViaIterator()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6986" source="org.apache.commons.collections4.multimap.MultiValuedHashMapTest.testSetValuedMapRemoveViaIterator()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6987" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6988" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6989" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6990" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6991" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6992" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6993" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.MultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6994" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformingMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6995" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformKey(K)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6996" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformValue(V)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6997" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.put(K,V)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6998" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.put(K,V)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6999" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.put(K,V)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7000" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.put(K,V)" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7001" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(K,java.lang.Iterable)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7002" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(K,java.lang.Iterable)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7003" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(K,java.lang.Iterable)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7004" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(K,java.lang.Iterable)" target="org.apache.commons.collections4.MultiValuedMap.putAll(K,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7005" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMap(java.util.Map)" target="org.apache.commons.collections4.map.LinkedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7006" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMap(java.util.Map)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7007" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMap(java.util.Map)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7008" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.MultiValuedMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7009" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7010" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7011" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7012" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7013" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7014" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7015" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.MultiValuedMap.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7016" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(java.util.Map)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7017" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7018" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.MultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7019" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7020" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest(java.lang.String)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7021" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7022" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.makeObject()" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformingMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7023" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.makeObject()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7024" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.makeObject()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7025" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_Decorate()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7026" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_Decorate()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7027" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_Decorate()" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformingMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7028" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_Decorate()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7029" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_Decorate()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7030" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_decorateTransform()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7031" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_decorateTransform()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7032" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_decorateTransform()" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7033" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_decorateTransform()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7034" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testFactory_decorateTransform()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7035" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testKeyTransformedMap()" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformingMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7036" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testKeyTransformedMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7037" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testKeyTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7038" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testKeyTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7039" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testKeyTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7040" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testKeyTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7041" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testKeyTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7042" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testKeyTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7043" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testValueTransformedMap()" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformingMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7044" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testValueTransformedMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7045" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testValueTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7046" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testValueTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7047" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testValueTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7048" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testValueTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7049" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testValueTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7050" source="org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest.testValueTransformedMap()" target="org.apache.commons.collections4.MultiValuedMap.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7051" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7052" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7053" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.entries()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7054" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.entries()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7055" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.entries()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7056" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.get(java.lang.Object)" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7057" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.get(java.lang.Object)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7058" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.get(java.lang.Object)" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7059" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.values()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7060" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.values()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7061" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.values()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7062" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.asMap()" target="org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7063" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.asMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7064" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.asMap()" target="org.apache.commons.collections4.MultiValuedMap.asMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7065" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7066" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.keySet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7067" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.keySet()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7068" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.keys()" target="org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7069" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.keys()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7070" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.keys()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7071" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.mapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7072" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.mapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7073" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.mapIterator()" target="org.apache.commons.collections4.MultiValuedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7074" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest(java.lang.String)" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7075" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7076" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeFullMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7077" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeFullMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.addSampleMappings(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7078" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeFullMap()" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7079" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeObject()" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7080" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeObject()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7081" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testAddException()" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7082" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testAddException()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7083" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testDecorateFactory()" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7084" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testDecorateFactory()" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7085" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testDecoratorFactoryNullMap()" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7086" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiable()" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7087" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiable()" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7088" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableAsMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7089" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableAsMap()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7090" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableAsMap()" target="org.apache.commons.collections4.MultiValuedMap.asMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7091" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableEntries()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7092" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableEntries()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7093" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableEntries()" target="org.apache.commons.collections4.MultiValuedMap.entries()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7094" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeySet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7095" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeySet()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7096" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeySet()" target="org.apache.commons.collections4.MultiValuedMap.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7097" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeys()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7098" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeys()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7099" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeys()" target="org.apache.commons.collections4.MultiValuedMap.keys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7100" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeys()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7101" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeys()" target="org.apache.commons.collections4.Bag.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7102" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableKeys()" target="org.apache.commons.collections4.Bag.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7103" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableMapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7104" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableMapIterator()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7105" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableMapIterator()" target="org.apache.commons.collections4.MultiValuedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7106" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableMapIterator()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7107" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableMapIterator()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7108" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableValues()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7109" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableValues()" target="org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest.getMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7110" source="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest.testUnmodifiableValues()" target="org.apache.commons.collections4.MultiValuedMap.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7111" source="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer#INSTANCE" target="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7112" source="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer()" target="org.apache.commons.collections4.trie.KeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7113" source="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String,int,int)" target="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7114" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.setKeyValue(K,V)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7115" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.equals(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7116" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.hashCode()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7117" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.hashCode()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7118" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.compare(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7119" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K,int,int)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isBitSet(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7120" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K,K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.bitIndex(K,int,int,K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7121" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K,K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7122" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitsPerElement()" target="org.apache.commons.collections4.trie.KeyAnalyzer.bitsPerElement()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7123" source="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7124" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7125" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator.next()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7126" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7127" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7128" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7129" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7130" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.size()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7131" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7132" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.clear()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7133" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7134" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator.next()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7135" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator.next()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7136" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.contains(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7137" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7138" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7139" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.size()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7140" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7141" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet.clear()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7142" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,K,int,int)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7143" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,K,int,int)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7144" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.next()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7145" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7146" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7147" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7148" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.remove()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7149" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet(org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet(org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7150" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.size()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7151" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7152" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7153" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7154" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap(K,int,int)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7155" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7156" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7157" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7158" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7159" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.firstKey()" target="org.apache.commons.collections4.trie.KeyAnalyzer.isPrefix(K,int,int,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7160" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7161" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7162" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7163" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7164" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lastKey()" target="org.apache.commons.collections4.trie.KeyAnalyzer.isPrefix(K,int,int,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7165" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inFromRange(K,boolean)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7166" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inFromRange(K,boolean)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isPrefix(K,int,int,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7167" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7168" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isPrefix(K,int,int,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7169" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange2(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inRange(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7170" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inToRange(K,boolean)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7171" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.inToRange(K,boolean)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isPrefix(K,int,int,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7172" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7173" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7174" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7175" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fixup()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7176" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createEntrySet()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet(org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7177" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.createRangeMap(K,boolean,K,boolean)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,boolean,K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7178" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,boolean,K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7179" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,boolean,K,boolean)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7180" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,boolean,K,boolean)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7181" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,boolean,K,boolean)" target="org.apache.commons.collections4.trie.KeyAnalyzer.compare(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7182" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7183" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7184" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7185" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.firstKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7186" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7187" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7188" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7189" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.lastKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7190" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createEntrySet()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet(org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7191" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.createRangeMap(K,boolean,K,boolean)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,boolean,K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7192" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7193" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7194" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.hasNext()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7195" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.next()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7196" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.next()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7197" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7198" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7199" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7200" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.contains(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7201" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.isEmpty()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7202" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7203" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7204" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7205" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7206" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7207" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7208" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getFromKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7209" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getToKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7210" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7211" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7212" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7213" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7214" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7215" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.get(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7216" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.put(K,V)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7217" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.put(K,V)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7218" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7219" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7220" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7221" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7222" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7223" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.containsKey(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7224" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(K,boolean)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getFromKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7225" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(K,boolean)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isFromInclusive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7226" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(K,boolean)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7227" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(K,boolean)" target="org.apache.commons.collections4.trie.KeyAnalyzer.compare(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7228" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getFromKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7229" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getToKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7230" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7231" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7232" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getFromKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7233" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getToKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7234" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inFromRange(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7235" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7236" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(K,boolean)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getToKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7237" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(K,boolean)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isToInclusive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7238" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(K,boolean)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7239" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inToRange(K,boolean)" target="org.apache.commons.collections4.trie.KeyAnalyzer.compare(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7240" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.comparator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7241" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.entrySet()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.createEntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7242" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7243" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.createRangeMap(K,boolean,K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7244" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getFromKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7245" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isFromInclusive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7246" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.headMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isToInclusive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7247" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(K,K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7248" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(K,K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.createRangeMap(K,boolean,K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7249" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(K,K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isFromInclusive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7250" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.subMap(K,K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isToInclusive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7251" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.inRange2(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7252" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.createRangeMap(K,boolean,K,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7253" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isFromInclusive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7254" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.getToKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7255" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.tailMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap.isToInclusive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7256" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry(K,V,int)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7257" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isExternalNode()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isInternalNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7258" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7259" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.toString()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7260" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7261" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7262" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7263" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.remove()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7264" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7265" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getKey()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7266" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.next()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7267" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.next()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7268" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previous()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previousEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7269" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previous()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7270" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.getValue()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7271" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.setValue(V)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7272" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.nextEntry()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7273" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previousEntry()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7274" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7275" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator.next()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.nextEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7276" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator.next()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7277" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7278" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7279" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.size()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7280" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.iterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7281" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values.clear()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7282" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie#root" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry(K,V,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7283" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie(org.apache.commons.collections4.trie.KeyAnalyzer)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie(org.apache.commons.collections4.trie.KeyAnalyzer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7284" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie(org.apache.commons.collections4.trie.KeyAnalyzer,java.util.Map)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie(org.apache.commons.collections4.trie.KeyAnalyzer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7285" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7286" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7287" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstKey()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7288" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7289" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7290" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7291" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7292" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7293" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7294" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7295" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7296" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectKey(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.select(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7297" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.get(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7298" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.get(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7299" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7300" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7301" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7302" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7303" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.setKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7304" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7305" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7306" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7307" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7308" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7309" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry(K,V,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7310" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7311" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7312" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7313" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7314" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7315" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7316" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7317" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7318" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7319" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isInternalNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7320" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7321" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7322" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7323" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.setKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7324" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectValue(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.select(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7325" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7326" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7327" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7328" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7329" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7330" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7331" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int,K,int,org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7332" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int,K,int,org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference.set(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7333" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int,K,int,org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7334" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int,K,int,org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int,K,int,org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7335" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7336" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.comparator()" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7337" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.select(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7338" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.select(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7339" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.select(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int,K,int,org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7340" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.select(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7341" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7342" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7343" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getPrefixMapByBits(K,int,int)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7344" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getPrefixMapByBits(K,int,int)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7345" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7346" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.prefixMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getPrefixMapByBits(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7347" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.prefixMap(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7348" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K,K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7349" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7350" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.mapIterator()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7351" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7352" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7353" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7354" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7355" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7356" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7357" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7358" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7359" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry(K,V,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7360" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7361" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7362" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7363" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7364" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7365" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7366" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7367" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7368" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7369" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7370" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7371" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7372" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7373" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry(K,V,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7374" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7375" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7376" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7377" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7378" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7379" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7380" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7381" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7382" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7383" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7384" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7385" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7386" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K,int)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7387" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7388" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7389" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7390" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7391" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7392" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7393" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7394" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7395" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7396" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry(K,V,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7397" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7398" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7399" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7400" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7401" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7402" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastEntry()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7403" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7404" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7405" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7406" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7407" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7408" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7409" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry(K,V,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7410" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7411" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7412" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7413" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7414" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(K)" target="org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7415" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7416" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7417" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7418" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7419" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7420" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7421" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7422" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7423" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7424" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7425" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(K,int,int)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7426" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(K,int,int)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7427" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(K,int,int)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7428" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(K,int,int)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7429" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(K,int,int)" target="org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7430" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.subtree(K,int,int)" target="org.apache.commons.collections4.trie.KeyAnalyzer.bitIndex(K,int,int,K,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7431" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.clear()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7432" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7433" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7434" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry(K,V,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7435" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7436" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isExternalNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7437" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.isInternalNode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7438" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7439" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7440" source="org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7441" source="org.apache.commons.collections4.trie.PatriciaTrie()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie(org.apache.commons.collections4.trie.KeyAnalyzer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7442" source="org.apache.commons.collections4.trie.PatriciaTrie()" target="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7443" source="org.apache.commons.collections4.trie.PatriciaTrie(java.util.Map)" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie(org.apache.commons.collections4.trie.KeyAnalyzer,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7444" source="org.apache.commons.collections4.trie.PatriciaTrie(java.util.Map)" target="org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7445" source="org.apache.commons.collections4.trie.PatriciaTrie2Test(java.lang.String)" target="org.apache.commons.collections4.map.AbstractOrderedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7446" source="org.apache.commons.collections4.trie.PatriciaTrie2Test.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7447" source="org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()" target="org.apache.commons.collections4.trie.PatriciaTrie()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7448" source="org.apache.commons.collections4.trie.PatriciaTrieTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7449" source="org.apache.commons.collections4.trie.PatriciaTrieTest.makeObject()" target="org.apache.commons.collections4.trie.PatriciaTrie()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7450" source="org.apache.commons.collections4.trie.PatriciaTrieTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7451" source="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap()" target="org.apache.commons.collections4.trie.PatriciaTrie()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7452" source="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7453" source="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.prefixMap(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7454" source="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7455" source="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7456" source="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval()" target="org.apache.commons.collections4.trie.PatriciaTrie()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7457" source="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7458" source="org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval()" target="org.apache.commons.collections4.trie.AbstractPatriciaTrie.prefixMap(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7459" source="org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie)" target="org.apache.commons.collections4.trie.UnmodifiableTrie(org.apache.commons.collections4.Trie)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7460" source="org.apache.commons.collections4.trie.UnmodifiableTrie.nextKey(K)" target="org.apache.commons.collections4.OrderedMap.nextKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7461" source="org.apache.commons.collections4.trie.UnmodifiableTrie.previousKey(K)" target="org.apache.commons.collections4.OrderedMap.previousKey(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7462" source="org.apache.commons.collections4.trie.UnmodifiableTrie.prefixMap(K)" target="org.apache.commons.collections4.Trie.prefixMap(K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7463" source="org.apache.commons.collections4.trie.UnmodifiableTrie.mapIterator()" target="org.apache.commons.collections4.OrderedMap.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7464" source="org.apache.commons.collections4.trie.UnmodifiableTrie.mapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7465" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractSortedMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7466" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7467" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()" target="org.apache.commons.collections4.trie.PatriciaTrie()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7468" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()" target="org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7469" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()" target="org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7470" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()" target="org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7471" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()" target="org.apache.commons.collections4.trie.PatriciaTrie()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7472" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory()" target="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7473" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory()" target="org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7474" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.testUnmodifiable()" target="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7475" source="org.apache.commons.collections4.trie.UnmodifiableTrieTest.testUnmodifiable()" target="org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7476" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.get(java.lang.Object)" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7477" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.remove(java.lang.Object)" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7478" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.containsKey(java.lang.Object)" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7479" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.containsValue(java.lang.Object)" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7480" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.equals(java.lang.Object)" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7481" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.isEmpty()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7482" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.hashCode()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7483" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.size()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7484" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.toString()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7485" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.values()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7486" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.entrySet()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7487" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.keySet()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7488" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.mapIterator()" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7489" source="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.mapIterator()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7490" source="org.apache.commons.collections4.splitmap.TransformedSplitMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7491" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.splitmap.TransformedSplitMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7492" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformKey(J)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7493" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.checkSetValue(U)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7494" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.put(J,U)" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7495" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.put(J,U)" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformKey(J)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7496" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.put(J,U)" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformValue(U)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7497" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformValue(U)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7498" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformMap(java.util.Map)" target="org.apache.commons.collections4.map.LinkedMap(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7499" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformMap(java.util.Map)" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformKey(J)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7500" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformMap(java.util.Map)" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformValue(U)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7501" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.clear()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7502" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.putAll(java.util.Map)" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7503" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.putAll(java.util.Map)" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7504" source="org.apache.commons.collections4.splitmap.TransformedSplitMap.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7505" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest#intToString" target="org.apache.commons.collections4.splitmap.TransformedSplitMapTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7506" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest#objectToClass" target="org.apache.commons.collections4.splitmap.TransformedSplitMapTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7507" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest#stringToInt" target="org.apache.commons.collections4.splitmap.TransformedSplitMapTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7508" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7509" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap()" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7510" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap()" target="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7511" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7512" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7513" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap()" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7514" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap()" target="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7515" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap()" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.put(J,U)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7516" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7517" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7518" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7519" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7520" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7521" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.put(J,U)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7522" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7523" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7524" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7525" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7526" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7527" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7528" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7529" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7530" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.put(J,U)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7531" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7532" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7533" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7534" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7535" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()" target="org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7536" source="org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap()" target="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7537" source="org.apache.commons.collections4.queue.AbstractQueueDecorator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7538" source="org.apache.commons.collections4.queue.AbstractQueueDecorator(java.util.Queue)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7539" source="org.apache.commons.collections4.queue.AbstractQueueDecorator.element()" target="org.apache.commons.collections4.queue.AbstractQueueDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7540" source="org.apache.commons.collections4.queue.AbstractQueueDecorator.peek()" target="org.apache.commons.collections4.queue.AbstractQueueDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7541" source="org.apache.commons.collections4.queue.AbstractQueueDecorator.poll()" target="org.apache.commons.collections4.queue.AbstractQueueDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7542" source="org.apache.commons.collections4.queue.AbstractQueueDecorator.remove()" target="org.apache.commons.collections4.queue.AbstractQueueDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7543" source="org.apache.commons.collections4.queue.AbstractQueueDecorator.offer(E)" target="org.apache.commons.collections4.queue.AbstractQueueDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7544" source="org.apache.commons.collections4.queue.AbstractQueueDecorator.decorated()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7545" source="org.apache.commons.collections4.queue.AbstractQueueTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7546" source="org.apache.commons.collections4.queue.AbstractQueueTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7547" source="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7548" source="org.apache.commons.collections4.queue.AbstractQueueTest.makeFullCollection()" target="org.apache.commons.collections4.queue.AbstractQueueTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7549" source="org.apache.commons.collections4.queue.AbstractQueueTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7550" source="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueCompatibility()" target="org.apache.commons.collections4.queue.AbstractQueueTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7551" source="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7552" source="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7553" source="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7554" source="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7555" source="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueSerialization()" target="org.apache.commons.collections4.queue.AbstractQueueTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7556" source="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7557" source="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToBytes(java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7558" source="org.apache.commons.collections4.queue.AbstractQueueTest.testEmptyQueueSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromBytes(byte[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7559" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueCompatibility()" target="org.apache.commons.collections4.queue.AbstractQueueTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7560" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7561" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7562" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7563" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueCompatibility()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7564" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueSerialization()" target="org.apache.commons.collections4.queue.AbstractQueueTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7565" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueSerialization()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7566" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7567" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToBytes(java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7568" source="org.apache.commons.collections4.queue.AbstractQueueTest.testFullQueueSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromBytes(byte[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7569" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueElement()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7570" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueElement()" target="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7571" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueElement()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7572" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueElement()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7573" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueElement()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7574" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueElement()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7575" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueElement()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isNullSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7576" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueElement()" target="org.apache.commons.collections4.queue.AbstractQueueTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7577" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueOffer()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7578" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueOffer()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7579" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueOffer()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7580" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueOffer()" target="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7581" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueOffer()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7582" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueOffer()" target="org.apache.commons.collections4.queue.AbstractQueueTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7583" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePeek()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7584" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePeek()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7585" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePeek()" target="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7586" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePeek()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7587" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePeek()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7588" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePeek()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isNullSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7589" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePeek()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7590" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePeek()" target="org.apache.commons.collections4.queue.AbstractQueueTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7591" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePoll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7592" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePoll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7593" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePoll()" target="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7594" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePoll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7595" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePoll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7596" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePoll()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7597" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueuePoll()" target="org.apache.commons.collections4.queue.AbstractQueueTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7598" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7599" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7600" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueRemove()" target="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7601" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7602" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7603" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7604" source="org.apache.commons.collections4.queue.AbstractQueueTest.testQueueRemove()" target="org.apache.commons.collections4.queue.AbstractQueueTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7605" source="org.apache.commons.collections4.queue.AbstractQueueTest.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7606" source="org.apache.commons.collections4.queue.AbstractQueueTest.verify()" target="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7607" source="org.apache.commons.collections4.queue.AbstractQueueTest.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7608" source="org.apache.commons.collections4.queue.CircularFifoQueue()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7609" source="org.apache.commons.collections4.queue.CircularFifoQueue(java.util.Collection)" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7610" source="org.apache.commons.collections4.queue.CircularFifoQueue.element()" target="org.apache.commons.collections4.queue.CircularFifoQueue.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7611" source="org.apache.commons.collections4.queue.CircularFifoQueue.element()" target="org.apache.commons.collections4.queue.CircularFifoQueue.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7612" source="org.apache.commons.collections4.queue.CircularFifoQueue.get(int)" target="org.apache.commons.collections4.queue.CircularFifoQueue.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7613" source="org.apache.commons.collections4.queue.CircularFifoQueue.peek()" target="org.apache.commons.collections4.queue.CircularFifoQueue.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7614" source="org.apache.commons.collections4.queue.CircularFifoQueue.poll()" target="org.apache.commons.collections4.queue.CircularFifoQueue.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7615" source="org.apache.commons.collections4.queue.CircularFifoQueue.poll()" target="org.apache.commons.collections4.queue.CircularFifoQueue.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7616" source="org.apache.commons.collections4.queue.CircularFifoQueue.remove()" target="org.apache.commons.collections4.queue.CircularFifoQueue.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7617" source="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)" target="org.apache.commons.collections4.queue.CircularFifoQueue.isAtFullCapacity()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7618" source="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)" target="org.apache.commons.collections4.queue.CircularFifoQueue.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7619" source="org.apache.commons.collections4.queue.CircularFifoQueue.isAtFullCapacity()" target="org.apache.commons.collections4.queue.CircularFifoQueue.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7620" source="org.apache.commons.collections4.queue.CircularFifoQueue.isEmpty()" target="org.apache.commons.collections4.queue.CircularFifoQueue.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7621" source="org.apache.commons.collections4.queue.CircularFifoQueue.offer(E)" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7622" source="org.apache.commons.collections4.queue.CircularFifoQueue$1.next()" target="org.apache.commons.collections4.queue.CircularFifoQueue.increment(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7623" source="org.apache.commons.collections4.queue.CircularFifoQueue$1.remove()" target="org.apache.commons.collections4.queue.CircularFifoQueue.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7624" source="org.apache.commons.collections4.queue.CircularFifoQueue$1.remove()" target="org.apache.commons.collections4.queue.CircularFifoQueue.decrement(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7625" source="org.apache.commons.collections4.queue.CircularFifoQueue$1.remove()" target="org.apache.commons.collections4.queue.CircularFifoQueue.increment(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7626" source="org.apache.commons.collections4.queue.CircularFifoQueue.iterator()" target="org.apache.commons.collections4.queue.CircularFifoQueue$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7627" source="org.apache.commons.collections4.queue.CircularFifoQueue.iterator()" target="org.apache.commons.collections4.queue.CircularFifoQueue.increment(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7628" source="org.apache.commons.collections4.queue.CircularFifoQueue.iterator()" target="org.apache.commons.collections4.queue.CircularFifoQueue.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7629" source="org.apache.commons.collections4.queue.CircularFifoQueue.iterator()" target="org.apache.commons.collections4.queue.CircularFifoQueue.decrement(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7630" source="org.apache.commons.collections4.queue.CircularFifoQueue.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.queue.CircularFifoQueue.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7631" source="org.apache.commons.collections4.queue.CircularFifoQueueTest(java.lang.String)" target="org.apache.commons.collections4.queue.AbstractQueueTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7632" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.queue.CircularFifoQueueTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7633" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7634" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.makeObject()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7635" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.getCollection()" target="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7636" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular()" target="org.apache.commons.collections4.queue.CircularFifoQueue(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7637" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7638" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7639" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove()" target="org.apache.commons.collections4.queue.CircularFifoQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7640" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove()" target="org.apache.commons.collections4.queue.CircularFifoQueue.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7641" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove()" target="org.apache.commons.collections4.queue.CircularFifoQueueTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7642" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testConstructorException1()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7643" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testConstructorException2()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7644" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testConstructorException3()" target="org.apache.commons.collections4.queue.CircularFifoQueue(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7645" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7646" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex()" target="org.apache.commons.collections4.queue.CircularFifoQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7647" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7648" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex()" target="org.apache.commons.collections4.queue.CircularFifoQueue.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7649" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex()" target="org.apache.commons.collections4.queue.CircularFifoQueue.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7650" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex()" target="org.apache.commons.collections4.queue.CircularFifoQueue.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7651" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7652" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7653" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7654" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7655" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2()" target="org.apache.commons.collections4.queue.CircularFifoQueue.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7656" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7657" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7658" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7659" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7660" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7661" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7662" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7663" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7664" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7665" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7666" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7667" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7668" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7669" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7670" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization()" target="org.apache.commons.collections4.queue.CircularFifoQueue(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7671" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7672" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization()" target="org.apache.commons.collections4.queue.CircularFifoQueue.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7673" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.verify()" target="org.apache.commons.collections4.queue.AbstractQueueTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7674" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.verify()" target="org.apache.commons.collections4.queue.CircularFifoQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7675" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.verify()" target="org.apache.commons.collections4.queue.CircularFifoQueue.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7676" source="org.apache.commons.collections4.queue.CircularFifoQueueTest.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7677" source="org.apache.commons.collections4.queue.PredicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.collection.PredicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7678" source="org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.queue.PredicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7679" source="org.apache.commons.collections4.queue.PredicatedQueue.element()" target="org.apache.commons.collections4.queue.PredicatedQueue.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7680" source="org.apache.commons.collections4.queue.PredicatedQueue.peek()" target="org.apache.commons.collections4.queue.PredicatedQueue.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7681" source="org.apache.commons.collections4.queue.PredicatedQueue.poll()" target="org.apache.commons.collections4.queue.PredicatedQueue.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7682" source="org.apache.commons.collections4.queue.PredicatedQueue.remove()" target="org.apache.commons.collections4.queue.PredicatedQueue.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7683" source="org.apache.commons.collections4.queue.PredicatedQueue.offer(E)" target="org.apache.commons.collections4.collection.PredicatedCollection.validate(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7684" source="org.apache.commons.collections4.queue.PredicatedQueue.offer(E)" target="org.apache.commons.collections4.queue.PredicatedQueue.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7685" source="org.apache.commons.collections4.queue.PredicatedQueue.decorated()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7686" source="org.apache.commons.collections4.queue.PredicatedQueueTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7687" source="org.apache.commons.collections4.queue.PredicatedQueueTest#testPredicate" target="org.apache.commons.collections4.queue.PredicatedQueueTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7688" source="org.apache.commons.collections4.queue.PredicatedQueueTest(java.lang.String)" target="org.apache.commons.collections4.queue.AbstractQueueTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7689" source="org.apache.commons.collections4.queue.PredicatedQueueTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7690" source="org.apache.commons.collections4.queue.PredicatedQueueTest.decorateCollection(java.util.Queue,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7691" source="org.apache.commons.collections4.queue.PredicatedQueueTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7692" source="org.apache.commons.collections4.queue.PredicatedQueueTest.makeFullCollection()" target="org.apache.commons.collections4.queue.PredicatedQueueTest.decorateCollection(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7693" source="org.apache.commons.collections4.queue.PredicatedQueueTest.makeObject()" target="org.apache.commons.collections4.queue.PredicatedQueueTest.decorateCollection(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7694" source="org.apache.commons.collections4.queue.PredicatedQueueTest.makeTestQueue()" target="org.apache.commons.collections4.queue.PredicatedQueueTest.decorateCollection(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7695" source="org.apache.commons.collections4.queue.PredicatedQueueTest.testGet()" target="org.apache.commons.collections4.queue.PredicatedQueueTest.makeTestQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7696" source="org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove()" target="org.apache.commons.collections4.queue.PredicatedQueueTest.makeTestQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7697" source="org.apache.commons.collections4.queue.TransformedQueue(java.util.Queue,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.TransformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7698" source="org.apache.commons.collections4.queue.TransformedQueue.transformedQueue(java.util.Queue,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.queue.TransformedQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7699" source="org.apache.commons.collections4.queue.TransformedQueue.transformedQueue(java.util.Queue,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7700" source="org.apache.commons.collections4.queue.TransformedQueue.transformedQueue(java.util.Queue,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7701" source="org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.queue.TransformedQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7702" source="org.apache.commons.collections4.queue.TransformedQueue.element()" target="org.apache.commons.collections4.queue.TransformedQueue.getQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7703" source="org.apache.commons.collections4.queue.TransformedQueue.peek()" target="org.apache.commons.collections4.queue.TransformedQueue.getQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7704" source="org.apache.commons.collections4.queue.TransformedQueue.poll()" target="org.apache.commons.collections4.queue.TransformedQueue.getQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7705" source="org.apache.commons.collections4.queue.TransformedQueue.remove()" target="org.apache.commons.collections4.queue.TransformedQueue.getQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7706" source="org.apache.commons.collections4.queue.TransformedQueue.offer(E)" target="org.apache.commons.collections4.queue.TransformedQueue.getQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7707" source="org.apache.commons.collections4.queue.TransformedQueue.offer(E)" target="org.apache.commons.collections4.collection.TransformedCollection.transform(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7708" source="org.apache.commons.collections4.queue.TransformedQueue.getQueue()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7709" source="org.apache.commons.collections4.queue.TransformedQueueTest(java.lang.String)" target="org.apache.commons.collections4.queue.AbstractQueueTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7710" source="org.apache.commons.collections4.queue.TransformedQueueTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7711" source="org.apache.commons.collections4.queue.TransformedQueueTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7712" source="org.apache.commons.collections4.queue.TransformedQueueTest.makeFullCollection()" target="org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7713" source="org.apache.commons.collections4.queue.TransformedQueueTest.makeObject()" target="org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7714" source="org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue()" target="org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7715" source="org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform()" target="org.apache.commons.collections4.queue.TransformedQueue.transformedQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7716" source="org.apache.commons.collections4.queue.UnmodifiableQueue(java.util.Queue)" target="org.apache.commons.collections4.queue.AbstractQueueDecorator(java.util.Queue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7717" source="org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(java.util.Queue)" target="org.apache.commons.collections4.queue.UnmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7718" source="org.apache.commons.collections4.queue.UnmodifiableQueue.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7719" source="org.apache.commons.collections4.queue.UnmodifiableQueue.iterator()" target="org.apache.commons.collections4.queue.AbstractQueueDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7720" source="org.apache.commons.collections4.queue.UnmodifiableQueue.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7721" source="org.apache.commons.collections4.queue.UnmodifiableQueue.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.queue.AbstractQueueDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7722" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest(java.lang.String)" target="org.apache.commons.collections4.queue.AbstractQueueTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7723" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7724" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.getCollection()" target="org.apache.commons.collections4.queue.AbstractQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7725" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7726" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeFullCollection()" target="org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7727" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeObject()" target="org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7728" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory()" target="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7729" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory()" target="org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7730" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7731" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove()" target="org.apache.commons.collections4.queue.UnmodifiableQueueTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7732" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable()" target="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7733" source="org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable()" target="org.apache.commons.collections4.queue.UnmodifiableQueueTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7734" source="org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set)" target="org.apache.commons.collections4.set.AbstractSetDecorator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7735" source="org.apache.commons.collections4.set.AbstractSerializableSetDecorator.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7736" source="org.apache.commons.collections4.set.AbstractSerializableSetDecorator.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7737" source="org.apache.commons.collections4.set.AbstractSetDecorator()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7738" source="org.apache.commons.collections4.set.AbstractSetDecorator(java.util.Set)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7739" source="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7740" source="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)" target="org.apache.commons.collections4.collection.AbstractCollectionTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7741" source="org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7742" source="org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7743" source="org.apache.commons.collections4.set.AbstractSetTest.getCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7744" source="org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7745" source="org.apache.commons.collections4.set.AbstractSetTest.makeFullCollection()" target="org.apache.commons.collections4.set.AbstractSetTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7746" source="org.apache.commons.collections4.set.AbstractSetTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7747" source="org.apache.commons.collections4.set.AbstractSetTest.testSetEquals()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7748" source="org.apache.commons.collections4.set.AbstractSetTest.testSetEquals()" target="org.apache.commons.collections4.set.AbstractSetTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7749" source="org.apache.commons.collections4.set.AbstractSetTest.testSetEquals()" target="org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7750" source="org.apache.commons.collections4.set.AbstractSetTest.testSetEquals()" target="org.apache.commons.collections4.set.AbstractSetTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7751" source="org.apache.commons.collections4.set.AbstractSetTest.testSetEquals()" target="org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7752" source="org.apache.commons.collections4.set.AbstractSetTest.testSetEquals()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7753" source="org.apache.commons.collections4.set.AbstractSetTest.testSetEquals()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7754" source="org.apache.commons.collections4.set.AbstractSetTest.testSetHashCode()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7755" source="org.apache.commons.collections4.set.AbstractSetTest.testSetHashCode()" target="org.apache.commons.collections4.set.AbstractSetTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7756" source="org.apache.commons.collections4.set.AbstractSetTest.testSetHashCode()" target="org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7757" source="org.apache.commons.collections4.set.AbstractSetTest.testSetHashCode()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7758" source="org.apache.commons.collections4.set.AbstractSetTest.verify()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7759" source="org.apache.commons.collections4.set.AbstractSetTest.verify()" target="org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7760" source="org.apache.commons.collections4.set.AbstractSetTest.verify()" target="org.apache.commons.collections4.set.AbstractSetTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7761" source="org.apache.commons.collections4.set.AbstractSetTest.verify()" target="org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7762" source="org.apache.commons.collections4.set.AbstractSortedSetDecorator()" target="org.apache.commons.collections4.set.AbstractSetDecorator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7763" source="org.apache.commons.collections4.set.AbstractSortedSetDecorator(java.util.Set)" target="org.apache.commons.collections4.set.AbstractSetDecorator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7764" source="org.apache.commons.collections4.set.AbstractSortedSetDecorator.first()" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7765" source="org.apache.commons.collections4.set.AbstractSortedSetDecorator.last()" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7766" source="org.apache.commons.collections4.set.AbstractSortedSetDecorator.comparator()" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7767" source="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7768" source="org.apache.commons.collections4.set.AbstractSortedSetDecorator.headSet(E)" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7769" source="org.apache.commons.collections4.set.AbstractSortedSetDecorator.subSet(E,E)" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7770" source="org.apache.commons.collections4.set.AbstractSortedSetDecorator.tailSet(E)" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7771" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,boolean)" target="org.apache.commons.collections4.set.AbstractSortedSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7772" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,boolean)" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7773" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,boolean)" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7774" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,int)" target="org.apache.commons.collections4.set.AbstractSortedSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7775" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,int)" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7776" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,int)" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getOtherElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7777" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.isAddSupported()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7778" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.isFailFastSupported()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isFailFastSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7779" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.isNullSupported()" target="org.apache.commons.collections4.set.AbstractSortedSetTest.isNullSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7780" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.isRemoveSupported()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7781" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.getSubSet(java.util.SortedSet)" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7782" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.makeFullCollection()" target="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.getSubSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7783" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.makeFullCollection()" target="org.apache.commons.collections4.set.AbstractSortedSetTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7784" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.makeObject()" target="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.getSubSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7785" source="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet.makeObject()" target="org.apache.commons.collections4.set.AbstractSortedSetTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7786" source="org.apache.commons.collections4.set.AbstractSortedSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7787" source="org.apache.commons.collections4.set.AbstractSortedSetTest.getCollection()" target="org.apache.commons.collections4.set.AbstractSetTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7788" source="org.apache.commons.collections4.set.AbstractSortedSetTest.getConfirmed()" target="org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7789" source="org.apache.commons.collections4.set.AbstractSortedSetTest.makeFullCollection()" target="org.apache.commons.collections4.set.AbstractSetTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7790" source="org.apache.commons.collections4.set.AbstractSortedSetTest.bulkTestSortedSetHeadSet()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7791" source="org.apache.commons.collections4.set.AbstractSortedSetTest.bulkTestSortedSetHeadSet()" target="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7792" source="org.apache.commons.collections4.set.AbstractSortedSetTest.bulkTestSortedSetSubSet()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7793" source="org.apache.commons.collections4.set.AbstractSortedSetTest.bulkTestSortedSetSubSet()" target="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7794" source="org.apache.commons.collections4.set.AbstractSortedSetTest.bulkTestSortedSetTailSet()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7795" source="org.apache.commons.collections4.set.AbstractSortedSetTest.bulkTestSortedSetTailSet()" target="org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet(int,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7796" source="org.apache.commons.collections4.set.AbstractSortedSetTest.verify()" target="org.apache.commons.collections4.set.AbstractSetTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7797" source="org.apache.commons.collections4.set.AbstractSortedSetTest.verify()" target="org.apache.commons.collections4.set.AbstractSortedSetTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7798" source="org.apache.commons.collections4.set.AbstractSortedSetTest.verify()" target="org.apache.commons.collections4.set.AbstractSortedSetTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7799" source="org.apache.commons.collections4.set.CompositeSet(java.util.Set)" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7800" source="org.apache.commons.collections4.set.CompositeSet(java.util.Set[])" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7801" source="org.apache.commons.collections4.set.CompositeSet.toArray(T[])" target="org.apache.commons.collections4.set.CompositeSet.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7802" source="org.apache.commons.collections4.set.CompositeSet.add(E)" target="org.apache.commons.collections4.set.CompositeSet$SetMutator.add(org.apache.commons.collections4.set.CompositeSet,java.util.List,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7803" source="org.apache.commons.collections4.set.CompositeSet.addAll(java.util.Collection)" target="org.apache.commons.collections4.set.CompositeSet$SetMutator.addAll(org.apache.commons.collections4.set.CompositeSet,java.util.List,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7804" source="org.apache.commons.collections4.set.CompositeSet.containsAll(java.util.Collection)" target="org.apache.commons.collections4.set.CompositeSet.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7805" source="org.apache.commons.collections4.set.CompositeSet.equals(java.lang.Object)" target="org.apache.commons.collections4.set.CompositeSet.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7806" source="org.apache.commons.collections4.set.CompositeSet.remove(java.lang.Object)" target="org.apache.commons.collections4.set.CompositeSet.getSets()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7807" source="org.apache.commons.collections4.set.CompositeSet.toArray()" target="org.apache.commons.collections4.set.CompositeSet.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7808" source="org.apache.commons.collections4.set.CompositeSet.toArray()" target="org.apache.commons.collections4.set.CompositeSet.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7809" source="org.apache.commons.collections4.set.CompositeSet.iterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7810" source="org.apache.commons.collections4.set.CompositeSet.iterator()" target="org.apache.commons.collections4.iterators.IteratorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7811" source="org.apache.commons.collections4.set.CompositeSet.iterator()" target="org.apache.commons.collections4.iterators.IteratorChain.addIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7812" source="org.apache.commons.collections4.set.CompositeSet.getSets()" target="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7813" source="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)" target="org.apache.commons.collections4.set.CompositeSet.getSets()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7814" source="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)" target="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7815" source="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)" target="org.apache.commons.collections4.set.CompositeSet.getMutator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7816" source="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)" target="org.apache.commons.collections4.set.CompositeSet$SetMutator.resolveCollision(org.apache.commons.collections4.set.CompositeSet,java.util.Set,java.util.Set,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7817" source="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set,java.util.Set)" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7818" source="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set[])" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7819" source="org.apache.commons.collections4.set.CompositeSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7820" source="org.apache.commons.collections4.set.CompositeSetTest.makeObject()" target="org.apache.commons.collections4.set.CompositeSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7821" source="org.apache.commons.collections4.set.CompositeSetTest.makeObject()" target="org.apache.commons.collections4.set.CompositeSet.setMutator(org.apache.commons.collections4.set.CompositeSet$SetMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7822" source="org.apache.commons.collections4.set.CompositeSetTest.makeObject()" target="org.apache.commons.collections4.set.EmptySetMutator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7823" source="org.apache.commons.collections4.set.CompositeSetTest.testAddComposited()" target="org.apache.commons.collections4.set.CompositeSetTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7824" source="org.apache.commons.collections4.set.CompositeSetTest.testAddComposited()" target="org.apache.commons.collections4.set.CompositeSetTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7825" source="org.apache.commons.collections4.set.CompositeSetTest.testAddComposited()" target="org.apache.commons.collections4.set.CompositeSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7826" source="org.apache.commons.collections4.set.CompositeSetTest.testAddComposited()" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7827" source="org.apache.commons.collections4.set.CompositeSetTest.testAddComposited()" target="org.apache.commons.collections4.set.CompositeSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7828" source="org.apache.commons.collections4.set.CompositeSetTest.testAddComposited()" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7829" source="org.apache.commons.collections4.set.CompositeSetTest.testAddComposited()" target="org.apache.commons.collections4.set.CompositeSet.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7830" source="org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision()" target="org.apache.commons.collections4.set.CompositeSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7831" source="org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision()" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set,java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7832" source="org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision()" target="org.apache.commons.collections4.set.CompositeSetTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7833" source="org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision()" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7834" source="org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision()" target="org.apache.commons.collections4.set.CompositeSetTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7835" source="org.apache.commons.collections4.set.CompositeSetTest.testContains()" target="org.apache.commons.collections4.set.CompositeSet(java.util.Set[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7836" source="org.apache.commons.collections4.set.CompositeSetTest.testContains()" target="org.apache.commons.collections4.set.CompositeSetTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7837" source="org.apache.commons.collections4.set.CompositeSetTest.testContains()" target="org.apache.commons.collections4.set.CompositeSetTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7838" source="org.apache.commons.collections4.set.CompositeSetTest.testContains()" target="org.apache.commons.collections4.set.CompositeSet.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7839" source="org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution()" target="org.apache.commons.collections4.set.CompositeSetTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7840" source="org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution()" target="org.apache.commons.collections4.set.CompositeSetTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7841" source="org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution()" target="org.apache.commons.collections4.set.CompositeSet(java.util.Set[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7842" source="org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution()" target="org.apache.commons.collections4.set.CompositeSet.setMutator(org.apache.commons.collections4.set.CompositeSet$SetMutator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7843" source="org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution()" target="org.apache.commons.collections4.set.CompositeSetTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7844" source="org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution()" target="org.apache.commons.collections4.set.CompositeSet.addComposited(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7845" source="org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited()" target="org.apache.commons.collections4.set.CompositeSetTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7846" source="org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited()" target="org.apache.commons.collections4.set.CompositeSetTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7847" source="org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited()" target="org.apache.commons.collections4.set.CompositeSet(java.util.Set[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7848" source="org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited()" target="org.apache.commons.collections4.set.CompositeSet.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7849" source="org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying()" target="org.apache.commons.collections4.set.CompositeSetTest.buildOne()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7850" source="org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying()" target="org.apache.commons.collections4.set.CompositeSetTest.buildTwo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7851" source="org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying()" target="org.apache.commons.collections4.set.CompositeSet(java.util.Set[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7852" source="org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying()" target="org.apache.commons.collections4.set.CompositeSet.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7853" source="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator(java.util.ListIterator,java.util.Collection)" target="org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7854" source="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.next()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7855" source="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.previous()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7856" source="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.hasPrevious()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7857" source="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.remove()" target="org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.getIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7858" source="org.apache.commons.collections4.set.ListOrderedSet()" target="org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7859" source="org.apache.commons.collections4.set.ListOrderedSet(java.util.Set)" target="org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7860" source="org.apache.commons.collections4.set.ListOrderedSet(java.util.Set,java.util.List)" target="org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7861" source="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.List)" target="org.apache.commons.collections4.CollectionUtils.filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7862" source="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.List)" target="org.apache.commons.collections4.functors.UniquePredicate.uniquePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7863" source="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.List)" target="org.apache.commons.collections4.set.ListOrderedSet(java.util.Set,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7864" source="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set)" target="org.apache.commons.collections4.set.ListOrderedSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7865" source="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set,java.util.List)" target="org.apache.commons.collections4.set.ListOrderedSet(java.util.Set,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7866" source="org.apache.commons.collections4.set.ListOrderedSet.add(E)" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7867" source="org.apache.commons.collections4.set.ListOrderedSet.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7868" source="org.apache.commons.collections4.set.ListOrderedSet.addAll(int,java.util.Collection)" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7869" source="org.apache.commons.collections4.set.ListOrderedSet.addAll(java.util.Collection)" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7870" source="org.apache.commons.collections4.set.ListOrderedSet.remove(java.lang.Object)" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7871" source="org.apache.commons.collections4.set.ListOrderedSet.removeAll(java.util.Collection)" target="org.apache.commons.collections4.set.ListOrderedSet.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7872" source="org.apache.commons.collections4.set.ListOrderedSet.retainAll(java.util.Collection)" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7873" source="org.apache.commons.collections4.set.ListOrderedSet.retainAll(java.util.Collection)" target="org.apache.commons.collections4.set.ListOrderedSet.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7874" source="org.apache.commons.collections4.set.ListOrderedSet.retainAll(java.util.Collection)" target="org.apache.commons.collections4.set.ListOrderedSet.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7875" source="org.apache.commons.collections4.set.ListOrderedSet.remove(int)" target="org.apache.commons.collections4.set.ListOrderedSet.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7876" source="org.apache.commons.collections4.set.ListOrderedSet.asList()" target="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7877" source="org.apache.commons.collections4.set.ListOrderedSet.iterator()" target="org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator(java.util.ListIterator,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7878" source="org.apache.commons.collections4.set.ListOrderedSet.iterator()" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7879" source="org.apache.commons.collections4.set.ListOrderedSet.add(int,E)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7880" source="org.apache.commons.collections4.set.ListOrderedSet.add(int,E)" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7881" source="org.apache.commons.collections4.set.ListOrderedSet.clear()" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7882" source="org.apache.commons.collections4.set.ListOrderedSet2Test(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7883" source="org.apache.commons.collections4.set.ListOrderedSet2Test.makeObject()" target="org.apache.commons.collections4.set.ListOrderedSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7884" source="org.apache.commons.collections4.set.ListOrderedSet2Test.setupSet()" target="org.apache.commons.collections4.set.ListOrderedSet2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7885" source="org.apache.commons.collections4.set.ListOrderedSet2Test.setupSet()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7886" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7887" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7888" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7889" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7890" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7891" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.addAll(int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7892" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7893" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7894" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.asList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7895" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7896" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7897" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7898" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7899" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7900" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering()" target="org.apache.commons.collections4.set.ListOrderedSet2Test.setupSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7901" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering()" target="org.apache.commons.collections4.set.ListOrderedSet.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7902" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering()" target="org.apache.commons.collections4.set.ListOrderedSet.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7903" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7904" source="org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7905" source="org.apache.commons.collections4.set.ListOrderedSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7906" source="org.apache.commons.collections4.set.ListOrderedSetTest.makeObject()" target="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7907" source="org.apache.commons.collections4.set.ListOrderedSetTest.setupSet()" target="org.apache.commons.collections4.set.ListOrderedSetTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7908" source="org.apache.commons.collections4.set.ListOrderedSetTest.setupSet()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7909" source="org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator()" target="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7910" source="org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator()" target="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7911" source="org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator()" target="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7912" source="org.apache.commons.collections4.set.ListOrderedSetTest.testDuplicates()" target="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7913" source="org.apache.commons.collections4.set.ListOrderedSetTest.testDuplicates()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7914" source="org.apache.commons.collections4.set.ListOrderedSetTest.testDuplicates()" target="org.apache.commons.collections4.IteratorUtils.toArray(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7915" source="org.apache.commons.collections4.set.ListOrderedSetTest.testDuplicates()" target="org.apache.commons.collections4.set.ListOrderedSet.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7916" source="org.apache.commons.collections4.set.ListOrderedSetTest.testDuplicates()" target="org.apache.commons.collections4.set.ListOrderedSet.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7917" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSetTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7918" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7919" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.add(int,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7920" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7921" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7922" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.addAll(int,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7923" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed()" target="org.apache.commons.collections4.set.ListOrderedSet.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7924" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSetTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7925" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.asList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7926" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7927" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7928" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7929" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.indexOf(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7930" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove()" target="org.apache.commons.collections4.set.ListOrderedSet.remove(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7931" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()" target="org.apache.commons.collections4.set.ListOrderedSetTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7932" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()" target="org.apache.commons.collections4.set.ListOrderedSetTest$A()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7933" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()" target="org.apache.commons.collections4.set.ListOrderedSetTest$B()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7934" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7935" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7936" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7937" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()" target="org.apache.commons.collections4.set.ListOrderedSet.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7938" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()" target="org.apache.commons.collections4.set.ListOrderedSet.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7939" source="org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing()" target="org.apache.commons.collections4.set.ListOrderedSet.asList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7940" source="org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering()" target="org.apache.commons.collections4.set.ListOrderedSetTest.setupSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7941" source="org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering()" target="org.apache.commons.collections4.set.ListOrderedSet.iterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7942" source="org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering()" target="org.apache.commons.collections4.set.ListOrderedSet.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7943" source="org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7944" source="org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7945" source="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll()" target="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7946" source="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7947" source="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll()" target="org.apache.commons.collections4.set.ListOrderedSet.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7948" source="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7949" source="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll()" target="org.apache.commons.collections4.set.ListOrderedSet.get(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7950" source="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAllCollections426()" target="org.apache.commons.collections4.set.ListOrderedSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7951" source="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAllCollections426()" target="org.apache.commons.collections4.set.ListOrderedSet.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7952" source="org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAllCollections426()" target="org.apache.commons.collections4.set.ListOrderedSet.retainAll(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7953" source="org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(java.util.Map)" target="org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(java.util.Map,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7954" source="org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(java.util.Map,V)" target="org.apache.commons.collections4.set.MapBackedSet(java.util.Map,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7955" source="org.apache.commons.collections4.set.MapBackedSet2Test(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7956" source="org.apache.commons.collections4.set.MapBackedSet2Test.makeObject()" target="org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7957" source="org.apache.commons.collections4.set.MapBackedSet2Test.makeObject()" target="org.apache.commons.collections4.map.LinkedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7958" source="org.apache.commons.collections4.set.MapBackedSet2Test.setupSet()" target="org.apache.commons.collections4.set.MapBackedSet2Test.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7959" source="org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering()" target="org.apache.commons.collections4.set.MapBackedSet2Test.setupSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7960" source="org.apache.commons.collections4.set.MapBackedSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7961" source="org.apache.commons.collections4.set.MapBackedSetTest.makeObject()" target="org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7962" source="org.apache.commons.collections4.set.MapBackedSetTest.makeObject()" target="org.apache.commons.collections4.map.HashedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7963" source="org.apache.commons.collections4.set.PredicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.collection.PredicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7964" source="org.apache.commons.collections4.set.PredicatedSet.predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.set.PredicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7965" source="org.apache.commons.collections4.set.PredicatedSet.decorated()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7966" source="org.apache.commons.collections4.set.PredicatedSetTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7967" source="org.apache.commons.collections4.set.PredicatedSetTest#testPredicate" target="org.apache.commons.collections4.set.PredicatedSetTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7968" source="org.apache.commons.collections4.set.PredicatedSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7969" source="org.apache.commons.collections4.set.PredicatedSetTest.decorateSet(java.util.Set,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.set.PredicatedSet.predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7970" source="org.apache.commons.collections4.set.PredicatedSetTest.makeObject()" target="org.apache.commons.collections4.set.PredicatedSetTest.decorateSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7971" source="org.apache.commons.collections4.set.PredicatedSetTest.makeTestSet()" target="org.apache.commons.collections4.set.PredicatedSetTest.decorateSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7972" source="org.apache.commons.collections4.set.PredicatedSetTest.testGetSet()" target="org.apache.commons.collections4.set.PredicatedSetTest.makeTestSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7973" source="org.apache.commons.collections4.set.PredicatedSetTest.testGetSet()" target="org.apache.commons.collections4.set.PredicatedSet.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7974" source="org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd()" target="org.apache.commons.collections4.set.PredicatedSetTest.makeTestSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7975" source="org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll()" target="org.apache.commons.collections4.set.PredicatedSetTest.makeTestSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7976" source="org.apache.commons.collections4.set.PredicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.set.PredicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7977" source="org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.set.PredicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7978" source="org.apache.commons.collections4.set.PredicatedSortedSet.first()" target="org.apache.commons.collections4.set.PredicatedSortedSet.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7979" source="org.apache.commons.collections4.set.PredicatedSortedSet.last()" target="org.apache.commons.collections4.set.PredicatedSortedSet.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7980" source="org.apache.commons.collections4.set.PredicatedSortedSet.comparator()" target="org.apache.commons.collections4.set.PredicatedSortedSet.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7981" source="org.apache.commons.collections4.set.PredicatedSortedSet.decorated()" target="org.apache.commons.collections4.set.PredicatedSet.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7982" source="org.apache.commons.collections4.set.PredicatedSortedSet.headSet(E)" target="org.apache.commons.collections4.set.PredicatedSortedSet.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7983" source="org.apache.commons.collections4.set.PredicatedSortedSet.headSet(E)" target="org.apache.commons.collections4.set.PredicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7984" source="org.apache.commons.collections4.set.PredicatedSortedSet.subSet(E,E)" target="org.apache.commons.collections4.set.PredicatedSortedSet.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7985" source="org.apache.commons.collections4.set.PredicatedSortedSet.subSet(E,E)" target="org.apache.commons.collections4.set.PredicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7986" source="org.apache.commons.collections4.set.PredicatedSortedSet.tailSet(E)" target="org.apache.commons.collections4.set.PredicatedSortedSet.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7987" source="org.apache.commons.collections4.set.PredicatedSortedSet.tailSet(E)" target="org.apache.commons.collections4.set.PredicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7988" source="org.apache.commons.collections4.set.PredicatedSortedSetTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7989" source="org.apache.commons.collections4.set.PredicatedSortedSetTest#testPredicate" target="org.apache.commons.collections4.set.PredicatedSortedSetTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7990" source="org.apache.commons.collections4.set.PredicatedSortedSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSortedSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7991" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7992" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeFullCollection()" target="org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7993" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeObject()" target="org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7994" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7995" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeTestSet()" target="org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7996" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator()" target="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeTestSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7997" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet()" target="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeTestSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7998" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet()" target="org.apache.commons.collections4.set.PredicatedSortedSet.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7999" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd()" target="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeTestSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8000" source="org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll()" target="org.apache.commons.collections4.set.PredicatedSortedSetTest.makeTestSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8001" source="org.apache.commons.collections4.set.TransformedSet(java.util.Set,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.TransformedCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8002" source="org.apache.commons.collections4.set.TransformedSet.transformedSet(java.util.Set,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.set.TransformedSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8003" source="org.apache.commons.collections4.set.TransformedSet.transformedSet(java.util.Set,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8004" source="org.apache.commons.collections4.set.TransformedSet.transformedSet(java.util.Set,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8005" source="org.apache.commons.collections4.set.TransformedSet.transformingSet(java.util.Set,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.set.TransformedSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8006" source="org.apache.commons.collections4.set.TransformedSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8007" source="org.apache.commons.collections4.set.TransformedSetTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8008" source="org.apache.commons.collections4.set.TransformedSetTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8009" source="org.apache.commons.collections4.set.TransformedSetTest.makeFullCollection()" target="org.apache.commons.collections4.set.TransformedSet.transformingSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8010" source="org.apache.commons.collections4.set.TransformedSetTest.makeObject()" target="org.apache.commons.collections4.set.TransformedSet.transformingSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8011" source="org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet()" target="org.apache.commons.collections4.set.TransformedSet.transformingSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8012" source="org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform()" target="org.apache.commons.collections4.set.TransformedSet.transformedSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8013" source="org.apache.commons.collections4.set.TransformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.set.TransformedSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8014" source="org.apache.commons.collections4.set.TransformedSortedSet.transformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.set.TransformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8015" source="org.apache.commons.collections4.set.TransformedSortedSet.transformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8016" source="org.apache.commons.collections4.set.TransformedSortedSet.transformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8017" source="org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.set.TransformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8018" source="org.apache.commons.collections4.set.TransformedSortedSet.first()" target="org.apache.commons.collections4.set.TransformedSortedSet.getSortedSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8019" source="org.apache.commons.collections4.set.TransformedSortedSet.last()" target="org.apache.commons.collections4.set.TransformedSortedSet.getSortedSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8020" source="org.apache.commons.collections4.set.TransformedSortedSet.comparator()" target="org.apache.commons.collections4.set.TransformedSortedSet.getSortedSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8021" source="org.apache.commons.collections4.set.TransformedSortedSet.getSortedSet()" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8022" source="org.apache.commons.collections4.set.TransformedSortedSet.headSet(E)" target="org.apache.commons.collections4.set.TransformedSortedSet.getSortedSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8023" source="org.apache.commons.collections4.set.TransformedSortedSet.headSet(E)" target="org.apache.commons.collections4.set.TransformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8024" source="org.apache.commons.collections4.set.TransformedSortedSet.subSet(E,E)" target="org.apache.commons.collections4.set.TransformedSortedSet.getSortedSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8025" source="org.apache.commons.collections4.set.TransformedSortedSet.subSet(E,E)" target="org.apache.commons.collections4.set.TransformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8026" source="org.apache.commons.collections4.set.TransformedSortedSet.tailSet(E)" target="org.apache.commons.collections4.set.TransformedSortedSet.getSortedSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8027" source="org.apache.commons.collections4.set.TransformedSortedSet.tailSet(E)" target="org.apache.commons.collections4.set.TransformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8028" source="org.apache.commons.collections4.set.TransformedSortedSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSortedSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8029" source="org.apache.commons.collections4.set.TransformedSortedSetTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8030" source="org.apache.commons.collections4.set.TransformedSortedSetTest.makeFullCollection()" target="org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8031" source="org.apache.commons.collections4.set.TransformedSortedSetTest.makeObject()" target="org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8032" source="org.apache.commons.collections4.set.TransformedSortedSetTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8033" source="org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet()" target="org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8034" source="org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform()" target="org.apache.commons.collections4.set.TransformedSet.transformedSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8035" source="org.apache.commons.collections4.set.UnmodifiableSet(java.util.Set)" target="org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8036" source="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)" target="org.apache.commons.collections4.set.UnmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8037" source="org.apache.commons.collections4.set.UnmodifiableSet.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8038" source="org.apache.commons.collections4.set.UnmodifiableSet.iterator()" target="org.apache.commons.collections4.set.AbstractSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8039" source="org.apache.commons.collections4.set.UnmodifiableSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8040" source="org.apache.commons.collections4.set.UnmodifiableSetTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8041" source="org.apache.commons.collections4.set.UnmodifiableSetTest.makeFullCollection()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8042" source="org.apache.commons.collections4.set.UnmodifiableSetTest.makeObject()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8043" source="org.apache.commons.collections4.set.UnmodifiableSetTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8044" source="org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory()" target="org.apache.commons.collections4.set.UnmodifiableSetTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8045" source="org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8046" source="org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable()" target="org.apache.commons.collections4.set.UnmodifiableSetTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8047" source="org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable()" target="org.apache.commons.collections4.set.UnmodifiableSetTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8048" source="org.apache.commons.collections4.set.UnmodifiableSortedSet(java.util.SortedSet)" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8049" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(java.util.SortedSet)" target="org.apache.commons.collections4.set.UnmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8050" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.iterator()" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8051" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.iterator()" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8052" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.headSet(E)" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8053" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.headSet(E)" target="org.apache.commons.collections4.set.UnmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8054" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.subSet(E,E)" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8055" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.subSet(E,E)" target="org.apache.commons.collections4.set.UnmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8056" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.tailSet(E)" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8057" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.tailSet(E)" target="org.apache.commons.collections4.set.UnmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8058" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.readObject(java.io.ObjectInputStream)" target="org.apache.commons.collections4.collection.AbstractCollectionDecorator.setCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8059" source="org.apache.commons.collections4.set.UnmodifiableSortedSet.writeObject(java.io.ObjectOutputStream)" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.decorated()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8060" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest(java.lang.String)" target="org.apache.commons.collections4.set.AbstractSortedSetTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8061" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.makeObject()" target="org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8062" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8063" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.makeFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8064" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.makeFullCollection()" target="org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8065" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.setupSet()" target="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8066" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator()" target="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.setupSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8067" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator()" target="org.apache.commons.collections4.set.AbstractSortedSetDecorator.comparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8068" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory()" target="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.makeFullCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8069" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory()" target="org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8070" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable()" target="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.setupSet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8071" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable()" target="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.verifyUnmodifiable(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8072" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable()" target="org.apache.commons.collections4.set.UnmodifiableSortedSet.headSet(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8073" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable()" target="org.apache.commons.collections4.set.UnmodifiableSortedSet.tailSet(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8074" source="org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable()" target="org.apache.commons.collections4.set.UnmodifiableSortedSet.subSet(E,E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8075" source="org.apache.commons.collections4.sequence.DeleteCommand(T)" target="org.apache.commons.collections4.sequence.EditCommand(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8076" source="org.apache.commons.collections4.sequence.DeleteCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)" target="org.apache.commons.collections4.sequence.CommandVisitor.visitDeleteCommand(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8077" source="org.apache.commons.collections4.sequence.DeleteCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)" target="org.apache.commons.collections4.sequence.EditCommand.getObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8078" source="org.apache.commons.collections4.sequence.EditScript.visit(org.apache.commons.collections4.sequence.CommandVisitor)" target="org.apache.commons.collections4.sequence.EditCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8079" source="org.apache.commons.collections4.sequence.InsertCommand(T)" target="org.apache.commons.collections4.sequence.EditCommand(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8080" source="org.apache.commons.collections4.sequence.InsertCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)" target="org.apache.commons.collections4.sequence.CommandVisitor.visitInsertCommand(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8081" source="org.apache.commons.collections4.sequence.InsertCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)" target="org.apache.commons.collections4.sequence.EditCommand.getObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8082" source="org.apache.commons.collections4.sequence.KeepCommand(T)" target="org.apache.commons.collections4.sequence.EditCommand(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8083" source="org.apache.commons.collections4.sequence.KeepCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)" target="org.apache.commons.collections4.sequence.CommandVisitor.visitKeepCommand(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8084" source="org.apache.commons.collections4.sequence.KeepCommand.accept(org.apache.commons.collections4.sequence.CommandVisitor)" target="org.apache.commons.collections4.sequence.EditCommand.getObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8085" source="org.apache.commons.collections4.sequence.ReplacementsFinder.visitKeepCommand(T)" target="org.apache.commons.collections4.sequence.ReplacementsHandler.handleReplacement(int,java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8086" source="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List)" target="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8087" source="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List)" target="org.apache.commons.collections4.functors.DefaultEquator.defaultEquator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8088" source="org.apache.commons.collections4.sequence.SequencesComparator.getScript()" target="org.apache.commons.collections4.sequence.EditScript()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8089" source="org.apache.commons.collections4.sequence.SequencesComparator.getScript()" target="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8090" source="org.apache.commons.collections4.sequence.SequencesComparator.buildSnake(int,int,int,int)" target="org.apache.commons.collections4.Equator.equate(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8091" source="org.apache.commons.collections4.sequence.SequencesComparator.buildSnake(int,int,int,int)" target="org.apache.commons.collections4.sequence.SequencesComparator$Snake(int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8092" source="org.apache.commons.collections4.sequence.SequencesComparator.getMiddleSnake(int,int,int,int)" target="org.apache.commons.collections4.Equator.equate(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8093" source="org.apache.commons.collections4.sequence.SequencesComparator.getMiddleSnake(int,int,int,int)" target="org.apache.commons.collections4.sequence.SequencesComparator.buildSnake(int,int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8094" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.SequencesComparator.getMiddleSnake(int,int,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8095" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.SequencesComparator$Snake.getStart()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8096" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.SequencesComparator$Snake.getDiag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8097" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.SequencesComparator$Snake.getEnd()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8098" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.Equator.equate(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8099" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.EditScript.append(org.apache.commons.collections4.sequence.KeepCommand)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8100" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.KeepCommand(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8101" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.EditScript.append(org.apache.commons.collections4.sequence.DeleteCommand)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8102" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.DeleteCommand(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8103" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.EditScript.append(org.apache.commons.collections4.sequence.InsertCommand)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8104" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.InsertCommand(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8105" source="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)" target="org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8106" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution()" target="org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8107" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution()" target="org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor.setList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8108" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution()" target="org.apache.commons.collections4.sequence.SequencesComparatorTest.sequence(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8109" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution()" target="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8110" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution()" target="org.apache.commons.collections4.sequence.SequencesComparator.getScript()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8111" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution()" target="org.apache.commons.collections4.sequence.EditScript.visit(org.apache.commons.collections4.sequence.CommandVisitor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8112" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution()" target="org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor.getString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8113" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength()" target="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8114" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength()" target="org.apache.commons.collections4.sequence.SequencesComparatorTest.sequence(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8115" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength()" target="org.apache.commons.collections4.sequence.SequencesComparator.getScript()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8116" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength()" target="org.apache.commons.collections4.sequence.EditScript.getModifications()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8117" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal()" target="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8118" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal()" target="org.apache.commons.collections4.sequence.SequencesComparator.getScript()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8119" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal()" target="org.apache.commons.collections4.sequence.EditScript.getModifications()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8120" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok()" target="org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8121" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok()" target="org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor.setList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8122" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok()" target="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8123" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok()" target="org.apache.commons.collections4.sequence.SequencesComparator.getScript()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8124" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok()" target="org.apache.commons.collections4.sequence.EditScript.visit(org.apache.commons.collections4.sequence.CommandVisitor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8125" source="org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok()" target="org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor.getString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8126" source="org.apache.commons.collections4.AbstractArrayListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8127" source="org.apache.commons.collections4.AbstractArrayListTest.testNewArrayList()" target="org.apache.commons.collections4.AbstractArrayListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8128" source="org.apache.commons.collections4.AbstractArrayListTest.testSearch()" target="org.apache.commons.collections4.AbstractArrayListTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8129" source="org.apache.commons.collections4.AbstractLinkedListTest(java.lang.String)" target="org.apache.commons.collections4.list.AbstractListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8130" source="org.apache.commons.collections4.AbstractLinkedListTest.makeConfirmedFullCollection()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.getFullElements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8131" source="org.apache.commons.collections4.AbstractLinkedListTest.getCollection()" target="org.apache.commons.collections4.list.AbstractListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8132" source="org.apache.commons.collections4.AbstractLinkedListTest.getConfirmedLinkedList()" target="org.apache.commons.collections4.list.AbstractListTest.getConfirmed()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8133" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8134" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8135" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddFirst()" target="org.apache.commons.collections4.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8136" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddFirst()" target="org.apache.commons.collections4.AbstractLinkedListTest.getConfirmedLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8137" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddFirst()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8138" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8139" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isAddSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8140" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8141" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddLast()" target="org.apache.commons.collections4.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8142" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddLast()" target="org.apache.commons.collections4.AbstractLinkedListTest.getConfirmedLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8143" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddLast()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8144" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListAddLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8145" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8146" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetFirst()" target="org.apache.commons.collections4.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8147" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetFirst()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8148" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8149" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetFirst()" target="org.apache.commons.collections4.AbstractLinkedListTest.getConfirmedLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8150" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8151" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetLast()" target="org.apache.commons.collections4.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8152" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetLast()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8153" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8154" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListGetLast()" target="org.apache.commons.collections4.AbstractLinkedListTest.getConfirmedLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8155" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8156" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8157" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveFirst()" target="org.apache.commons.collections4.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8158" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveFirst()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8159" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveFirst()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8160" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveFirst()" target="org.apache.commons.collections4.AbstractLinkedListTest.getConfirmedLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8161" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.isRemoveSupported()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8162" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8163" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveLast()" target="org.apache.commons.collections4.AbstractLinkedListTest.getCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8164" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveLast()" target="org.apache.commons.collections4.list.AbstractListTest.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8165" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveLast()" target="org.apache.commons.collections4.collection.AbstractCollectionTest.resetFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8166" source="org.apache.commons.collections4.AbstractLinkedListTest.testLinkedListRemoveLast()" target="org.apache.commons.collections4.AbstractLinkedListTest.getConfirmedLinkedList()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8167" source="org.apache.commons.collections4.AbstractObjectTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8168" source="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToBytes(java.io.Serializable)" target="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToStream(java.io.Serializable,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8169" source="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromBytes(byte[])" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8170" source="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromDisk(java.lang.String)" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromStream(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8171" source="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)" target="org.apache.commons.collections4.AbstractObjectTest.getCompatibilityVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8172" source="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)" target="org.apache.commons.collections4.AbstractObjectTest.getCompatibilityVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8173" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalEmptyCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.supportsEmptyCollections()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8174" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalEmptyCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8175" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalEmptyCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8176" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalEmptyCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8177" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalEmptyCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalEmptyCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8178" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalFullCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.supportsFullCollections()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8179" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalFullCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8180" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalFullCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.skipSerializedCanonicalTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8181" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalFullCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8182" source="org.apache.commons.collections4.AbstractObjectTest.testCanonicalFullCollectionExists()" target="org.apache.commons.collections4.AbstractObjectTest.getCanonicalFullCollectionName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8183" source="org.apache.commons.collections4.AbstractObjectTest.testEqualsNull()" target="org.apache.commons.collections4.AbstractObjectTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8184" source="org.apache.commons.collections4.AbstractObjectTest.testObjectEqualsSelf()" target="org.apache.commons.collections4.AbstractObjectTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8185" source="org.apache.commons.collections4.AbstractObjectTest.testObjectHashCodeEqualsContract()" target="org.apache.commons.collections4.AbstractObjectTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8186" source="org.apache.commons.collections4.AbstractObjectTest.testObjectHashCodeEqualsSelfHashCode()" target="org.apache.commons.collections4.AbstractObjectTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8187" source="org.apache.commons.collections4.AbstractObjectTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.AbstractObjectTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8188" source="org.apache.commons.collections4.AbstractObjectTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8189" source="org.apache.commons.collections4.AbstractObjectTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.AbstractObjectTest.serializeDeserialize(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8190" source="org.apache.commons.collections4.AbstractObjectTest.testSerializeDeserializeThenCompare()" target="org.apache.commons.collections4.AbstractObjectTest.isEqualsCheckable()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8191" source="org.apache.commons.collections4.AbstractObjectTest.testSimpleSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8192" source="org.apache.commons.collections4.AbstractObjectTest.testSimpleSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.isTestSerialization()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8193" source="org.apache.commons.collections4.AbstractObjectTest.testSimpleSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToBytes(java.io.Serializable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8194" source="org.apache.commons.collections4.AbstractObjectTest.testSimpleSerialization()" target="org.apache.commons.collections4.AbstractObjectTest.readExternalFormFromBytes(byte[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8195" source="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToDisk(java.io.Serializable,java.lang.String)" target="org.apache.commons.collections4.AbstractObjectTest.writeExternalFormToStream(java.io.Serializable,java.io.OutputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8196" source="org.apache.commons.collections4.AbstractTreeMapTest(java.lang.String)" target="org.apache.commons.collections4.map.AbstractMapTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8197" source="org.apache.commons.collections4.AbstractTreeMapTest.testNewMap()" target="org.apache.commons.collections4.AbstractTreeMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8198" source="org.apache.commons.collections4.AbstractTreeMapTest.testSearch()" target="org.apache.commons.collections4.AbstractTreeMapTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8199" source="org.apache.commons.collections4.ArrayStackTest(java.lang.String)" target="org.apache.commons.collections4.AbstractArrayListTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8200" source="org.apache.commons.collections4.ArrayStackTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8201" source="org.apache.commons.collections4.ArrayStackTest.makeObject()" target="org.apache.commons.collections4.ArrayStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8202" source="org.apache.commons.collections4.ArrayStackTest.testNewStack()" target="org.apache.commons.collections4.ArrayStackTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8203" source="org.apache.commons.collections4.ArrayStackTest.testNewStack()" target="org.apache.commons.collections4.ArrayStack.empty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8204" source="org.apache.commons.collections4.ArrayStackTest.testNewStack()" target="org.apache.commons.collections4.ArrayStack.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8205" source="org.apache.commons.collections4.ArrayStackTest.testNewStack()" target="org.apache.commons.collections4.ArrayStack.pop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8206" source="org.apache.commons.collections4.ArrayStackTest.testPushPeekPop()" target="org.apache.commons.collections4.ArrayStackTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8207" source="org.apache.commons.collections4.ArrayStackTest.testPushPeekPop()" target="org.apache.commons.collections4.ArrayStack.push(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8208" source="org.apache.commons.collections4.ArrayStackTest.testPushPeekPop()" target="org.apache.commons.collections4.ArrayStack.empty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8209" source="org.apache.commons.collections4.ArrayStackTest.testPushPeekPop()" target="org.apache.commons.collections4.ArrayStack.peek()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8210" source="org.apache.commons.collections4.ArrayStackTest.testPushPeekPop()" target="org.apache.commons.collections4.ArrayStack.pop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8211" source="org.apache.commons.collections4.ArrayStackTest.testSearch()" target="org.apache.commons.collections4.ArrayStackTest.makeObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8212" source="org.apache.commons.collections4.ArrayStackTest.testSearch()" target="org.apache.commons.collections4.ArrayStack.push(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8213" source="org.apache.commons.collections4.ArrayStackTest.testSearch()" target="org.apache.commons.collections4.ArrayStack.search(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8214" source="org.apache.commons.collections4.BagUtils#EMPTY_BAG" target="org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8215" source="org.apache.commons.collections4.BagUtils#EMPTY_SORTED_BAG" target="org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8216" source="org.apache.commons.collections4.BagUtils.collectionBag(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8217" source="org.apache.commons.collections4.BagUtils.predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8218" source="org.apache.commons.collections4.BagUtils.synchronizedBag(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8219" source="org.apache.commons.collections4.BagUtils.transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.bag.TransformedBag.transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8220" source="org.apache.commons.collections4.BagUtils.unmodifiableBag(org.apache.commons.collections4.Bag)" target="org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8221" source="org.apache.commons.collections4.BagUtils.predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8222" source="org.apache.commons.collections4.BagUtils.synchronizedSortedBag(org.apache.commons.collections4.SortedBag)" target="org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8223" source="org.apache.commons.collections4.BagUtils.transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8224" source="org.apache.commons.collections4.BagUtils.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)" target="org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8225" source="org.apache.commons.collections4.BagUtilsTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8226" source="org.apache.commons.collections4.BagUtilsTest#nopTransformer" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8227" source="org.apache.commons.collections4.BagUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8228" source="org.apache.commons.collections4.BagUtilsTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8229" source="org.apache.commons.collections4.BagUtilsTest.testPredicatedBag()" target="org.apache.commons.collections4.BagUtils.predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8230" source="org.apache.commons.collections4.BagUtilsTest.testPredicatedBag()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8231" source="org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag()" target="org.apache.commons.collections4.BagUtils.predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8232" source="org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8233" source="org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag()" target="org.apache.commons.collections4.BagUtils.synchronizedBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8234" source="org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8235" source="org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag()" target="org.apache.commons.collections4.BagUtils.synchronizedSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8236" source="org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8237" source="org.apache.commons.collections4.BagUtilsTest.testTransformedBag()" target="org.apache.commons.collections4.BagUtils.transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8238" source="org.apache.commons.collections4.BagUtilsTest.testTransformedBag()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8239" source="org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag()" target="org.apache.commons.collections4.BagUtils.transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8240" source="org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8241" source="org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag()" target="org.apache.commons.collections4.BagUtils.unmodifiableBag(org.apache.commons.collections4.Bag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8242" source="org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8243" source="org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag()" target="org.apache.commons.collections4.BagUtils.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8244" source="org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag()" target="org.apache.commons.collections4.bag.TreeBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8245" source="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)" target="org.apache.commons.collections4.BulkTestSuiteMaker(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8246" source="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)" target="org.apache.commons.collections4.BulkTestSuiteMaker.make()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8247" source="org.apache.commons.collections4.BulkTestSuiteMaker.makeFirstTestCase(java.lang.Class)" target="org.apache.commons.collections4.BulkTestSuiteMaker.isTest(java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8248" source="org.apache.commons.collections4.BulkTestSuiteMaker.makeFirstTestCase(java.lang.Class)" target="org.apache.commons.collections4.BulkTestSuiteMaker.makeTestCase(java.lang.Class,java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8249" source="org.apache.commons.collections4.BulkTestSuiteMaker.makeTestCase(java.lang.Class,java.lang.reflect.Method)" target="org.apache.commons.collections4.BulkTestSuiteMaker.getTestCaseConstructor(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8250" source="org.apache.commons.collections4.BulkTestSuiteMaker.make()" target="org.apache.commons.collections4.BulkTestSuiteMaker.getBaseName(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8251" source="org.apache.commons.collections4.BulkTestSuiteMaker.make()" target="org.apache.commons.collections4.BulkTestSuiteMaker.makeFirstTestCase(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8252" source="org.apache.commons.collections4.BulkTestSuiteMaker.make()" target="org.apache.commons.collections4.BulkTest.ignoredTests()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8253" source="org.apache.commons.collections4.BulkTestSuiteMaker.make()" target="org.apache.commons.collections4.BulkTestSuiteMaker.make(org.apache.commons.collections4.BulkTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8254" source="org.apache.commons.collections4.BulkTestSuiteMaker.addBulk(org.apache.commons.collections4.BulkTest,java.lang.reflect.Method)" target="org.apache.commons.collections4.BulkTestSuiteMaker.make(org.apache.commons.collections4.BulkTest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8255" source="org.apache.commons.collections4.BulkTestSuiteMaker.addTest(org.apache.commons.collections4.BulkTest,java.lang.reflect.Method)" target="org.apache.commons.collections4.BulkTest.clone()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8256" source="org.apache.commons.collections4.BulkTestSuiteMaker.make(org.apache.commons.collections4.BulkTest)" target="org.apache.commons.collections4.BulkTestSuiteMaker.isTest(java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8257" source="org.apache.commons.collections4.BulkTestSuiteMaker.make(org.apache.commons.collections4.BulkTest)" target="org.apache.commons.collections4.BulkTestSuiteMaker.addTest(org.apache.commons.collections4.BulkTest,java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8258" source="org.apache.commons.collections4.BulkTestSuiteMaker.make(org.apache.commons.collections4.BulkTest)" target="org.apache.commons.collections4.BulkTestSuiteMaker.isBulk(java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8259" source="org.apache.commons.collections4.BulkTestSuiteMaker.make(org.apache.commons.collections4.BulkTest)" target="org.apache.commons.collections4.BulkTestSuiteMaker.addBulk(org.apache.commons.collections4.BulkTest,java.lang.reflect.Method)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8260" source="org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8261" source="org.apache.commons.collections4.ClosureUtils.chainedClosure(java.util.Collection)" target="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8262" source="org.apache.commons.collections4.ClosureUtils.chainedClosure(org.apache.commons.collections4.Closure[])" target="org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8263" source="org.apache.commons.collections4.ClosureUtils.doWhileClosure(org.apache.commons.collections4.Closure,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.WhileClosure.whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8264" source="org.apache.commons.collections4.ClosureUtils.exceptionClosure()" target="org.apache.commons.collections4.functors.ExceptionClosure.exceptionClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8265" source="org.apache.commons.collections4.ClosureUtils.forClosure(int,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.ForClosure.forClosure(int,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8266" source="org.apache.commons.collections4.ClosureUtils.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.IfClosure.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8267" source="org.apache.commons.collections4.ClosureUtils.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.IfClosure.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8268" source="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String)" target="org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8269" source="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String)" target="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8270" source="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8271" source="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8272" source="org.apache.commons.collections4.ClosureUtils.nopClosure()" target="org.apache.commons.collections4.functors.NOPClosure.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8273" source="org.apache.commons.collections4.ClosureUtils.switchClosure(java.util.Map)" target="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8274" source="org.apache.commons.collections4.ClosureUtils.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])" target="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8275" source="org.apache.commons.collections4.ClosureUtils.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.SwitchClosure.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8276" source="org.apache.commons.collections4.ClosureUtils.switchMapClosure(java.util.Map)" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8277" source="org.apache.commons.collections4.ClosureUtils.switchMapClosure(java.util.Map)" target="org.apache.commons.collections4.ClosureUtils.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8278" source="org.apache.commons.collections4.ClosureUtils.whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.WhileClosure.whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8279" source="org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8280" source="org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure()" target="org.apache.commons.collections4.ClosureUtils.chainedClosure(org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8281" source="org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8282" source="org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure()" target="org.apache.commons.collections4.ClosureUtils.chainedClosure(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8283" source="org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8284" source="org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure()" target="org.apache.commons.collections4.ClosureUtils.doWhileClosure(org.apache.commons.collections4.Closure,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8285" source="org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8286" source="org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8287" source="org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure()" target="org.apache.commons.collections4.PredicateUtils.uniquePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8288" source="org.apache.commons.collections4.ClosureUtilsTest.testExceptionClosure()" target="org.apache.commons.collections4.ClosureUtils.exceptionClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8289" source="org.apache.commons.collections4.ClosureUtilsTest.testExceptionClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8290" source="org.apache.commons.collections4.ClosureUtilsTest.testForClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8291" source="org.apache.commons.collections4.ClosureUtilsTest.testForClosure()" target="org.apache.commons.collections4.ClosureUtils.forClosure(int,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8292" source="org.apache.commons.collections4.ClosureUtilsTest.testForClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8293" source="org.apache.commons.collections4.ClosureUtilsTest.testIfClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8294" source="org.apache.commons.collections4.ClosureUtilsTest.testIfClosure()" target="org.apache.commons.collections4.ClosureUtils.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8295" source="org.apache.commons.collections4.ClosureUtilsTest.testIfClosure()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8296" source="org.apache.commons.collections4.ClosureUtilsTest.testIfClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8297" source="org.apache.commons.collections4.ClosureUtilsTest.testIfClosure()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8298" source="org.apache.commons.collections4.ClosureUtilsTest.testIfClosure()" target="org.apache.commons.collections4.ClosureUtils.ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8299" source="org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure()" target="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8300" source="org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8301" source="org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure()" target="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8302" source="org.apache.commons.collections4.ClosureUtilsTest.testNopClosure()" target="org.apache.commons.collections4.ClosureUtils.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8303" source="org.apache.commons.collections4.ClosureUtilsTest.testNopClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8304" source="org.apache.commons.collections4.ClosureUtilsTest.testSingletonPatternInSerialization()" target="org.apache.commons.collections4.TestUtils.assertSameAfterSerialization(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8305" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8306" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure()" target="org.apache.commons.collections4.ClosureUtils.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8307" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8308" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8309" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockClosure.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8310" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure()" target="org.apache.commons.collections4.ClosureUtils.switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8311" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure()" target="org.apache.commons.collections4.ClosureUtils.switchClosure(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8312" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8313" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8314" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure()" target="org.apache.commons.collections4.ClosureUtils.switchMapClosure(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8315" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8316" source="org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockClosure.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8317" source="org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8318" source="org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure()" target="org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8319" source="org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8320" source="org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure()" target="org.apache.commons.collections4.ClosureUtils.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8321" source="org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure()" target="org.apache.commons.collections4.ClosureUtilsTest$MockClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8322" source="org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure()" target="org.apache.commons.collections4.ClosureUtils.whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8323" source="org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8324" source="org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure()" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8325" source="org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure()" target="org.apache.commons.collections4.PredicateUtils.uniquePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8326" source="org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure()" target="org.apache.commons.collections4.ClosureUtils.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8327" source="org.apache.commons.collections4.CollectionUtils$CardinalityHelper(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8328" source="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqA(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.getFreq(java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8329" source="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqB(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.getFreq(java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8330" source="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.max(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqA(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8331" source="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.max(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqB(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8332" source="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.min(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqA(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8333" source="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.min(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqB(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8334" source="org.apache.commons.collections4.CollectionUtils$EquatorWrapper.equals(java.lang.Object)" target="org.apache.commons.collections4.Equator.equate(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8335" source="org.apache.commons.collections4.CollectionUtils$EquatorWrapper.equals(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils$EquatorWrapper.getObject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8336" source="org.apache.commons.collections4.CollectionUtils$EquatorWrapper.hashCode()" target="org.apache.commons.collections4.Equator.hash(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8337" source="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8338" source="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8339" source="org.apache.commons.collections4.CollectionUtils#EMPTY_COLLECTION" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8340" source="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8341" source="org.apache.commons.collections4.CollectionUtils.exists(java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8342" source="org.apache.commons.collections4.CollectionUtils.matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8343" source="org.apache.commons.collections4.CollectionUtils.countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8344" source="org.apache.commons.collections4.CollectionUtils.predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8345" source="org.apache.commons.collections4.CollectionUtils.retainAll(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.ListUtils.retainAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8346" source="org.apache.commons.collections4.CollectionUtils.synchronizedCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8347" source="org.apache.commons.collections4.CollectionUtils.unmodifiableCollection(java.util.Collection)" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8348" source="org.apache.commons.collections4.CollectionUtils.transform(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8349" source="org.apache.commons.collections4.CollectionUtils.transform(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8350" source="org.apache.commons.collections4.CollectionUtils.contains(java.util.Collection,E,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.Equator.equate(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8351" source="org.apache.commons.collections4.CollectionUtils$1.transform(java.lang.Object)" target="org.apache.commons.collections4.CollectionUtils$EquatorWrapper(org.apache.commons.collections4.Equator,O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8352" source="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8353" source="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils$EquatorWrapper(org.apache.commons.collections4.Equator,O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8354" source="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8355" source="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8356" source="org.apache.commons.collections4.CollectionUtils.permutations(java.util.Collection)" target="org.apache.commons.collections4.iterators.PermutationIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8357" source="org.apache.commons.collections4.CollectionUtils.permutations(java.util.Collection)" target="org.apache.commons.collections4.iterators.PermutationIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8358" source="org.apache.commons.collections4.CollectionUtils.permutations(java.util.Collection)" target="org.apache.commons.collections4.iterators.PermutationIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8359" source="org.apache.commons.collections4.CollectionUtils$3.transform(E)" target="org.apache.commons.collections4.CollectionUtils$EquatorWrapper(org.apache.commons.collections4.Equator,O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8360" source="org.apache.commons.collections4.CollectionUtils.removeAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8361" source="org.apache.commons.collections4.CollectionUtils.removeAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils$EquatorWrapper(org.apache.commons.collections4.Equator,O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8362" source="org.apache.commons.collections4.CollectionUtils.removeAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8363" source="org.apache.commons.collections4.CollectionUtils.removeAll(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.ListUtils.removeAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8364" source="org.apache.commons.collections4.CollectionUtils$2.transform(E)" target="org.apache.commons.collections4.CollectionUtils$EquatorWrapper(org.apache.commons.collections4.Equator,O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8365" source="org.apache.commons.collections4.CollectionUtils.retainAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8366" source="org.apache.commons.collections4.CollectionUtils.retainAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils$EquatorWrapper(org.apache.commons.collections4.Equator,O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8367" source="org.apache.commons.collections4.CollectionUtils.retainAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8368" source="org.apache.commons.collections4.CollectionUtils.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8369" source="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer,R)" target="org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator,org.apache.commons.collections4.Transformer,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8370" source="org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator,org.apache.commons.collections4.Transformer,R)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8371" source="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8372" source="org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator,org.apache.commons.collections4.Transformer,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8373" source="org.apache.commons.collections4.CollectionUtils.get(java.util.Map,int)" target="org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8374" source="org.apache.commons.collections4.CollectionUtils.get(java.util.Map,int)" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Iterable,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8375" source="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8376" source="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.ComparatorUtils.naturalComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8377" source="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,boolean)" target="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8378" source="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,boolean)" target="org.apache.commons.collections4.ComparatorUtils.naturalComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8379" source="org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8380" source="org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8381" source="org.apache.commons.collections4.CollectionUtils.cardinality(O,java.lang.Iterable)" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8382" source="org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8383" source="org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.setCardinality(O,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8384" source="org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.max(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8385" source="org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.min(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8386" source="org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.list()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8387" source="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8388" source="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.setCardinality(O,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8389" source="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.min(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8390" source="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.list()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8391" source="org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8392" source="org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8393" source="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8394" source="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8395" source="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8396" source="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8397" source="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.AbstractMapBag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8398" source="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.bag.AbstractMapBag.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8399" source="org.apache.commons.collections4.CollectionUtils.union(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8400" source="org.apache.commons.collections4.CollectionUtils.union(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.setCardinality(O,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8401" source="org.apache.commons.collections4.CollectionUtils.union(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.max(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8402" source="org.apache.commons.collections4.CollectionUtils.union(java.lang.Iterable,java.lang.Iterable)" target="org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.list()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8403" source="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator)" target="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8404" source="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator,boolean)" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8405" source="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator,boolean)" target="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8406" source="org.apache.commons.collections4.CollectionUtils.forAllDo(java.lang.Iterable,C)" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8407" source="org.apache.commons.collections4.CollectionUtils.forAllDo(java.util.Iterator,C)" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8408" source="org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.lang.Iterable,C)" target="org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.util.Iterator,C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8409" source="org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.util.Iterator,C)" target="org.apache.commons.collections4.Closure.execute(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8410" source="org.apache.commons.collections4.CollectionUtils.find(java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8411" source="org.apache.commons.collections4.CollectionUtils.get(java.lang.Iterable,int)" target="org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8412" source="org.apache.commons.collections4.CollectionUtils.get(java.lang.Iterable,int)" target="org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8413" source="org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator,int)" target="org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8414" source="org.apache.commons.collections4.CollectionUtils.filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8415" source="org.apache.commons.collections4.CollectionUtils.filterInverse(java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.CollectionUtils.filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8416" source="org.apache.commons.collections4.CollectionUtils.filterInverse(java.lang.Iterable,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.PredicateUtils.notPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8417" source="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8418" source="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqA(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8419" source="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqB(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8420" source="org.apache.commons.collections4.CollectionUtils.isFull(java.util.Collection)" target="org.apache.commons.collections4.BoundedCollection.isFull()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8421" source="org.apache.commons.collections4.CollectionUtils.isFull(java.util.Collection)" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8422" source="org.apache.commons.collections4.CollectionUtils.isNotEmpty(java.util.Collection)" target="org.apache.commons.collections4.CollectionUtils.isEmpty(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8423" source="org.apache.commons.collections4.CollectionUtils.isProperSubCollection(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8424" source="org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8425" source="org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqA(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8426" source="org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection,java.util.Collection)" target="org.apache.commons.collections4.CollectionUtils$CardinalityHelper.freqB(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8427" source="org.apache.commons.collections4.CollectionUtils.maxSize(java.util.Collection)" target="org.apache.commons.collections4.BoundedCollection.maxSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8428" source="org.apache.commons.collections4.CollectionUtils.maxSize(java.util.Collection)" target="org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8429" source="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)" target="org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8430" source="org.apache.commons.collections4.CollectionUtilsTest#EQUALS_TWO" target="org.apache.commons.collections4.CollectionUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8431" source="org.apache.commons.collections4.CollectionUtilsTest#TRANSFORM_TO_INTEGER" target="org.apache.commons.collections4.CollectionUtilsTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8432" source="org.apache.commons.collections4.CollectionUtilsTest()" target="org.apache.commons.collections4.MockTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8433" source="org.apache.commons.collections4.CollectionUtilsTest.next(java.util.Iterator,T)" target="org.apache.commons.collections4.MockTestCase.expect(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8434" source="org.apache.commons.collections4.CollectionUtilsTest.addAllForElements()" target="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,C[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8435" source="org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration()" target="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,java.util.Enumeration)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8436" source="org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable()" target="org.apache.commons.collections4.MockTestCase.createMock(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8437" source="org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable()" target="org.apache.commons.collections4.MockTestCase.expect(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8438" source="org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable()" target="org.apache.commons.collections4.CollectionUtilsTest.next(java.util.Iterator,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8439" source="org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable()" target="org.apache.commons.collections4.MockTestCase.replay()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8440" source="org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable()" target="org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8441" source="org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable()" target="org.apache.commons.collections4.MockTestCase.verify()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8442" source="org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull()" target="org.apache.commons.collections4.CollectionUtils.addIgnoreNull(java.util.Collection,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8443" source="org.apache.commons.collections4.CollectionUtilsTest.cardinality()" target="org.apache.commons.collections4.CollectionUtils.cardinality(O,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8444" source="org.apache.commons.collections4.CollectionUtilsTest.cardinality()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8445" source="org.apache.commons.collections4.CollectionUtilsTest.cardinality()" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8446" source="org.apache.commons.collections4.CollectionUtilsTest.cardinality()" target="org.apache.commons.collections4.Bag.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8447" source="org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull()" target="org.apache.commons.collections4.CollectionUtils.cardinality(O,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8448" source="org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull()" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8449" source="org.apache.commons.collections4.CollectionUtilsTest.collateException1()" target="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8450" source="org.apache.commons.collections4.CollectionUtilsTest.collateException2()" target="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8451" source="org.apache.commons.collections4.CollectionUtilsTest.collect()" target="org.apache.commons.collections4.TransformerUtils.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8452" source="org.apache.commons.collections4.CollectionUtilsTest.collect()" target="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8453" source="org.apache.commons.collections4.CollectionUtilsTest.collect()" target="org.apache.commons.collections4.CollectionUtilsTest.assertCollectResult(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8454" source="org.apache.commons.collections4.CollectionUtilsTest.collect()" target="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8455" source="org.apache.commons.collections4.CollectionUtilsTest.collect()" target="org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator,org.apache.commons.collections4.Transformer,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8456" source="org.apache.commons.collections4.CollectionUtilsTest.collect()" target="org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8457" source="org.apache.commons.collections4.CollectionUtilsTest.containsAll()" target="org.apache.commons.collections4.CollectionUtils.containsAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8458" source="org.apache.commons.collections4.CollectionUtilsTest.containsAny()" target="org.apache.commons.collections4.CollectionUtils.containsAny(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8459" source="org.apache.commons.collections4.CollectionUtilsTest.countMatches()" target="org.apache.commons.collections4.CollectionUtils.countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8460" source="org.apache.commons.collections4.CollectionUtilsTest.disjunction()" target="org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8461" source="org.apache.commons.collections4.CollectionUtilsTest.disjunction()" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8462" source="org.apache.commons.collections4.CollectionUtilsTest.emptyCollection()" target="org.apache.commons.collections4.CollectionUtils.emptyCollection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8463" source="org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull()" target="org.apache.commons.collections4.CollectionUtils.emptyIfNull(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8464" source="org.apache.commons.collections4.CollectionUtilsTest.exists()" target="org.apache.commons.collections4.CollectionUtils.exists(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8465" source="org.apache.commons.collections4.CollectionUtilsTest.extractSingleton()" target="org.apache.commons.collections4.CollectionUtils.extractSingleton(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8466" source="org.apache.commons.collections4.CollectionUtilsTest.filter()" target="org.apache.commons.collections4.CollectionUtils.filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8467" source="org.apache.commons.collections4.CollectionUtilsTest.filterInverse()" target="org.apache.commons.collections4.CollectionUtils.filterInverse(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8468" source="org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters()" target="org.apache.commons.collections4.CollectionUtils.filterInverse(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8469" source="org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters()" target="org.apache.commons.collections4.CollectionUtils.filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8470" source="org.apache.commons.collections4.CollectionUtilsTest.find()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8471" source="org.apache.commons.collections4.CollectionUtilsTest.find()" target="org.apache.commons.collections4.CollectionUtils.find(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8472" source="org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection()" target="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8473" source="org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection()" target="org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.lang.Iterable,C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8474" source="org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection()" target="org.apache.commons.collections4.CollectionUtilsTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8475" source="org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection()" target="org.apache.commons.collections4.CollectionUtilsTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8476" source="org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator()" target="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8477" source="org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator()" target="org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.util.Iterator,C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8478" source="org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection()" target="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8479" source="org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection()" target="org.apache.commons.collections4.CollectionUtils.forAllDo(java.lang.Iterable,C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8480" source="org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure()" target="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8481" source="org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure()" target="org.apache.commons.collections4.CollectionUtils.forAllDo(java.lang.Iterable,C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8482" source="org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator()" target="org.apache.commons.collections4.ClosureUtils.invokerClosure(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8483" source="org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator()" target="org.apache.commons.collections4.CollectionUtils.forAllDo(java.util.Iterator,C)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8484" source="org.apache.commons.collections4.CollectionUtilsTest.get()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8485" source="org.apache.commons.collections4.CollectionUtilsTest.get()" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8486" source="org.apache.commons.collections4.CollectionUtilsTest.get1()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8487" source="org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap()" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8488" source="org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8489" source="org.apache.commons.collections4.CollectionUtilsTest.getFromIterable()" target="org.apache.commons.collections4.bag.HashBag()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8490" source="org.apache.commons.collections4.CollectionUtilsTest.getFromIterable()" target="org.apache.commons.collections4.Bag.add(E,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8491" source="org.apache.commons.collections4.CollectionUtilsTest.getFromIterable()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Iterable,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8492" source="org.apache.commons.collections4.CollectionUtilsTest.getFromIterator()" target="org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8493" source="org.apache.commons.collections4.CollectionUtilsTest.getFromList()" target="org.apache.commons.collections4.MockTestCase.createMock(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8494" source="org.apache.commons.collections4.CollectionUtilsTest.getFromList()" target="org.apache.commons.collections4.MockTestCase.expect(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8495" source="org.apache.commons.collections4.CollectionUtilsTest.getFromList()" target="org.apache.commons.collections4.MockTestCase.replay()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8496" source="org.apache.commons.collections4.CollectionUtilsTest.getFromList()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Iterable,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8497" source="org.apache.commons.collections4.CollectionUtilsTest.getFromMap()" target="org.apache.commons.collections4.CollectionUtils.get(java.util.Map,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8498" source="org.apache.commons.collections4.CollectionUtilsTest.getFromObject()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8499" source="org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8500" source="org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8501" source="org.apache.commons.collections4.CollectionUtilsTest.getNegative()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8502" source="org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds()" target="org.apache.commons.collections4.CollectionUtils.get(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8503" source="org.apache.commons.collections4.CollectionUtilsTest.intersection()" target="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8504" source="org.apache.commons.collections4.CollectionUtilsTest.intersection()" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8505" source="org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals()" target="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8506" source="org.apache.commons.collections4.CollectionUtilsTest.isEmpty()" target="org.apache.commons.collections4.CollectionUtils.isNotEmpty(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8507" source="org.apache.commons.collections4.CollectionUtilsTest.isFull()" target="org.apache.commons.collections4.CollectionUtils.isFull(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8508" source="org.apache.commons.collections4.CollectionUtilsTest.isFull()" target="org.apache.commons.collections4.queue.CircularFifoQueue(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8509" source="org.apache.commons.collections4.CollectionUtilsTest.isFull()" target="org.apache.commons.collections4.queue.CircularFifoQueue.add(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8510" source="org.apache.commons.collections4.CollectionUtilsTest.maxSize()" target="org.apache.commons.collections4.CollectionUtils.maxSize(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8511" source="org.apache.commons.collections4.CollectionUtilsTest.maxSize()" target="org.apache.commons.collections4.queue.CircularFifoQueue(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8512" source="org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection()" target="org.apache.commons.collections4.PredicateUtils.instanceofPredicate(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8513" source="org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection()" target="org.apache.commons.collections4.CollectionUtils.predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8514" source="org.apache.commons.collections4.CollectionUtilsTest.reverse()" target="org.apache.commons.collections4.CollectionUtils.reverseArray(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8515" source="org.apache.commons.collections4.CollectionUtilsTest.select()" target="org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8516" source="org.apache.commons.collections4.CollectionUtilsTest.select()" target="org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8517" source="org.apache.commons.collections4.CollectionUtilsTest.select()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8518" source="org.apache.commons.collections4.CollectionUtilsTest.selectRejected()" target="org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8519" source="org.apache.commons.collections4.CollectionUtilsTest.selectRejected()" target="org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8520" source="org.apache.commons.collections4.CollectionUtilsTest.selectRejected()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8521" source="org.apache.commons.collections4.CollectionUtilsTest.testCollate()" target="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8522" source="org.apache.commons.collections4.CollectionUtilsTest.testCollate()" target="org.apache.commons.collections4.ComparatorUtils.reversedComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8523" source="org.apache.commons.collections4.CollectionUtilsTest.testCollate()" target="org.apache.commons.collections4.ComparatorUtils.naturalComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8524" source="org.apache.commons.collections4.CollectionUtilsTest.testCollate()" target="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8525" source="org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates()" target="org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable,java.lang.Iterable,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8526" source="org.apache.commons.collections4.CollectionUtilsTest.testContainsWithEquator()" target="org.apache.commons.collections4.CollectionUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8527" source="org.apache.commons.collections4.CollectionUtilsTest.testContainsWithEquator()" target="org.apache.commons.collections4.CollectionUtils.contains(java.util.Collection,E,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8528" source="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference()" target="org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8529" source="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference()" target="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8530" source="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8531" source="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference()" target="org.apache.commons.collections4.CollectionUtils.union(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8532" source="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection()" target="org.apache.commons.collections4.CollectionUtils.disjunction(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8533" source="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection()" target="org.apache.commons.collections4.CollectionUtils.union(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8534" source="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection()" target="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8535" source="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8536" source="org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection()" target="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8537" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection()" target="org.apache.commons.collections4.CollectionUtils.isEmpty(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8538" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection()" target="org.apache.commons.collections4.CollectionUtils.isEmpty(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8539" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull()" target="org.apache.commons.collections4.CollectionUtils.isEmpty(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8540" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8541" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8542" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator()" target="org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8543" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator()" target="org.apache.commons.collections4.CollectionUtilsTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8544" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8545" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator()" target="org.apache.commons.collections4.functors.DefaultEquator.defaultEquator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8546" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8547" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8548" source="org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8549" source="org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection()" target="org.apache.commons.collections4.CollectionUtils.isNotEmpty(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8550" source="org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection()" target="org.apache.commons.collections4.CollectionUtils.isNotEmpty(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8551" source="org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull()" target="org.apache.commons.collections4.CollectionUtils.isNotEmpty(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8552" source="org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection()" target="org.apache.commons.collections4.CollectionUtils.isProperSubCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8553" source="org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection()" target="org.apache.commons.collections4.CollectionUtils.intersection(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8554" source="org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection()" target="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8555" source="org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection()" target="org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8556" source="org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2()" target="org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8557" source="org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf()" target="org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8558" source="org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll()" target="org.apache.commons.collections4.CollectionUtils.matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8559" source="org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll()" target="org.apache.commons.collections4.CollectionUtilsTest$8()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8560" source="org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll()" target="org.apache.commons.collections4.CollectionUtilsTest$9()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8561" source="org.apache.commons.collections4.CollectionUtilsTest.testPermutations()" target="org.apache.commons.collections4.CollectionUtils.permutations(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8562" source="org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection()" target="org.apache.commons.collections4.CollectionUtils.permutations(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8563" source="org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll()" target="org.apache.commons.collections4.CollectionUtils.removeAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8564" source="org.apache.commons.collections4.CollectionUtilsTest.testRemoveAllWithEquator()" target="org.apache.commons.collections4.CollectionUtils.removeAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8565" source="org.apache.commons.collections4.CollectionUtilsTest.testRemoveAllWithEquator()" target="org.apache.commons.collections4.CollectionUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8566" source="org.apache.commons.collections4.CollectionUtilsTest.testRemoveAllWithEquator()" target="org.apache.commons.collections4.functors.DefaultEquator.defaultEquator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8567" source="org.apache.commons.collections4.CollectionUtilsTest.testRetainAll()" target="org.apache.commons.collections4.CollectionUtils.retainAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8568" source="org.apache.commons.collections4.CollectionUtilsTest.testRetainAllWithEquator()" target="org.apache.commons.collections4.CollectionUtils.retainAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8569" source="org.apache.commons.collections4.CollectionUtilsTest.testRetainAllWithEquator()" target="org.apache.commons.collections4.CollectionUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8570" source="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array()" target="org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8571" source="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration()" target="org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8572" source="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator()" target="org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8573" source="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List()" target="org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8574" source="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map()" target="org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8575" source="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null()" target="org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8576" source="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other()" target="org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8577" source="org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray()" target="org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8578" source="org.apache.commons.collections4.CollectionUtilsTest.testSize_Array()" target="org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8579" source="org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration()" target="org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8580" source="org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator()" target="org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8581" source="org.apache.commons.collections4.CollectionUtilsTest.testSize_List()" target="org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8582" source="org.apache.commons.collections4.CollectionUtilsTest.testSize_Map()" target="org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8583" source="org.apache.commons.collections4.CollectionUtilsTest.testSize_Other()" target="org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8584" source="org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray()" target="org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8585" source="org.apache.commons.collections4.CollectionUtilsTest.testSubtract()" target="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8586" source="org.apache.commons.collections4.CollectionUtilsTest.testSubtract()" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8587" source="org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate()" target="org.apache.commons.collections4.CollectionUtilsTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8588" source="org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate()" target="org.apache.commons.collections4.CollectionUtils.subtract(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8589" source="org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate()" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8590" source="org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection()" target="org.apache.commons.collections4.CollectionUtils.synchronizedCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8591" source="org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8592" source="org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection()" target="org.apache.commons.collections4.CollectionUtils.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8593" source="org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2()" target="org.apache.commons.collections4.CollectionUtils.transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8594" source="org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection()" target="org.apache.commons.collections4.CollectionUtils.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8595" source="org.apache.commons.collections4.CollectionUtilsTest.transform1()" target="org.apache.commons.collections4.CollectionUtils.transform(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8596" source="org.apache.commons.collections4.CollectionUtilsTest.transform2()" target="org.apache.commons.collections4.CollectionUtils.transform(java.util.Collection,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8597" source="org.apache.commons.collections4.CollectionUtilsTest.transform2()" target="org.apache.commons.collections4.CollectionUtilsTest$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8598" source="org.apache.commons.collections4.CollectionUtilsTest.union()" target="org.apache.commons.collections4.CollectionUtils.union(java.lang.Iterable,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8599" source="org.apache.commons.collections4.CollectionUtilsTest.union()" target="org.apache.commons.collections4.CollectionUtils.getCardinalityMap(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8600" source="org.apache.commons.collections4.ComparatorUtils#NATURAL_COMPARATOR" target="org.apache.commons.collections4.comparators.ComparableComparator.comparableComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8601" source="org.apache.commons.collections4.ComparatorUtils.chainedComparator(java.util.Collection)" target="org.apache.commons.collections4.ComparatorUtils.chainedComparator(java.util.Comparator[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8602" source="org.apache.commons.collections4.ComparatorUtils.chainedComparator(java.util.Comparator[])" target="org.apache.commons.collections4.comparators.ComparatorChain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8603" source="org.apache.commons.collections4.ComparatorUtils.chainedComparator(java.util.Comparator[])" target="org.apache.commons.collections4.comparators.ComparatorChain.addComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8604" source="org.apache.commons.collections4.ComparatorUtils.nullHighComparator(java.util.Comparator)" target="org.apache.commons.collections4.comparators.NullComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8605" source="org.apache.commons.collections4.ComparatorUtils.nullLowComparator(java.util.Comparator)" target="org.apache.commons.collections4.comparators.NullComparator(java.util.Comparator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8606" source="org.apache.commons.collections4.ComparatorUtils.reversedComparator(java.util.Comparator)" target="org.apache.commons.collections4.comparators.ReverseComparator(java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8607" source="org.apache.commons.collections4.ComparatorUtils.transformedComparator(java.util.Comparator,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.comparators.TransformingComparator(org.apache.commons.collections4.Transformer,java.util.Comparator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8608" source="org.apache.commons.collections4.ComparatorUtils.booleanComparator(boolean)" target="org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8609" source="org.apache.commons.collections4.EnumerationUtils.toList(java.util.Enumeration)" target="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8610" source="org.apache.commons.collections4.EnumerationUtils.toList(java.util.Enumeration)" target="org.apache.commons.collections4.iterators.EnumerationIterator(java.util.Enumeration)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8611" source="org.apache.commons.collections4.EnumerationUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8612" source="org.apache.commons.collections4.EnumerationUtilsTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8613" source="org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable()" target="org.apache.commons.collections4.EnumerationUtils.toList(java.util.Enumeration)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8614" source="org.apache.commons.collections4.EnumerationUtilsTest.testToListWithStringTokenizer()" target="org.apache.commons.collections4.EnumerationUtils.toList(java.util.StringTokenizer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8615" source="org.apache.commons.collections4.FactoryUtils.constantFactory(T)" target="org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8616" source="org.apache.commons.collections4.FactoryUtils.exceptionFactory()" target="org.apache.commons.collections4.functors.ExceptionFactory.exceptionFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8617" source="org.apache.commons.collections4.FactoryUtils.instantiateFactory(java.lang.Class)" target="org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8618" source="org.apache.commons.collections4.FactoryUtils.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8619" source="org.apache.commons.collections4.FactoryUtils.nullFactory()" target="org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8620" source="org.apache.commons.collections4.FactoryUtils.prototypeFactory(T)" target="org.apache.commons.collections4.functors.PrototypeFactory.prototypeFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8621" source="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactoryComplex()" target="org.apache.commons.collections4.FactoryUtils.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8622" source="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactoryComplex()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8623" source="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactoryMismatch()" target="org.apache.commons.collections4.FactoryUtils.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8624" source="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactoryNoConstructor()" target="org.apache.commons.collections4.FactoryUtils.instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8625" source="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactoryNull()" target="org.apache.commons.collections4.FactoryUtils.instantiateFactory(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8626" source="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactorySimple()" target="org.apache.commons.collections4.FactoryUtils.instantiateFactory(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8627" source="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactorySimple()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8628" source="org.apache.commons.collections4.FactoryUtilsTest.instantiateFactorySimple()" target="org.apache.commons.collections4.FactoryUtilsTest$Mock3.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8629" source="org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant()" target="org.apache.commons.collections4.FactoryUtils.constantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8630" source="org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8631" source="org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryNull()" target="org.apache.commons.collections4.FactoryUtils.constantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8632" source="org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryNull()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8633" source="org.apache.commons.collections4.FactoryUtilsTest.testExceptionFactory()" target="org.apache.commons.collections4.FactoryUtils.exceptionFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8634" source="org.apache.commons.collections4.FactoryUtilsTest.testExceptionFactory()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8635" source="org.apache.commons.collections4.FactoryUtilsTest.testNullFactory()" target="org.apache.commons.collections4.FactoryUtils.nullFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8636" source="org.apache.commons.collections4.FactoryUtilsTest.testNullFactory()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8637" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryNull()" target="org.apache.commons.collections4.FactoryUtils.prototypeFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8638" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad()" target="org.apache.commons.collections4.FactoryUtils.prototypeFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8639" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCloneMethod()" target="org.apache.commons.collections4.FactoryUtils.prototypeFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8640" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCloneMethod()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8641" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor()" target="org.apache.commons.collections4.FactoryUtilsTest$Mock1(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8642" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor()" target="org.apache.commons.collections4.FactoryUtils.prototypeFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8643" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8644" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor()" target="org.apache.commons.collections4.FactoryUtilsTest$Mock2(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8645" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization()" target="org.apache.commons.collections4.FactoryUtils.prototypeFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8646" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8647" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError()" target="org.apache.commons.collections4.FactoryUtilsTest$Mock2(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8648" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError()" target="org.apache.commons.collections4.FactoryUtils.prototypeFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8649" source="org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError()" target="org.apache.commons.collections4.Factory.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8650" source="org.apache.commons.collections4.FactoryUtilsTest.testSingletonPatternInSerialization()" target="org.apache.commons.collections4.TestUtils.assertSameAfterSerialization(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8651" source="org.apache.commons.collections4.IteratorUtils.toArray(java.util.Iterator,java.lang.Class)" target="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8652" source="org.apache.commons.collections4.IteratorUtils.asIterable(java.util.Iterator)" target="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8653" source="org.apache.commons.collections4.IteratorUtils.asMultipleUseIterable(java.util.Iterator)" target="org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8654" source="org.apache.commons.collections4.IteratorUtils.asEnumeration(java.util.Iterator)" target="org.apache.commons.collections4.iterators.IteratorEnumeration(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8655" source="org.apache.commons.collections4.IteratorUtils.asIterator(java.util.Enumeration)" target="org.apache.commons.collections4.iterators.EnumerationIterator(java.util.Enumeration)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8656" source="org.apache.commons.collections4.IteratorUtils.asIterator(java.util.Enumeration,java.util.Collection)" target="org.apache.commons.collections4.iterators.EnumerationIterator(java.util.Enumeration,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8657" source="org.apache.commons.collections4.IteratorUtils.chainedIterator(java.util.Collection)" target="org.apache.commons.collections4.iterators.IteratorChain(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8658" source="org.apache.commons.collections4.IteratorUtils.chainedIterator(java.util.Iterator,java.util.Iterator)" target="org.apache.commons.collections4.iterators.IteratorChain(java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8659" source="org.apache.commons.collections4.IteratorUtils.chainedIterator(java.util.Iterator[])" target="org.apache.commons.collections4.iterators.IteratorChain(java.util.Iterator[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8660" source="org.apache.commons.collections4.IteratorUtils.collatedIterator(java.util.Comparator,java.util.Collection)" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8661" source="org.apache.commons.collections4.IteratorUtils.collatedIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8662" source="org.apache.commons.collections4.IteratorUtils.collatedIterator(java.util.Comparator,java.util.Iterator[])" target="org.apache.commons.collections4.iterators.CollatingIterator(java.util.Comparator,java.util.Iterator[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8663" source="org.apache.commons.collections4.IteratorUtils.filteredIterator(java.util.Iterator,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.iterators.FilterIterator(java.util.Iterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8664" source="org.apache.commons.collections4.IteratorUtils.objectGraphIterator(E,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.iterators.ObjectGraphIterator(E,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8665" source="org.apache.commons.collections4.IteratorUtils.peekingIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8666" source="org.apache.commons.collections4.IteratorUtils.pushbackIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8667" source="org.apache.commons.collections4.IteratorUtils.unmodifiableIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8668" source="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator)" target="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8669" source="org.apache.commons.collections4.IteratorUtils.filteredListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.iterators.FilterListIterator(java.util.ListIterator,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8670" source="org.apache.commons.collections4.IteratorUtils.singletonListIterator(E)" target="org.apache.commons.collections4.iterators.SingletonListIterator(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8671" source="org.apache.commons.collections4.IteratorUtils.toListIterator(java.util.Iterator)" target="org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8672" source="org.apache.commons.collections4.IteratorUtils.unmodifiableListIterator(java.util.ListIterator)" target="org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8673" source="org.apache.commons.collections4.IteratorUtils.emptyOrderedIterator()" target="org.apache.commons.collections4.iterators.EmptyOrderedIterator.emptyOrderedIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8674" source="org.apache.commons.collections4.IteratorUtils.arrayIterator(E[])" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8675" source="org.apache.commons.collections4.IteratorUtils.arrayIterator(E[],int)" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8676" source="org.apache.commons.collections4.IteratorUtils.arrayIterator(E[],int,int)" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[],int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8677" source="org.apache.commons.collections4.IteratorUtils.arrayIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8678" source="org.apache.commons.collections4.IteratorUtils.arrayIterator(java.lang.Object,int)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8679" source="org.apache.commons.collections4.IteratorUtils.arrayIterator(java.lang.Object,int,int)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8680" source="org.apache.commons.collections4.IteratorUtils.emptyIterator()" target="org.apache.commons.collections4.iterators.EmptyIterator.resettableEmptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8681" source="org.apache.commons.collections4.IteratorUtils.loopingIterator(java.util.Collection)" target="org.apache.commons.collections4.iterators.LoopingIterator(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8682" source="org.apache.commons.collections4.IteratorUtils.singletonIterator(E)" target="org.apache.commons.collections4.iterators.SingletonIterator(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8683" source="org.apache.commons.collections4.IteratorUtils.arrayListIterator(E[])" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8684" source="org.apache.commons.collections4.IteratorUtils.arrayListIterator(E[],int)" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8685" source="org.apache.commons.collections4.IteratorUtils.arrayListIterator(E[],int,int)" target="org.apache.commons.collections4.iterators.ObjectArrayListIterator(E[],int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8686" source="org.apache.commons.collections4.IteratorUtils.arrayListIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8687" source="org.apache.commons.collections4.IteratorUtils.arrayListIterator(java.lang.Object,int)" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8688" source="org.apache.commons.collections4.IteratorUtils.arrayListIterator(java.lang.Object,int,int)" target="org.apache.commons.collections4.iterators.ArrayListIterator(java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8689" source="org.apache.commons.collections4.IteratorUtils.emptyListIterator()" target="org.apache.commons.collections4.iterators.EmptyListIterator.resettableEmptyListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8690" source="org.apache.commons.collections4.IteratorUtils.loopingListIterator(java.util.List)" target="org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8691" source="org.apache.commons.collections4.IteratorUtils.boundedIterator(java.util.Iterator,long)" target="org.apache.commons.collections4.IteratorUtils.boundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8692" source="org.apache.commons.collections4.IteratorUtils.boundedIterator(java.util.Iterator,long,long)" target="org.apache.commons.collections4.iterators.BoundedIterator(java.util.Iterator,long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8693" source="org.apache.commons.collections4.IteratorUtils.transformedIterator(java.util.Iterator,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.iterators.TransformIterator(java.util.Iterator,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8694" source="org.apache.commons.collections4.IteratorUtils.emptyMapIterator()" target="org.apache.commons.collections4.iterators.EmptyMapIterator.emptyMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8695" source="org.apache.commons.collections4.IteratorUtils.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)" target="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8696" source="org.apache.commons.collections4.IteratorUtils.emptyOrderedMapIterator()" target="org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.emptyOrderedMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8697" source="org.apache.commons.collections4.IteratorUtils.toArray(java.util.Iterator)" target="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8698" source="org.apache.commons.collections4.IteratorUtils.getIterator(java.lang.Object)" target="org.apache.commons.collections4.IteratorUtils.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8699" source="org.apache.commons.collections4.IteratorUtils.getIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.ObjectArrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8700" source="org.apache.commons.collections4.IteratorUtils.getIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.EnumerationIterator(java.util.Enumeration)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8701" source="org.apache.commons.collections4.IteratorUtils.getIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.NodeList)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8702" source="org.apache.commons.collections4.IteratorUtils.getIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8703" source="org.apache.commons.collections4.IteratorUtils.getIterator(java.lang.Object)" target="org.apache.commons.collections4.iterators.ArrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8704" source="org.apache.commons.collections4.IteratorUtils.getIterator(java.lang.Object)" target="org.apache.commons.collections4.IteratorUtils.singletonIterator(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8705" source="org.apache.commons.collections4.IteratorUtils.nodeListIterator(org.w3c.dom.Node)" target="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8706" source="org.apache.commons.collections4.IteratorUtils.nodeListIterator(org.w3c.dom.NodeList)" target="org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.NodeList)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8707" source="org.apache.commons.collections4.IteratorUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8708" source="org.apache.commons.collections4.IteratorUtilsTest.getImmutableIterator()" target="org.apache.commons.collections4.IteratorUtils.unmodifiableIterator(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8709" source="org.apache.commons.collections4.IteratorUtilsTest.getImmutableListIterator()" target="org.apache.commons.collections4.IteratorUtils.unmodifiableListIterator(java.util.ListIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8710" source="org.apache.commons.collections4.IteratorUtilsTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8711" source="org.apache.commons.collections4.IteratorUtilsTest.createNodeList(org.w3c.dom.Node[])" target="org.apache.commons.collections4.IteratorUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8712" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8713" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8714" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8715" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayIterator(E[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8716" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayIterator(E[],int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8717" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8718" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayIterator(java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8719" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayListIterator(E[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8720" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayListIterator(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8721" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayListIterator(E[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8722" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayListIterator(E[],int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8723" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayListIterator(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8724" source="org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator()" target="org.apache.commons.collections4.IteratorUtils.arrayListIterator(java.lang.Object,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8725" source="org.apache.commons.collections4.IteratorUtilsTest.testAsIterable()" target="org.apache.commons.collections4.IteratorUtils.asIterable(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8726" source="org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull()" target="org.apache.commons.collections4.IteratorUtils.asIterable(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8727" source="org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable()" target="org.apache.commons.collections4.IteratorUtils.asMultipleUseIterable(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8728" source="org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull()" target="org.apache.commons.collections4.IteratorUtils.asMultipleUseIterable(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8729" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8730" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator()" target="org.apache.commons.collections4.IteratorUtils.emptyIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8731" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8732" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator()" target="org.apache.commons.collections4.IteratorUtils.emptyListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8733" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8734" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8735" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator()" target="org.apache.commons.collections4.IteratorUtils.emptyMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8736" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8737" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8738" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8739" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8740" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8741" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator()" target="org.apache.commons.collections4.OrderedIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8742" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8743" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator()" target="org.apache.commons.collections4.IteratorUtils.emptyOrderedIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8744" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator()" target="org.apache.commons.collections4.OrderedIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8745" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8746" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.OrderedMapIterator.hasPrevious()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8747" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.ResettableIterator.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8748" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.IteratorUtils.emptyOrderedMapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8749" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8750" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.OrderedMapIterator.previous()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8751" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.MapIterator.remove()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8752" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8753" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8754" source="org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator()" target="org.apache.commons.collections4.MapIterator.setValue(V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8755" source="org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator()" target="org.apache.commons.collections4.IteratorUtilsTest.createNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8756" source="org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator()" target="org.apache.commons.collections4.IteratorUtilsTest.createNodeList(org.w3c.dom.Node[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8757" source="org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator()" target="org.apache.commons.collections4.IteratorUtils.nodeListIterator(org.w3c.dom.Node)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8758" source="org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator()" target="org.apache.commons.collections4.IteratorUtils.asIterable(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8759" source="org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator()" target="org.apache.commons.collections4.IteratorUtilsTest.createNodes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8760" source="org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator()" target="org.apache.commons.collections4.IteratorUtilsTest.createNodeList(org.w3c.dom.Node[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8761" source="org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator()" target="org.apache.commons.collections4.IteratorUtils.nodeListIterator(org.w3c.dom.NodeList)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8762" source="org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator()" target="org.apache.commons.collections4.IteratorUtils.asIterable(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8763" source="org.apache.commons.collections4.IteratorUtilsTest.testToArray()" target="org.apache.commons.collections4.IteratorUtils.toArray(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8764" source="org.apache.commons.collections4.IteratorUtilsTest.testToArray2()" target="org.apache.commons.collections4.IteratorUtils.toArray(java.util.Iterator,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8765" source="org.apache.commons.collections4.IteratorUtilsTest.testToList()" target="org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8766" source="org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability()" target="org.apache.commons.collections4.IteratorUtilsTest.getImmutableIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8767" source="org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration()" target="org.apache.commons.collections4.IteratorUtilsTest.getImmutableIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8768" source="org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability()" target="org.apache.commons.collections4.IteratorUtilsTest.getImmutableListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8769" source="org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration()" target="org.apache.commons.collections4.IteratorUtilsTest.getImmutableListIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8770" source="org.apache.commons.collections4.ListUtils$Partition.get(int)" target="org.apache.commons.collections4.ListUtils$Partition.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8771" source="org.apache.commons.collections4.ListUtils.indexOf(java.util.List,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8772" source="org.apache.commons.collections4.ListUtils.fixedSizeList(java.util.List)" target="org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8773" source="org.apache.commons.collections4.ListUtils.lazyList(java.util.List,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.list.LazyList.lazyList(java.util.List,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8774" source="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List)" target="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8775" source="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List)" target="org.apache.commons.collections4.functors.DefaultEquator.defaultEquator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8776" source="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.sequence.SequencesComparator(java.util.List,java.util.List,org.apache.commons.collections4.Equator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8777" source="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.sequence.SequencesComparator.getScript()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8778" source="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.ListUtils$LcsVisitor()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8779" source="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.sequence.EditScript.visit(org.apache.commons.collections4.sequence.CommandVisitor)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8780" source="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List,org.apache.commons.collections4.Equator)" target="org.apache.commons.collections4.ListUtils$LcsVisitor.getSubSequence()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8781" source="org.apache.commons.collections4.ListUtils.predicatedList(java.util.List,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.list.PredicatedList.predicatedList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8782" source="org.apache.commons.collections4.ListUtils.select(java.util.Collection,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8783" source="org.apache.commons.collections4.ListUtils.selectRejected(java.util.Collection,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8784" source="org.apache.commons.collections4.ListUtils.subtract(java.util.List,java.util.List)" target="org.apache.commons.collections4.bag.HashBag(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8785" source="org.apache.commons.collections4.ListUtils.subtract(java.util.List,java.util.List)" target="org.apache.commons.collections4.bag.AbstractMapBag.remove(java.lang.Object,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8786" source="org.apache.commons.collections4.ListUtils.sum(java.util.List,java.util.List)" target="org.apache.commons.collections4.ListUtils.subtract(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8787" source="org.apache.commons.collections4.ListUtils.sum(java.util.List,java.util.List)" target="org.apache.commons.collections4.ListUtils.union(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8788" source="org.apache.commons.collections4.ListUtils.sum(java.util.List,java.util.List)" target="org.apache.commons.collections4.ListUtils.intersection(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8789" source="org.apache.commons.collections4.ListUtils.transformedList(java.util.List,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.list.TransformedList.transformingList(java.util.List,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8790" source="org.apache.commons.collections4.ListUtils.unmodifiableList(java.util.List)" target="org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8791" source="org.apache.commons.collections4.ListUtils.partition(java.util.List,int)" target="org.apache.commons.collections4.ListUtils$Partition(java.util.List,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8792" source="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)" target="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8793" source="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)" target="org.apache.commons.collections4.ListUtils$CharSequenceAsList(java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8794" source="org.apache.commons.collections4.ListUtilsTest#EQUALS_TWO" target="org.apache.commons.collections4.ListUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8795" source="org.apache.commons.collections4.ListUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8796" source="org.apache.commons.collections4.ListUtilsTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8797" source="org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull()" target="org.apache.commons.collections4.ListUtils.defaultIfNull(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8798" source="org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull()" target="org.apache.commons.collections4.ListUtils.emptyIfNull(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8799" source="org.apache.commons.collections4.ListUtilsTest.testEquals()" target="org.apache.commons.collections4.ListUtils.isEqualList(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8800" source="org.apache.commons.collections4.ListUtilsTest.testHashCode()" target="org.apache.commons.collections4.ListUtils.hashCodeForList(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8801" source="org.apache.commons.collections4.ListUtilsTest.testIndexOf()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8802" source="org.apache.commons.collections4.ListUtilsTest.testIndexOf()" target="org.apache.commons.collections4.ListUtils.indexOf(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8803" source="org.apache.commons.collections4.ListUtilsTest.testIntersectEmptyWithEmptyList()" target="org.apache.commons.collections4.ListUtils.intersection(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8804" source="org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes()" target="org.apache.commons.collections4.ListUtils.intersection(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8805" source="org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf()" target="org.apache.commons.collections4.ListUtils.intersection(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8806" source="org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset()" target="org.apache.commons.collections4.ListUtils.intersection(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8807" source="org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList()" target="org.apache.commons.collections4.ListUtils.intersection(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8808" source="org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity()" target="org.apache.commons.collections4.ListUtils.intersection(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8809" source="org.apache.commons.collections4.ListUtilsTest.testLazyList()" target="org.apache.commons.collections4.ListUtils.lazyList(java.util.List,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8810" source="org.apache.commons.collections4.ListUtilsTest.testLazyList()" target="org.apache.commons.collections4.ListUtilsTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8811" source="org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence()" target="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8812" source="org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString()" target="org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8813" source="org.apache.commons.collections4.ListUtilsTest.testPartition()" target="org.apache.commons.collections4.ListUtils.partition(java.util.List,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8814" source="org.apache.commons.collections4.ListUtilsTest.testPredicatedList()" target="org.apache.commons.collections4.ListUtilsTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8815" source="org.apache.commons.collections4.ListUtilsTest.testPredicatedList()" target="org.apache.commons.collections4.ListUtils.predicatedList(java.util.List,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8816" source="org.apache.commons.collections4.ListUtilsTest.testRemoveAll()" target="org.apache.commons.collections4.ListUtils.removeAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8817" source="org.apache.commons.collections4.ListUtilsTest.testRetainAll()" target="org.apache.commons.collections4.ListUtils.retainAll(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8818" source="org.apache.commons.collections4.ListUtilsTest.testSelect()" target="org.apache.commons.collections4.ListUtils.select(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8819" source="org.apache.commons.collections4.ListUtilsTest.testSelect()" target="org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8820" source="org.apache.commons.collections4.ListUtilsTest.testSelect()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8821" source="org.apache.commons.collections4.ListUtilsTest.testSelectRejected()" target="org.apache.commons.collections4.ListUtils.selectRejected(java.util.Collection,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8822" source="org.apache.commons.collections4.ListUtilsTest.testSelectRejected()" target="org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate,R)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8823" source="org.apache.commons.collections4.ListUtilsTest.testSelectRejected()" target="org.apache.commons.collections4.CollectionUtils.isEqualCollection(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8824" source="org.apache.commons.collections4.ListUtilsTest.testSubtract()" target="org.apache.commons.collections4.ListUtils.subtract(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8825" source="org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement()" target="org.apache.commons.collections4.ListUtils.subtract(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8826" source="org.apache.commons.collections4.MapPerformance.main(java.lang.String[])" target="org.apache.commons.collections4.MapPerformance.testAll()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8827" source="org.apache.commons.collections4.MapPerformance.testAll()" target="org.apache.commons.collections4.MapPerformance$DummyMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8828" source="org.apache.commons.collections4.MapPerformance.testAll()" target="org.apache.commons.collections4.map.Flat3Map(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8829" source="org.apache.commons.collections4.MapPerformance.testAll()" target="org.apache.commons.collections4.MapPerformance.test(java.util.Map,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8830" source="org.apache.commons.collections4.MapUtils#EMPTY_SORTED_MAP" target="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8831" source="org.apache.commons.collections4.MapUtils.multiValueMap(java.util.Map,java.lang.Class)" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8832" source="org.apache.commons.collections4.MapUtils.multiValueMap(java.util.Map,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8833" source="org.apache.commons.collections4.MapUtils.populateMap(java.util.Map,java.lang.Iterable,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8834" source="org.apache.commons.collections4.MapUtils.populateMap(org.apache.commons.collections4.MultiMap,java.lang.Iterable,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.MultiMap.put(K,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8835" source="org.apache.commons.collections4.MapUtils.populateMap(org.apache.commons.collections4.MultiMap,java.lang.Iterable,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8836" source="org.apache.commons.collections4.MapUtils.putAll(java.util.Map,java.lang.Object[])" target="org.apache.commons.collections4.KeyValue.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8837" source="org.apache.commons.collections4.MapUtils.putAll(java.util.Map,java.lang.Object[])" target="org.apache.commons.collections4.KeyValue.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8838" source="org.apache.commons.collections4.MapUtils.unmodifiableMap(java.util.Map)" target="org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8839" source="org.apache.commons.collections4.MapUtils.fixedSizeSortedMap(java.util.SortedMap)" target="org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8840" source="org.apache.commons.collections4.MapUtils.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8841" source="org.apache.commons.collections4.MapUtils.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8842" source="org.apache.commons.collections4.MapUtils.predicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8843" source="org.apache.commons.collections4.MapUtils.transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8844" source="org.apache.commons.collections4.MapUtils.unmodifiableSortedMap(java.util.SortedMap)" target="org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8845" source="org.apache.commons.collections4.MapUtils.fixedSizeMap(java.util.Map)" target="org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8846" source="org.apache.commons.collections4.MapUtils$1(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8847" source="org.apache.commons.collections4.MapUtils.iterableMap(java.util.Map)" target="org.apache.commons.collections4.MapUtils$1(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8848" source="org.apache.commons.collections4.MapUtils.iterableMap(java.util.Map)" target="org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8849" source="org.apache.commons.collections4.MapUtils.lazyMap(java.util.Map,org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8850" source="org.apache.commons.collections4.MapUtils.lazyMap(java.util.Map,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8851" source="org.apache.commons.collections4.MapUtils.predicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.map.PredicatedMap.predicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8852" source="org.apache.commons.collections4.MapUtils.transformedMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.map.TransformedMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8853" source="org.apache.commons.collections4.MapUtils$2(java.util.SortedMap)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8854" source="org.apache.commons.collections4.MapUtils.iterableSortedMap(java.util.SortedMap)" target="org.apache.commons.collections4.MapUtils$2(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8855" source="org.apache.commons.collections4.MapUtils.iterableSortedMap(java.util.SortedMap)" target="org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8856" source="org.apache.commons.collections4.MapUtils.orderedMap(java.util.Map)" target="org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8857" source="org.apache.commons.collections4.MapUtils.multiValueMap(java.util.Map)" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8858" source="org.apache.commons.collections4.MapUtils.populateMap(java.util.Map,java.lang.Iterable,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.MapUtils.populateMap(java.util.Map,java.lang.Iterable,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8859" source="org.apache.commons.collections4.MapUtils.populateMap(java.util.Map,java.lang.Iterable,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8860" source="org.apache.commons.collections4.MapUtils.populateMap(org.apache.commons.collections4.MultiMap,java.lang.Iterable,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.MapUtils.populateMap(org.apache.commons.collections4.MultiMap,java.lang.Iterable,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8861" source="org.apache.commons.collections4.MapUtils.populateMap(org.apache.commons.collections4.MultiMap,java.lang.Iterable,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8862" source="org.apache.commons.collections4.MapUtils.getBooleanValue(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getBoolean(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8863" source="org.apache.commons.collections4.MapUtils.getBooleanValue(java.util.Map,K,boolean)" target="org.apache.commons.collections4.MapUtils.getBoolean(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8864" source="org.apache.commons.collections4.MapUtils.getByteValue(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getByte(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8865" source="org.apache.commons.collections4.MapUtils.getByteValue(java.util.Map,K,byte)" target="org.apache.commons.collections4.MapUtils.getByte(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8866" source="org.apache.commons.collections4.MapUtils.getDoubleValue(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getDouble(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8867" source="org.apache.commons.collections4.MapUtils.getDoubleValue(java.util.Map,K,double)" target="org.apache.commons.collections4.MapUtils.getDouble(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8868" source="org.apache.commons.collections4.MapUtils.getFloatValue(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getFloat(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8869" source="org.apache.commons.collections4.MapUtils.getFloatValue(java.util.Map,K,float)" target="org.apache.commons.collections4.MapUtils.getFloat(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8870" source="org.apache.commons.collections4.MapUtils.getIntValue(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getInteger(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8871" source="org.apache.commons.collections4.MapUtils.getIntValue(java.util.Map,K,int)" target="org.apache.commons.collections4.MapUtils.getInteger(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8872" source="org.apache.commons.collections4.MapUtils.getBoolean(java.util.Map,K,java.lang.Boolean)" target="org.apache.commons.collections4.MapUtils.getBoolean(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8873" source="org.apache.commons.collections4.MapUtils.getByte(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8874" source="org.apache.commons.collections4.MapUtils.getByte(java.util.Map,K,java.lang.Byte)" target="org.apache.commons.collections4.MapUtils.getByte(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8875" source="org.apache.commons.collections4.MapUtils.getDouble(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8876" source="org.apache.commons.collections4.MapUtils.getDouble(java.util.Map,K,java.lang.Double)" target="org.apache.commons.collections4.MapUtils.getDouble(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8877" source="org.apache.commons.collections4.MapUtils.getFloat(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8878" source="org.apache.commons.collections4.MapUtils.getFloat(java.util.Map,K,java.lang.Float)" target="org.apache.commons.collections4.MapUtils.getFloat(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8879" source="org.apache.commons.collections4.MapUtils.getInteger(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8880" source="org.apache.commons.collections4.MapUtils.getInteger(java.util.Map,K,java.lang.Integer)" target="org.apache.commons.collections4.MapUtils.getInteger(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8881" source="org.apache.commons.collections4.MapUtils.getLong(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8882" source="org.apache.commons.collections4.MapUtils.getLong(java.util.Map,K,java.lang.Long)" target="org.apache.commons.collections4.MapUtils.getLong(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8883" source="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K,java.lang.Number)" target="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8884" source="org.apache.commons.collections4.MapUtils.getShort(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getNumber(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8885" source="org.apache.commons.collections4.MapUtils.getShort(java.util.Map,K,java.lang.Short)" target="org.apache.commons.collections4.MapUtils.getShort(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8886" source="org.apache.commons.collections4.MapUtils.getString(java.util.Map,K,java.lang.String)" target="org.apache.commons.collections4.MapUtils.getString(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8887" source="org.apache.commons.collections4.MapUtils.getMap(java.util.Map,K,java.util.Map)" target="org.apache.commons.collections4.MapUtils.getMap(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8888" source="org.apache.commons.collections4.MapUtils.getLongValue(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getLong(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8889" source="org.apache.commons.collections4.MapUtils.getLongValue(java.util.Map,K,long)" target="org.apache.commons.collections4.MapUtils.getLong(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8890" source="org.apache.commons.collections4.MapUtils.getShortValue(java.util.Map,K)" target="org.apache.commons.collections4.MapUtils.getShort(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8891" source="org.apache.commons.collections4.MapUtils.getShortValue(java.util.Map,K,short)" target="org.apache.commons.collections4.MapUtils.getShort(java.util.Map,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8892" source="org.apache.commons.collections4.MapUtils.isNotEmpty(java.util.Map)" target="org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8893" source="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)" target="org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream,java.lang.Object,java.util.Map,org.apache.commons.collections4.ArrayStack,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8894" source="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)" target="org.apache.commons.collections4.ArrayStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8895" source="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)" target="org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream,java.lang.Object,java.util.Map,org.apache.commons.collections4.ArrayStack,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8896" source="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)" target="org.apache.commons.collections4.ArrayStack()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8897" source="org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream,java.lang.Object,java.util.Map,org.apache.commons.collections4.ArrayStack,boolean)" target="org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8898" source="org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream,java.lang.Object,java.util.Map,org.apache.commons.collections4.ArrayStack,boolean)" target="org.apache.commons.collections4.ArrayStack.push(E)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8899" source="org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream,java.lang.Object,java.util.Map,org.apache.commons.collections4.ArrayStack,boolean)" target="org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream,java.lang.Object,java.util.Map,org.apache.commons.collections4.ArrayStack,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8900" source="org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream,java.lang.Object,java.util.Map,org.apache.commons.collections4.ArrayStack,boolean)" target="org.apache.commons.collections4.ArrayStack.pop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8901" source="org.apache.commons.collections4.MapUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8902" source="org.apache.commons.collections4.MapUtilsTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8903" source="org.apache.commons.collections4.MapUtilsTest.getPredicate()" target="org.apache.commons.collections4.MapUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8904" source="org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle()" target="org.apache.commons.collections4.MapUtilsTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8905" source="org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle()" target="org.apache.commons.collections4.MapUtils.toMap(java.util.ResourceBundle)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8906" source="org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8907" source="org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8908" source="org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap()" target="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8909" source="org.apache.commons.collections4.MapUtilsTest.testDebugPrint()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8910" source="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8911" source="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8912" source="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8913" source="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8914" source="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8915" source="org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8916" source="org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference()" target="org.apache.commons.collections4.MapUtils.debugPrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8917" source="org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull()" target="org.apache.commons.collections4.MapUtils.emptyIfNull(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8918" source="org.apache.commons.collections4.MapUtilsTest.testInvertMap()" target="org.apache.commons.collections4.MapUtils.invertMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8919" source="org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap()" target="org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8920" source="org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap()" target="org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8921" source="org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull()" target="org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8922" source="org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap()" target="org.apache.commons.collections4.MapUtils.isNotEmpty(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8923" source="org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap()" target="org.apache.commons.collections4.MapUtils.isNotEmpty(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8924" source="org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull()" target="org.apache.commons.collections4.MapUtils.isNotEmpty(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8925" source="org.apache.commons.collections4.MapUtilsTest.testIterableMap()" target="org.apache.commons.collections4.MapUtils.iterableMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8926" source="org.apache.commons.collections4.MapUtilsTest.testIterableMap()" target="org.apache.commons.collections4.map.HashedMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8927" source="org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap()" target="org.apache.commons.collections4.MapUtils.iterableSortedMap(java.util.SortedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8928" source="org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap()" target="org.apache.commons.collections4.MapUtils.iterableMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8929" source="org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory()" target="org.apache.commons.collections4.FactoryUtils.constantFactory(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8930" source="org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory()" target="org.apache.commons.collections4.MapUtils.lazyMap(java.util.Map,org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8931" source="org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory()" target="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8932" source="org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory()" target="org.apache.commons.collections4.MapUtils.lazyMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8933" source="org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer()" target="org.apache.commons.collections4.MapUtils.lazyMap(java.util.Map,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8934" source="org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer()" target="org.apache.commons.collections4.MapUtilsTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8935" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMap()" target="org.apache.commons.collections4.MapUtils.populateMap(java.util.Map,java.lang.Iterable,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8936" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMap()" target="org.apache.commons.collections4.MapUtils.populateMap(java.util.Map,java.lang.Iterable,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8937" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap()" target="org.apache.commons.collections4.MapUtilsTest$X(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8938" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap()" target="org.apache.commons.collections4.map.MultiValueMap.multiValueMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8939" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap()" target="org.apache.commons.collections4.MapUtils.populateMap(org.apache.commons.collections4.MultiMap,java.lang.Iterable,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8940" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap()" target="org.apache.commons.collections4.MapUtilsTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8941" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8942" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap()" target="org.apache.commons.collections4.map.MultiValueMap.totalSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8943" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap()" target="org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8944" source="org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap()" target="org.apache.commons.collections4.map.MultiValueMap.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8945" source="org.apache.commons.collections4.MapUtilsTest.testPredicatedMap()" target="org.apache.commons.collections4.MapUtilsTest.getPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8946" source="org.apache.commons.collections4.MapUtilsTest.testPredicatedMap()" target="org.apache.commons.collections4.MapUtils.predicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8947" source="org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array()" target="org.apache.commons.collections4.MapUtils.putAll(java.util.Map,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8948" source="org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array()" target="org.apache.commons.collections4.keyvalue.DefaultMapEntry(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8949" source="org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array()" target="org.apache.commons.collections4.keyvalue.DefaultKeyValue(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8950" source="org.apache.commons.collections4.MapUtilsTest.testVerbosePrint()" target="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8951" source="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey()" target="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8952" source="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1()" target="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8953" source="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2()" target="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8954" source="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel()" target="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8955" source="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap()" target="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8956" source="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream()" target="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8957" source="org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference()" target="org.apache.commons.collections4.MapUtils.verbosePrint(java.io.PrintStream,java.lang.Object,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8958" source="org.apache.commons.collections4.MockTestCase.createMock(java.lang.Class)" target="org.apache.commons.collections4.MockTestCase.registerMock(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8959" source="org.apache.commons.collections4.MultiMapUtils#EMPTY_MULTI_VALUED_MAP" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8960" source="org.apache.commons.collections4.MultiMapUtils.createListValuedHashMap(java.lang.Class)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8961" source="org.apache.commons.collections4.MultiMapUtils.createSetValuedHashMap(java.lang.Class)" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8962" source="org.apache.commons.collections4.MultiMapUtils.getCollection(org.apache.commons.collections4.MultiValuedMap,K)" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8963" source="org.apache.commons.collections4.MultiMapUtils.getList(org.apache.commons.collections4.MultiValuedMap,K)" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8964" source="org.apache.commons.collections4.MultiMapUtils.getSet(org.apache.commons.collections4.MultiValuedMap,K)" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8965" source="org.apache.commons.collections4.MultiMapUtils.getBag(org.apache.commons.collections4.MultiValuedMap,K)" target="org.apache.commons.collections4.MultiValuedMap.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8966" source="org.apache.commons.collections4.MultiMapUtils.getBag(org.apache.commons.collections4.MultiValuedMap,K)" target="org.apache.commons.collections4.bag.HashBag(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8967" source="org.apache.commons.collections4.MultiMapUtils.createListValuedHashMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.listValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8968" source="org.apache.commons.collections4.MultiMapUtils.transformedMultiValuedMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformingMap(org.apache.commons.collections4.MultiValuedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8969" source="org.apache.commons.collections4.MultiMapUtils.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8970" source="org.apache.commons.collections4.MultiMapUtils.createSetValuedHashMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap.setValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8971" source="org.apache.commons.collections4.MultiMapUtils.isEmpty(org.apache.commons.collections4.MultiValuedMap)" target="org.apache.commons.collections4.MultiValuedMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8972" source="org.apache.commons.collections4.MultiMapUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8973" source="org.apache.commons.collections4.MultiMapUtilsTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8974" source="org.apache.commons.collections4.MultiMapUtilsTest.testEmptyIfNull()" target="org.apache.commons.collections4.MultiMapUtils.emptyIfNull(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8975" source="org.apache.commons.collections4.MultiMapUtilsTest.testEmptyIfNull()" target="org.apache.commons.collections4.MultiValuedMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8976" source="org.apache.commons.collections4.MultiMapUtilsTest.testEmptyIfNull()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8977" source="org.apache.commons.collections4.MultiMapUtilsTest.testEmptyIfNull()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8978" source="org.apache.commons.collections4.MultiMapUtilsTest.testEmptyUnmodifiableMultiValuedMap()" target="org.apache.commons.collections4.MultiValuedMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8979" source="org.apache.commons.collections4.MultiMapUtilsTest.testEmptyUnmodifiableMultiValuedMap()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8980" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetBag()" target="org.apache.commons.collections4.MultiMapUtils.getBag(org.apache.commons.collections4.MultiValuedMap,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8981" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetBag()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8982" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetBag()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8983" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetBag()" target="org.apache.commons.collections4.Bag.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8984" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetBag()" target="org.apache.commons.collections4.Bag.getCount(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8985" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetCollection()" target="org.apache.commons.collections4.MultiMapUtils.getCollection(org.apache.commons.collections4.MultiValuedMap,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8986" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetCollection()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8987" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetCollection()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8988" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetList()" target="org.apache.commons.collections4.MultiMapUtils.getList(org.apache.commons.collections4.MultiValuedMap,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8989" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetList()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8990" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetList()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8991" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetSet()" target="org.apache.commons.collections4.MultiMapUtils.getList(org.apache.commons.collections4.MultiValuedMap,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8992" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetSet()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8993" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetSet()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8994" source="org.apache.commons.collections4.MultiMapUtilsTest.testGetSet()" target="org.apache.commons.collections4.MultiMapUtils.getSet(org.apache.commons.collections4.MultiValuedMap,K)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8995" source="org.apache.commons.collections4.MultiMapUtilsTest.testIsEmptyWithEmptyMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8996" source="org.apache.commons.collections4.MultiMapUtilsTest.testIsEmptyWithEmptyMap()" target="org.apache.commons.collections4.MultiMapUtils.isEmpty(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8997" source="org.apache.commons.collections4.MultiMapUtilsTest.testIsEmptyWithNonEmptyMap()" target="org.apache.commons.collections4.multimap.MultiValuedHashMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8998" source="org.apache.commons.collections4.MultiMapUtilsTest.testIsEmptyWithNonEmptyMap()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8999" source="org.apache.commons.collections4.MultiMapUtilsTest.testIsEmptyWithNonEmptyMap()" target="org.apache.commons.collections4.MultiMapUtils.isEmpty(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9000" source="org.apache.commons.collections4.MultiMapUtilsTest.testIsEmptyWithNull()" target="org.apache.commons.collections4.MultiMapUtils.isEmpty(org.apache.commons.collections4.MultiValuedMap)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9001" source="org.apache.commons.collections4.MultiMapUtilsTest.testTypeSafeEmptyMultiValuedMap()" target="org.apache.commons.collections4.MultiMapUtils.emptyMultiValuedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9002" source="org.apache.commons.collections4.MultiMapUtilsTest.testTypeSafeEmptyMultiValuedMap()" target="org.apache.commons.collections4.MultiValuedMap.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9003" source="org.apache.commons.collections4.MultiMapUtilsTest.testTypeSafeEmptyMultiValuedMap()" target="org.apache.commons.collections4.MultiValuedMap.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9004" source="org.apache.commons.collections4.PredicateUtils.allPredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9005" source="org.apache.commons.collections4.PredicateUtils.allPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9006" source="org.apache.commons.collections4.PredicateUtils.andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.AndPredicate.andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9007" source="org.apache.commons.collections4.PredicateUtils.anyPredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9008" source="org.apache.commons.collections4.PredicateUtils.anyPredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9009" source="org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9010" source="org.apache.commons.collections4.PredicateUtils.eitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.PredicateUtils.onePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9011" source="org.apache.commons.collections4.PredicateUtils.equalPredicate(T)" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9012" source="org.apache.commons.collections4.PredicateUtils.exceptionPredicate()" target="org.apache.commons.collections4.functors.ExceptionPredicate.exceptionPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9013" source="org.apache.commons.collections4.PredicateUtils.falsePredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9014" source="org.apache.commons.collections4.PredicateUtils.identityPredicate(T)" target="org.apache.commons.collections4.functors.IdentityPredicate.identityPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9015" source="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String)" target="org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9016" source="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String)" target="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9017" source="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9018" source="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9019" source="org.apache.commons.collections4.PredicateUtils.neitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.PredicateUtils.nonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9020" source="org.apache.commons.collections4.PredicateUtils.nonePredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9021" source="org.apache.commons.collections4.PredicateUtils.nonePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9022" source="org.apache.commons.collections4.PredicateUtils.notNullPredicate()" target="org.apache.commons.collections4.functors.NotNullPredicate.notNullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9023" source="org.apache.commons.collections4.PredicateUtils.notPredicate(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9024" source="org.apache.commons.collections4.PredicateUtils.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9025" source="org.apache.commons.collections4.PredicateUtils.nullIsFalsePredicate(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9026" source="org.apache.commons.collections4.PredicateUtils.nullIsTruePredicate(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9027" source="org.apache.commons.collections4.PredicateUtils.nullPredicate()" target="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9028" source="org.apache.commons.collections4.PredicateUtils.onePredicate(java.util.Collection)" target="org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9029" source="org.apache.commons.collections4.PredicateUtils.onePredicate(org.apache.commons.collections4.Predicate[])" target="org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9030" source="org.apache.commons.collections4.PredicateUtils.orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.OrPredicate.orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9031" source="org.apache.commons.collections4.PredicateUtils.transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.TransformedPredicate.transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9032" source="org.apache.commons.collections4.PredicateUtils.truePredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9033" source="org.apache.commons.collections4.PredicateUtils.uniquePredicate()" target="org.apache.commons.collections4.functors.UniquePredicate.uniquePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9034" source="org.apache.commons.collections4.PredicateUtils.instanceofPredicate(java.lang.Class)" target="org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9035" source="org.apache.commons.collections4.PredicateUtilsTest()" target="org.apache.commons.collections4.functors.AbstractPredicateTest()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9036" source="org.apache.commons.collections4.PredicateUtilsTest.generatePredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9037" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9038" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9039" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9040" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9041" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9042" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9043" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9044" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9045" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9046" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9047" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9048" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9049" source="org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6()" target="org.apache.commons.collections4.functors.AllPredicate.allPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9050" source="org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate()" target="org.apache.commons.collections4.PredicateUtils.andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9051" source="org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9052" source="org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9053" source="org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9054" source="org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx()" target="org.apache.commons.collections4.PredicateUtils.andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9055" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9056" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate()" target="org.apache.commons.collections4.PredicateUtils.anyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9057" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9058" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9059" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9060" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate()" target="org.apache.commons.collections4.PredicateUtils.anyPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9061" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9062" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1()" target="org.apache.commons.collections4.PredicateUtils.anyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9063" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2()" target="org.apache.commons.collections4.PredicateUtils.anyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9064" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3()" target="org.apache.commons.collections4.PredicateUtils.anyPredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9065" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4()" target="org.apache.commons.collections4.PredicateUtils.anyPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9066" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5()" target="org.apache.commons.collections4.PredicateUtils.anyPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9067" source="org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6()" target="org.apache.commons.collections4.PredicateUtils.anyPredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9068" source="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer()" target="org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9069" source="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9070" source="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9071" source="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1()" target="org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9072" source="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2()" target="org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9073" source="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9074" source="org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9075" source="org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate()" target="org.apache.commons.collections4.PredicateUtils.eitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9076" source="org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9077" source="org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9078" source="org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9079" source="org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx()" target="org.apache.commons.collections4.PredicateUtils.eitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9080" source="org.apache.commons.collections4.PredicateUtilsTest.testExceptionPredicate()" target="org.apache.commons.collections4.PredicateUtils.exceptionPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9081" source="org.apache.commons.collections4.PredicateUtilsTest.testExceptionPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9082" source="org.apache.commons.collections4.PredicateUtilsTest.testFalsePredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9083" source="org.apache.commons.collections4.PredicateUtilsTest.testFalsePredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9084" source="org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate()" target="org.apache.commons.collections4.functors.NullPredicate.nullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9085" source="org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate()" target="org.apache.commons.collections4.PredicateUtils.identityPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9086" source="org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9087" source="org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate()" target="org.apache.commons.collections4.PredicateUtils.instanceofPredicate(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9088" source="org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9089" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate()" target="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9090" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9091" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2()" target="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9092" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9093" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1()" target="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9094" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2()" target="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9095" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9096" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3()" target="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9097" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9098" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1()" target="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9099" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2()" target="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9100" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9101" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3()" target="org.apache.commons.collections4.PredicateUtils.invokerPredicate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9102" source="org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9103" source="org.apache.commons.collections4.PredicateUtilsTest.testIsNotNullPredicate()" target="org.apache.commons.collections4.PredicateUtils.notNullPredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9104" source="org.apache.commons.collections4.PredicateUtilsTest.testIsNotNullPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9105" source="org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate()" target="org.apache.commons.collections4.PredicateUtils.neitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9106" source="org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9107" source="org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9108" source="org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9109" source="org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx()" target="org.apache.commons.collections4.PredicateUtils.neitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9110" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9111" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate()" target="org.apache.commons.collections4.PredicateUtils.nonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9112" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9113" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9114" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9115" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate()" target="org.apache.commons.collections4.PredicateUtils.nonePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9116" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9117" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1()" target="org.apache.commons.collections4.PredicateUtils.nonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9118" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2()" target="org.apache.commons.collections4.PredicateUtils.nonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9119" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3()" target="org.apache.commons.collections4.PredicateUtils.nonePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9120" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4()" target="org.apache.commons.collections4.PredicateUtils.nonePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9121" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5()" target="org.apache.commons.collections4.PredicateUtils.nonePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9122" source="org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6()" target="org.apache.commons.collections4.PredicateUtils.nonePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9123" source="org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate()" target="org.apache.commons.collections4.PredicateUtils.notPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9124" source="org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9125" source="org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9126" source="org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx()" target="org.apache.commons.collections4.PredicateUtils.notPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9127" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate()" target="org.apache.commons.collections4.PredicateUtils.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9128" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9129" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9130" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1()" target="org.apache.commons.collections4.PredicateUtils.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9131" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate()" target="org.apache.commons.collections4.PredicateUtils.nullIsFalsePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9132" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9133" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9134" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9135" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1()" target="org.apache.commons.collections4.PredicateUtils.nullIsFalsePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9136" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate()" target="org.apache.commons.collections4.PredicateUtils.nullIsTruePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9137" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9138" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9139" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9140" source="org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1()" target="org.apache.commons.collections4.PredicateUtils.nullIsTruePredicate(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9141" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertFalse(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9142" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate()" target="org.apache.commons.collections4.PredicateUtils.onePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9143" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9144" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9145" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9146" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate()" target="org.apache.commons.collections4.PredicateUtils.onePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9147" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate()" target="org.apache.commons.collections4.functors.AbstractPredicateTest.assertTrue(org.apache.commons.collections4.Predicate,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9148" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1()" target="org.apache.commons.collections4.PredicateUtils.onePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9149" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2()" target="org.apache.commons.collections4.PredicateUtils.onePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9150" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3()" target="org.apache.commons.collections4.PredicateUtils.onePredicate(org.apache.commons.collections4.Predicate[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9151" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4()" target="org.apache.commons.collections4.PredicateUtils.onePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9152" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5()" target="org.apache.commons.collections4.PredicateUtils.onePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9153" source="org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6()" target="org.apache.commons.collections4.PredicateUtils.onePredicate(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9154" source="org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate()" target="org.apache.commons.collections4.PredicateUtils.orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9155" source="org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9156" source="org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9157" source="org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9158" source="org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx()" target="org.apache.commons.collections4.PredicateUtils.orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9159" source="org.apache.commons.collections4.PredicateUtilsTest.testSingletonPatternInSerialization()" target="org.apache.commons.collections4.TestUtils.assertSameAfterSerialization(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9160" source="org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate()" target="org.apache.commons.collections4.PredicateUtils.transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9161" source="org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9162" source="org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9163" source="org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9164" source="org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate()" target="org.apache.commons.collections4.TransformerUtils.mapTransformer(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9165" source="org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9166" source="org.apache.commons.collections4.PredicateUtilsTest.testTruePredicate()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9167" source="org.apache.commons.collections4.PredicateUtilsTest.testTruePredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9168" source="org.apache.commons.collections4.PredicateUtilsTest.testUniquePredicate()" target="org.apache.commons.collections4.PredicateUtils.uniquePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9169" source="org.apache.commons.collections4.PredicateUtilsTest.testUniquePredicate()" target="org.apache.commons.collections4.Predicate.evaluate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9170" source="org.apache.commons.collections4.QueueUtils#EMPTY_QUEUE" target="org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9171" source="org.apache.commons.collections4.QueueUtils.predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9172" source="org.apache.commons.collections4.QueueUtils.transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9173" source="org.apache.commons.collections4.QueueUtils.unmodifiableQueue(java.util.Queue)" target="org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9174" source="org.apache.commons.collections4.QueueUtilsTest#truePredicate" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9175" source="org.apache.commons.collections4.QueueUtilsTest#nopTransformer" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9176" source="org.apache.commons.collections4.QueueUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9177" source="org.apache.commons.collections4.QueueUtilsTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9178" source="org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue()" target="org.apache.commons.collections4.QueueUtils.emptyQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9179" source="org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue()" target="org.apache.commons.collections4.QueueUtils.predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9180" source="org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue()" target="org.apache.commons.collections4.QueueUtils.transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9181" source="org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue()" target="org.apache.commons.collections4.QueueUtils.unmodifiableQueue(java.util.Queue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9182" source="org.apache.commons.collections4.SetUtils#EMPTY_SORTED_SET" target="org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9183" source="org.apache.commons.collections4.SetUtils.orderedSet(java.util.Set)" target="org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9184" source="org.apache.commons.collections4.SetUtils.predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.set.PredicatedSet.predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9185" source="org.apache.commons.collections4.SetUtils.transformedSet(java.util.Set,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.set.TransformedSet.transformingSet(java.util.Set,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9186" source="org.apache.commons.collections4.SetUtils.unmodifiableSet(java.util.Set)" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9187" source="org.apache.commons.collections4.SetUtils.predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9188" source="org.apache.commons.collections4.SetUtils.transformedSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(java.util.SortedSet,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9189" source="org.apache.commons.collections4.SetUtils.unmodifiableSortedSet(java.util.SortedSet)" target="org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(java.util.SortedSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9190" source="org.apache.commons.collections4.SetUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9191" source="org.apache.commons.collections4.SetUtilsTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9192" source="org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull()" target="org.apache.commons.collections4.SetUtils.emptyIfNull(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9193" source="org.apache.commons.collections4.SetUtilsTest.testEquals()" target="org.apache.commons.collections4.SetUtils.isEqualSet(java.util.Collection,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9194" source="org.apache.commons.collections4.SetUtilsTest.testHashCode()" target="org.apache.commons.collections4.SetUtils.hashCodeForSet(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9195" source="org.apache.commons.collections4.SetUtilsTest.testpredicatedSet()" target="org.apache.commons.collections4.SetUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9196" source="org.apache.commons.collections4.SetUtilsTest.testpredicatedSet()" target="org.apache.commons.collections4.SetUtils.predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9197" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.get(java.lang.Object)" target="org.apache.commons.collections4.Get.get(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9198" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.remove(java.lang.Object)" target="org.apache.commons.collections4.Get.remove(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9199" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.containsKey(java.lang.Object)" target="org.apache.commons.collections4.Get.containsKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9200" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.containsValue(java.lang.Object)" target="org.apache.commons.collections4.Get.containsValue(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9201" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.isEmpty()" target="org.apache.commons.collections4.Get.isEmpty()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9202" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.size()" target="org.apache.commons.collections4.Get.size()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9203" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.values()" target="org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9204" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.values()" target="org.apache.commons.collections4.Get.values()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9205" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.entrySet()" target="org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9206" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.entrySet()" target="org.apache.commons.collections4.Get.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9207" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.keySet()" target="org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9208" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.keySet()" target="org.apache.commons.collections4.Get.keySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9209" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.mapIterator()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9210" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.mapIterator()" target="org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter(java.util.Set)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9211" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.mapIterator()" target="org.apache.commons.collections4.Get.entrySet()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9212" source="org.apache.commons.collections4.SplitMapUtils$WrappedGet.mapIterator()" target="org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9213" source="org.apache.commons.collections4.SplitMapUtils$WrappedPut.put(K,V)" target="org.apache.commons.collections4.Put.put(K,V)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9214" source="org.apache.commons.collections4.SplitMapUtils$WrappedPut.clear()" target="org.apache.commons.collections4.Put.clear()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9215" source="org.apache.commons.collections4.SplitMapUtils$WrappedPut.putAll(java.util.Map)" target="org.apache.commons.collections4.Put.putAll(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9216" source="org.apache.commons.collections4.SplitMapUtils.writableMap(org.apache.commons.collections4.Put)" target="org.apache.commons.collections4.SplitMapUtils$WrappedPut(org.apache.commons.collections4.Put)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9217" source="org.apache.commons.collections4.SplitMapUtils.readableMap(org.apache.commons.collections4.Get)" target="org.apache.commons.collections4.MapUtils.iterableMap(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9218" source="org.apache.commons.collections4.SplitMapUtils.readableMap(org.apache.commons.collections4.Get)" target="org.apache.commons.collections4.SplitMapUtils$WrappedGet(org.apache.commons.collections4.Get)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9219" source="org.apache.commons.collections4.SplitMapUtilsTest#stringToInt" target="org.apache.commons.collections4.SplitMapUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9220" source="org.apache.commons.collections4.SplitMapUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9221" source="org.apache.commons.collections4.SplitMapUtilsTest.attemptGetOperation(java.lang.Runnable)" target="org.apache.commons.collections4.SplitMapUtilsTest.attemptMapOperation(java.lang.String,java.lang.Runnable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9222" source="org.apache.commons.collections4.SplitMapUtilsTest.attemptPutOperation(java.lang.Runnable)" target="org.apache.commons.collections4.SplitMapUtilsTest.attemptMapOperation(java.lang.String,java.lang.Runnable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9223" source="org.apache.commons.collections4.SplitMapUtilsTest.setUp()" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.transformingMap(java.util.Map,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9224" source="org.apache.commons.collections4.SplitMapUtilsTest.setUp()" target="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9225" source="org.apache.commons.collections4.SplitMapUtilsTest.setUp()" target="org.apache.commons.collections4.splitmap.TransformedSplitMap.put(J,U)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9226" source="org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap()" target="org.apache.commons.collections4.map.HashedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9227" source="org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap()" target="org.apache.commons.collections4.SplitMapUtils.readableMap(org.apache.commons.collections4.Get)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9228" source="org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap()" target="org.apache.commons.collections4.map.HashedMap()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9229" source="org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap()" target="org.apache.commons.collections4.SplitMapUtils.writableMap(org.apache.commons.collections4.Put)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9230" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.SplitMapUtils.readableMap(org.apache.commons.collections4.Get)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9231" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.IterableGet.mapIterator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9232" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.MapIterator.hasNext()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9233" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.MapIterator.next()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9234" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.MapIterator.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9235" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.MapIterator.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9236" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest.attemptPutOperation(java.lang.Runnable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9237" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9238" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9239" source="org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9240" source="org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap()" target="org.apache.commons.collections4.SplitMapUtils.writableMap(org.apache.commons.collections4.Put)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9241" source="org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest.attemptGetOperation(java.lang.Runnable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9242" source="org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest$5()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9243" source="org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest$6()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9244" source="org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest$7()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9245" source="org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest$8()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9246" source="org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest$9()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9247" source="org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap()" target="org.apache.commons.collections4.SplitMapUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9248" source="org.apache.commons.collections4.TestUtils.assertSameAfterSerialization(java.lang.Object)" target="org.apache.commons.collections4.TestUtils.assertSameAfterSerialization(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9249" source="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Factory)" target="org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9250" source="org.apache.commons.collections4.TransformerUtils.constantTransformer(O)" target="org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9251" source="org.apache.commons.collections4.TransformerUtils.exceptionTransformer()" target="org.apache.commons.collections4.functors.ExceptionTransformer.exceptionTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9252" source="org.apache.commons.collections4.TransformerUtils.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.IfTransformer.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9253" source="org.apache.commons.collections4.TransformerUtils.invokerTransformer(java.lang.String)" target="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9254" source="org.apache.commons.collections4.TransformerUtils.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9255" source="org.apache.commons.collections4.TransformerUtils.mapTransformer(java.util.Map)" target="org.apache.commons.collections4.functors.MapTransformer.mapTransformer(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9256" source="org.apache.commons.collections4.TransformerUtils.nullTransformer()" target="org.apache.commons.collections4.functors.ConstantTransformer.nullTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9257" source="org.apache.commons.collections4.TransformerUtils.switchMapTransformer(java.util.Map)" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9258" source="org.apache.commons.collections4.TransformerUtils.switchMapTransformer(java.util.Map)" target="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9259" source="org.apache.commons.collections4.TransformerUtils.switchTransformer(java.util.Map)" target="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9260" source="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9261" source="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])" target="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9262" source="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9263" source="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Closure)" target="org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9264" source="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Predicate)" target="org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9265" source="org.apache.commons.collections4.TransformerUtils.chainedTransformer(java.util.Collection)" target="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9266" source="org.apache.commons.collections4.TransformerUtils.chainedTransformer(org.apache.commons.collections4.Transformer[])" target="org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9267" source="org.apache.commons.collections4.TransformerUtils.cloneTransformer()" target="org.apache.commons.collections4.functors.CloneTransformer.cloneTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9268" source="org.apache.commons.collections4.TransformerUtils.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)" target="org.apache.commons.collections4.functors.IfTransformer.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9269" source="org.apache.commons.collections4.TransformerUtils.instantiateTransformer()" target="org.apache.commons.collections4.functors.InstantiateTransformer.instantiateTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9270" source="org.apache.commons.collections4.TransformerUtils.instantiateTransformer(java.lang.Class[],java.lang.Object[])" target="org.apache.commons.collections4.functors.InstantiateTransformer.instantiateTransformer(java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9271" source="org.apache.commons.collections4.TransformerUtils.nopTransformer()" target="org.apache.commons.collections4.functors.NOPTransformer.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9272" source="org.apache.commons.collections4.TransformerUtils.stringValueTransformer()" target="org.apache.commons.collections4.functors.StringValueTransformer.stringValueTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9273" source="org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer()" target="org.apache.commons.collections4.TransformerUtils.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9274" source="org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer()" target="org.apache.commons.collections4.TransformerUtils.chainedTransformer(org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9275" source="org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9276" source="org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer()" target="org.apache.commons.collections4.TransformerUtils.chainedTransformer(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9277" source="org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer()" target="org.apache.commons.collections4.TransformerUtils.cloneTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9278" source="org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9279" source="org.apache.commons.collections4.TransformerUtilsTest.testConstantTransformer()" target="org.apache.commons.collections4.TransformerUtils.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9280" source="org.apache.commons.collections4.TransformerUtilsTest.testConstantTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9281" source="org.apache.commons.collections4.TransformerUtilsTest.testExceptionTransformer()" target="org.apache.commons.collections4.TransformerUtils.exceptionTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9282" source="org.apache.commons.collections4.TransformerUtilsTest.testExceptionTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9283" source="org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer()" target="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Closure)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9284" source="org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer()" target="org.apache.commons.collections4.ClosureUtils.nopClosure()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9285" source="org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9286" source="org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer()" target="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Factory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9287" source="org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer()" target="org.apache.commons.collections4.FactoryUtils.nullFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9288" source="org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9289" source="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()" target="org.apache.commons.collections4.TransformerUtils.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9290" source="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()" target="org.apache.commons.collections4.TransformerUtils.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9291" source="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9292" source="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9293" source="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9294" source="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()" target="org.apache.commons.collections4.TransformerUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9295" source="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9296" source="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()" target="org.apache.commons.collections4.TransformerUtils.ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9297" source="org.apache.commons.collections4.TransformerUtilsTest.testIfTransformer()" target="org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9298" source="org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull()" target="org.apache.commons.collections4.TransformerUtils.instantiateTransformer(java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9299" source="org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9300" source="org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull()" target="org.apache.commons.collections4.TransformerUtils.instantiateTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9301" source="org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer()" target="org.apache.commons.collections4.TransformerUtils.invokerTransformer(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9302" source="org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9303" source="org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2()" target="org.apache.commons.collections4.TransformerUtils.invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9304" source="org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9305" source="org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer()" target="org.apache.commons.collections4.TransformerUtils.mapTransformer(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9306" source="org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9307" source="org.apache.commons.collections4.TransformerUtilsTest.testNopTransformer()" target="org.apache.commons.collections4.TransformerUtils.nullTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9308" source="org.apache.commons.collections4.TransformerUtilsTest.testNopTransformer()" target="org.apache.commons.collections4.TransformerUtils.nopTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9309" source="org.apache.commons.collections4.TransformerUtilsTest.testNopTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9310" source="org.apache.commons.collections4.TransformerUtilsTest.testNullTransformer()" target="org.apache.commons.collections4.TransformerUtils.nullTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9311" source="org.apache.commons.collections4.TransformerUtilsTest.testNullTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9312" source="org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer()" target="org.apache.commons.collections4.TransformerUtils.asTransformer(org.apache.commons.collections4.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9313" source="org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9314" source="org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9315" source="org.apache.commons.collections4.TransformerUtilsTest.testSingletonPatternInSerialization()" target="org.apache.commons.collections4.functors.StringValueTransformer.stringValueTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9316" source="org.apache.commons.collections4.TransformerUtilsTest.testSingletonPatternInSerialization()" target="org.apache.commons.collections4.TestUtils.assertSameAfterSerialization(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9317" source="org.apache.commons.collections4.TransformerUtilsTest.testStringValueTransformer()" target="org.apache.commons.collections4.TransformerUtils.stringValueTransformer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9318" source="org.apache.commons.collections4.TransformerUtilsTest.testStringValueTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9319" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer()" target="org.apache.commons.collections4.TransformerUtils.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9320" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer()" target="org.apache.commons.collections4.TransformerUtils.switchMapTransformer(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9321" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9322" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()" target="org.apache.commons.collections4.TransformerUtils.constantTransformer(O)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9323" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()" target="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9324" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()" target="org.apache.commons.collections4.functors.TruePredicate.truePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9325" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()" target="org.apache.commons.collections4.Transformer.transform(I)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9326" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()" target="org.apache.commons.collections4.functors.FalsePredicate.falsePredicate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9327" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()" target="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9328" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()" target="org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9329" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()" target="org.apache.commons.collections4.TransformerUtils.switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9330" source="org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer()" target="org.apache.commons.collections4.TransformerUtils.switchTransformer(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9331" source="org.apache.commons.collections4.TrieUtils.unmodifiableTrie(org.apache.commons.collections4.Trie)" target="org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9332" source="org.apache.commons.collections4.TrieUtilsTest(java.lang.String)" target="org.apache.commons.collections4.BulkTest(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9333" source="org.apache.commons.collections4.TrieUtilsTest.suite()" target="org.apache.commons.collections4.BulkTest.makeSuite(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9334" source="org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie()" target="org.apache.commons.collections4.TrieUtils.unmodifiableTrie(org.apache.commons.collections4.Trie)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9335" source="org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie()" target="org.apache.commons.collections4.trie.PatriciaTrie()">
      <data key="type">METHOD_CALL</data>
    </edge>
  </graph>
</graphml>
