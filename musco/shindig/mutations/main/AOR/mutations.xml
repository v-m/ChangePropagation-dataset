<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="AOR" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="477713">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_569" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.isJSONP(javax.servlet.http.HttpServletRequest)" from="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" to="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; - (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" />
    <mutant id="mutant_565" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.isJSONP(javax.servlet.http.HttpServletRequest)" from="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" to="HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()" />
    <mutant id="mutant_566" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.isJSONP(javax.servlet.http.HttpServletRequest)" from="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" to="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; * (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" />
    <mutant id="mutant_567" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.isJSONP(javax.servlet.http.HttpServletRequest)" from="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" to="&quot;Wrong format for parameter \'callback\' specified. Must match: &quot;" />
    <mutant id="mutant_568" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.isJSONP(javax.servlet.http.HttpServletRequest)" from="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" to="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; % (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" />
    <mutant id="mutant_561" viable="false" in="?" from="((60 * 60) * 24) * 365" to="((60 * 60) * 24) - 365" />
    <mutant id="mutant_562" viable="false" in="?" from="((60 * 60) * 24) * 365" to="((60 * 60) * 24) / 365" />
    <mutant id="mutant_563" viable="false" in="?" from="((60 * 60) * 24) * 365" to="((60 * 60) * 24) + 365" />
    <mutant id="mutant_564" viable="false" in="?" from="((60 * 60) * 24) * 365" to="((60 * 60) * 24) % 365" />
    <mutant id="mutant_560" viable="false" in="?" from="((60 * 60) * 24) * 365" to="(60 * 60) * 24" />
    <mutant id="mutant_576" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(1000L * ttl)" to="ttl" />
    <mutant id="mutant_577" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl))" to="((HttpUtil.timeSource.currentTimeMillis()) * (1000L * ttl))" />
    <mutant id="mutant_578" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl))" to="((HttpUtil.timeSource.currentTimeMillis()) % (1000L * ttl))" />
    <mutant id="mutant_579" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl))" to="HttpUtil.timeSource.currentTimeMillis()" />
    <mutant id="mutant_572" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(1000L * ttl)" to="1000L" />
    <mutant id="mutant_573" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(1000L * ttl)" to="(1000L - ttl)" />
    <mutant id="mutant_574" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(1000L * ttl)" to="(1000L / ttl)" />
    <mutant id="mutant_575" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(1000L * ttl)" to="(1000L + ttl)" />
    <mutant id="mutant_570" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.isJSONP(javax.servlet.http.HttpServletRequest)" from="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" to="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; / (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" />
    <mutant id="mutant_571" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(1000L * ttl)" to="(1000L % ttl)" />
    <mutant id="mutant_107" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Unknown container &quot; + token)" to="(&quot;Unknown container &quot; - token)" />
    <mutant id="mutant_108" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Unknown container &quot; + token)" to="(&quot;Unknown container &quot; % token)" />
    <mutant id="mutant_109" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Unknown container &quot; + token)" to="(&quot;Unknown container &quot; / token)" />
    <mutant id="mutant_103" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Invalid security token &quot; + token)" to="token" />
    <mutant id="mutant_587" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;private,max-age=&quot; + (Integer.toString(ttl)))" to="(&quot;private,max-age=&quot; % (Integer.toString(ttl)))" />
    <mutant id="mutant_104" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Invalid security token &quot; + token)" to="(&quot;Invalid security token &quot; / token)" />
    <mutant id="mutant_588" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;private,max-age=&quot; + (Integer.toString(ttl)))" to="(&quot;private,max-age=&quot; * (Integer.toString(ttl)))" />
    <mutant id="mutant_105" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Invalid security token &quot; + token)" to="(&quot;Invalid security token &quot; * token)" />
    <mutant id="mutant_589" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;public,max-age=&quot; + (Integer.toString(ttl)))" to="(&quot;public,max-age=&quot; / (Integer.toString(ttl)))" />
    <mutant id="mutant_106" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Invalid security token &quot; + token)" to="(&quot;Invalid security token &quot; % token)" />
    <mutant id="mutant_1298" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; % result)" />
    <mutant id="mutant_1299" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; / result)" />
    <mutant id="mutant_1296" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="(name.substring(3, 4).toLowerCase()) + (name.substring(4))" to="(name.substring(3, 4).toLowerCase()) - (name.substring(4))" />
    <mutant id="mutant_1297" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; * result)" />
    <mutant id="mutant_1294" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="(name.substring(3, 4).toLowerCase()) + (name.substring(4))" to="name.substring(3, 4).toLowerCase()" />
    <mutant id="mutant_1295" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="(name.substring(3, 4).toLowerCase()) + (name.substring(4))" to="name.substring(4)" />
    <mutant id="mutant_583" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;private,max-age=&quot; + (Integer.toString(ttl)))" to="&quot;private,max-age=&quot;" />
    <mutant id="mutant_100" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))" to="crypter.wrap(aToken.toMap())" />
    <mutant id="mutant_584" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;private,max-age=&quot; + (Integer.toString(ttl)))" to="(&quot;private,max-age=&quot; - (Integer.toString(ttl)))" />
    <mutant id="mutant_101" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Invalid security token &quot; + token)" to="&quot;Invalid security token &quot;" />
    <mutant id="mutant_585" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;private,max-age=&quot; + (Integer.toString(ttl)))" to="Integer.toString(ttl)" />
    <mutant id="mutant_102" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Invalid security token &quot; + token)" to="(&quot;Invalid security token &quot; - token)" />
    <mutant id="mutant_586" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;private,max-age=&quot; + (Integer.toString(ttl)))" to="(&quot;private,max-age=&quot; / (Integer.toString(ttl)))" />
    <mutant id="mutant_580" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl))" to="((HttpUtil.timeSource.currentTimeMillis()) / (1000L * ttl))" />
    <mutant id="mutant_581" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl))" to="(1000L * ttl)" />
    <mutant id="mutant_582" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl))" to="((HttpUtil.timeSource.currentTimeMillis()) - (1000L * ttl))" />
    <mutant id="mutant_118" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.containersChanged(org.apache.shindig.config.ContainerConfig,java.util.Collection,java.util.Collection)" from="(&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;)" to="&quot;There was an error loading an updated container configuration. &quot;" />
    <mutant id="mutant_119" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" to="(&quot;Unknown security token type specified in &quot; - (ContainerConfig.DEFAULT_CONTAINER))" />
    <mutant id="mutant_114" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.containersChanged(org.apache.shindig.config.ContainerConfig,java.util.Collection,java.util.Collection)" from="(&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;)" to="&quot;Keeping old configuration.&quot;" />
    <mutant id="mutant_598" viable="true" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(GuiceServletContextListener.class.getName())" />
    <mutant id="mutant_115" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.containersChanged(org.apache.shindig.config.ContainerConfig,java.util.Collection,java.util.Collection)" from="(&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;)" to="(&quot;There was an error loading an updated container configuration. &quot; - &quot;Keeping old configuration.&quot;)" />
    <mutant id="mutant_599" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(&quot;Guice Injector not found! Make sure you registered &quot; * (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_116" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.containersChanged(org.apache.shindig.config.ContainerConfig,java.util.Collection,java.util.Collection)" from="(&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;)" to="(&quot;There was an error loading an updated container configuration. &quot; % &quot;Keeping old configuration.&quot;)" />
    <mutant id="mutant_117" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.containersChanged(org.apache.shindig.config.ContainerConfig,java.util.Collection,java.util.Collection)" from="(&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;)" to="(&quot;There was an error loading an updated container configuration. &quot; * &quot;Keeping old configuration.&quot;)" />
    <mutant id="mutant_1292" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="(name.substring(3, 4).toLowerCase()) + (name.substring(4))" to="(name.substring(3, 4).toLowerCase()) % (name.substring(4))" />
    <mutant id="mutant_1293" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="(name.substring(3, 4).toLowerCase()) + (name.substring(4))" to="(name.substring(3, 4).toLowerCase()) / (name.substring(4))" />
    <mutant id="mutant_1290" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName()))" to="(((&quot;No enum value &quot; + value) + &quot; in &quot;) - (type.getName()))" />
    <mutant id="mutant_1291" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="(name.substring(3, 4).toLowerCase()) + (name.substring(4))" to="(name.substring(3, 4).toLowerCase()) * (name.substring(4))" />
    <mutant id="mutant_1289" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName()))" to="((&quot;No enum value &quot; + value) + &quot; in &quot;)" />
    <mutant id="mutant_1287" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName()))" to="type.getName()" />
    <mutant id="mutant_1288" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName()))" to="(((&quot;No enum value &quot; + value) + &quot; in &quot;) * (type.getName()))" />
    <mutant id="mutant_1285" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName()))" to="(((&quot;No enum value &quot; + value) + &quot; in &quot;) / (type.getName()))" />
    <mutant id="mutant_1286" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName()))" to="(((&quot;No enum value &quot; + value) + &quot; in &quot;) % (type.getName()))" />
    <mutant id="mutant_1283" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="((&quot;No enum value &quot; + value) + &quot; in &quot;)" to="((&quot;No enum value &quot; + value) / &quot; in &quot;)" />
    <mutant id="mutant_1284" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="((&quot;No enum value &quot; + value) + &quot; in &quot;)" to="((&quot;No enum value &quot; + value) - &quot; in &quot;)" />
    <mutant id="mutant_110" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Unknown container &quot; + token)" to="&quot;Unknown container &quot;" />
    <mutant id="mutant_594" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;public,max-age=&quot; + (Integer.toString(ttl)))" to="&quot;public,max-age=&quot;" />
    <mutant id="mutant_111" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Unknown container &quot; + token)" to="token" />
    <mutant id="mutant_595" viable="true" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="&quot;Guice Injector not found! Make sure you registered &quot;" />
    <mutant id="mutant_112" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Unknown container &quot; + token)" to="(&quot;Unknown container &quot; * token)" />
    <mutant id="mutant_596" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(&quot;Guice Injector not found! Make sure you registered &quot; % (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_113" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.containersChanged(org.apache.shindig.config.ContainerConfig,java.util.Collection,java.util.Collection)" from="(&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;)" to="(&quot;There was an error loading an updated container configuration. &quot; / &quot;Keeping old configuration.&quot;)" />
    <mutant id="mutant_597" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(&quot;Guice Injector not found! Make sure you registered &quot; / (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_590" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;public,max-age=&quot; + (Integer.toString(ttl)))" to="(&quot;public,max-age=&quot; % (Integer.toString(ttl)))" />
    <mutant id="mutant_591" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;public,max-age=&quot; + (Integer.toString(ttl)))" to="(&quot;public,max-age=&quot; * (Integer.toString(ttl)))" />
    <mutant id="mutant_592" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;public,max-age=&quot; + (Integer.toString(ttl)))" to="Integer.toString(ttl)" />
    <mutant id="mutant_593" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;public,max-age=&quot; + (Integer.toString(ttl)))" to="(&quot;public,max-age=&quot; - (Integer.toString(ttl)))" />
    <mutant id="mutant_129" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" to="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) / &quot; container configuration. &quot;)" />
    <mutant id="mutant_125" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" to="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) * &quot; container configuration. &quot;)" />
    <mutant id="mutant_126" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" to="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) - &quot; container configuration. &quot;)" />
    <mutant id="mutant_127" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" to="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) % &quot; container configuration. &quot;)" />
    <mutant id="mutant_128" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" to="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" />
    <mutant id="mutant_121" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" to="(&quot;Unknown security token type specified in &quot; % (ContainerConfig.DEFAULT_CONTAINER))" />
    <mutant id="mutant_122" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" to="(&quot;Unknown security token type specified in &quot; / (ContainerConfig.DEFAULT_CONTAINER))" />
    <mutant id="mutant_123" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" to="(&quot;Unknown security token type specified in &quot; * (ContainerConfig.DEFAULT_CONTAINER))" />
    <mutant id="mutant_124" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" to="(ContainerConfig.DEFAULT_CONTAINER)" />
    <mutant id="mutant_120" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" to="&quot;Unknown security token type specified in &quot;" />
    <mutant id="mutant_136" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" to="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) - (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" />
    <mutant id="mutant_137" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" to="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) % &quot;: &quot;)" />
    <mutant id="mutant_138" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" to="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) * &quot;: &quot;)" />
    <mutant id="mutant_139" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" to="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) - &quot;: &quot;)" />
    <mutant id="mutant_132" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" to="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) * (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" />
    <mutant id="mutant_133" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" to="(DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)" />
    <mutant id="mutant_134" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" to="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) % (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" />
    <mutant id="mutant_135" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" to="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" />
    <mutant id="mutant_130" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" to="&quot; container configuration. &quot;" />
    <mutant id="mutant_131" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" to="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) / (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" />
    <mutant id="mutant_147" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType)" to="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) - tokenType)" />
    <mutant id="mutant_148" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType)" to="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) * tokenType)" />
    <mutant id="mutant_149" viable="false" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getSecurityTokenFromRequest(javax.servlet.http.HttpServletRequest)" from="(&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" to="(&quot;Malformed security token &quot; / (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" />
    <mutant id="mutant_143" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType)" to="tokenType" />
    <mutant id="mutant_144" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType)" to="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) / tokenType)" />
    <mutant id="mutant_145" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType)" to="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" />
    <mutant id="mutant_146" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType)" to="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) % tokenType)" />
    <mutant id="mutant_140" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" to="&quot;: &quot;" />
    <mutant id="mutant_141" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" to="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" />
    <mutant id="mutant_142" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" to="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) / &quot;: &quot;)" />
    <mutant id="mutant_158" viable="false" in="org.apache.shindig.common.cache.ehcache.EhCacheCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="(&quot;Creating cache named &quot; % name)" />
    <mutant id="mutant_159" viable="false" in="org.apache.shindig.common.cache.ehcache.EhCacheCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="(&quot;Creating cache named &quot; / name)" />
    <mutant id="mutant_154" viable="false" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getSecurityTokenFromRequest(javax.servlet.http.HttpServletRequest)" from="(&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" to="(&quot;Malformed security token &quot; * (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" />
    <mutant id="mutant_155" viable="false" in="org.apache.shindig.common.cache.ehcache.EhCacheCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="(&quot;Creating cache named &quot; * name)" />
    <mutant id="mutant_156" viable="true" in="org.apache.shindig.common.cache.ehcache.EhCacheCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="&quot;Creating cache named &quot;" />
    <mutant id="mutant_157" viable="true" in="org.apache.shindig.common.cache.ehcache.EhCacheCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="name" />
    <mutant id="mutant_150" viable="false" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getSecurityTokenFromRequest(javax.servlet.http.HttpServletRequest)" from="(&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" to="(&quot;Malformed security token &quot; % (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" />
    <mutant id="mutant_151" viable="false" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getSecurityTokenFromRequest(javax.servlet.http.HttpServletRequest)" from="(&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" to="(&quot;Malformed security token &quot; - (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" />
    <mutant id="mutant_152" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getSecurityTokenFromRequest(javax.servlet.http.HttpServletRequest)" from="(&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" to="&quot;Malformed security token &quot;" />
    <mutant id="mutant_153" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getSecurityTokenFromRequest(javax.servlet.http.HttpServletRequest)" from="(&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" to="parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)" />
    <mutant id="mutant_169" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getCapacity()" from="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" to="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) % (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" />
    <mutant id="mutant_160" viable="false" in="org.apache.shindig.common.cache.ehcache.EhCacheCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="(&quot;Creating cache named &quot; - name)" />
    <mutant id="mutant_165" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache(java.lang.String,net.sf.ehcache.CacheManager)" from="(&quot;Failed to create Cache with name &quot; + cacheName)" to="cacheName" />
    <mutant id="mutant_166" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache(java.lang.String,net.sf.ehcache.CacheManager)" from="(&quot;Failed to create Cache with name &quot; + cacheName)" to="&quot;Failed to create Cache with name &quot;" />
    <mutant id="mutant_167" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getCapacity()" from="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" to="cache.getCacheConfiguration().getMaxEntriesLocalHeap()" />
    <mutant id="mutant_168" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getCapacity()" from="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" to="cache.getCacheConfiguration().getMaxEntriesLocalDisk()" />
    <mutant id="mutant_161" viable="false" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache(java.lang.String,net.sf.ehcache.CacheManager)" from="(&quot;Failed to create Cache with name &quot; + cacheName)" to="(&quot;Failed to create Cache with name &quot; % cacheName)" />
    <mutant id="mutant_162" viable="false" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache(java.lang.String,net.sf.ehcache.CacheManager)" from="(&quot;Failed to create Cache with name &quot; + cacheName)" to="(&quot;Failed to create Cache with name &quot; / cacheName)" />
    <mutant id="mutant_163" viable="false" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache(java.lang.String,net.sf.ehcache.CacheManager)" from="(&quot;Failed to create Cache with name &quot; + cacheName)" to="(&quot;Failed to create Cache with name &quot; * cacheName)" />
    <mutant id="mutant_164" viable="false" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache(java.lang.String,net.sf.ehcache.CacheManager)" from="(&quot;Failed to create Cache with name &quot; + cacheName)" to="(&quot;Failed to create Cache with name &quot; - cacheName)" />
    <mutant id="mutant_170" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getCapacity()" from="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" to="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) / (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" />
    <mutant id="mutant_171" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getCapacity()" from="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" to="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) - (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" />
    <mutant id="mutant_176" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getSize()" from="(cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())" to="cache.getMemoryStoreSize()" />
    <mutant id="mutant_177" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getSize()" from="(cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())" to="(cache.getMemoryStoreSize()) % (cache.getDiskStoreSize())" />
    <mutant id="mutant_178" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getSize()" from="(cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())" to="cache.getDiskStoreSize()" />
    <mutant id="mutant_179" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="(&quot;Creating cache named &quot; * name)" />
    <mutant id="mutant_172" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getCapacity()" from="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" to="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) * (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" />
    <mutant id="mutant_173" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getSize()" from="(cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())" to="(cache.getMemoryStoreSize()) * (cache.getDiskStoreSize())" />
    <mutant id="mutant_174" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getSize()" from="(cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())" to="(cache.getMemoryStoreSize()) / (cache.getDiskStoreSize())" />
    <mutant id="mutant_175" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getSize()" from="(cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())" to="(cache.getMemoryStoreSize()) - (cache.getDiskStoreSize())" />
    <mutant id="mutant_180" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="&quot;Creating cache named &quot;" />
    <mutant id="mutant_181" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="name" />
    <mutant id="mutant_182" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="(&quot;Creating cache named &quot; % name)" />
    <mutant id="mutant_187" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name)" to="&quot;shindig.cache.lru.&quot;" />
    <mutant id="mutant_188" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name)" to="(&quot;shindig.cache.lru.&quot; - name)" />
    <mutant id="mutant_189" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name)" to="(&quot;shindig.cache.lru.&quot; % name)" />
    <mutant id="mutant_183" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="(&quot;Creating cache named &quot; / name)" />
    <mutant id="mutant_184" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="(&quot;Creating cache named &quot; - name)" />
    <mutant id="mutant_185" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name)" to="(&quot;shindig.cache.lru.&quot; * name)" />
    <mutant id="mutant_186" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name)" to="name" />
    <mutant id="mutant_190" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name)" to="(&quot;shindig.cache.lru.&quot; / name)" />
    <mutant id="mutant_191" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;" to="(&quot;shindig.cache.lru.&quot; + name) / &quot;.capacity&quot;" />
    <mutant id="mutant_192" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;" to="&quot;.capacity&quot;" />
    <mutant id="mutant_193" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;" to="&quot;shindig.cache.lru.&quot; + name" />
    <mutant id="mutant_198" viable="true" in="org.apache.shindig.common.cache.SoftExpiringCache.addElement(K,V,long)" from="(now + maxAge)" to="(now % maxAge)" />
    <mutant id="mutant_199" viable="true" in="org.apache.shindig.common.cache.SoftExpiringCache.addElement(K,V,long)" from="(now + maxAge)" to="maxAge" />
    <mutant id="mutant_194" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;" to="(&quot;shindig.cache.lru.&quot; + name) - &quot;.capacity&quot;" />
    <mutant id="mutant_195" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;" to="(&quot;shindig.cache.lru.&quot; + name) * &quot;.capacity&quot;" />
    <mutant id="mutant_196" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;" to="(&quot;shindig.cache.lru.&quot; + name) % &quot;.capacity&quot;" />
    <mutant id="mutant_197" viable="true" in="org.apache.shindig.common.cache.SoftExpiringCache.addElement(K,V,long)" from="(now + maxAge)" to="now" />
    <mutant id="mutant_1719" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendJsonParseError(org.json.JSONException,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid JSON - &quot; + (e.getMessage()))" to="(&quot;Invalid JSON - &quot; % (e.getMessage()))" />
    <mutant id="mutant_1717" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendJsonParseError(org.json.JSONException,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid JSON - &quot; + (e.getMessage()))" to="(&quot;Invalid JSON - &quot; / (e.getMessage()))" />
    <mutant id="mutant_1718" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendJsonParseError(org.json.JSONException,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid JSON - &quot; + (e.getMessage()))" to="(&quot;Invalid JSON - &quot; * (e.getMessage()))" />
    <mutant id="mutant_1715" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.sendJsonParseError(org.json.JSONException,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid JSON - &quot; + (e.getMessage()))" to="&quot;Invalid JSON - &quot;" />
    <mutant id="mutant_1716" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.sendJsonParseError(org.json.JSONException,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid JSON - &quot; + (e.getMessage()))" to="e.getMessage()" />
    <mutant id="mutant_1713" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.sendBadRequest(java.lang.Throwable,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid input - &quot; + (t.getMessage()))" to="&quot;Invalid input - &quot;" />
    <mutant id="mutant_1714" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendBadRequest(java.lang.Throwable,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid input - &quot; + (t.getMessage()))" to="(&quot;Invalid input - &quot; - (t.getMessage()))" />
    <mutant id="mutant_1711" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendBadRequest(java.lang.Throwable,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid input - &quot; + (t.getMessage()))" to="(&quot;Invalid input - &quot; % (t.getMessage()))" />
    <mutant id="mutant_1712" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendBadRequest(java.lang.Throwable,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid input - &quot; + (t.getMessage()))" to="(&quot;Invalid input - &quot; / (t.getMessage()))" />
    <mutant id="mutant_1710" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.sendBadRequest(java.lang.Throwable,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid input - &quot; + (t.getMessage()))" to="t.getMessage()" />
    <mutant id="mutant_1708" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getErrorJson(org.apache.shindig.protocol.ResponseItem)" from="&quot;: &quot; + (responseItem.getErrorMessage())" to="&quot;: &quot;" />
    <mutant id="mutant_1709" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendBadRequest(java.lang.Throwable,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid input - &quot; + (t.getMessage()))" to="(&quot;Invalid input - &quot; * (t.getMessage()))" />
    <mutant id="mutant_1706" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.getErrorJson(org.apache.shindig.protocol.ResponseItem)" from="&quot;: &quot; + (responseItem.getErrorMessage())" to="&quot;: &quot; % (responseItem.getErrorMessage())" />
    <mutant id="mutant_1707" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.getErrorJson(org.apache.shindig.protocol.ResponseItem)" from="&quot;: &quot; + (responseItem.getErrorMessage())" to="&quot;: &quot; * (responseItem.getErrorMessage())" />
    <mutant id="mutant_1704" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.getErrorJson(org.apache.shindig.protocol.ResponseItem)" from="&quot;: &quot; + (responseItem.getErrorMessage())" to="&quot;: &quot; - (responseItem.getErrorMessage())" />
    <mutant id="mutant_1705" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getErrorJson(org.apache.shindig.protocol.ResponseItem)" from="&quot;: &quot; + (responseItem.getErrorMessage())" to="responseItem.getErrorMessage()" />
    <mutant id="mutant_1702" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName()))" to="m.getName()" />
    <mutant id="mutant_1703" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.getErrorJson(org.apache.shindig.protocol.ResponseItem)" from="&quot;: &quot; + (responseItem.getErrorMessage())" to="&quot;: &quot; / (responseItem.getErrorMessage())" />
    <mutant id="mutant_1700" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName()))" to="((&quot;No RPC binding for &quot; + (service.name())) + '.')" />
    <mutant id="mutant_1701" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName()))" to="(((&quot;No RPC binding for &quot; + (service.name())) + '.') % (m.getName()))" />
    <mutant id="mutant_900" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; % (object.getClass()))" />
    <mutant id="mutant_901" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="'.'" />
    <mutant id="mutant_902" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) % '.')" />
    <mutant id="mutant_907" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') * (property.getName()))" />
    <mutant id="mutant_908" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') / (property.getName()))" />
    <mutant id="mutant_909" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((&quot;Could not get property &quot; + (object.getClass())) + '.')" />
    <mutant id="mutant_903" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(&quot;Could not get property &quot; + (object.getClass()))" />
    <mutant id="mutant_904" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) * '.')" />
    <mutant id="mutant_905" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) / '.')" />
    <mutant id="mutant_906" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) - '.')" />
    <mutant id="mutant_910" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') % (property.getName()))" />
    <mutant id="mutant_911" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="property.getName()" />
    <mutant id="mutant_912" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') - (property.getName()))" />
    <mutant id="mutant_913" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; - (object.getClass()))" />
    <mutant id="mutant_918" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; % (object.getClass()))" />
    <mutant id="mutant_919" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="'.'" />
    <mutant id="mutant_914" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="&quot;Could not get property &quot;" />
    <mutant id="mutant_915" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; / (object.getClass()))" />
    <mutant id="mutant_916" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(object.getClass())" />
    <mutant id="mutant_917" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; * (object.getClass()))" />
    <mutant id="mutant_1720" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendJsonParseError(org.json.JSONException,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid JSON - &quot; + (e.getMessage()))" to="(&quot;Invalid JSON - &quot; - (e.getMessage()))" />
    <mutant id="mutant_921" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(&quot;Could not get property &quot; + (object.getClass()))" />
    <mutant id="mutant_922" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) * '.')" />
    <mutant id="mutant_923" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) / '.')" />
    <mutant id="mutant_924" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) - '.')" />
    <mutant id="mutant_920" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) % '.')" />
    <mutant id="mutant_929" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="property.getName()" />
    <mutant id="mutant_925" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') * (property.getName()))" />
    <mutant id="mutant_926" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') / (property.getName()))" />
    <mutant id="mutant_927" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((&quot;Could not get property &quot; + (object.getClass())) + '.')" />
    <mutant id="mutant_928" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') % (property.getName()))" />
    <mutant id="mutant_1311" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; / result)" />
    <mutant id="mutant_1312" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; - result)" />
    <mutant id="mutant_1310" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; % result)" />
    <mutant id="mutant_1319" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="((BeanXStreamConverter.XML_DECL) / &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1317" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="((BeanXStreamConverter.XML_DECL) - &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1318" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="(BeanXStreamConverter.XML_DECL)" />
    <mutant id="mutant_1315" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="((BeanXStreamConverter.XML_DECL) % &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1316" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="((BeanXStreamConverter.XML_DECL) * &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1313" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="&quot;Result is &quot;" />
    <mutant id="mutant_1314" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="result" />
    <mutant id="mutant_932" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; - (object.getClass()))" />
    <mutant id="mutant_933" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="&quot;Could not set property &quot;" />
    <mutant id="mutant_934" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(object.getClass())" />
    <mutant id="mutant_935" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; * (object.getClass()))" />
    <mutant id="mutant_930" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') - (property.getName()))" />
    <mutant id="mutant_931" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; / (object.getClass()))" />
    <mutant id="mutant_936" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; % (object.getClass()))" />
    <mutant id="mutant_937" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) * '.')" />
    <mutant id="mutant_938" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="'.'" />
    <mutant id="mutant_939" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) / '.')" />
    <mutant id="mutant_1300" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; - result)" />
    <mutant id="mutant_1301" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="&quot;Result is &quot;" />
    <mutant id="mutant_1308" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="result" />
    <mutant id="mutant_1309" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; * result)" />
    <mutant id="mutant_1306" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="(BeanXStreamConverter.XML_DECL) / result" />
    <mutant id="mutant_1307" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="(BeanXStreamConverter.XML_DECL) * result" />
    <mutant id="mutant_1304" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="(BeanXStreamConverter.XML_DECL) % result" />
    <mutant id="mutant_1305" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="BeanXStreamConverter.XML_DECL" />
    <mutant id="mutant_1302" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="result" />
    <mutant id="mutant_1303" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="(BeanXStreamConverter.XML_DECL) - result" />
    <mutant id="mutant_943" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') / (property.getName()))" />
    <mutant id="mutant_944" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((&quot;Could not set property &quot; + (object.getClass())) + '.')" />
    <mutant id="mutant_945" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') - (property.getName()))" />
    <mutant id="mutant_946" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') % (property.getName()))" />
    <mutant id="mutant_940" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(&quot;Could not set property &quot; + (object.getClass()))" />
    <mutant id="mutant_941" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) - '.')" />
    <mutant id="mutant_942" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) % '.')" />
    <mutant id="mutant_947" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') * (property.getName()))" />
    <mutant id="mutant_948" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="property.getName()" />
    <mutant id="mutant_949" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; / (object.getClass()))" />
    <mutant id="mutant_954" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; % (object.getClass()))" />
    <mutant id="mutant_955" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) * '.')" />
    <mutant id="mutant_956" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="'.'" />
    <mutant id="mutant_957" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) / '.')" />
    <mutant id="mutant_950" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; - (object.getClass()))" />
    <mutant id="mutant_951" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="&quot;Could not set property &quot;" />
    <mutant id="mutant_952" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(object.getClass())" />
    <mutant id="mutant_953" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; * (object.getClass()))" />
    <mutant id="mutant_958" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(&quot;Could not set property &quot; + (object.getClass()))" />
    <mutant id="mutant_959" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) - '.')" />
    <mutant id="mutant_965" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') * (property.getName()))" />
    <mutant id="mutant_966" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="property.getName()" />
    <mutant id="mutant_967" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; / (object.getClass()))" />
    <mutant id="mutant_968" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; - (object.getClass()))" />
    <mutant id="mutant_961" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') / (property.getName()))" />
    <mutant id="mutant_962" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((&quot;Could not set property &quot; + (object.getClass())) + '.')" />
    <mutant id="mutant_963" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') - (property.getName()))" />
    <mutant id="mutant_964" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') % (property.getName()))" />
    <mutant id="mutant_969" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="&quot;Could not set property &quot;" />
    <mutant id="mutant_1355" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="((BeanXStreamConverter.XML_DECL) / &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1356" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="&quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;" />
    <mutant id="mutant_1353" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="((BeanXStreamConverter.XML_DECL) - &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1354" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="(BeanXStreamConverter.XML_DECL)" />
    <mutant id="mutant_1351" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="((BeanXStreamConverter.XML_DECL) % &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1352" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="((BeanXStreamConverter.XML_DECL) * &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1350" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="result" />
    <mutant id="mutant_960" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) % '.')" />
    <mutant id="mutant_1359" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1357" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) * result)" />
    <mutant id="mutant_1358" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) % result)" />
    <mutant id="mutant_976" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(&quot;Could not set property &quot; + (object.getClass()))" />
    <mutant id="mutant_977" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) - '.')" />
    <mutant id="mutant_978" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) % '.')" />
    <mutant id="mutant_979" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') / (property.getName()))" />
    <mutant id="mutant_972" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; % (object.getClass()))" />
    <mutant id="mutant_973" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) * '.')" />
    <mutant id="mutant_974" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="'.'" />
    <mutant id="mutant_975" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="((&quot;Could not set property &quot; + (object.getClass())) / '.')" />
    <mutant id="mutant_1344" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="result" />
    <mutant id="mutant_1345" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; * result)" />
    <mutant id="mutant_1342" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="(BeanXStreamConverter.XML_DECL) / result" />
    <mutant id="mutant_1343" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="(BeanXStreamConverter.XML_DECL) * result" />
    <mutant id="mutant_1340" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="(BeanXStreamConverter.XML_DECL) % result" />
    <mutant id="mutant_1341" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="BeanXStreamConverter.XML_DECL" />
    <mutant id="mutant_970" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(object.getClass())" />
    <mutant id="mutant_971" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="(&quot;Could not set property &quot; * (object.getClass()))" />
    <mutant id="mutant_1348" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; - result)" />
    <mutant id="mutant_1349" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="&quot;Result is &quot;" />
    <mutant id="mutant_1346" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; % result)" />
    <mutant id="mutant_1347" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; / result)" />
    <mutant id="mutant_503" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(1 + (((data.length) * 8) / (DIGITS.length)))" to="(1 / (((data.length) * 8) / (DIGITS.length)))" />
    <mutant id="mutant_987" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;Converting Child to &quot; + (firstChild.get()))" to="firstChild.get()" />
    <mutant id="mutant_504" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(1 + (((data.length) * 8) / (DIGITS.length)))" to="(1 * (((data.length) * 8) / (DIGITS.length)))" />
    <mutant id="mutant_988" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;Converting Child to &quot; + (firstChild.get()))" to="&quot;Converting Child to &quot;" />
    <mutant id="mutant_505" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(1 + (((data.length) * 8) / (DIGITS.length)))" to="1" />
    <mutant id="mutant_989" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;Converting Child to &quot; + (firstChild.get()))" to="(&quot;Converting Child to &quot; % (firstChild.get()))" />
    <mutant id="mutant_506" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(1 + (((data.length) * 8) / (DIGITS.length)))" to="(1 - (((data.length) * 8) / (DIGITS.length)))" />
    <mutant id="mutant_983" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') * (property.getName()))" />
    <mutant id="mutant_500" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(((data.length) * 8) / (DIGITS.length))" to="(((data.length) * 8) - (DIGITS.length))" />
    <mutant id="mutant_984" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="property.getName()" />
    <mutant id="mutant_501" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(((data.length) * 8) / (DIGITS.length))" to="(DIGITS.length)" />
    <mutant id="mutant_985" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;Converting Child to &quot; + (firstChild.get()))" to="(&quot;Converting Child to &quot; - (firstChild.get()))" />
    <mutant id="mutant_502" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(((data.length) * 8) / (DIGITS.length))" to="(((data.length) * 8) + (DIGITS.length))" />
    <mutant id="mutant_986" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;Converting Child to &quot; + (firstChild.get()))" to="(&quot;Converting Child to &quot; / (firstChild.get()))" />
    <mutant id="mutant_507" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(1 + (((data.length) * 8) / (DIGITS.length)))" to="(((data.length) * 8) / (DIGITS.length))" />
    <mutant id="mutant_508" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(1 + (((data.length) * 8) / (DIGITS.length)))" to="(1 % (((data.length) * 8) / (DIGITS.length)))" />
    <mutant id="mutant_509" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(SHIFT) - bitsLeft" to="(SHIFT) / bitsLeft" />
    <mutant id="mutant_1333" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; * result)" />
    <mutant id="mutant_1334" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; % result)" />
    <mutant id="mutant_1331" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result" />
    <mutant id="mutant_1332" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) / &quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_1330" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) % &quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_980" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((&quot;Could not set property &quot; + (object.getClass())) + '.')" />
    <mutant id="mutant_981" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') - (property.getName()))" />
    <mutant id="mutant_1339" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="(BeanXStreamConverter.XML_DECL) - result" />
    <mutant id="mutant_982" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') % (property.getName()))" />
    <mutant id="mutant_1337" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="&quot;Result is &quot;" />
    <mutant id="mutant_1338" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="result" />
    <mutant id="mutant_1335" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; / result)" />
    <mutant id="mutant_1336" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="(&quot;Result is &quot; - result)" />
    <mutant id="mutant_514" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(SHIFT) - bitsLeft" to="bitsLeft" />
    <mutant id="mutant_998" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" to="(&quot;serializedClass(&quot; + type)" />
    <mutant id="mutant_515" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft - (SHIFT))" to="(bitsLeft / (SHIFT))" />
    <mutant id="mutant_999" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" to="((&quot;serializedClass(&quot; + type) % &quot;) is a collection member &quot;)" />
    <mutant id="mutant_516" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft - (SHIFT))" to="(bitsLeft % (SHIFT))" />
    <mutant id="mutant_517" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft - (SHIFT))" to="(bitsLeft + (SHIFT))" />
    <mutant id="mutant_510" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(SHIFT) - bitsLeft" to="(SHIFT) * bitsLeft" />
    <mutant id="mutant_994" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="(&quot;serializedClass(&quot; * type)" />
    <mutant id="mutant_511" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(SHIFT) - bitsLeft" to="(SHIFT) % bitsLeft" />
    <mutant id="mutant_995" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="type" />
    <mutant id="mutant_512" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(SHIFT) - bitsLeft" to="(SHIFT) + bitsLeft" />
    <mutant id="mutant_996" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="(&quot;serializedClass(&quot; - type)" />
    <mutant id="mutant_513" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(SHIFT) - bitsLeft" to="SHIFT" />
    <mutant id="mutant_997" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" to="((&quot;serializedClass(&quot; + type) / &quot;) is a collection member &quot;)" />
    <mutant id="mutant_518" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft - (SHIFT))" to="(bitsLeft * (SHIFT))" />
    <mutant id="mutant_519" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft - (SHIFT))" to="(SHIFT)" />
    <mutant id="mutant_1322" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) % result)" />
    <mutant id="mutant_1323" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" />
    <mutant id="mutant_1320" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="&quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;" />
    <mutant id="mutant_1321" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) * result)" />
    <mutant id="mutant_990" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;Converting Child to &quot; + (firstChild.get()))" to="(&quot;Converting Child to &quot; * (firstChild.get()))" />
    <mutant id="mutant_991" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="(&quot;serializedClass(&quot; % type)" />
    <mutant id="mutant_992" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="(&quot;serializedClass(&quot; / type)" />
    <mutant id="mutant_1328" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) - &quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_993" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="&quot;serializedClass(&quot;" />
    <mutant id="mutant_1329" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) * &quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_1326" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) / result)" />
    <mutant id="mutant_1327" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="&quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_1324" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="result" />
    <mutant id="mutant_1325" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) - result)" />
    <mutant id="mutant_525" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.major) - (object2.major)" to="(object1.major) + (object2.major)" />
    <mutant id="mutant_526" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.minor) - (object2.minor)" to="(object1.minor) + (object2.minor)" />
    <mutant id="mutant_527" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.minor) - (object2.minor)" to="(object1.minor) * (object2.minor)" />
    <mutant id="mutant_528" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.minor) - (object2.minor)" to="object1.minor" />
    <mutant id="mutant_521" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.major) - (object2.major)" to="object1.major" />
    <mutant id="mutant_522" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.major) - (object2.major)" to="(object1.major) / (object2.major)" />
    <mutant id="mutant_523" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.major) - (object2.major)" to="(object1.major) % (object2.major)" />
    <mutant id="mutant_524" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.major) - (object2.major)" to="(object1.major) * (object2.major)" />
    <mutant id="mutant_529" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.minor) - (object2.minor)" to="(object1.minor) / (object2.minor)" />
    <mutant id="mutant_1399" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;)" to="&quot;) is not a number.&quot;" />
    <mutant id="mutant_1397" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" to="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) % count)" />
    <mutant id="mutant_1398" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" to="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" />
    <mutant id="mutant_1395" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" to="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) * count)" />
    <mutant id="mutant_1396" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" to="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) - count)" />
    <mutant id="mutant_1393" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" to="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) / count)" />
    <mutant id="mutant_1394" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" to="count" />
    <mutant id="mutant_520" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft - (SHIFT))" to="bitsLeft" />
    <mutant id="mutant_536" viable="true" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;)" to="&quot;://&quot;" />
    <mutant id="mutant_537" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;)" to="((getScheme()) / &quot;://&quot;)" />
    <mutant id="mutant_538" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;)" to="((getScheme()) * &quot;://&quot;)" />
    <mutant id="mutant_539" viable="true" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;)" to="(getScheme())" />
    <mutant id="mutant_532" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.patch) - (object2.patch)" to="(object1.patch) / (object2.patch)" />
    <mutant id="mutant_533" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.patch) - (object2.patch)" to="(object1.patch) + (object2.patch)" />
    <mutant id="mutant_534" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.patch) - (object2.patch)" to="(object1.patch) * (object2.patch)" />
    <mutant id="mutant_535" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.patch) - (object2.patch)" to="object1.patch" />
    <mutant id="mutant_1391" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.COUNT)) * &quot; (&quot;)" />
    <mutant id="mutant_1392" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.COUNT)) - &quot; (&quot;)" />
    <mutant id="mutant_1390" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" to="(&quot;Parameter &quot; + (RequestItem.COUNT))" />
    <mutant id="mutant_1388" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" to="&quot; (&quot;" />
    <mutant id="mutant_1389" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.COUNT)) / &quot; (&quot;)" />
    <mutant id="mutant_1386" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(&quot;Parameter &quot; + (RequestItem.COUNT))" to="&quot;Parameter &quot;" />
    <mutant id="mutant_1387" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.COUNT)) % &quot; (&quot;)" />
    <mutant id="mutant_1384" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(&quot;Parameter &quot; + (RequestItem.COUNT))" to="(&quot;Parameter &quot; * (RequestItem.COUNT))" />
    <mutant id="mutant_1385" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(&quot;Parameter &quot; + (RequestItem.COUNT))" to="(&quot;Parameter &quot; % (RequestItem.COUNT))" />
    <mutant id="mutant_1382" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(&quot;Parameter &quot; + (RequestItem.COUNT))" to="(RequestItem.COUNT)" />
    <mutant id="mutant_1383" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(&quot;Parameter &quot; + (RequestItem.COUNT))" to="(&quot;Parameter &quot; / (RequestItem.COUNT))" />
    <mutant id="mutant_530" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.minor) - (object2.minor)" to="(object1.minor) % (object2.minor)" />
    <mutant id="mutant_531" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.patch) - (object2.patch)" to="(object1.patch) % (object2.patch)" />
    <mutant id="mutant_547" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;) + (getAuthority())" to="((getScheme()) + &quot;://&quot;) % (getAuthority())" />
    <mutant id="mutant_548" viable="false" in="?" from="(60 * 60)" to="(60 / 60)" />
    <mutant id="mutant_549" viable="false" in="?" from="(60 * 60)" to="(60 % 60)" />
    <mutant id="mutant_543" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;) + (getAuthority())" to="((getScheme()) + &quot;://&quot;) * (getAuthority())" />
    <mutant id="mutant_544" viable="true" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;) + (getAuthority())" to="getAuthority()" />
    <mutant id="mutant_545" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;) + (getAuthority())" to="((getScheme()) + &quot;://&quot;) / (getAuthority())" />
    <mutant id="mutant_546" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;) + (getAuthority())" to="((getScheme()) + &quot;://&quot;) - (getAuthority())" />
    <mutant id="mutant_1380" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getTypedParameter(java.lang.String,java.lang.Class)" from="(&quot;missing data for &quot; + parameterName)" to="(&quot;missing data for &quot; % parameterName)" />
    <mutant id="mutant_1381" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(&quot;Parameter &quot; + (RequestItem.COUNT))" to="(&quot;Parameter &quot; - (RequestItem.COUNT))" />
    <mutant id="mutant_1377" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getTypedParameter(java.lang.String,java.lang.Class)" from="(&quot;missing data for &quot; + parameterName)" to="&quot;missing data for &quot;" />
    <mutant id="mutant_1378" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getTypedParameter(java.lang.String,java.lang.Class)" from="(&quot;missing data for &quot; + parameterName)" to="(&quot;missing data for &quot; / parameterName)" />
    <mutant id="mutant_1375" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getTypedParameter(java.lang.String,java.lang.Class)" from="(&quot;missing data for &quot; + parameterName)" to="(&quot;missing data for &quot; * parameterName)" />
    <mutant id="mutant_1376" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getTypedParameter(java.lang.String,java.lang.Class)" from="(&quot;missing data for &quot; + parameterName)" to="(&quot;missing data for &quot; - parameterName)" />
    <mutant id="mutant_1373" viable="true" in="org.apache.shindig.protocol.ApiServlet.sendSecurityError(javax.servlet.http.HttpServletResponse)" from="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;)" to="&quot;requests are not allowed&quot;" />
    <mutant id="mutant_1374" viable="true" in="org.apache.shindig.protocol.ApiServlet.sendSecurityError(javax.servlet.http.HttpServletResponse)" from="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;)" to="&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot;" />
    <mutant id="mutant_1371" viable="false" in="org.apache.shindig.protocol.ApiServlet.sendSecurityError(javax.servlet.http.HttpServletResponse)" from="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;)" to="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; - &quot;requests are not allowed&quot;)" />
    <mutant id="mutant_1372" viable="false" in="org.apache.shindig.protocol.ApiServlet.sendSecurityError(javax.servlet.http.HttpServletResponse)" from="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;)" to="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; * &quot;requests are not allowed&quot;)" />
    <mutant id="mutant_540" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;)" to="((getScheme()) % &quot;://&quot;)" />
    <mutant id="mutant_541" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;)" to="((getScheme()) - &quot;://&quot;)" />
    <mutant id="mutant_542" viable="true" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;) + (getAuthority())" to="(getScheme()) + &quot;://&quot;" />
    <mutant id="mutant_1379" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getTypedParameter(java.lang.String,java.lang.Class)" from="(&quot;missing data for &quot; + parameterName)" to="parameterName" />
    <mutant id="mutant_558" viable="false" in="?" from="((60 * 60) * 24)" to="((60 * 60) - 24)" />
    <mutant id="mutant_559" viable="false" in="?" from="((60 * 60) * 24) * 365" to="365" />
    <mutant id="mutant_554" viable="false" in="?" from="((60 * 60) * 24)" to="24" />
    <mutant id="mutant_555" viable="false" in="?" from="((60 * 60) * 24)" to="((60 * 60) + 24)" />
    <mutant id="mutant_556" viable="false" in="?" from="((60 * 60) * 24)" to="(60 * 60)" />
    <mutant id="mutant_557" viable="false" in="?" from="((60 * 60) * 24)" to="((60 * 60) % 24)" />
    <mutant id="mutant_1370" viable="false" in="org.apache.shindig.protocol.ApiServlet.sendSecurityError(javax.servlet.http.HttpServletResponse)" from="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;)" to="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; / &quot;requests are not allowed&quot;)" />
    <mutant id="mutant_1366" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) % &quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_1367" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result" />
    <mutant id="mutant_1364" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) - &quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_1365" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) * &quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_1362" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) / result)" />
    <mutant id="mutant_1363" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="&quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_1360" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="result" />
    <mutant id="mutant_1361" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) - result)" />
    <mutant id="mutant_550" viable="false" in="?" from="(60 * 60)" to="60" />
    <mutant id="mutant_551" viable="false" in="?" from="(60 * 60)" to="(60 + 60)" />
    <mutant id="mutant_552" viable="false" in="?" from="(60 * 60)" to="(60 - 60)" />
    <mutant id="mutant_553" viable="false" in="?" from="((60 * 60) * 24)" to="((60 * 60) / 24)" />
    <mutant id="mutant_1368" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) / &quot;&lt;/response&gt;&quot;" />
    <mutant id="mutant_1369" viable="false" in="org.apache.shindig.protocol.ApiServlet.sendSecurityError(javax.servlet.http.HttpServletResponse)" from="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;)" to="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; % &quot;requests are not allowed&quot;)" />
    <mutant id="mutant_448" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="version.patch" />
    <mutant id="mutant_449" viable="false" in="org.apache.shindig.common.util.ResourceLoader.openResource(java.lang.ClassLoader,java.lang.String)" from="(&quot;Can not locate resource: &quot; + resource)" to="(&quot;Can not locate resource: &quot; - resource)" />
    <mutant id="mutant_444" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="(version.patch) % (patch)" />
    <mutant id="mutant_445" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="(version.patch) / (patch)" />
    <mutant id="mutant_446" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="(version.patch) + (patch)" />
    <mutant id="mutant_447" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="(version.patch) * (patch)" />
    <mutant id="mutant_1199" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(method.getName())" />
    <mutant id="mutant_1197" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(&quot;Method &quot; * (method.getName()))" />
    <mutant id="mutant_1198" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(&quot;Method &quot; - (method.getName()))" />
    <mutant id="mutant_1195" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="&quot;Method &quot;" />
    <mutant id="mutant_1196" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(&quot;Method &quot; / (method.getName()))" />
    <mutant id="mutant_440" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="(version.minor) * (minor)" />
    <mutant id="mutant_441" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="version.minor" />
    <mutant id="mutant_442" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="(version.minor) / (minor)" />
    <mutant id="mutant_443" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="(version.minor) % (minor)" />
    <mutant id="mutant_459" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(digits.length) - 1" to="(digits.length) + 1" />
    <mutant id="mutant_455" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(digits.length) - 1" to="(digits.length) / 1" />
    <mutant id="mutant_456" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(digits.length) - 1" to="1" />
    <mutant id="mutant_457" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(digits.length) - 1" to="(digits.length) % 1" />
    <mutant id="mutant_458" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(digits.length) - 1" to="(digits.length) * 1" />
    <mutant id="mutant_1193" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName()))" to="targetEnum.getName()" />
    <mutant id="mutant_1194" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName()))" to="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) / (targetEnum.getName()))" />
    <mutant id="mutant_1191" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName()))" to="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) * (targetEnum.getName()))" />
    <mutant id="mutant_1192" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName()))" to="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) - (targetEnum.getName()))" />
    <mutant id="mutant_1190" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName()))" to="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" />
    <mutant id="mutant_1188" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" to="((&quot;Missing enum value &quot; + (val1.name())) * &quot; for enum &quot;)" />
    <mutant id="mutant_1189" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName()))" to="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) % (targetEnum.getName()))" />
    <mutant id="mutant_1186" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" to="((&quot;Missing enum value &quot; + (val1.name())) - &quot; for enum &quot;)" />
    <mutant id="mutant_1187" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" to="((&quot;Missing enum value &quot; + (val1.name())) % &quot; for enum &quot;)" />
    <mutant id="mutant_1184" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" to="((&quot;Missing enum value &quot; + (val1.name())) / &quot; for enum &quot;)" />
    <mutant id="mutant_1185" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" to="(&quot;Missing enum value &quot; + (val1.name()))" />
    <mutant id="mutant_451" viable="false" in="org.apache.shindig.common.util.ResourceLoader.openResource(java.lang.ClassLoader,java.lang.String)" from="(&quot;Can not locate resource: &quot; + resource)" to="(&quot;Can not locate resource: &quot; * resource)" />
    <mutant id="mutant_452" viable="true" in="org.apache.shindig.common.util.ResourceLoader.openResource(java.lang.ClassLoader,java.lang.String)" from="(&quot;Can not locate resource: &quot; + resource)" to="resource" />
    <mutant id="mutant_453" viable="true" in="org.apache.shindig.common.util.ResourceLoader.openResource(java.lang.ClassLoader,java.lang.String)" from="(&quot;Can not locate resource: &quot; + resource)" to="&quot;Can not locate resource: &quot;" />
    <mutant id="mutant_454" viable="false" in="org.apache.shindig.common.util.ResourceLoader.openResource(java.lang.ClassLoader,java.lang.String)" from="(&quot;Can not locate resource: &quot; + resource)" to="(&quot;Can not locate resource: &quot; / resource)" />
    <mutant id="mutant_450" viable="false" in="org.apache.shindig.common.util.ResourceLoader.openResource(java.lang.ClassLoader,java.lang.String)" from="(&quot;Can not locate resource: &quot; + resource)" to="(&quot;Can not locate resource: &quot; % resource)" />
    <mutant id="mutant_466" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="((MASK) / 1)" />
    <mutant id="mutant_467" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="1" />
    <mutant id="mutant_468" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="(MASK)" />
    <mutant id="mutant_469" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="((MASK) * 1)" />
    <mutant id="mutant_1182" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(&quot;Missing enum value &quot; + (val1.name()))" to="(&quot;Missing enum value &quot; * (val1.name()))" />
    <mutant id="mutant_1183" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" to="&quot; for enum &quot;" />
    <mutant id="mutant_1180" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(&quot;Missing enum value &quot; + (val1.name()))" to="(&quot;Missing enum value &quot; % (val1.name()))" />
    <mutant id="mutant_1181" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(&quot;Missing enum value &quot; + (val1.name()))" to="(val1.name())" />
    <mutant id="mutant_1179" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(&quot;Missing enum value &quot; + (val1.name()))" to="&quot;Missing enum value &quot;" />
    <mutant id="mutant_1177" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(&quot;Missing enum value &quot; + (val1.name()))" to="(&quot;Missing enum value &quot; - (val1.name()))" />
    <mutant id="mutant_1178" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(&quot;Missing enum value &quot; + (val1.name()))" to="(&quot;Missing enum value &quot; / (val1.name()))" />
    <mutant id="mutant_1175" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.convertEnum(java.lang.Enum)" from="(&quot;Unknown enum value &quot; + (value.name()))" to="value.name()" />
    <mutant id="mutant_1176" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.convertEnum(java.lang.Enum)" from="(&quot;Unknown enum value &quot; + (value.name()))" to="(&quot;Unknown enum value &quot; * (value.name()))" />
    <mutant id="mutant_1173" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.convertEnum(java.lang.Enum)" from="(&quot;Unknown enum value &quot; + (value.name()))" to="(&quot;Unknown enum value &quot; / (value.name()))" />
    <mutant id="mutant_1174" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.convertEnum(java.lang.Enum)" from="(&quot;Unknown enum value &quot; + (value.name()))" to="&quot;Unknown enum value &quot;" />
    <mutant id="mutant_462" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="MASK" />
    <mutant id="mutant_463" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="((MASK) * 1)" />
    <mutant id="mutant_464" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="((MASK) - 1)" />
    <mutant id="mutant_465" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="((MASK) % 1)" />
    <mutant id="mutant_460" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(digits.length) - 1" to="digits.length" />
    <mutant id="mutant_461" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="1" />
    <mutant id="mutant_477" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT))" to="(SHIFT)" />
    <mutant id="mutant_478" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT))" to="(encodedLength - (SHIFT))" />
    <mutant id="mutant_479" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT)) / 8" to="(encodedLength * (SHIFT)) * 8" />
    <mutant id="mutant_1171" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.convertEnum(java.lang.Enum)" from="(&quot;Unknown enum value &quot; + (value.name()))" to="(&quot;Unknown enum value &quot; % (value.name()))" />
    <mutant id="mutant_1172" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.convertEnum(java.lang.Enum)" from="(&quot;Unknown enum value &quot; + (value.name()))" to="(&quot;Unknown enum value &quot; - (value.name()))" />
    <mutant id="mutant_1170" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString()))" to="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" />
    <mutant id="mutant_1168" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString()))" to="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) * (f.toString()))" />
    <mutant id="mutant_1169" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString()))" to="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) / (f.toString()))" />
    <mutant id="mutant_1166" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString()))" to="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) % (f.toString()))" />
    <mutant id="mutant_1167" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString()))" to="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) - (f.toString()))" />
    <mutant id="mutant_1164" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" to="&quot; don\'t have mapping for value &quot;" />
    <mutant id="mutant_1165" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString()))" to="f.toString()" />
    <mutant id="mutant_1162" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" to="(&quot;Enum &quot; + (dataClass.getName()))" />
    <mutant id="mutant_1163" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" to="((&quot;Enum &quot; + (dataClass.getName())) - &quot; don\'t have mapping for value &quot;)" />
    <mutant id="mutant_473" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT))" to="(encodedLength % (SHIFT))" />
    <mutant id="mutant_474" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT))" to="encodedLength" />
    <mutant id="mutant_475" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT))" to="(encodedLength + (SHIFT))" />
    <mutant id="mutant_476" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT))" to="(encodedLength / (SHIFT))" />
    <mutant id="mutant_470" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="((MASK) - 1)" />
    <mutant id="mutant_471" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="((MASK) % 1)" />
    <mutant id="mutant_472" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="((MASK) / 1)" />
    <mutant id="mutant_488" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(bitsLeft - 8)" to="8" />
    <mutant id="mutant_489" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(bitsLeft - 8)" to="(bitsLeft / 8)" />
    <mutant id="mutant_484" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT)) / 8" to="(encodedLength * (SHIFT)) + 8" />
    <mutant id="mutant_485" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(bitsLeft - 8)" to="(bitsLeft * 8)" />
    <mutant id="mutant_486" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(bitsLeft - 8)" to="(bitsLeft + 8)" />
    <mutant id="mutant_487" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(bitsLeft - 8)" to="(bitsLeft % 8)" />
    <mutant id="mutant_480" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT)) / 8" to="(encodedLength * (SHIFT)) % 8" />
    <mutant id="mutant_481" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT)) / 8" to="encodedLength * (SHIFT)" />
    <mutant id="mutant_482" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT)) / 8" to="(encodedLength * (SHIFT)) - 8" />
    <mutant id="mutant_483" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT)) / 8" to="8" />
    <mutant id="mutant_499" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(((data.length) * 8) / (DIGITS.length))" to="(((data.length) * 8) % (DIGITS.length))" />
    <mutant id="mutant_490" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(bitsLeft - 8)" to="bitsLeft" />
    <mutant id="mutant_495" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="((data.length) * 8)" to="(data.length)" />
    <mutant id="mutant_496" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="((data.length) * 8)" to="((data.length) % 8)" />
    <mutant id="mutant_497" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(((data.length) * 8) / (DIGITS.length))" to="((data.length) * 8)" />
    <mutant id="mutant_498" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(((data.length) * 8) / (DIGITS.length))" to="(((data.length) * 8) * (DIGITS.length))" />
    <mutant id="mutant_491" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="((data.length) * 8)" to="((data.length) + 8)" />
    <mutant id="mutant_492" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="((data.length) * 8)" to="((data.length) - 8)" />
    <mutant id="mutant_493" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="((data.length) * 8)" to="8" />
    <mutant id="mutant_494" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="((data.length) * 8)" to="((data.length) / 8)" />
    <mutant id="mutant_1630" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="((&quot;The method &quot; + key) + &quot; is not implemented&quot;)" to="&quot; is not implemented&quot;" />
    <mutant id="mutant_1631" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="('/' / serviceName)" />
    <mutant id="mutant_1638" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (service.path()))" to="(('/' + serviceName) / (service.path()))" />
    <mutant id="mutant_1639" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (service.path()))" to="(('/' + serviceName) * (service.path()))" />
    <mutant id="mutant_1636" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="'/'" />
    <mutant id="mutant_1637" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (service.path()))" to="(('/' + serviceName) % (service.path()))" />
    <mutant id="mutant_1634" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="('/' % serviceName)" />
    <mutant id="mutant_1635" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="serviceName" />
    <mutant id="mutant_1632" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="('/' - serviceName)" />
    <mutant id="mutant_1633" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="('/' * serviceName)" />
    <mutant id="mutant_1629" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="((&quot;The method &quot; + key) + &quot; is not implemented&quot;)" to="((&quot;The method &quot; + key) / &quot; is not implemented&quot;)" />
    <mutant id="mutant_1620" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="(&quot;The method &quot; + key)" to="key" />
    <mutant id="mutant_1627" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="((&quot;The method &quot; + key) + &quot; is not implemented&quot;)" to="((&quot;The method &quot; + key) % &quot; is not implemented&quot;)" />
    <mutant id="mutant_1628" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="((&quot;The method &quot; + key) + &quot; is not implemented&quot;)" to="((&quot;The method &quot; + key) - &quot; is not implemented&quot;)" />
    <mutant id="mutant_1625" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="((&quot;The method &quot; + key) + &quot; is not implemented&quot;)" to="(&quot;The method &quot; + key)" />
    <mutant id="mutant_1626" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="((&quot;The method &quot; + key) + &quot; is not implemented&quot;)" to="((&quot;The method &quot; + key) * &quot; is not implemented&quot;)" />
    <mutant id="mutant_1623" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="(&quot;The method &quot; + key)" to="(&quot;The method &quot; / key)" />
    <mutant id="mutant_1624" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="(&quot;The method &quot; + key)" to="(&quot;The method &quot; % key)" />
    <mutant id="mutant_1621" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="(&quot;The method &quot; + key)" to="(&quot;The method &quot; * key)" />
    <mutant id="mutant_1622" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="(&quot;The method &quot; + key)" to="(&quot;The method &quot; - key)" />
    <mutant id="mutant_1618" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRestHandler(java.lang.String,java.lang.String)" from="(&quot;No service defined for path &quot; + path)" to="(&quot;No service defined for path &quot; - path)" />
    <mutant id="mutant_1619" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="(&quot;The method &quot; + key)" to="&quot;The method &quot;" />
    <mutant id="mutant_1616" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRestHandler(java.lang.String,java.lang.String)" from="(&quot;No service defined for path &quot; + path)" to="path" />
    <mutant id="mutant_1617" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRestHandler(java.lang.String,java.lang.String)" from="(&quot;No service defined for path &quot; + path)" to="(&quot;No service defined for path &quot; * path)" />
    <mutant id="mutant_1614" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRestHandler(java.lang.String,java.lang.String)" from="(&quot;No service defined for path &quot; + path)" to="(&quot;No service defined for path &quot; % path)" />
    <mutant id="mutant_1615" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRestHandler(java.lang.String,java.lang.String)" from="(&quot;No service defined for path &quot; + path)" to="(&quot;No service defined for path &quot; / path)" />
    <mutant id="mutant_1612" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="(((method.getKey()) + ' ') + (path.operationPath))" to="(((method.getKey()) + ' ') % (path.operationPath))" />
    <mutant id="mutant_1613" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRestHandler(java.lang.String,java.lang.String)" from="(&quot;No service defined for path &quot; + path)" to="&quot;No service defined for path &quot;" />
    <mutant id="mutant_1610" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="(((method.getKey()) + ' ') + (path.operationPath))" to="((method.getKey()) + ' ')" />
    <mutant id="mutant_1611" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="(((method.getKey()) + ' ') + (path.operationPath))" to="(((method.getKey()) + ' ') / (path.operationPath))" />
    <mutant id="mutant_1609" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="(((method.getKey()) + ' ') + (path.operationPath))" to="path.operationPath" />
    <mutant id="mutant_1607" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="(((method.getKey()) + ' ') + (path.operationPath))" to="(((method.getKey()) + ' ') * (path.operationPath))" />
    <mutant id="mutant_1608" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="(((method.getKey()) + ' ') + (path.operationPath))" to="(((method.getKey()) + ' ') - (path.operationPath))" />
    <mutant id="mutant_1605" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="((method.getKey()) + ' ')" to="((method.getKey()) * ' ')" />
    <mutant id="mutant_1606" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="((method.getKey()) + ' ')" to="' '" />
    <mutant id="mutant_1603" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="((method.getKey()) + ' ')" to="(method.getKey())" />
    <mutant id="mutant_1604" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="((method.getKey()) + ' ')" to="((method.getKey()) % ' ')" />
    <mutant id="mutant_1601" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="((method.getKey()) + ' ')" to="((method.getKey()) / ' ')" />
    <mutant id="mutant_1602" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="((method.getKey()) + ' ')" to="((method.getKey()) - ' ')" />
    <mutant id="mutant_1600" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath))" to="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) - (operationPath))" />
    <mutant id="mutant_800" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;)" to="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" />
    <mutant id="mutant_801" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;)" to="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) / &quot; property&quot;)" />
    <mutant id="mutant_802" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;)" to="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) - &quot; property&quot;)" />
    <mutant id="mutant_803" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;)" to="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) * &quot; property&quot;)" />
    <mutant id="mutant_808" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFromString(java.lang.String)" from="(&quot;Trouble parsing &quot; + json)" to="(&quot;Trouble parsing &quot; % json)" />
    <mutant id="mutant_809" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFromString(java.lang.String)" from="(&quot;Trouble parsing &quot; + json)" to="(&quot;Trouble parsing &quot; / json)" />
    <mutant id="mutant_804" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;)" to="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) % &quot; property&quot;)" />
    <mutant id="mutant_805" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFromString(java.lang.String)" from="(&quot;Trouble parsing &quot; + json)" to="&quot;Trouble parsing &quot;" />
    <mutant id="mutant_806" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFromString(java.lang.String)" from="(&quot;Trouble parsing &quot; + json)" to="json" />
    <mutant id="mutant_807" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFromString(java.lang.String)" from="(&quot;Trouble parsing &quot; + json)" to="(&quot;Trouble parsing &quot; - json)" />
    <mutant id="mutant_1674" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((service.name()) + '.')" to="((service.name()) - '.')" />
    <mutant id="mutant_1675" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((service.name()) + '.')" to="((service.name()) % '.')" />
    <mutant id="mutant_1672" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName()))" to="m.getName()" />
    <mutant id="mutant_1673" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((service.name()) + '.')" to="'.'" />
    <mutant id="mutant_1670" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName()))" to="((&quot;No REST binding for &quot; + (service.name())) + '.')" />
    <mutant id="mutant_1671" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName()))" to="(((&quot;No REST binding for &quot; + (service.name())) + '.') * (m.getName()))" />
    <mutant id="mutant_1678" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((service.name()) + '.')" to="(service.name())" />
    <mutant id="mutant_1679" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((service.name()) + '.') + opName)" to="(((service.name()) + '.') * opName)" />
    <mutant id="mutant_1676" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((service.name()) + '.')" to="((service.name()) * '.')" />
    <mutant id="mutant_1677" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((service.name()) + '.')" to="((service.name()) / '.')" />
    <mutant id="mutant_811" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(&quot;The file \'&quot; / (file.getAbsolutePath()))" />
    <mutant id="mutant_812" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(&quot;The file \'&quot; * (file.getAbsolutePath()))" />
    <mutant id="mutant_813" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(&quot;The file \'&quot; - (file.getAbsolutePath()))" />
    <mutant id="mutant_814" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="&quot;The file \'&quot;" />
    <mutant id="mutant_810" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFromString(java.lang.String)" from="(&quot;Trouble parsing &quot; + json)" to="(&quot;Trouble parsing &quot; * json)" />
    <mutant id="mutant_819" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;)" to="(&quot;The file \'&quot; + (file.getAbsolutePath()))" />
    <mutant id="mutant_815" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(file.getAbsolutePath())" />
    <mutant id="mutant_816" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(&quot;The file \'&quot; % (file.getAbsolutePath()))" />
    <mutant id="mutant_817" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;)" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) - &quot;\' doesn\'t exist.&quot;)" />
    <mutant id="mutant_818" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;)" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) * &quot;\' doesn\'t exist.&quot;)" />
    <mutant id="mutant_1663" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No REST binding for &quot; + (service.name())) + '.')" to="((&quot;No REST binding for &quot; + (service.name())) / '.')" />
    <mutant id="mutant_1664" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No REST binding for &quot; + (service.name())) + '.')" to="(&quot;No REST binding for &quot; + (service.name()))" />
    <mutant id="mutant_1661" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No REST binding for &quot; + (service.name())) + '.')" to="((&quot;No REST binding for &quot; + (service.name())) * '.')" />
    <mutant id="mutant_1662" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No REST binding for &quot; + (service.name())) + '.')" to="'.'" />
    <mutant id="mutant_1660" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No REST binding for &quot; + (service.name()))" to="(service.name())" />
    <mutant id="mutant_1669" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName()))" to="(((&quot;No REST binding for &quot; + (service.name())) + '.') / (m.getName()))" />
    <mutant id="mutant_1667" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName()))" to="(((&quot;No REST binding for &quot; + (service.name())) + '.') - (m.getName()))" />
    <mutant id="mutant_1668" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName()))" to="(((&quot;No REST binding for &quot; + (service.name())) + '.') % (m.getName()))" />
    <mutant id="mutant_1665" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No REST binding for &quot; + (service.name())) + '.')" to="((&quot;No REST binding for &quot; + (service.name())) % '.')" />
    <mutant id="mutant_1666" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No REST binding for &quot; + (service.name())) + '.')" to="((&quot;No REST binding for &quot; + (service.name())) - '.')" />
    <mutant id="mutant_822" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;)" to="&quot;\' doesn\'t exist.&quot;" />
    <mutant id="mutant_823" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;)" to="&quot; doesn\'t seem to be a JS or JSON file.&quot;" />
    <mutant id="mutant_824" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;)" to="((file.getAbsolutePath()) % &quot; doesn\'t seem to be a JS or JSON file.&quot;)" />
    <mutant id="mutant_825" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;)" to="((file.getAbsolutePath()) / &quot; doesn\'t seem to be a JS or JSON file.&quot;)" />
    <mutant id="mutant_820" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;)" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) / &quot;\' doesn\'t exist.&quot;)" />
    <mutant id="mutant_821" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;)" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) % &quot;\' doesn\'t exist.&quot;)" />
    <mutant id="mutant_826" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;)" to="((file.getAbsolutePath()) - &quot; doesn\'t seem to be a JS or JSON file.&quot;)" />
    <mutant id="mutant_827" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;)" to="((file.getAbsolutePath()) * &quot; doesn\'t seem to be a JS or JSON file.&quot;)" />
    <mutant id="mutant_828" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;)" to="file.getAbsolutePath()" />
    <mutant id="mutant_829" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(&quot;The file \'&quot; / (file.getAbsolutePath()))" />
    <mutant id="mutant_1652" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (op.path()))" to="(('/' + serviceName) - (op.path()))" />
    <mutant id="mutant_1653" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (op.path()))" to="('/' + serviceName)" />
    <mutant id="mutant_1650" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (op.path()))" to="(('/' + serviceName) % (op.path()))" />
    <mutant id="mutant_1651" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (op.path()))" to="op.path()" />
    <mutant id="mutant_1658" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No REST binding for &quot; + (service.name()))" to="(&quot;No REST binding for &quot; * (service.name()))" />
    <mutant id="mutant_1659" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No REST binding for &quot; + (service.name()))" to="(&quot;No REST binding for &quot; - (service.name()))" />
    <mutant id="mutant_1656" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No REST binding for &quot; + (service.name()))" to="(&quot;No REST binding for &quot; / (service.name()))" />
    <mutant id="mutant_1657" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No REST binding for &quot; + (service.name()))" to="&quot;No REST binding for &quot;" />
    <mutant id="mutant_1654" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (op.path()))" to="(('/' + serviceName) / (op.path()))" />
    <mutant id="mutant_1655" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No REST binding for &quot; + (service.name()))" to="(&quot;No REST binding for &quot; % (service.name()))" />
    <mutant id="mutant_833" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(file.getAbsolutePath())" />
    <mutant id="mutant_834" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(&quot;The file \'&quot; % (file.getAbsolutePath()))" />
    <mutant id="mutant_835" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;)" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) / &quot;\' has errors&quot;)" />
    <mutant id="mutant_836" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;)" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) * &quot;\' has errors&quot;)" />
    <mutant id="mutant_830" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(&quot;The file \'&quot; * (file.getAbsolutePath()))" />
    <mutant id="mutant_831" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="(&quot;The file \'&quot; - (file.getAbsolutePath()))" />
    <mutant id="mutant_832" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="&quot;The file \'&quot;" />
    <mutant id="mutant_837" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;)" to="(&quot;The file \'&quot; + (file.getAbsolutePath()))" />
    <mutant id="mutant_838" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;)" to="&quot;\' has errors&quot;" />
    <mutant id="mutant_839" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;)" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) - &quot;\' has errors&quot;)" />
    <mutant id="mutant_1641" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (service.path()))" to="(('/' + serviceName) - (service.path()))" />
    <mutant id="mutant_1642" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (service.path()))" to="service.path()" />
    <mutant id="mutant_1640" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (service.path()))" to="('/' + serviceName)" />
    <mutant id="mutant_1649" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (op.path()))" to="(('/' + serviceName) * (op.path()))" />
    <mutant id="mutant_1647" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="serviceName" />
    <mutant id="mutant_1648" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="'/'" />
    <mutant id="mutant_1645" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="('/' * serviceName)" />
    <mutant id="mutant_1646" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="('/' % serviceName)" />
    <mutant id="mutant_1643" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="('/' / serviceName)" />
    <mutant id="mutant_1644" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="('/' - serviceName)" />
    <mutant id="mutant_844" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(&quot;The file &quot; + entry)" to="entry" />
    <mutant id="mutant_845" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(&quot;The file &quot; + entry)" to="(&quot;The file &quot; * entry)" />
    <mutant id="mutant_846" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(&quot;The file &quot; + entry)" to="(&quot;The file &quot; - entry)" />
    <mutant id="mutant_847" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="((&quot;The file &quot; + entry) + &quot;is empty&quot;)" to="&quot;is empty&quot;" />
    <mutant id="mutant_840" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;)" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) % &quot;\' has errors&quot;)" />
    <mutant id="mutant_841" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(&quot;The file &quot; + entry)" to="&quot;The file &quot;" />
    <mutant id="mutant_842" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(&quot;The file &quot; + entry)" to="(&quot;The file &quot; % entry)" />
    <mutant id="mutant_843" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(&quot;The file &quot; + entry)" to="(&quot;The file &quot; / entry)" />
    <mutant id="mutant_848" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="((&quot;The file &quot; + entry) + &quot;is empty&quot;)" to="(&quot;The file &quot; + entry)" />
    <mutant id="mutant_849" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="((&quot;The file &quot; + entry) + &quot;is empty&quot;)" to="((&quot;The file &quot; + entry) / &quot;is empty&quot;)" />
    <mutant id="mutant_1234" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler(java.lang.Object,java.util.Set,java.lang.String)" from="fieldName + (BeanFilter.DELIMITER)" to="fieldName / (BeanFilter.DELIMITER)" />
    <mutant id="mutant_1235" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler(java.lang.Object,java.util.Set,java.lang.String)" from="fieldName + (BeanFilter.DELIMITER)" to="fieldName - (BeanFilter.DELIMITER)" />
    <mutant id="mutant_1232" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler(java.lang.Object,java.util.Set,java.lang.String)" from="fieldName + (BeanFilter.DELIMITER)" to="fieldName" />
    <mutant id="mutant_1233" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler(java.lang.Object,java.util.Set,java.lang.String)" from="fieldName + (BeanFilter.DELIMITER)" to="fieldName % (BeanFilter.DELIMITER)" />
    <mutant id="mutant_1230" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName()))" to="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) - (dataClass.getName()))" />
    <mutant id="mutant_1231" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler(java.lang.Object,java.util.Set,java.lang.String)" from="fieldName + (BeanFilter.DELIMITER)" to="BeanFilter.DELIMITER" />
    <mutant id="mutant_1238" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(prefix) + (method.getName().substring(3).toLowerCase())" to="(prefix) - (method.getName().substring(3).toLowerCase())" />
    <mutant id="mutant_1239" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(prefix) + (method.getName().substring(3).toLowerCase())" to="prefix" />
    <mutant id="mutant_1236" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler(java.lang.Object,java.util.Set,java.lang.String)" from="fieldName + (BeanFilter.DELIMITER)" to="fieldName * (BeanFilter.DELIMITER)" />
    <mutant id="mutant_1237" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(prefix) + (method.getName().substring(3).toLowerCase())" to="(prefix) / (method.getName().substring(3).toLowerCase())" />
    <mutant id="mutant_855" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(&quot;Property \'&quot; + propertyName)" to="(&quot;Property \'&quot; - propertyName)" />
    <mutant id="mutant_856" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(&quot;Property \'&quot; + propertyName)" to="(&quot;Property \'&quot; * propertyName)" />
    <mutant id="mutant_857" viable="true" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(&quot;Property \'&quot; + propertyName)" to="propertyName" />
    <mutant id="mutant_858" viable="true" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(&quot;Property \'&quot; + propertyName)" to="&quot;Property \'&quot;" />
    <mutant id="mutant_851" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="((&quot;The file &quot; + entry) + &quot;is empty&quot;)" to="((&quot;The file &quot; + entry) * &quot;is empty&quot;)" />
    <mutant id="mutant_852" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="((&quot;The file &quot; + entry) + &quot;is empty&quot;)" to="((&quot;The file &quot; + entry) - &quot;is empty&quot;)" />
    <mutant id="mutant_853" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(&quot;Property \'&quot; + propertyName)" to="(&quot;Property \'&quot; % propertyName)" />
    <mutant id="mutant_854" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(&quot;Property \'&quot; + propertyName)" to="(&quot;Property \'&quot; / propertyName)" />
    <mutant id="mutant_859" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" to="((&quot;Property \'&quot; + propertyName) / &quot;\' not defined in class &quot;)" />
    <mutant id="mutant_1223" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" to="((&quot;Method &quot; + (method.getName())) % &quot; has wrong return type by &quot;)" />
    <mutant id="mutant_1224" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" to="(&quot;Method &quot; + (method.getName()))" />
    <mutant id="mutant_1221" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" to="&quot; has wrong return type by &quot;" />
    <mutant id="mutant_1222" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" to="((&quot;Method &quot; + (method.getName())) / &quot; has wrong return type by &quot;)" />
    <mutant id="mutant_1220" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" to="((&quot;Method &quot; + (method.getName())) - &quot; has wrong return type by &quot;)" />
    <mutant id="mutant_1229" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName()))" to="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) % (dataClass.getName()))" />
    <mutant id="mutant_850" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="((&quot;The file &quot; + entry) + &quot;is empty&quot;)" to="((&quot;The file &quot; + entry) % &quot;is empty&quot;)" />
    <mutant id="mutant_1227" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName()))" to="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) / (dataClass.getName()))" />
    <mutant id="mutant_1228" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName()))" to="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) * (dataClass.getName()))" />
    <mutant id="mutant_1225" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName()))" to="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" />
    <mutant id="mutant_1226" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName()))" to="dataClass.getName()" />
    <mutant id="mutant_866" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName()))" to="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) - (result.getClass().getName()))" />
    <mutant id="mutant_867" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName()))" to="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) % (result.getClass().getName()))" />
    <mutant id="mutant_868" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName()))" to="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) / (result.getClass().getName()))" />
    <mutant id="mutant_869" viable="true" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName()))" to="result.getClass().getName()" />
    <mutant id="mutant_862" viable="true" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" to="(&quot;Property \'&quot; + propertyName)" />
    <mutant id="mutant_863" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" to="((&quot;Property \'&quot; + propertyName) % &quot;\' not defined in class &quot;)" />
    <mutant id="mutant_864" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" to="((&quot;Property \'&quot; + propertyName) - &quot;\' not defined in class &quot;)" />
    <mutant id="mutant_865" viable="true" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName()))" to="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" />
    <mutant id="mutant_1212" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName()))" to="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) - (dataClass.getName()))" />
    <mutant id="mutant_1696" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No RPC binding for &quot; + (service.name())) + '.')" to="((&quot;No RPC binding for &quot; + (service.name())) / '.')" />
    <mutant id="mutant_1213" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="&quot;Method &quot;" />
    <mutant id="mutant_1697" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName()))" to="(((&quot;No RPC binding for &quot; + (service.name())) + '.') / (m.getName()))" />
    <mutant id="mutant_1210" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName()))" to="dataClass.getName()" />
    <mutant id="mutant_1694" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No RPC binding for &quot; + (service.name())) + '.')" to="((&quot;No RPC binding for &quot; + (service.name())) % '.')" />
    <mutant id="mutant_1211" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName()))" to="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) * (dataClass.getName()))" />
    <mutant id="mutant_1695" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No RPC binding for &quot; + (service.name())) + '.')" to="((&quot;No RPC binding for &quot; + (service.name())) * '.')" />
    <mutant id="mutant_1692" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No RPC binding for &quot; + (service.name())) + '.')" to="(&quot;No RPC binding for &quot; + (service.name()))" />
    <mutant id="mutant_1693" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No RPC binding for &quot; + (service.name())) + '.')" to="((&quot;No RPC binding for &quot; + (service.name())) - '.')" />
    <mutant id="mutant_1690" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No RPC binding for &quot; + (service.name()))" to="(service.name())" />
    <mutant id="mutant_1691" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No RPC binding for &quot; + (service.name())) + '.')" to="'.'" />
    <mutant id="mutant_860" viable="true" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" to="&quot;\' not defined in class &quot;" />
    <mutant id="mutant_1218" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(&quot;Method &quot; % (method.getName()))" />
    <mutant id="mutant_861" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" to="((&quot;Property \'&quot; + propertyName) * &quot;\' not defined in class &quot;)" />
    <mutant id="mutant_1219" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" to="((&quot;Method &quot; + (method.getName())) * &quot; has wrong return type by &quot;)" />
    <mutant id="mutant_1216" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(&quot;Method &quot; - (method.getName()))" />
    <mutant id="mutant_1217" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(method.getName())" />
    <mutant id="mutant_1214" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(&quot;Method &quot; / (method.getName()))" />
    <mutant id="mutant_1698" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName()))" to="(((&quot;No RPC binding for &quot; + (service.name())) + '.') - (m.getName()))" />
    <mutant id="mutant_1215" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(&quot;Method &quot; * (method.getName()))" />
    <mutant id="mutant_1699" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName()))" to="(((&quot;No RPC binding for &quot; + (service.name())) + '.') * (m.getName()))" />
    <mutant id="mutant_877" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; - (object.getClass()))" />
    <mutant id="mutant_878" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="&quot;Could not get property &quot;" />
    <mutant id="mutant_879" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; / (object.getClass()))" />
    <mutant id="mutant_873" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$1.load(java.lang.Class)" from="(&quot;Cannot get BeanInfo of type &quot; + (type.getName()))" to="(&quot;Cannot get BeanInfo of type &quot; - (type.getName()))" />
    <mutant id="mutant_874" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$1.load(java.lang.Class)" from="(&quot;Cannot get BeanInfo of type &quot; + (type.getName()))" to="(&quot;Cannot get BeanInfo of type &quot; / (type.getName()))" />
    <mutant id="mutant_875" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$1.load(java.lang.Class)" from="(&quot;Cannot get BeanInfo of type &quot; + (type.getName()))" to="(&quot;Cannot get BeanInfo of type &quot; * (type.getName()))" />
    <mutant id="mutant_876" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$1.load(java.lang.Class)" from="(&quot;Cannot get BeanInfo of type &quot; + (type.getName()))" to="&quot;Cannot get BeanInfo of type &quot;" />
    <mutant id="mutant_1201" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" to="((&quot;Method &quot; + (method.getName())) / &quot; is not implemented by &quot;)" />
    <mutant id="mutant_1685" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No RPC binding for &quot; + (service.name()))" to="(&quot;No RPC binding for &quot; % (service.name()))" />
    <mutant id="mutant_1202" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" to="((&quot;Method &quot; + (method.getName())) - &quot; is not implemented by &quot;)" />
    <mutant id="mutant_1686" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No RPC binding for &quot; + (service.name()))" to="&quot;No RPC binding for &quot;" />
    <mutant id="mutant_1683" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((service.name()) + '.') + opName)" to="(((service.name()) + '.') - opName)" />
    <mutant id="mutant_1200" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="(&quot;Method &quot; % (method.getName()))" />
    <mutant id="mutant_1684" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((service.name()) + '.') + opName)" to="(((service.name()) + '.') / opName)" />
    <mutant id="mutant_1681" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((service.name()) + '.') + opName)" to="((service.name()) + '.')" />
    <mutant id="mutant_1682" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((service.name()) + '.') + opName)" to="opName" />
    <mutant id="mutant_1680" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((service.name()) + '.') + opName)" to="(((service.name()) + '.') % opName)" />
    <mutant id="mutant_1209" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName()))" to="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) / (dataClass.getName()))" />
    <mutant id="mutant_870" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName()))" to="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) * (result.getClass().getName()))" />
    <mutant id="mutant_871" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$1.load(java.lang.Class)" from="(&quot;Cannot get BeanInfo of type &quot; + (type.getName()))" to="(&quot;Cannot get BeanInfo of type &quot; % (type.getName()))" />
    <mutant id="mutant_1207" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName()))" to="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) % (dataClass.getName()))" />
    <mutant id="mutant_872" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$1.load(java.lang.Class)" from="(&quot;Cannot get BeanInfo of type &quot; + (type.getName()))" to="type.getName()" />
    <mutant id="mutant_1208" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName()))" to="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" />
    <mutant id="mutant_1205" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" to="((&quot;Method &quot; + (method.getName())) * &quot; is not implemented by &quot;)" />
    <mutant id="mutant_1689" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No RPC binding for &quot; + (service.name()))" to="(&quot;No RPC binding for &quot; - (service.name()))" />
    <mutant id="mutant_1206" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" to="((&quot;Method &quot; + (method.getName())) % &quot; is not implemented by &quot;)" />
    <mutant id="mutant_1203" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" to="(&quot;Method &quot; + (method.getName()))" />
    <mutant id="mutant_1687" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No RPC binding for &quot; + (service.name()))" to="(&quot;No RPC binding for &quot; / (service.name()))" />
    <mutant id="mutant_1204" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" to="&quot; is not implemented by &quot;" />
    <mutant id="mutant_1688" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No RPC binding for &quot; + (service.name()))" to="(&quot;No RPC binding for &quot; * (service.name()))" />
    <mutant id="mutant_404" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="(prefix / '(')" />
    <mutant id="mutant_888" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) - '.')" />
    <mutant id="mutant_405" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="(prefix * '(')" />
    <mutant id="mutant_889" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') * (property.getName()))" />
    <mutant id="mutant_406" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="(prefix % '(')" />
    <mutant id="mutant_407" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="i" />
    <mutant id="mutant_400" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="((prefix + '(') + i)" />
    <mutant id="mutant_884" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) % '.')" />
    <mutant id="mutant_401" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="(prefix - '(')" />
    <mutant id="mutant_885" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(&quot;Could not get property &quot; + (object.getClass()))" />
    <mutant id="mutant_402" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="prefix" />
    <mutant id="mutant_886" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) * '.')" />
    <mutant id="mutant_403" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="'('" />
    <mutant id="mutant_887" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="((&quot;Could not get property &quot; + (object.getClass())) / '.')" />
    <mutant id="mutant_1281" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="((&quot;No enum value &quot; + value) + &quot; in &quot;)" to="(&quot;No enum value &quot; + value)" />
    <mutant id="mutant_1282" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="((&quot;No enum value &quot; + value) + &quot; in &quot;)" to="&quot; in &quot;" />
    <mutant id="mutant_1280" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="((&quot;No enum value &quot; + value) + &quot; in &quot;)" to="((&quot;No enum value &quot; + value) * &quot; in &quot;)" />
    <mutant id="mutant_408" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="((prefix + '(') * i)" />
    <mutant id="mutant_409" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="((prefix + '(') - i)" />
    <mutant id="mutant_1278" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(&quot;No enum value &quot; + value)" to="(&quot;No enum value &quot; * value)" />
    <mutant id="mutant_1279" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="((&quot;No enum value &quot; + value) + &quot; in &quot;)" to="((&quot;No enum value &quot; + value) % &quot; in &quot;)" />
    <mutant id="mutant_1276" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(&quot;No enum value &quot; + value)" to="(&quot;No enum value &quot; % value)" />
    <mutant id="mutant_1277" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(&quot;No enum value &quot; + value)" to="value" />
    <mutant id="mutant_1274" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(&quot;No enum value &quot; + value)" to="(&quot;No enum value &quot; / value)" />
    <mutant id="mutant_1275" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(&quot;No enum value &quot; + value)" to="&quot;No enum value &quot;" />
    <mutant id="mutant_1272" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((fieldName + (BeanFilter.DELIMITER)) + field)" to="((fieldName + (BeanFilter.DELIMITER)) % field)" />
    <mutant id="mutant_1273" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(&quot;No enum value &quot; + value)" to="(&quot;No enum value &quot; - value)" />
    <mutant id="mutant_880" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(object.getClass())" />
    <mutant id="mutant_881" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; * (object.getClass()))" />
    <mutant id="mutant_882" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; % (object.getClass()))" />
    <mutant id="mutant_883" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="'.'" />
    <mutant id="mutant_415" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="(((prefix + '(') + i) * ')')" />
    <mutant id="mutant_899" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; * (object.getClass()))" />
    <mutant id="mutant_416" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="')'" />
    <mutant id="mutant_417" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="(((prefix + '(') + i) % ')')" />
    <mutant id="mutant_418" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="((prefix + '(') + i)" />
    <mutant id="mutant_411" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="(prefix + '(')" />
    <mutant id="mutant_895" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; - (object.getClass()))" />
    <mutant id="mutant_412" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="((prefix + '(') % i)" />
    <mutant id="mutant_896" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="&quot;Could not get property &quot;" />
    <mutant id="mutant_413" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="(((prefix + '(') + i) / ')')" />
    <mutant id="mutant_897" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(&quot;Could not get property &quot; / (object.getClass()))" />
    <mutant id="mutant_414" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="(((prefix + '(') + i) - ')')" />
    <mutant id="mutant_898" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="(object.getClass())" />
    <mutant id="mutant_1270" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((fieldName + (BeanFilter.DELIMITER)) + field)" to="((fieldName + (BeanFilter.DELIMITER)) * field)" />
    <mutant id="mutant_1271" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((fieldName + (BeanFilter.DELIMITER)) + field)" to="((fieldName + (BeanFilter.DELIMITER)) - field)" />
    <mutant id="mutant_419" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="version.major" />
    <mutant id="mutant_1267" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((fieldName + (BeanFilter.DELIMITER)) + field)" to="field" />
    <mutant id="mutant_1268" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((fieldName + (BeanFilter.DELIMITER)) + field)" to="(fieldName + (BeanFilter.DELIMITER))" />
    <mutant id="mutant_1265" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(fieldName + (BeanFilter.DELIMITER))" to="(fieldName - (BeanFilter.DELIMITER))" />
    <mutant id="mutant_1266" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(fieldName + (BeanFilter.DELIMITER))" to="(fieldName * (BeanFilter.DELIMITER))" />
    <mutant id="mutant_1263" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(fieldName + (BeanFilter.DELIMITER))" to="(fieldName % (BeanFilter.DELIMITER))" />
    <mutant id="mutant_1264" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(fieldName + (BeanFilter.DELIMITER))" to="(fieldName / (BeanFilter.DELIMITER))" />
    <mutant id="mutant_1261" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(fieldName + (BeanFilter.DELIMITER))" to="(BeanFilter.DELIMITER)" />
    <mutant id="mutant_1262" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(fieldName + (BeanFilter.DELIMITER))" to="fieldName" />
    <mutant id="mutant_891" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((&quot;Could not get property &quot; + (object.getClass())) + '.')" />
    <mutant id="mutant_892" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') % (property.getName()))" />
    <mutant id="mutant_893" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="property.getName()" />
    <mutant id="mutant_410" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="((prefix + '(') / i)" />
    <mutant id="mutant_894" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') - (property.getName()))" />
    <mutant id="mutant_1269" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((fieldName + (BeanFilter.DELIMITER)) + field)" to="((fieldName + (BeanFilter.DELIMITER)) / field)" />
    <mutant id="mutant_890" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') / (property.getName()))" />
    <mutant id="mutant_426" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="version.minor" />
    <mutant id="mutant_427" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="(version.minor) / (minor)" />
    <mutant id="mutant_428" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="(version.minor) % (minor)" />
    <mutant id="mutant_429" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="(version.patch) % (patch)" />
    <mutant id="mutant_422" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="(version.major) * (major)" />
    <mutant id="mutant_423" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="(version.major) + (major)" />
    <mutant id="mutant_424" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="(version.minor) + (minor)" />
    <mutant id="mutant_425" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="(version.minor) * (minor)" />
    <mutant id="mutant_1260" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(depth - 1)" to="(depth % 1)" />
    <mutant id="mutant_1256" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(depth - 1)" to="(depth * 1)" />
    <mutant id="mutant_1257" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(depth - 1)" to="depth" />
    <mutant id="mutant_1254" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))" to="((fieldName + (BeanFilter.DELIMITER)) * (BeanFilter.ALL_FIELDS))" />
    <mutant id="mutant_1255" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(depth - 1)" to="1" />
    <mutant id="mutant_1252" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))" to="((fieldName + (BeanFilter.DELIMITER)) / (BeanFilter.ALL_FIELDS))" />
    <mutant id="mutant_1253" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))" to="((fieldName + (BeanFilter.DELIMITER)) - (BeanFilter.ALL_FIELDS))" />
    <mutant id="mutant_1250" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))" to="((fieldName + (BeanFilter.DELIMITER)) % (BeanFilter.ALL_FIELDS))" />
    <mutant id="mutant_1251" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))" to="(fieldName + (BeanFilter.DELIMITER))" />
    <mutant id="mutant_420" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="(version.major) / (major)" />
    <mutant id="mutant_421" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="(version.major) % (major)" />
    <mutant id="mutant_1258" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(depth - 1)" to="(depth + 1)" />
    <mutant id="mutant_1259" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(depth - 1)" to="(depth / 1)" />
    <mutant id="mutant_437" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="(version.major) * (major)" />
    <mutant id="mutant_438" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="(version.major) + (major)" />
    <mutant id="mutant_439" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="(version.minor) + (minor)" />
    <mutant id="mutant_433" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="version.patch" />
    <mutant id="mutant_434" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="version.major" />
    <mutant id="mutant_435" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="(version.major) / (major)" />
    <mutant id="mutant_436" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="(version.major) % (major)" />
    <mutant id="mutant_1245" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(fieldName + (BeanFilter.DELIMITER))" to="(fieldName % (BeanFilter.DELIMITER))" />
    <mutant id="mutant_1246" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(fieldName + (BeanFilter.DELIMITER))" to="(fieldName / (BeanFilter.DELIMITER))" />
    <mutant id="mutant_1243" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(fieldName + (BeanFilter.DELIMITER))" to="(BeanFilter.DELIMITER)" />
    <mutant id="mutant_1244" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(fieldName + (BeanFilter.DELIMITER))" to="fieldName" />
    <mutant id="mutant_1241" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(prefix) + (method.getName().substring(3).toLowerCase())" to="(prefix) * (method.getName().substring(3).toLowerCase())" />
    <mutant id="mutant_1242" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(prefix) + (method.getName().substring(3).toLowerCase())" to="(prefix) % (method.getName().substring(3).toLowerCase())" />
    <mutant id="mutant_1240" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(prefix) + (method.getName().substring(3).toLowerCase())" to="method.getName().substring(3).toLowerCase()" />
    <mutant id="mutant_430" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="(version.patch) / (patch)" />
    <mutant id="mutant_431" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="(version.patch) + (patch)" />
    <mutant id="mutant_432" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="(version.patch) * (patch)" />
    <mutant id="mutant_1249" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))" to="BeanFilter.ALL_FIELDS" />
    <mutant id="mutant_1247" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(fieldName + (BeanFilter.DELIMITER))" to="(fieldName - (BeanFilter.DELIMITER))" />
    <mutant id="mutant_1248" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(fieldName + (BeanFilter.DELIMITER))" to="(fieldName * (BeanFilter.DELIMITER))" />
    <mutant id="mutant_327" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.buildHolder(org.json.JSONObject,java.lang.String[],int)" from="((steps.length) - 2)" to="((steps.length) + 2)" />
    <mutant id="mutant_328" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.buildHolder(org.json.JSONObject,java.lang.String[],int)" from="((steps.length) - 2)" to="(steps.length)" />
    <mutant id="mutant_329" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.fromRequest(javax.servlet.http.HttpServletRequest)" from="((path.length) - 1)" to="((path.length) / 1)" />
    <mutant id="mutant_323" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.buildHolder(org.json.JSONObject,java.lang.String[],int)" from="((steps.length) - 2)" to="2" />
    <mutant id="mutant_324" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.buildHolder(org.json.JSONObject,java.lang.String[],int)" from="((steps.length) - 2)" to="((steps.length) % 2)" />
    <mutant id="mutant_325" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.buildHolder(org.json.JSONObject,java.lang.String[],int)" from="((steps.length) - 2)" to="((steps.length) * 2)" />
    <mutant id="mutant_326" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.buildHolder(org.json.JSONObject,java.lang.String[],int)" from="((steps.length) - 2)" to="((steps.length) / 2)" />
    <mutant id="mutant_1083" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) * (alias))" />
    <mutant id="mutant_1084" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) / (alias))" />
    <mutant id="mutant_1081" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(alias)" />
    <mutant id="mutant_1082" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1080" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="((((type) + &quot;.get&quot;) + (fieldName)) / &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1078" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="(((type) + &quot;.get&quot;) + (fieldName))" />
    <mutant id="mutant_1079" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="((((type) + &quot;.get&quot;) + (fieldName)) - &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1076" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="((((type) + &quot;.get&quot;) + (fieldName)) % &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1077" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="((((type) + &quot;.get&quot;) + (fieldName)) * &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1074" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="((type) + &quot;.get&quot;)" />
    <mutant id="mutant_1075" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="&quot;() &lt;-&gt; &lt;&quot;" />
    <mutant id="mutant_320" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + value) + ']')" to="(('[' + value) - ']')" />
    <mutant id="mutant_321" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + value) + ']')" to="(('[' + value) / ']')" />
    <mutant id="mutant_322" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + value) + ']')" to="(('[' + value) * ']')" />
    <mutant id="mutant_338" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.parametersToJsonObject(java.util.Map)" from="((path.length) - 1)" to="((path.length) * 1)" />
    <mutant id="mutant_339" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.parametersToJsonObject(java.util.Map)" from="((path.length) - 1)" to="((path.length) + 1)" />
    <mutant id="mutant_334" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.fromRequest(javax.servlet.http.HttpServletRequest)" from="((path.length) - 1)" to="path.length" />
    <mutant id="mutant_335" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.parametersToJsonObject(java.util.Map)" from="((path.length) - 1)" to="((path.length) / 1)" />
    <mutant id="mutant_336" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.parametersToJsonObject(java.util.Map)" from="((path.length) - 1)" to="1" />
    <mutant id="mutant_337" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.parametersToJsonObject(java.util.Map)" from="((path.length) - 1)" to="((path.length) % 1)" />
    <mutant id="mutant_1072" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(((type) + &quot;.get&quot;) % (fieldName))" />
    <mutant id="mutant_1073" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(fieldName)" />
    <mutant id="mutant_1070" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(((type) + &quot;.get&quot;) * (fieldName))" />
    <mutant id="mutant_1071" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(((type) + &quot;.get&quot;) - (fieldName))" />
    <mutant id="mutant_1069" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(((type) + &quot;.get&quot;) / (fieldName))" />
    <mutant id="mutant_1067" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="(type)" />
    <mutant id="mutant_1068" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="((type) * &quot;.get&quot;)" />
    <mutant id="mutant_1065" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="((type) % &quot;.get&quot;)" />
    <mutant id="mutant_1066" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="&quot;.get&quot;" />
    <mutant id="mutant_1063" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="((type) / &quot;.get&quot;)" />
    <mutant id="mutant_1064" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="((type) - &quot;.get&quot;)" />
    <mutant id="mutant_330" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.fromRequest(javax.servlet.http.HttpServletRequest)" from="((path.length) - 1)" to="1" />
    <mutant id="mutant_331" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.fromRequest(javax.servlet.http.HttpServletRequest)" from="((path.length) - 1)" to="((path.length) % 1)" />
    <mutant id="mutant_332" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.fromRequest(javax.servlet.http.HttpServletRequest)" from="((path.length) - 1)" to="((path.length) * 1)" />
    <mutant id="mutant_333" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.fromRequest(javax.servlet.http.HttpServletRequest)" from="((path.length) - 1)" to="((path.length) + 1)" />
    <mutant id="mutant_349" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="key" />
    <mutant id="mutant_345" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="(prefix * '.')" />
    <mutant id="mutant_346" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="(prefix - '.')" />
    <mutant id="mutant_347" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="((prefix + '.') / key)" />
    <mutant id="mutant_348" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="((prefix + '.') % key)" />
    <mutant id="mutant_1061" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.setBaseObject(java.lang.Object)" from="(&quot;First Child set to &quot; + clazz)" to="(&quot;First Child set to &quot; % clazz)" />
    <mutant id="mutant_1062" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.setBaseObject(java.lang.Object)" from="(&quot;First Child set to &quot; + clazz)" to="clazz" />
    <mutant id="mutant_1060" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.setBaseObject(java.lang.Object)" from="(&quot;First Child set to &quot; + clazz)" to="(&quot;First Child set to &quot; / clazz)" />
    <mutant id="mutant_1058" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.setBaseObject(java.lang.Object)" from="(&quot;First Child set to &quot; + clazz)" to="(&quot;First Child set to &quot; - clazz)" />
    <mutant id="mutant_1059" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.setBaseObject(java.lang.Object)" from="(&quot;First Child set to &quot; + clazz)" to="(&quot;First Child set to &quot; * clazz)" />
    <mutant id="mutant_1056" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName)" to="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) / fieldName)" />
    <mutant id="mutant_1057" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.setBaseObject(java.lang.Object)" from="(&quot;First Child set to &quot; + clazz)" to="&quot;First Child set to &quot;" />
    <mutant id="mutant_1054" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName)" to="fieldName" />
    <mutant id="mutant_1055" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName)" to="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" />
    <mutant id="mutant_1052" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName)" to="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) - fieldName)" />
    <mutant id="mutant_1053" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName)" to="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) * fieldName)" />
    <mutant id="mutant_341" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="'.'" />
    <mutant id="mutant_342" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="(prefix % '.')" />
    <mutant id="mutant_343" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="prefix" />
    <mutant id="mutant_344" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="(prefix / '.')" />
    <mutant id="mutant_340" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.parametersToJsonObject(java.util.Map)" from="((path.length) - 1)" to="path.length" />
    <mutant id="mutant_356" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="(prefix / '.')" />
    <mutant id="mutant_357" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="(prefix * '.')" />
    <mutant id="mutant_358" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="(prefix - '.')" />
    <mutant id="mutant_359" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="((prefix + '.') / key)" />
    <mutant id="mutant_1050" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="((&quot;--- From Super serializedClass(&quot; + type) / &quot;)  ==&quot;)" />
    <mutant id="mutant_1051" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName)" to="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) % fieldName)" />
    <mutant id="mutant_1047" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="(&quot;--- From Super serializedClass(&quot; + type)" />
    <mutant id="mutant_1048" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="&quot;)  ==&quot;" />
    <mutant id="mutant_1045" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="((&quot;--- From Super serializedClass(&quot; + type) % &quot;)  ==&quot;)" />
    <mutant id="mutant_1046" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="((&quot;--- From Super serializedClass(&quot; + type) - &quot;)  ==&quot;)" />
    <mutant id="mutant_1043" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;--- From Super serializedClass(&quot; + type)" to="&quot;--- From Super serializedClass(&quot;" />
    <mutant id="mutant_1044" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;--- From Super serializedClass(&quot; + type)" to="type" />
    <mutant id="mutant_1041" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;--- From Super serializedClass(&quot; + type)" to="(&quot;--- From Super serializedClass(&quot; % type)" />
    <mutant id="mutant_1042" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;--- From Super serializedClass(&quot; + type)" to="(&quot;--- From Super serializedClass(&quot; / type)" />
    <mutant id="mutant_352" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="((prefix + '.') * key)" />
    <mutant id="mutant_353" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="'.'" />
    <mutant id="mutant_354" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="(prefix % '.')" />
    <mutant id="mutant_355" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="prefix" />
    <mutant id="mutant_350" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="((prefix + '.') - key)" />
    <mutant id="mutant_1049" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="((&quot;--- From Super serializedClass(&quot; + type) * &quot;)  ==&quot;)" />
    <mutant id="mutant_351" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="(prefix + '.')" />
    <mutant id="mutant_367" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((jsonArrayString.length()) - 1)" to="((jsonArrayString.length()) / 1)" />
    <mutant id="mutant_368" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((jsonArrayString.length()) - 1)" to="((jsonArrayString.length()) + 1)" />
    <mutant id="mutant_369" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((jsonArrayString.length()) - 1)" to="((jsonArrayString.length()) % 1)" />
    <mutant id="mutant_363" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="(prefix + '.')" />
    <mutant id="mutant_364" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="((prefix + '.') * key)" />
    <mutant id="mutant_365" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((jsonArrayString.length()) - 1)" to="jsonArrayString.length()" />
    <mutant id="mutant_366" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((jsonArrayString.length()) - 1)" to="1" />
    <mutant id="mutant_360" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="((prefix + '.') % key)" />
    <mutant id="mutant_361" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="key" />
    <mutant id="mutant_362" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="((prefix + '.') - key)" />
    <mutant id="mutant_378" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString) + ')'" to="')'" />
    <mutant id="mutant_379" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString) + ')'" to="('(' + jsonArrayString) / ')'" />
    <mutant id="mutant_374" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString)" to="('(' / jsonArrayString)" />
    <mutant id="mutant_375" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString)" to="('(' % jsonArrayString)" />
    <mutant id="mutant_376" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString)" to="('(' * jsonArrayString)" />
    <mutant id="mutant_377" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString) + ')'" to="('(' + jsonArrayString) % ')'" />
    <mutant id="mutant_370" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((jsonArrayString.length()) - 1)" to="((jsonArrayString.length()) * 1)" />
    <mutant id="mutant_371" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString)" to="'('" />
    <mutant id="mutant_372" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString)" to="('(' - jsonArrayString)" />
    <mutant id="mutant_373" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString)" to="jsonArrayString" />
    <mutant id="mutant_389" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="i" />
    <mutant id="mutant_380" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString) + ')'" to="('(' + jsonArrayString) * ')'" />
    <mutant id="mutant_1098" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="((type) * &quot;.get&quot;)" />
    <mutant id="mutant_1099" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(((type) + &quot;.get&quot;) / (fieldName))" />
    <mutant id="mutant_1096" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="&quot;.get&quot;" />
    <mutant id="mutant_1097" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="(type)" />
    <mutant id="mutant_385" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="'('" />
    <mutant id="mutant_386" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="(prefix / '(')" />
    <mutant id="mutant_387" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="(prefix * '(')" />
    <mutant id="mutant_388" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="(prefix % '(')" />
    <mutant id="mutant_381" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString) + ')'" to="('(' + jsonArrayString) - ')'" />
    <mutant id="mutant_382" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString) + ')'" to="'(' + jsonArrayString" />
    <mutant id="mutant_383" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="(prefix - '(')" />
    <mutant id="mutant_384" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="prefix" />
    <mutant id="mutant_1094" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="((type) - &quot;.get&quot;)" />
    <mutant id="mutant_1095" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="((type) % &quot;.get&quot;)" />
    <mutant id="mutant_1092" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;'" to="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)" />
    <mutant id="mutant_1093" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="((type) / &quot;.get&quot;)" />
    <mutant id="mutant_1090" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;'" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) - '&gt;'" />
    <mutant id="mutant_1091" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;'" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) / '&gt;'" />
    <mutant id="mutant_390" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="((prefix + '(') * i)" />
    <mutant id="mutant_1089" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;'" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) * '&gt;'" />
    <mutant id="mutant_391" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="((prefix + '(') - i)" />
    <mutant id="mutant_1087" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;'" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) % '&gt;'" />
    <mutant id="mutant_1088" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;'" to="'&gt;'" />
    <mutant id="mutant_1085" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) - (alias))" />
    <mutant id="mutant_1086" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) % (alias))" />
    <mutant id="mutant_396" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="(((prefix + '(') + i) - ')')" />
    <mutant id="mutant_397" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="(((prefix + '(') + i) * ')')" />
    <mutant id="mutant_398" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="')'" />
    <mutant id="mutant_399" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="(((prefix + '(') + i) % ')')" />
    <mutant id="mutant_392" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="((prefix + '(') / i)" />
    <mutant id="mutant_393" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="(prefix + '(')" />
    <mutant id="mutant_394" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="((prefix + '(') % i)" />
    <mutant id="mutant_395" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="(((prefix + '(') + i) / ')')" />
    <mutant id="mutant_1519" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.executeRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(&quot;Handling restful request for &quot; + (servletRequest.getPathInfo()))" to="&quot;Handling restful request for &quot;" />
    <mutant id="mutant_1510" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) - (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_1517" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) / &quot; is required&quot;)" />
    <mutant id="mutant_1518" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) * &quot; is required&quot;)" />
    <mutant id="mutant_1515" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) % &quot; is required&quot;)" />
    <mutant id="mutant_1516" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="&quot; is required&quot;" />
    <mutant id="mutant_1513" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_1514" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) - &quot; is required&quot;)" />
    <mutant id="mutant_1511" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) / (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_1512" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) % (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_1508" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) * (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_1509" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" />
    <mutant id="mutant_1506" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" to="&quot;. One of &quot;" />
    <mutant id="mutant_1507" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(Joiner.on(&quot;, &quot;).join(allowedContentTypes))" />
    <mutant id="mutant_1504" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" to="((&quot;Unsupported Content-Type &quot; + contentType) - &quot;. One of &quot;)" />
    <mutant id="mutant_1505" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" to="(&quot;Unsupported Content-Type &quot; + contentType)" />
    <mutant id="mutant_1502" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" to="((&quot;Unsupported Content-Type &quot; + contentType) * &quot;. One of &quot;)" />
    <mutant id="mutant_1503" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" to="((&quot;Unsupported Content-Type &quot; + contentType) / &quot;. One of &quot;)" />
    <mutant id="mutant_1500" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Unsupported Content-Type &quot; + contentType)" to="(&quot;Unsupported Content-Type &quot; - contentType)" />
    <mutant id="mutant_1501" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" to="((&quot;Unsupported Content-Type &quot; + contentType) % &quot;. One of &quot;)" />
    <mutant id="mutant_1553" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 1)" to="((part.length()) % 1)" />
    <mutant id="mutant_1554" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 1)" to="((part.length()) * 1)" />
    <mutant id="mutant_1551" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 1)" to="((part.length()) / 1)" />
    <mutant id="mutant_1552" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 1)" to="((part.length()) + 1)" />
    <mutant id="mutant_1550" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 1)" to="1" />
    <mutant id="mutant_1559" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="(&quot;Invalid REST path part format &quot; + part)" to="&quot;Invalid REST path part format &quot;" />
    <mutant id="mutant_1557" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="(&quot;Invalid REST path part format &quot; + part)" to="(&quot;Invalid REST path part format &quot; / part)" />
    <mutant id="mutant_1558" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="(&quot;Invalid REST path part format &quot; + part)" to="(&quot;Invalid REST path part format &quot; % part)" />
    <mutant id="mutant_1555" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="(&quot;Invalid REST path part format &quot; + part)" to="(&quot;Invalid REST path part format &quot; * part)" />
    <mutant id="mutant_1556" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="(&quot;Invalid REST path part format &quot; + part)" to="(&quot;Invalid REST path part format &quot; - part)" />
    <mutant id="mutant_1542" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(callback + '(')" to="(callback % '(')" />
    <mutant id="mutant_1543" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 2)" to="part.length()" />
    <mutant id="mutant_1540" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(callback + '(')" to="'('" />
    <mutant id="mutant_1541" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(callback + '(')" to="(callback - '(')" />
    <mutant id="mutant_1548" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 2)" to="((part.length()) * 2)" />
    <mutant id="mutant_1549" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 1)" to="part.length()" />
    <mutant id="mutant_1546" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 2)" to="((part.length()) + 2)" />
    <mutant id="mutant_1547" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 2)" to="((part.length()) % 2)" />
    <mutant id="mutant_1544" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 2)" to="2" />
    <mutant id="mutant_1545" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 2)" to="((part.length()) / 2)" />
    <mutant id="mutant_701" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="&quot;:&quot; + serverPort" to="&quot;:&quot; * serverPort" />
    <mutant id="mutant_702" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="&quot;:&quot; + serverPort" to="&quot;:&quot;" />
    <mutant id="mutant_703" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" to="(req.getServerName()) % ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" />
    <mutant id="mutant_704" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" to="(req.getServerName()) - ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" />
    <mutant id="mutant_700" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="&quot;:&quot; + serverPort" to="serverPort" />
    <mutant id="mutant_709" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((e.getMessage()) + &quot; At: (&quot;)" to="((e.getMessage()) % &quot; At: (&quot;)" />
    <mutant id="mutant_705" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" to="req.getServerName()" />
    <mutant id="mutant_706" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" to="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort" />
    <mutant id="mutant_707" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" to="(req.getServerName()) * ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" />
    <mutant id="mutant_708" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" to="(req.getServerName()) / ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" />
    <mutant id="mutant_1531" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : content type is null &quot; + (t.toString()))" to="(&quot;Unexpected error : content type is null &quot; / (t.toString()))" />
    <mutant id="mutant_1532" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : content type is null &quot; + (t.toString()))" to="&quot;Unexpected error : content type is null &quot;" />
    <mutant id="mutant_1530" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : format param is null &quot; + (t.toString()))" to="(&quot;Unexpected error : format param is null &quot; * (t.toString()))" />
    <mutant id="mutant_1539" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(callback + '(')" to="(callback / '(')" />
    <mutant id="mutant_1537" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(callback + '(')" to="callback" />
    <mutant id="mutant_1538" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(callback + '(')" to="(callback * '(')" />
    <mutant id="mutant_1535" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : content type is null &quot; + (t.toString()))" to="t.toString()" />
    <mutant id="mutant_1536" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : content type is null &quot; + (t.toString()))" to="(&quot;Unexpected error : content type is null &quot; * (t.toString()))" />
    <mutant id="mutant_1533" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : content type is null &quot; + (t.toString()))" to="(&quot;Unexpected error : content type is null &quot; % (t.toString()))" />
    <mutant id="mutant_1534" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : content type is null &quot; + (t.toString()))" to="(&quot;Unexpected error : content type is null &quot; - (t.toString()))" />
    <mutant id="mutant_712" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((e.getMessage()) + &quot; At: (&quot;)" to="((e.getMessage()) * &quot; At: (&quot;)" />
    <mutant id="mutant_713" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((e.getMessage()) + &quot; At: (&quot;)" to="((e.getMessage()) - &quot; At: (&quot;)" />
    <mutant id="mutant_714" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((e.getMessage()) + &quot; At: (&quot;)" to="(e.getMessage())" />
    <mutant id="mutant_715" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" to="(e.getLineNumber())" />
    <mutant id="mutant_710" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((e.getMessage()) + &quot; At: (&quot;)" to="&quot; At: (&quot;" />
    <mutant id="mutant_711" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((e.getMessage()) + &quot; At: (&quot;)" to="((e.getMessage()) / &quot; At: (&quot;)" />
    <mutant id="mutant_716" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" to="(((e.getMessage()) + &quot; At: (&quot;) * (e.getLineNumber()))" />
    <mutant id="mutant_717" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" to="(((e.getMessage()) + &quot; At: (&quot;) - (e.getLineNumber()))" />
    <mutant id="mutant_718" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" to="((e.getMessage()) + &quot; At: (&quot;)" />
    <mutant id="mutant_719" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" to="(((e.getMessage()) + &quot; At: (&quot;) % (e.getLineNumber()))" />
    <mutant id="mutant_1520" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.executeRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(&quot;Handling restful request for &quot; + (servletRequest.getPathInfo()))" to="(&quot;Handling restful request for &quot; % (servletRequest.getPathInfo()))" />
    <mutant id="mutant_1521" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.executeRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(&quot;Handling restful request for &quot; + (servletRequest.getPathInfo()))" to="(&quot;Handling restful request for &quot; / (servletRequest.getPathInfo()))" />
    <mutant id="mutant_1528" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : format param is null &quot; + (t.toString()))" to="(&quot;Unexpected error : format param is null &quot; - (t.toString()))" />
    <mutant id="mutant_1529" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : format param is null &quot; + (t.toString()))" to="&quot;Unexpected error : format param is null &quot;" />
    <mutant id="mutant_1526" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : format param is null &quot; + (t.toString()))" to="t.toString()" />
    <mutant id="mutant_1527" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : format param is null &quot; + (t.toString()))" to="(&quot;Unexpected error : format param is null &quot; % (t.toString()))" />
    <mutant id="mutant_1524" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.executeRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(&quot;Handling restful request for &quot; + (servletRequest.getPathInfo()))" to="(&quot;Handling restful request for &quot; * (servletRequest.getPathInfo()))" />
    <mutant id="mutant_1525" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : format param is null &quot; + (t.toString()))" to="(&quot;Unexpected error : format param is null &quot; / (t.toString()))" />
    <mutant id="mutant_1522" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.executeRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(&quot;Handling restful request for &quot; + (servletRequest.getPathInfo()))" to="servletRequest.getPathInfo()" />
    <mutant id="mutant_1523" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.executeRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(&quot;Handling restful request for &quot; + (servletRequest.getPathInfo()))" to="(&quot;Handling restful request for &quot; - (servletRequest.getPathInfo()))" />
    <mutant id="mutant_723" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" to="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) * ',')" />
    <mutant id="mutant_724" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" to="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) - ',')" />
    <mutant id="mutant_725" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" to="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) % ',')" />
    <mutant id="mutant_726" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" to="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" />
    <mutant id="mutant_720" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" to="(((e.getMessage()) + &quot; At: (&quot;) / (e.getLineNumber()))" />
    <mutant id="mutant_721" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" to="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) / ',')" />
    <mutant id="mutant_722" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" to="','" />
    <mutant id="mutant_727" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" to="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') * (e.getColumnNumber()))" />
    <mutant id="mutant_728" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" to="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" />
    <mutant id="mutant_729" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" to="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') / (e.getColumnNumber()))" />
    <mutant id="mutant_1113" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) * (alias))" />
    <mutant id="mutant_1597" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath))" to="operationPath" />
    <mutant id="mutant_1114" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) / (alias))" />
    <mutant id="mutant_1598" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath))" to="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) * (operationPath))" />
    <mutant id="mutant_1111" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(alias)" />
    <mutant id="mutant_1595" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath))" to="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) / (operationPath))" />
    <mutant id="mutant_1112" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1596" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath))" to="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) % (operationPath))" />
    <mutant id="mutant_1593" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" to="&quot; for path &quot;" />
    <mutant id="mutant_1110" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="((((type) + &quot;.get&quot;) + (fieldName)) / &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1594" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" to="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) - &quot; for path &quot;)" />
    <mutant id="mutant_1591" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" to="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) % &quot; for path &quot;)" />
    <mutant id="mutant_1592" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" to="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" />
    <mutant id="mutant_1119" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) * &quot;&gt; inside parent &lt;&quot;)" />
    <mutant id="mutant_1117" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" to="&quot;&gt; inside parent &lt;&quot;" />
    <mutant id="mutant_1118" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) % &quot;&gt; inside parent &lt;&quot;)" />
    <mutant id="mutant_1115" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) - (alias))" />
    <mutant id="mutant_1599" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath))" to="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" />
    <mutant id="mutant_1116" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) % (alias))" />
    <mutant id="mutant_734" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')')" to="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) / ')')" />
    <mutant id="mutant_735" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')')" to="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) - ')')" />
    <mutant id="mutant_736" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')')" to="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) * ')')" />
    <mutant id="mutant_737" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')')" to="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) % ')')" />
    <mutant id="mutant_730" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" to="(e.getColumnNumber())" />
    <mutant id="mutant_731" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" to="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') - (e.getColumnNumber()))" />
    <mutant id="mutant_732" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" to="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') % (e.getColumnNumber()))" />
    <mutant id="mutant_733" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')')" to="')'" />
    <mutant id="mutant_1590" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" to="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) * &quot; for path &quot;)" />
    <mutant id="mutant_738" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')')" to="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" />
    <mutant id="mutant_739" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.lang.Object[])" from="((array.length) * (JsonSerializer.BASE_MULTIPLIER))" to="((array.length) / (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_1102" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(((type) + &quot;.get&quot;) % (fieldName))" />
    <mutant id="mutant_1586" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" to="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) * (parts.get(i)))" />
    <mutant id="mutant_1103" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(fieldName)" />
    <mutant id="mutant_1587" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" to="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) / (parts.get(i)))" />
    <mutant id="mutant_1100" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(((type) + &quot;.get&quot;) * (fieldName))" />
    <mutant id="mutant_1584" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" to="(parts.get(i))" />
    <mutant id="mutant_1101" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="(((type) + &quot;.get&quot;) - (fieldName))" />
    <mutant id="mutant_1585" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" to="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) % (parts.get(i)))" />
    <mutant id="mutant_1582" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" to="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) % &quot; for singular field &quot;)" />
    <mutant id="mutant_1583" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" to="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" />
    <mutant id="mutant_1580" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" to="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) / &quot; for singular field &quot;)" />
    <mutant id="mutant_1581" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" to="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" />
    <mutant id="mutant_1108" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="(((type) + &quot;.get&quot;) + (fieldName))" />
    <mutant id="mutant_1109" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="((((type) + &quot;.get&quot;) + (fieldName)) - &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1106" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="((((type) + &quot;.get&quot;) + (fieldName)) % &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1107" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="((((type) + &quot;.get&quot;) + (fieldName)) * &quot;() &lt;-&gt; &lt;&quot;)" />
    <mutant id="mutant_1104" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="((type) + &quot;.get&quot;)" />
    <mutant id="mutant_1588" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" to="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) - (parts.get(i)))" />
    <mutant id="mutant_1105" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="&quot;() &lt;-&gt; &lt;&quot;" />
    <mutant id="mutant_1589" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" to="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) / &quot; for path &quot;)" />
    <mutant id="mutant_745" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Collection)" from="((collection.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="((collection.size()) % (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_746" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Collection)" from="((collection.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="JsonSerializer.BASE_MULTIPLIER" />
    <mutant id="mutant_747" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Collection)" from="((collection.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="((collection.size()) - (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_748" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Collection)" from="((collection.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="((collection.size()) + (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_741" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.lang.Object[])" from="((array.length) * (JsonSerializer.BASE_MULTIPLIER))" to="((array.length) % (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_742" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.lang.Object[])" from="((array.length) * (JsonSerializer.BASE_MULTIPLIER))" to="((array.length) - (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_743" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.lang.Object[])" from="((array.length) * (JsonSerializer.BASE_MULTIPLIER))" to="array.length" />
    <mutant id="mutant_744" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.lang.Object[])" from="((array.length) * (JsonSerializer.BASE_MULTIPLIER))" to="((array.length) + (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_749" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Collection)" from="((collection.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="collection.size()" />
    <mutant id="mutant_1575" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" to="(&quot;Cannot expect plural value &quot; / (requestPathParts[i]))" />
    <mutant id="mutant_1576" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" to="(&quot;Cannot expect plural value &quot; % (requestPathParts[i]))" />
    <mutant id="mutant_1573" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" to="(requestPathParts[i])" />
    <mutant id="mutant_1574" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" to="&quot;Cannot expect plural value &quot;" />
    <mutant id="mutant_1571" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" to="(&quot;Cannot expect plural value &quot; - (requestPathParts[i]))" />
    <mutant id="mutant_1572" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" to="(&quot;Cannot expect plural value &quot; * (requestPathParts[i]))" />
    <mutant id="mutant_1570" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(this.lastConstIndex) - (other.lastConstIndex)" to="this.lastConstIndex" />
    <mutant id="mutant_740" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.lang.Object[])" from="((array.length) * (JsonSerializer.BASE_MULTIPLIER))" to="JsonSerializer.BASE_MULTIPLIER" />
    <mutant id="mutant_1579" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" to="&quot; for singular field &quot;" />
    <mutant id="mutant_1577" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" to="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) - &quot; for singular field &quot;)" />
    <mutant id="mutant_1578" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" to="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) * &quot; for singular field &quot;)" />
    <mutant id="mutant_756" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Map)" from="((map.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="map.size()" />
    <mutant id="mutant_757" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONArray)" from="((array.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="array.length()" />
    <mutant id="mutant_758" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONArray)" from="((array.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="JsonSerializer.BASE_MULTIPLIER" />
    <mutant id="mutant_759" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONArray)" from="((array.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="((array.length()) / (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_752" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Map)" from="((map.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="((map.size()) - (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_753" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Map)" from="((map.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="((map.size()) % (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_754" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Map)" from="((map.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="((map.size()) + (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_755" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Map)" from="((map.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="((map.size()) / (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_1564" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(other.constCount) - (this.constCount)" to="(other.constCount) / (this.constCount)" />
    <mutant id="mutant_1565" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(other.constCount) - (this.constCount)" to="other.constCount" />
    <mutant id="mutant_1562" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(other.constCount) - (this.constCount)" to="(other.constCount) % (this.constCount)" />
    <mutant id="mutant_1563" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(other.constCount) - (this.constCount)" to="(other.constCount) * (this.constCount)" />
    <mutant id="mutant_1560" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="(&quot;Invalid REST path part format &quot; + part)" to="part" />
    <mutant id="mutant_1561" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(other.constCount) - (this.constCount)" to="(other.constCount) + (this.constCount)" />
    <mutant id="mutant_750" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Collection)" from="((collection.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="((collection.size()) / (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_751" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Map)" from="((map.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="JsonSerializer.BASE_MULTIPLIER" />
    <mutant id="mutant_1568" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(this.lastConstIndex) - (other.lastConstIndex)" to="(this.lastConstIndex) + (other.lastConstIndex)" />
    <mutant id="mutant_1569" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(this.lastConstIndex) - (other.lastConstIndex)" to="(this.lastConstIndex) % (other.lastConstIndex)" />
    <mutant id="mutant_1566" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(this.lastConstIndex) - (other.lastConstIndex)" to="(this.lastConstIndex) / (other.lastConstIndex)" />
    <mutant id="mutant_1567" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(this.lastConstIndex) - (other.lastConstIndex)" to="(this.lastConstIndex) * (other.lastConstIndex)" />
    <mutant id="mutant_767" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONObject)" from="((object.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="((object.length()) + (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_768" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONObject)" from="((object.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="((object.length()) % (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_769" viable="true" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(&quot;Unable to load properties: &quot; + propertyFile)" to="propertyFile" />
    <mutant id="mutant_763" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONObject)" from="((object.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="JsonSerializer.BASE_MULTIPLIER" />
    <mutant id="mutant_764" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONObject)" from="((object.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="((object.length()) - (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_765" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONObject)" from="((object.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="object.length()" />
    <mutant id="mutant_766" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONObject)" from="((object.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="((object.length()) / (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_1160" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" to="((&quot;Enum &quot; + (dataClass.getName())) / &quot; don\'t have mapping for value &quot;)" />
    <mutant id="mutant_1161" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" to="((&quot;Enum &quot; + (dataClass.getName())) * &quot; don\'t have mapping for value &quot;)" />
    <mutant id="mutant_1157" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;Enum &quot; + (dataClass.getName()))" to="(&quot;Enum &quot; - (dataClass.getName()))" />
    <mutant id="mutant_1158" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;Enum &quot; + (dataClass.getName()))" to="(&quot;Enum &quot; % (dataClass.getName()))" />
    <mutant id="mutant_1155" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;Enum &quot; + (dataClass.getName()))" to="(&quot;Enum &quot; * (dataClass.getName()))" />
    <mutant id="mutant_1156" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;Enum &quot; + (dataClass.getName()))" to="(dataClass.getName())" />
    <mutant id="mutant_1153" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;Enum &quot; + (dataClass.getName()))" to="&quot;Enum &quot;" />
    <mutant id="mutant_1154" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;Enum &quot; + (dataClass.getName()))" to="(&quot;Enum &quot; / (dataClass.getName()))" />
    <mutant id="mutant_1151" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(&quot;Unsupported function: &quot; + (method.getName()))" to="(&quot;Unsupported function: &quot; - (method.getName()))" />
    <mutant id="mutant_1152" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(&quot;Unsupported function: &quot; + (method.getName()))" to="method.getName()" />
    <mutant id="mutant_760" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONArray)" from="((array.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="((array.length()) % (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_761" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONArray)" from="((array.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="((array.length()) - (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_762" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONArray)" from="((array.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="((array.length()) + (JsonSerializer.BASE_MULTIPLIER))" />
    <mutant id="mutant_1159" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" to="((&quot;Enum &quot; + (dataClass.getName())) % &quot; don\'t have mapping for value &quot;)" />
    <mutant id="mutant_778" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(&quot;Unable to locate parent \'&quot; + parent)" to="(&quot;Unable to locate parent \'&quot; - parent)" />
    <mutant id="mutant_779" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(&quot;Unable to locate parent \'&quot; + parent)" to="(&quot;Unable to locate parent \'&quot; % parent)" />
    <mutant id="mutant_774" viable="false" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(&quot;Unable to load properties: &quot; + propertyFile)" to="(&quot;Unable to load properties: &quot; - propertyFile)" />
    <mutant id="mutant_775" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(&quot;Unable to locate parent \'&quot; + parent)" to="(&quot;Unable to locate parent \'&quot; / parent)" />
    <mutant id="mutant_776" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(&quot;Unable to locate parent \'&quot; + parent)" to="(&quot;Unable to locate parent \'&quot; * parent)" />
    <mutant id="mutant_777" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(&quot;Unable to locate parent \'&quot; + parent)" to="parent" />
    <mutant id="mutant_1150" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(&quot;Unsupported function: &quot; + (method.getName()))" to="(&quot;Unsupported function: &quot; * (method.getName()))" />
    <mutant id="mutant_1146" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="((stack.size()) - 1)" to="((stack.size()) + 1)" />
    <mutant id="mutant_1147" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(&quot;Unsupported function: &quot; + (method.getName()))" to="&quot;Unsupported function: &quot;" />
    <mutant id="mutant_1144" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="((stack.size()) - 1)" to="((stack.size()) * 1)" />
    <mutant id="mutant_1145" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="((stack.size()) - 1)" to="stack.size()" />
    <mutant id="mutant_1142" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="((stack.size()) - 1)" to="1" />
    <mutant id="mutant_1143" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="((stack.size()) - 1)" to="((stack.size()) % 1)" />
    <mutant id="mutant_1140" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="((stack.size()) - 1)" to="((stack.size()) + 1)" />
    <mutant id="mutant_1141" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="((stack.size()) - 1)" to="((stack.size()) / 1)" />
    <mutant id="mutant_770" viable="false" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(&quot;Unable to load properties: &quot; + propertyFile)" to="(&quot;Unable to load properties: &quot; / propertyFile)" />
    <mutant id="mutant_771" viable="false" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(&quot;Unable to load properties: &quot; + propertyFile)" to="(&quot;Unable to load properties: &quot; * propertyFile)" />
    <mutant id="mutant_772" viable="true" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(&quot;Unable to load properties: &quot; + propertyFile)" to="&quot;Unable to load properties: &quot;" />
    <mutant id="mutant_773" viable="false" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(&quot;Unable to load properties: &quot; + propertyFile)" to="(&quot;Unable to load properties: &quot; % propertyFile)" />
    <mutant id="mutant_1148" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(&quot;Unsupported function: &quot; + (method.getName()))" to="(&quot;Unsupported function: &quot; / (method.getName()))" />
    <mutant id="mutant_1149" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(&quot;Unsupported function: &quot; + (method.getName()))" to="(&quot;Unsupported function: &quot; % (method.getName()))" />
    <mutant id="mutant_305" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + (value.substring(1, ((value.length()) - 1)))) + ']')" to="']'" />
    <mutant id="mutant_789" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" to="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) * (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" />
    <mutant id="mutant_306" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + (value.substring(1, ((value.length()) - 1)))) + ']')" to="(('[' + (value.substring(1, ((value.length()) - 1)))) % ']')" />
    <mutant id="mutant_307" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + (value.substring(1, ((value.length()) - 1)))) + ']')" to="(('[' + (value.substring(1, ((value.length()) - 1)))) / ']')" />
    <mutant id="mutant_308" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + (value.substring(1, ((value.length()) - 1)))) + ']')" to="('[' + (value.substring(1, ((value.length()) - 1))))" />
    <mutant id="mutant_301" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + (value.substring(1, ((value.length()) - 1))))" to="('[' / (value.substring(1, ((value.length()) - 1))))" />
    <mutant id="mutant_785" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" to="((&quot;Unable to locate parent \'&quot; + parent) / &quot;\' required by &quot;)" />
    <mutant id="mutant_302" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + (value.substring(1, ((value.length()) - 1))))" to="('[' % (value.substring(1, ((value.length()) - 1))))" />
    <mutant id="mutant_786" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" to="(&quot;Unable to locate parent \'&quot; + parent)" />
    <mutant id="mutant_303" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + (value.substring(1, ((value.length()) - 1))))" to="('[' - (value.substring(1, ((value.length()) - 1))))" />
    <mutant id="mutant_787" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" to="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) - (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" />
    <mutant id="mutant_304" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + (value.substring(1, ((value.length()) - 1))))" to="('[' * (value.substring(1, ((value.length()) - 1))))" />
    <mutant id="mutant_788" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" to="container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)" />
    <mutant id="mutant_309" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + (value.substring(1, ((value.length()) - 1)))) + ']')" to="(('[' + (value.substring(1, ((value.length()) - 1)))) - ']')" />
    <mutant id="mutant_1135" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="((stack.size()) - 1)" to="((stack.size()) / 1)" />
    <mutant id="mutant_1136" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="((stack.size()) - 1)" to="1" />
    <mutant id="mutant_1133" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;'" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)" />
    <mutant id="mutant_1134" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;'" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) % '&gt;'" />
    <mutant id="mutant_1131" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;'" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) / '&gt;'" />
    <mutant id="mutant_1132" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;'" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) - '&gt;'" />
    <mutant id="mutant_1130" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;'" to="'&gt;'" />
    <mutant id="mutant_781" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" to="&quot;\' required by &quot;" />
    <mutant id="mutant_782" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" to="((&quot;Unable to locate parent \'&quot; + parent) - &quot;\' required by &quot;)" />
    <mutant id="mutant_783" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" to="((&quot;Unable to locate parent \'&quot; + parent) % &quot;\' required by &quot;)" />
    <mutant id="mutant_300" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + (value.substring(1, ((value.length()) - 1))))" to="(value.substring(1, ((value.length()) - 1)))" />
    <mutant id="mutant_784" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" to="((&quot;Unable to locate parent \'&quot; + parent) * &quot;\' required by &quot;)" />
    <mutant id="mutant_1139" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="((stack.size()) - 1)" to="stack.size()" />
    <mutant id="mutant_1137" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="((stack.size()) - 1)" to="((stack.size()) % 1)" />
    <mutant id="mutant_780" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(&quot;Unable to locate parent \'&quot; + parent)" to="&quot;Unable to locate parent \'&quot;" />
    <mutant id="mutant_1138" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="((stack.size()) - 1)" to="((stack.size()) * 1)" />
    <mutant id="mutant_316" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + value)" to="value" />
    <mutant id="mutant_317" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + value) + ']')" to="']'" />
    <mutant id="mutant_318" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + value) + ']')" to="(('[' + value) % ']')" />
    <mutant id="mutant_319" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + value) + ']')" to="('[' + value)" />
    <mutant id="mutant_312" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + value)" to="('[' * value)" />
    <mutant id="mutant_796" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" to="(&quot;A container configuration doesn\'t have the &quot; - (ContainerConfig.CONTAINER_KEY))" />
    <mutant id="mutant_313" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + value)" to="'['" />
    <mutant id="mutant_797" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" to="(&quot;A container configuration doesn\'t have the &quot; / (ContainerConfig.CONTAINER_KEY))" />
    <mutant id="mutant_314" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + value)" to="('[' / value)" />
    <mutant id="mutant_798" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" to="(ContainerConfig.CONTAINER_KEY)" />
    <mutant id="mutant_315" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + value)" to="('[' % value)" />
    <mutant id="mutant_799" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;)" to="&quot; property&quot;" />
    <mutant id="mutant_1124" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent))" to="(parent)" />
    <mutant id="mutant_1125" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent))" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" />
    <mutant id="mutant_1122" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) / &quot;&gt; inside parent &lt;&quot;)" />
    <mutant id="mutant_1123" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent))" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) * (parent))" />
    <mutant id="mutant_1120" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" />
    <mutant id="mutant_1121" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) - &quot;&gt; inside parent &lt;&quot;)" />
    <mutant id="mutant_792" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" to="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) / (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" />
    <mutant id="mutant_793" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" to="(&quot;A container configuration doesn\'t have the &quot; * (ContainerConfig.CONTAINER_KEY))" />
    <mutant id="mutant_310" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + (value.substring(1, ((value.length()) - 1)))) + ']')" to="(('[' + (value.substring(1, ((value.length()) - 1)))) * ']')" />
    <mutant id="mutant_794" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" to="&quot;A container configuration doesn\'t have the &quot;" />
    <mutant id="mutant_311" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + value)" to="('[' - value)" />
    <mutant id="mutant_795" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" to="(&quot;A container configuration doesn\'t have the &quot; % (ContainerConfig.CONTAINER_KEY))" />
    <mutant id="mutant_1128" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent))" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) / (parent))" />
    <mutant id="mutant_1129" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;'" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) * '&gt;'" />
    <mutant id="mutant_790" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" to="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" />
    <mutant id="mutant_1126" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent))" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) % (parent))" />
    <mutant id="mutant_791" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" to="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) % (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" />
    <mutant id="mutant_1127" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent))" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) - (parent))" />
    <mutant id="mutant_9" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((&quot;Method &quot; + prefix) + ':')" to="':'" />
    <mutant id="mutant_206" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.serialize(java.util.Map)" from="((sb.length()) - 1)" to="sb.length()" />
    <mutant id="mutant_8" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((&quot;Method &quot; + prefix) + ':')" to="(&quot;Method &quot; + prefix)" />
    <mutant id="mutant_207" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.serialize(java.util.Map)" from="((sb.length()) - 1)" to="((sb.length()) / 1)" />
    <mutant id="mutant_208" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.serialize(java.util.Map)" from="((sb.length()) - 1)" to="((sb.length()) % 1)" />
    <mutant id="mutant_209" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.unwrap(java.lang.String)" from="(bin.length) - (hmacType.getLength())" to="(bin.length) + (hmacType.getLength())" />
    <mutant id="mutant_5" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(&quot;Method &quot; + prefix)" to="(&quot;Method &quot; / prefix)" />
    <mutant id="mutant_202" viable="true" in="org.apache.shindig.common.cache.SoftExpiringCache.addElement(K,V,long)" from="(now + maxAge)" to="(now - maxAge)" />
    <mutant id="mutant_686" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(basePath.lastIndexOf('/')) + 1" to="(basePath.lastIndexOf('/')) % 1" />
    <mutant id="mutant_4" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(&quot;Method &quot; + prefix)" to="(&quot;Method &quot; * prefix)" />
    <mutant id="mutant_203" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.serialize(java.util.Map)" from="((sb.length()) - 1)" to="1" />
    <mutant id="mutant_687" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(basePath.lastIndexOf('/')) + 1" to="(basePath.lastIndexOf('/')) * 1" />
    <mutant id="mutant_7" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((&quot;Method &quot; + prefix) + ':')" to="((&quot;Method &quot; + prefix) - ':')" />
    <mutant id="mutant_204" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.serialize(java.util.Map)" from="((sb.length()) - 1)" to="((sb.length()) * 1)" />
    <mutant id="mutant_688" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(basePath.lastIndexOf('/')) + 1" to="(basePath.lastIndexOf('/')) / 1" />
    <mutant id="mutant_6" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((&quot;Method &quot; + prefix) + ':')" to="((&quot;Method &quot; + prefix) * ':')" />
    <mutant id="mutant_205" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.serialize(java.util.Map)" from="((sb.length()) - 1)" to="((sb.length()) + 1)" />
    <mutant id="mutant_689" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(basePath.lastIndexOf('/')) + 1" to="(basePath.lastIndexOf('/')) - 1" />
    <mutant id="mutant_85" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="(&quot;Unknown container &quot; + (aToken.getContainer()))" to="&quot;Unknown container &quot;" />
    <mutant id="mutant_84" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="(&quot;Unknown container &quot; + (aToken.getContainer()))" to="(&quot;Unknown container &quot; - (aToken.getContainer()))" />
    <mutant id="mutant_87" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="(&quot;Unknown container &quot; + (aToken.getContainer()))" to="(&quot;Unknown container &quot; * (aToken.getContainer()))" />
    <mutant id="mutant_86" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="(&quot;Unknown container &quot; + (aToken.getContainer()))" to="(&quot;Unknown container &quot; / (aToken.getContainer()))" />
    <mutant id="mutant_89" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':')" to="((aToken.getContainer()) % ':')" />
    <mutant id="mutant_88" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="(&quot;Unknown container &quot; + (aToken.getContainer()))" to="aToken.getContainer()" />
    <mutant id="mutant_90" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':')" to="':'" />
    <mutant id="mutant_92" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':')" to="((aToken.getContainer()) / ':')" />
    <mutant id="mutant_91" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':')" to="((aToken.getContainer()) * ':')" />
    <mutant id="mutant_94" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':')" to="(aToken.getContainer())" />
    <mutant id="mutant_93" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':')" to="((aToken.getContainer()) - ':')" />
    <mutant id="mutant_1" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(&quot;Method &quot; + prefix)" to="&quot;Method &quot;" />
    <mutant id="mutant_682" viable="false" in="org.apache.shindig.common.uri.Uri.fromJavaUri(java.net.URI)" from="(&quot;No support for opaque Uris &quot; + (uri.toString()))" to="(&quot;No support for opaque Uris &quot; % (uri.toString()))" />
    <mutant id="mutant_0" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(&quot;Method &quot; + prefix)" to="(&quot;Method &quot; - prefix)" />
    <mutant id="mutant_683" viable="false" in="org.apache.shindig.common.uri.Uri.fromJavaUri(java.net.URI)" from="(&quot;No support for opaque Uris &quot; + (uri.toString()))" to="(&quot;No support for opaque Uris &quot; - (uri.toString()))" />
    <mutant id="mutant_3" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(&quot;Method &quot; + prefix)" to="(&quot;Method &quot; % prefix)" />
    <mutant id="mutant_200" viable="true" in="org.apache.shindig.common.cache.SoftExpiringCache.addElement(K,V,long)" from="(now + maxAge)" to="(now * maxAge)" />
    <mutant id="mutant_684" viable="true" in="org.apache.shindig.common.uri.Uri.fromJavaUri(java.net.URI)" from="(&quot;No support for opaque Uris &quot; + (uri.toString()))" to="&quot;No support for opaque Uris &quot;" />
    <mutant id="mutant_2" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(&quot;Method &quot; + prefix)" to="prefix" />
    <mutant id="mutant_201" viable="true" in="org.apache.shindig.common.cache.SoftExpiringCache.addElement(K,V,long)" from="(now + maxAge)" to="(now / maxAge)" />
    <mutant id="mutant_685" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(basePath.lastIndexOf('/')) + 1" to="1" />
    <mutant id="mutant_680" viable="true" in="org.apache.shindig.common.uri.Uri.fromJavaUri(java.net.URI)" from="(&quot;No support for opaque Uris &quot; + (uri.toString()))" to="uri.toString()" />
    <mutant id="mutant_681" viable="false" in="org.apache.shindig.common.uri.Uri.fromJavaUri(java.net.URI)" from="(&quot;No support for opaque Uris &quot; + (uri.toString()))" to="(&quot;No support for opaque Uris &quot; / (uri.toString()))" />
    <mutant id="mutant_217" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.init(java.lang.String)" from="(&quot;Unexpectedly empty masterKey:&quot; + masterKey)" to="(&quot;Unexpectedly empty masterKey:&quot; / masterKey)" />
    <mutant id="mutant_218" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.init(java.lang.String)" from="(&quot;Unexpectedly empty masterKey:&quot; + masterKey)" to="(&quot;Unexpectedly empty masterKey:&quot; % masterKey)" />
    <mutant id="mutant_219" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.init(java.lang.String)" from="(&quot;Unexpectedly empty masterKey:&quot; + masterKey)" to="&quot;Unexpectedly empty masterKey:&quot;" />
    <mutant id="mutant_213" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.unwrap(java.lang.String)" from="(bin.length) - (hmacType.getLength())" to="(bin.length) / (hmacType.getLength())" />
    <mutant id="mutant_697" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="&quot;:&quot; + serverPort" to="&quot;:&quot; - serverPort" />
    <mutant id="mutant_214" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.unwrap(java.lang.String)" from="(bin.length) - (hmacType.getLength())" to="hmacType.getLength()" />
    <mutant id="mutant_698" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="&quot;:&quot; + serverPort" to="&quot;:&quot; % serverPort" />
    <mutant id="mutant_215" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.init(java.lang.String)" from="(&quot;Unexpectedly empty masterKey:&quot; + masterKey)" to="masterKey" />
    <mutant id="mutant_699" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="&quot;:&quot; + serverPort" to="&quot;:&quot; / serverPort" />
    <mutant id="mutant_216" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.init(java.lang.String)" from="(&quot;Unexpectedly empty masterKey:&quot; + masterKey)" to="(&quot;Unexpectedly empty masterKey:&quot; * masterKey)" />
    <mutant id="mutant_74" viable="false" in="org.apache.shindig.auth.AuthenticationServletFilter.onError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.AuthenticationHandler$InvalidAuthenticationException)" from="(iae.getMessage()) + (cause.getMessage())" to="(iae.getMessage()) - (cause.getMessage())" />
    <mutant id="mutant_73" viable="true" in="org.apache.shindig.auth.AuthenticationServletFilter.onError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.AuthenticationHandler$InvalidAuthenticationException)" from="(iae.getMessage()) + (cause.getMessage())" to="iae.getMessage()" />
    <mutant id="mutant_76" viable="false" in="org.apache.shindig.auth.AuthenticationServletFilter.onError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.AuthenticationHandler$InvalidAuthenticationException)" from="(iae.getMessage()) + (cause.getMessage())" to="(iae.getMessage()) % (cause.getMessage())" />
    <mutant id="mutant_75" viable="false" in="org.apache.shindig.auth.AuthenticationServletFilter.onError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.AuthenticationHandler$InvalidAuthenticationException)" from="(iae.getMessage()) + (cause.getMessage())" to="(iae.getMessage()) * (cause.getMessage())" />
    <mutant id="mutant_78" viable="false" in="?" from="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1" to="1" />
    <mutant id="mutant_77" viable="false" in="?" from="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1" to="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) % 1" />
    <mutant id="mutant_79" viable="false" in="?" from="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1" to="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) * 1" />
    <mutant id="mutant_81" viable="false" in="?" from="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1" to="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) / 1" />
    <mutant id="mutant_80" viable="false" in="?" from="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1" to="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) - 1" />
    <mutant id="mutant_83" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="(&quot;Unknown container &quot; + (aToken.getContainer()))" to="(&quot;Unknown container &quot; % (aToken.getContainer()))" />
    <mutant id="mutant_82" viable="false" in="?" from="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1" to="BasicSecurityTokenCodec.CONTAINER_ID_INDEX" />
    <mutant id="mutant_693" viable="false" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((basePath.substring(0, endindex)) + relativePath)" to="((basePath.substring(0, endindex)) / relativePath)" />
    <mutant id="mutant_210" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.unwrap(java.lang.String)" from="(bin.length) - (hmacType.getLength())" to="(bin.length) * (hmacType.getLength())" />
    <mutant id="mutant_694" viable="false" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((basePath.substring(0, endindex)) + relativePath)" to="((basePath.substring(0, endindex)) % relativePath)" />
    <mutant id="mutant_211" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.unwrap(java.lang.String)" from="(bin.length) - (hmacType.getLength())" to="bin.length" />
    <mutant id="mutant_695" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((basePath.substring(0, endindex)) + relativePath)" to="basePath.substring(0, endindex)" />
    <mutant id="mutant_212" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.unwrap(java.lang.String)" from="(bin.length) - (hmacType.getLength())" to="(bin.length) % (hmacType.getLength())" />
    <mutant id="mutant_696" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((basePath.substring(0, endindex)) + relativePath)" to="relativePath" />
    <mutant id="mutant_690" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(basePath.lastIndexOf('/')) + 1" to="basePath.lastIndexOf('/')" />
    <mutant id="mutant_691" viable="false" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((basePath.substring(0, endindex)) + relativePath)" to="((basePath.substring(0, endindex)) - relativePath)" />
    <mutant id="mutant_692" viable="false" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((basePath.substring(0, endindex)) + relativePath)" to="((basePath.substring(0, endindex)) * relativePath)" />
    <mutant id="mutant_228" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(&quot;Blob expired. Was valid until &quot; + maxTime)" to="&quot;Blob expired. Was valid until &quot;" />
    <mutant id="mutant_229" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(&quot;Blob expired. Was valid until &quot; + maxTime)" to="(&quot;Blob expired. Was valid until &quot; % maxTime)" />
    <mutant id="mutant_224" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.setpreferredHMACAlgorithm(java.lang.String)" from="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm)" to="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; / preferredHMACAlgorithm)" />
    <mutant id="mutant_225" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.setpreferredHMACAlgorithm(java.lang.String)" from="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm)" to="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; * preferredHMACAlgorithm)" />
    <mutant id="mutant_226" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.setpreferredHMACAlgorithm(java.lang.String)" from="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm)" to="&quot;shindig.crypto.preferredHMACAlgorithm: &quot;" />
    <mutant id="mutant_227" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(&quot;Blob expired. Was valid until &quot; + maxTime)" to="maxTime" />
    <mutant id="mutant_220" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.init(java.lang.String)" from="(&quot;Unexpectedly empty masterKey:&quot; + masterKey)" to="(&quot;Unexpectedly empty masterKey:&quot; - masterKey)" />
    <mutant id="mutant_221" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.setpreferredHMACAlgorithm(java.lang.String)" from="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm)" to="preferredHMACAlgorithm" />
    <mutant id="mutant_222" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.setpreferredHMACAlgorithm(java.lang.String)" from="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm)" to="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; % preferredHMACAlgorithm)" />
    <mutant id="mutant_223" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.setpreferredHMACAlgorithm(java.lang.String)" from="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm)" to="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; - preferredHMACAlgorithm)" />
    <mutant id="mutant_239" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now)" to="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) / now)" />
    <mutant id="mutant_235" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" to="(&quot;Blob expired. Was valid until &quot; + maxTime)" />
    <mutant id="mutant_236" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" to="&quot;, attempted use at &quot;" />
    <mutant id="mutant_237" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" to="((&quot;Blob expired. Was valid until &quot; + maxTime) / &quot;, attempted use at &quot;)" />
    <mutant id="mutant_238" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" to="((&quot;Blob expired. Was valid until &quot; + maxTime) % &quot;, attempted use at &quot;)" />
    <mutant id="mutant_96" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))" to="((aToken.getContainer()) + ':') * (crypter.wrap(aToken.toMap()))" />
    <mutant id="mutant_95" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))" to="((aToken.getContainer()) + ':') - (crypter.wrap(aToken.toMap()))" />
    <mutant id="mutant_98" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))" to="((aToken.getContainer()) + ':') / (crypter.wrap(aToken.toMap()))" />
    <mutant id="mutant_97" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))" to="(aToken.getContainer()) + ':'" />
    <mutant id="mutant_99" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))" to="((aToken.getContainer()) + ':') % (crypter.wrap(aToken.toMap()))" />
    <mutant id="mutant_231" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(&quot;Blob expired. Was valid until &quot; + maxTime)" to="(&quot;Blob expired. Was valid until &quot; / maxTime)" />
    <mutant id="mutant_232" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(&quot;Blob expired. Was valid until &quot; + maxTime)" to="(&quot;Blob expired. Was valid until &quot; * maxTime)" />
    <mutant id="mutant_233" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" to="((&quot;Blob expired. Was valid until &quot; + maxTime) - &quot;, attempted use at &quot;)" />
    <mutant id="mutant_234" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" to="((&quot;Blob expired. Was valid until &quot; + maxTime) * &quot;, attempted use at &quot;)" />
    <mutant id="mutant_230" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(&quot;Blob expired. Was valid until &quot; + maxTime)" to="(&quot;Blob expired. Was valid until &quot; - maxTime)" />
    <mutant id="mutant_246" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(now * 1000)" to="(now / 1000)" />
    <mutant id="mutant_247" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(now * 1000)" to="(now + 1000)" />
    <mutant id="mutant_248" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(now * 1000)" to="(now - 1000)" />
    <mutant id="mutant_249" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(now * 1000)" to="1000" />
    <mutant id="mutant_242" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now)" to="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" />
    <mutant id="mutant_243" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now)" to="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) * now)" />
    <mutant id="mutant_244" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now)" to="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) % now)" />
    <mutant id="mutant_245" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(now * 1000)" to="now" />
    <mutant id="mutant_240" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now)" to="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) - now)" />
    <mutant id="mutant_241" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now)" to="now" />
    <mutant id="mutant_257" viable="true" in="org.apache.shindig.common.crypto.Crypto.aes128cbcDecryptWithIv(byte[],byte[],byte[],int)" from="((cipherText.length) - offset)" to="((cipherText.length) * offset)" />
    <mutant id="mutant_258" viable="true" in="org.apache.shindig.common.crypto.Crypto.aes128cbcDecryptWithIv(byte[],byte[],byte[],int)" from="((cipherText.length) - offset)" to="((cipherText.length) % offset)" />
    <mutant id="mutant_259" viable="true" in="org.apache.shindig.common.crypto.Crypto.aes128cbcDecryptWithIv(byte[],byte[],byte[],int)" from="((cipherText.length) - offset)" to="((cipherText.length) / offset)" />
    <mutant id="mutant_253" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(maxTime * 1000)" to="(maxTime + 1000)" />
    <mutant id="mutant_254" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(maxTime * 1000)" to="maxTime" />
    <mutant id="mutant_255" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(maxTime * 1000)" to="1000" />
    <mutant id="mutant_256" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(maxTime * 1000)" to="(maxTime % 1000)" />
    <mutant id="mutant_250" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(now * 1000)" to="(now % 1000)" />
    <mutant id="mutant_251" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(maxTime * 1000)" to="(maxTime / 1000)" />
    <mutant id="mutant_252" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(maxTime * 1000)" to="(maxTime - 1000)" />
    <mutant id="mutant_268" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" to="(&quot;HMAC key should be at least &quot; * (Crypto.MIN_HMAC_KEY_LEN))" />
    <mutant id="mutant_269" viable="true" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;)" to="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" />
    <mutant id="mutant_264" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" to="(&quot;HMAC key should be at least &quot; % (Crypto.MIN_HMAC_KEY_LEN))" />
    <mutant id="mutant_265" viable="true" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" to="&quot;HMAC key should be at least &quot;" />
    <mutant id="mutant_266" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" to="(&quot;HMAC key should be at least &quot; / (Crypto.MIN_HMAC_KEY_LEN))" />
    <mutant id="mutant_267" viable="true" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" to="(Crypto.MIN_HMAC_KEY_LEN)" />
    <mutant id="mutant_260" viable="true" in="org.apache.shindig.common.crypto.Crypto.aes128cbcDecryptWithIv(byte[],byte[],byte[],int)" from="((cipherText.length) - offset)" to="((cipherText.length) + offset)" />
    <mutant id="mutant_261" viable="true" in="org.apache.shindig.common.crypto.Crypto.aes128cbcDecryptWithIv(byte[],byte[],byte[],int)" from="((cipherText.length) - offset)" to="cipherText.length" />
    <mutant id="mutant_262" viable="true" in="org.apache.shindig.common.crypto.Crypto.aes128cbcDecryptWithIv(byte[],byte[],byte[],int)" from="((cipherText.length) - offset)" to="offset" />
    <mutant id="mutant_263" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" to="(&quot;HMAC key should be at least &quot; - (Crypto.MIN_HMAC_KEY_LEN))" />
    <mutant id="mutant_279" viable="true" in="org.apache.shindig.common.crypto.Crypto.getRandomDigits(int)" from="((random[i]) % (Crypto.DIGITS.length))" to="Crypto.DIGITS.length" />
    <mutant id="mutant_270" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;)" to="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) - &quot; bytes.&quot;)" />
    <mutant id="mutant_275" viable="true" in="org.apache.shindig.common.crypto.Crypto.getRandomDigits(int)" from="((random[i]) % (Crypto.DIGITS.length))" to="((random[i]) + (Crypto.DIGITS.length))" />
    <mutant id="mutant_276" viable="true" in="org.apache.shindig.common.crypto.Crypto.getRandomDigits(int)" from="((random[i]) % (Crypto.DIGITS.length))" to="((random[i]) / (Crypto.DIGITS.length))" />
    <mutant id="mutant_277" viable="true" in="org.apache.shindig.common.crypto.Crypto.getRandomDigits(int)" from="((random[i]) % (Crypto.DIGITS.length))" to="((random[i]) * (Crypto.DIGITS.length))" />
    <mutant id="mutant_278" viable="true" in="org.apache.shindig.common.crypto.Crypto.getRandomDigits(int)" from="((random[i]) % (Crypto.DIGITS.length))" to="random[i]" />
    <mutant id="mutant_271" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;)" to="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) / &quot; bytes.&quot;)" />
    <mutant id="mutant_272" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;)" to="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) % &quot; bytes.&quot;)" />
    <mutant id="mutant_273" viable="true" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;)" to="&quot; bytes.&quot;" />
    <mutant id="mutant_274" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;)" to="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) * &quot; bytes.&quot;)" />
    <mutant id="mutant_280" viable="true" in="org.apache.shindig.common.crypto.Crypto.getRandomDigits(int)" from="((random[i]) % (Crypto.DIGITS.length))" to="((random[i]) - (Crypto.DIGITS.length))" />
    <mutant id="mutant_281" viable="true" in="org.apache.shindig.common.util.GenericDigestUtils.setType(java.lang.String)" from="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type)" to="&quot;shindig.crypto.preferredHashAlgorithm: &quot;" />
    <mutant id="mutant_286" viable="false" in="org.apache.shindig.common.util.GenericDigestUtils.setType(java.lang.String)" from="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type)" to="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; * type)" />
    <mutant id="mutant_287" viable="true" in="org.apache.shindig.common.util.HashUtil.bytesToHex(byte[])" from="2 * (hashBytes.length)" to="2" />
    <mutant id="mutant_288" viable="true" in="org.apache.shindig.common.util.HashUtil.bytesToHex(byte[])" from="2 * (hashBytes.length)" to="2 - (hashBytes.length)" />
    <mutant id="mutant_289" viable="true" in="org.apache.shindig.common.util.HashUtil.bytesToHex(byte[])" from="2 * (hashBytes.length)" to="2 / (hashBytes.length)" />
    <mutant id="mutant_282" viable="true" in="org.apache.shindig.common.util.GenericDigestUtils.setType(java.lang.String)" from="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type)" to="type" />
    <mutant id="mutant_283" viable="false" in="org.apache.shindig.common.util.GenericDigestUtils.setType(java.lang.String)" from="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type)" to="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; % type)" />
    <mutant id="mutant_284" viable="false" in="org.apache.shindig.common.util.GenericDigestUtils.setType(java.lang.String)" from="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type)" to="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; / type)" />
    <mutant id="mutant_285" viable="false" in="org.apache.shindig.common.util.GenericDigestUtils.setType(java.lang.String)" from="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type)" to="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; - type)" />
    <mutant id="mutant_290" viable="true" in="org.apache.shindig.common.util.HashUtil.bytesToHex(byte[])" from="2 * (hashBytes.length)" to="2 + (hashBytes.length)" />
    <mutant id="mutant_291" viable="true" in="org.apache.shindig.common.util.HashUtil.bytesToHex(byte[])" from="2 * (hashBytes.length)" to="2 % (hashBytes.length)" />
    <mutant id="mutant_292" viable="true" in="org.apache.shindig.common.util.HashUtil.bytesToHex(byte[])" from="2 * (hashBytes.length)" to="hashBytes.length" />
    <mutant id="mutant_297" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_298" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_299" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + (value.substring(1, ((value.length()) - 1))))" to="'['" />
    <mutant id="mutant_293" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="((value.length()) - 1)" to="value.length()" />
    <mutant id="mutant_294" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_295" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_296" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_27" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" to="(&quot;Could not coerce &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_26" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" to="(&quot;Could not coerce &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_29" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" to="(&quot;Could not coerce &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_28" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" to="(obj.getClass().getName())" />
    <mutant id="mutant_21" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;)" to="((((&quot;Method &quot; + prefix) + ':') + methodName) / &quot; re-defined.&quot;)" />
    <mutant id="mutant_20" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;)" to="((((&quot;Method &quot; + prefix) + ':') + methodName) - &quot; re-defined.&quot;)" />
    <mutant id="mutant_23" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;)" to="&quot; re-defined.&quot;" />
    <mutant id="mutant_22" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;)" to="(((&quot;Method &quot; + prefix) + ':') + methodName)" />
    <mutant id="mutant_25" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" to="&quot;Could not coerce &quot;" />
    <mutant id="mutant_24" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" to="(&quot;Could not coerce &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_16" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(((&quot;Method &quot; + prefix) + ':') + methodName)" to="(((&quot;Method &quot; + prefix) + ':') / methodName)" />
    <mutant id="mutant_15" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(((&quot;Method &quot; + prefix) + ':') + methodName)" to="(((&quot;Method &quot; + prefix) + ':') % methodName)" />
    <mutant id="mutant_18" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;)" to="((((&quot;Method &quot; + prefix) + ':') + methodName) % &quot; re-defined.&quot;)" />
    <mutant id="mutant_17" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(((&quot;Method &quot; + prefix) + ':') + methodName)" to="((&quot;Method &quot; + prefix) + ':')" />
    <mutant id="mutant_19" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;)" to="((((&quot;Method &quot; + prefix) + ':') + methodName) * &quot; re-defined.&quot;)" />
    <mutant id="mutant_10" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((&quot;Method &quot; + prefix) + ':')" to="((&quot;Method &quot; + prefix) % ':')" />
    <mutant id="mutant_12" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(((&quot;Method &quot; + prefix) + ':') + methodName)" to="(((&quot;Method &quot; + prefix) + ':') - methodName)" />
    <mutant id="mutant_11" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((&quot;Method &quot; + prefix) + ':')" to="((&quot;Method &quot; + prefix) / ':')" />
    <mutant id="mutant_14" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(((&quot;Method &quot; + prefix) + ':') + methodName)" to="methodName" />
    <mutant id="mutant_13" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(((&quot;Method &quot; + prefix) + ':') + methodName)" to="(((&quot;Method &quot; + prefix) + ':') * methodName)" />
    <mutant id="mutant_49" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="((getTimeSource().currentTimeMillis()) / 1000)" to="(getTimeSource().currentTimeMillis())" />
    <mutant id="mutant_48" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="((getTimeSource().currentTimeMillis()) / 1000)" to="((getTimeSource().currentTimeMillis()) * 1000)" />
    <mutant id="mutant_41" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" to="expiresAt" />
    <mutant id="mutant_40" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" to="expiresAt % (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" />
    <mutant id="mutant_43" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="(getTimeSource().currentTimeMillis()) / 1000" to="getTimeSource().currentTimeMillis()" />
    <mutant id="mutant_42" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="(getTimeSource().currentTimeMillis()) / 1000" to="(getTimeSource().currentTimeMillis()) * 1000" />
    <mutant id="mutant_45" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="(getTimeSource().currentTimeMillis()) / 1000" to="1000" />
    <mutant id="mutant_44" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="(getTimeSource().currentTimeMillis()) / 1000" to="(getTimeSource().currentTimeMillis()) % 1000" />
    <mutant id="mutant_47" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="(getTimeSource().currentTimeMillis()) / 1000" to="(getTimeSource().currentTimeMillis()) - 1000" />
    <mutant id="mutant_46" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="(getTimeSource().currentTimeMillis()) / 1000" to="(getTimeSource().currentTimeMillis()) + 1000" />
    <mutant id="mutant_50" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="((getTimeSource().currentTimeMillis()) / 1000)" to="((getTimeSource().currentTimeMillis()) % 1000)" />
    <mutant id="mutant_38" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" to="expiresAt / (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" />
    <mutant id="mutant_37" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" to="expiresAt - (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" />
    <mutant id="mutant_39" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" to="expiresAt * (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" />
    <mutant id="mutant_30" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;)" to="((&quot;Could not coerce &quot; + (obj.getClass().getName())) / &quot; to JSONArray&quot;)" />
    <mutant id="mutant_32" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;)" to="&quot; to JSONArray&quot;" />
    <mutant id="mutant_31" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;)" to="((&quot;Could not coerce &quot; + (obj.getClass().getName())) - &quot; to JSONArray&quot;)" />
    <mutant id="mutant_34" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;)" to="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" />
    <mutant id="mutant_33" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;)" to="((&quot;Could not coerce &quot; + (obj.getClass().getName())) % &quot; to JSONArray&quot;)" />
    <mutant id="mutant_36" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" to="AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE" />
    <mutant id="mutant_35" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;)" to="((&quot;Could not coerce &quot; + (obj.getClass().getName())) * &quot; to JSONArray&quot;)" />
    <mutant id="mutant_63" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.')" to="((AuthInfoUtil.Attribute.class.getName()) / '.')" />
    <mutant id="mutant_62" viable="true" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.')" to="(AuthInfoUtil.Attribute.class.getName())" />
    <mutant id="mutant_65" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.')" to="((AuthInfoUtil.Attribute.class.getName()) * '.')" />
    <mutant id="mutant_64" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.')" to="((AuthInfoUtil.Attribute.class.getName()) - '.')" />
    <mutant id="mutant_67" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())" to="((AuthInfoUtil.Attribute.class.getName()) + '.') * (name())" />
    <mutant id="mutant_66" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())" to="((AuthInfoUtil.Attribute.class.getName()) + '.') - (name())" />
    <mutant id="mutant_69" viable="true" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())" to="(AuthInfoUtil.Attribute.class.getName()) + '.'" />
    <mutant id="mutant_68" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())" to="((AuthInfoUtil.Attribute.class.getName()) + '.') % (name())" />
    <mutant id="mutant_70" viable="true" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())" to="name()" />
    <mutant id="mutant_72" viable="false" in="org.apache.shindig.auth.AuthenticationServletFilter.onError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.AuthenticationHandler$InvalidAuthenticationException)" from="(iae.getMessage()) + (cause.getMessage())" to="(iae.getMessage()) / (cause.getMessage())" />
    <mutant id="mutant_71" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())" to="((AuthInfoUtil.Attribute.class.getName()) + '.') / (name())" />
    <mutant id="mutant_59" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="(((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL()))" to="((getTimeSource().currentTimeMillis()) / 1000)" />
    <mutant id="mutant_52" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="((getTimeSource().currentTimeMillis()) / 1000)" to="((getTimeSource().currentTimeMillis()) + 1000)" />
    <mutant id="mutant_51" viable="false" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="((getTimeSource().currentTimeMillis()) / 1000)" to="1000" />
    <mutant id="mutant_54" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="(((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL()))" to="(((getTimeSource().currentTimeMillis()) / 1000) % (getMaxTokenTTL()))" />
    <mutant id="mutant_53" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="((getTimeSource().currentTimeMillis()) / 1000)" to="((getTimeSource().currentTimeMillis()) - 1000)" />
    <mutant id="mutant_56" viable="false" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="(((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL()))" to="getMaxTokenTTL()" />
    <mutant id="mutant_55" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="(((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL()))" to="(((getTimeSource().currentTimeMillis()) / 1000) * (getMaxTokenTTL()))" />
    <mutant id="mutant_58" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="(((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL()))" to="(((getTimeSource().currentTimeMillis()) / 1000) / (getMaxTokenTTL()))" />
    <mutant id="mutant_57" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="(((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL()))" to="(((getTimeSource().currentTimeMillis()) / 1000) - (getMaxTokenTTL()))" />
    <mutant id="mutant_61" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.')" to="((AuthInfoUtil.Attribute.class.getName()) % '.')" />
    <mutant id="mutant_60" viable="true" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.')" to="'.'" />
    <mutant id="mutant_1432" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" to="(&quot;Parameter &quot; - (RequestItem.FILTER_OPERATION))" />
    <mutant id="mutant_1433" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" to="(&quot;Parameter &quot; / (RequestItem.FILTER_OPERATION))" />
    <mutant id="mutant_1430" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" to="(&quot;Parameter &quot; % (RequestItem.FILTER_OPERATION))" />
    <mutant id="mutant_1431" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" to="(&quot;Parameter &quot; * (RequestItem.FILTER_OPERATION))" />
    <mutant id="mutant_1438" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) - &quot; (&quot;)" />
    <mutant id="mutant_1439" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) % &quot; (&quot;)" />
    <mutant id="mutant_1436" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) / &quot; (&quot;)" />
    <mutant id="mutant_1437" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" to="&quot; (&quot;" />
    <mutant id="mutant_1434" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" to="&quot;Parameter &quot;" />
    <mutant id="mutant_1435" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) * &quot; (&quot;)" />
    <mutant id="mutant_1421" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" to="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) * startIndex)" />
    <mutant id="mutant_1422" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" to="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) - startIndex)" />
    <mutant id="mutant_1420" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" to="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" />
    <mutant id="mutant_1429" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" to="(RequestItem.FILTER_OPERATION)" />
    <mutant id="mutant_1427" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) % &quot;) is not a number.&quot;)" />
    <mutant id="mutant_1428" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" />
    <mutant id="mutant_1425" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) / &quot;) is not a number.&quot;)" />
    <mutant id="mutant_1426" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) - &quot;) is not a number.&quot;)" />
    <mutant id="mutant_1423" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) * &quot;) is not a number.&quot;)" />
    <mutant id="mutant_1424" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;)" to="&quot;) is not a number.&quot;" />
    <mutant id="mutant_1410" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" to="(&quot;Parameter &quot; - (RequestItem.START_INDEX))" />
    <mutant id="mutant_1411" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) % &quot; (&quot;)" />
    <mutant id="mutant_1418" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" to="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) % startIndex)" />
    <mutant id="mutant_1419" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" to="startIndex" />
    <mutant id="mutant_1416" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) * &quot; (&quot;)" />
    <mutant id="mutant_1417" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" to="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) / startIndex)" />
    <mutant id="mutant_1414" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" to="&quot; (&quot;" />
    <mutant id="mutant_1415" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" to="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" />
    <mutant id="mutant_1412" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) / &quot; (&quot;)" />
    <mutant id="mutant_1413" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) - &quot; (&quot;)" />
    <mutant id="mutant_1409" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" to="&quot;Parameter &quot;" />
    <mutant id="mutant_1400" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" />
    <mutant id="mutant_1407" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" to="(&quot;Parameter &quot; * (RequestItem.START_INDEX))" />
    <mutant id="mutant_1408" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" to="(&quot;Parameter &quot; / (RequestItem.START_INDEX))" />
    <mutant id="mutant_1405" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" to="(&quot;Parameter &quot; % (RequestItem.START_INDEX))" />
    <mutant id="mutant_1406" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" to="(RequestItem.START_INDEX)" />
    <mutant id="mutant_1403" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) / &quot;) is not a number.&quot;)" />
    <mutant id="mutant_1404" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) * &quot;) is not a number.&quot;)" />
    <mutant id="mutant_1401" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) - &quot;) is not a number.&quot;)" />
    <mutant id="mutant_1402" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) % &quot;) is not a number.&quot;)" />
    <mutant id="mutant_602" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) * &quot; as a listener&quot;)" />
    <mutant id="mutant_603" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) % &quot; as a listener&quot;)" />
    <mutant id="mutant_604" viable="true" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="&quot; as a listener&quot;" />
    <mutant id="mutant_605" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) / &quot; as a listener&quot;)" />
    <mutant id="mutant_600" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(&quot;Guice Injector not found! Make sure you registered &quot; - (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_601" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) - &quot; as a listener&quot;)" />
    <mutant id="mutant_1480" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(&quot;No Content-Type specified. One of &quot; * (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_606" viable="true" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_607" viable="true" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="&quot;Guice Injector not found! Make sure you registered &quot;" />
    <mutant id="mutant_608" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(&quot;Guice Injector not found! Make sure you registered &quot; % (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_609" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(&quot;Guice Injector not found! Make sure you registered &quot; / (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_1476" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;)" to="&quot;) is not valid.&quot;" />
    <mutant id="mutant_1477" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(Joiner.on(&quot;, &quot;).join(allowedContentTypes))" />
    <mutant id="mutant_1474" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) % &quot;) is not valid.&quot;)" />
    <mutant id="mutant_1475" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" />
    <mutant id="mutant_1472" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) * &quot;) is not valid.&quot;)" />
    <mutant id="mutant_1473" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) - &quot;) is not valid.&quot;)" />
    <mutant id="mutant_1470" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" to="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) / sortOrder)" />
    <mutant id="mutant_1471" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) / &quot;) is not valid.&quot;)" />
    <mutant id="mutant_1478" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(&quot;No Content-Type specified. One of &quot; / (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_1479" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(&quot;No Content-Type specified. One of &quot; - (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_613" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) - &quot; as a listener&quot;)" />
    <mutant id="mutant_614" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) * &quot; as a listener&quot;)" />
    <mutant id="mutant_615" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) % &quot; as a listener&quot;)" />
    <mutant id="mutant_616" viable="true" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="&quot; as a listener&quot;" />
    <mutant id="mutant_610" viable="true" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(GuiceServletContextListener.class.getName())" />
    <mutant id="mutant_611" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(&quot;Guice Injector not found! Make sure you registered &quot; * (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_612" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="(&quot;Guice Injector not found! Make sure you registered &quot; - (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_617" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) / &quot; as a listener&quot;)" />
    <mutant id="mutant_618" viable="true" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" />
    <mutant id="mutant_619" viable="true" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="&quot;&quot;" />
    <mutant id="mutant_1465" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" to="sortOrder" />
    <mutant id="mutant_1466" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" to="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) - sortOrder)" />
    <mutant id="mutant_1463" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) % &quot; (&quot;)" />
    <mutant id="mutant_1464" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" to="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" />
    <mutant id="mutant_1461" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) * &quot; (&quot;)" />
    <mutant id="mutant_1462" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" to="&quot; (&quot;" />
    <mutant id="mutant_1460" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) - &quot; (&quot;)" />
    <mutant id="mutant_1469" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" to="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) * sortOrder)" />
    <mutant id="mutant_1467" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" to="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" />
    <mutant id="mutant_1468" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" to="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) % sortOrder)" />
    <mutant id="mutant_624" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="(&quot;&quot; - (req.getServerPort()))" />
    <mutant id="mutant_625" viable="true" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="&quot;&quot;" />
    <mutant id="mutant_626" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="(&quot;&quot; % (req.getServerPort()))" />
    <mutant id="mutant_627" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="req.getServerPort()" />
    <mutant id="mutant_620" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="(&quot;&quot; % (req.getServerPort()))" />
    <mutant id="mutant_621" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="req.getServerPort()" />
    <mutant id="mutant_622" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="(&quot;&quot; / (req.getServerPort()))" />
    <mutant id="mutant_623" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="(&quot;&quot; * (req.getServerPort()))" />
    <mutant id="mutant_628" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="(&quot;&quot; / (req.getServerPort()))" />
    <mutant id="mutant_629" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="(&quot;&quot; * (req.getServerPort()))" />
    <mutant id="mutant_1454" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" to="(&quot;Parameter &quot; / (RequestItem.SORT_ORDER))" />
    <mutant id="mutant_1455" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" to="(&quot;Parameter &quot; % (RequestItem.SORT_ORDER))" />
    <mutant id="mutant_1452" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) * &quot;) is not valid.&quot;)" />
    <mutant id="mutant_1453" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" to="(&quot;Parameter &quot; - (RequestItem.SORT_ORDER))" />
    <mutant id="mutant_1450" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;)" to="&quot;) is not valid.&quot;" />
    <mutant id="mutant_1451" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) / &quot;) is not valid.&quot;)" />
    <mutant id="mutant_1458" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" to="(&quot;Parameter &quot; * (RequestItem.SORT_ORDER))" />
    <mutant id="mutant_1459" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" to="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) / &quot; (&quot;)" />
    <mutant id="mutant_1456" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" to="(RequestItem.SORT_ORDER)" />
    <mutant id="mutant_1457" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" to="&quot;Parameter &quot;" />
    <mutant id="mutant_635" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="index" />
    <mutant id="mutant_636" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_637" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="1" />
    <mutant id="mutant_638" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_631" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="1" />
    <mutant id="mutant_632" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_633" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_634" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_639" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1443" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" to="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) * filterOp)" />
    <mutant id="mutant_1444" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" to="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) / filterOp)" />
    <mutant id="mutant_1441" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" to="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) % filterOp)" />
    <mutant id="mutant_1442" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" to="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" />
    <mutant id="mutant_1440" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" to="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" />
    <mutant id="mutant_1449" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) % &quot;) is not valid.&quot;)" />
    <mutant id="mutant_630" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="(&quot;&quot; - (req.getServerPort()))" />
    <mutant id="mutant_1447" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" />
    <mutant id="mutant_1448" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;)" to="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) - &quot;) is not valid.&quot;)" />
    <mutant id="mutant_1445" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" to="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) - filterOp)" />
    <mutant id="mutant_1446" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" to="filterOp" />
    <mutant id="mutant_646" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_647" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="index" />
    <mutant id="mutant_648" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_649" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="1" />
    <mutant id="mutant_642" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_643" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="1" />
    <mutant id="mutant_644" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_645" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1040" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;--- From Super serializedClass(&quot; + type)" to="(&quot;--- From Super serializedClass(&quot; * type)" />
    <mutant id="mutant_1036" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName()))" to="cfm.getElementName()" />
    <mutant id="mutant_1037" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName()))" to="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) / (cfm.getElementName()))" />
    <mutant id="mutant_1034" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName()))" to="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) % (cfm.getElementName()))" />
    <mutant id="mutant_1035" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName()))" to="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) * (cfm.getElementName()))" />
    <mutant id="mutant_1032" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="(&quot;From MAP serializedClass(&quot; + type)" />
    <mutant id="mutant_1033" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName()))" to="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) - (cfm.getElementName()))" />
    <mutant id="mutant_1030" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="((&quot;From MAP serializedClass(&quot; + type) / &quot;)  ==&quot;)" />
    <mutant id="mutant_1031" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="((&quot;From MAP serializedClass(&quot; + type) % &quot;)  ==&quot;)" />
    <mutant id="mutant_640" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_641" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="index" />
    <mutant id="mutant_1038" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName()))" to="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" />
    <mutant id="mutant_1039" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;--- From Super serializedClass(&quot; + type)" to="(&quot;--- From Super serializedClass(&quot; - type)" />
    <mutant id="mutant_657" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="index2 + 1" to="1" />
    <mutant id="mutant_658" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="index2 + 1" to="index2 - 1" />
    <mutant id="mutant_659" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="index2 + 1" to="index2 % 1" />
    <mutant id="mutant_653" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="index" />
    <mutant id="mutant_654" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_655" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="index2 + 1" to="index2 / 1" />
    <mutant id="mutant_656" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="index2 + 1" to="index2" />
    <mutant id="mutant_1025" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;From MAP serializedClass(&quot; + type)" to="(&quot;From MAP serializedClass(&quot; % type)" />
    <mutant id="mutant_1026" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;From MAP serializedClass(&quot; + type)" to="type" />
    <mutant id="mutant_1023" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;From MAP serializedClass(&quot; + type)" to="(&quot;From MAP serializedClass(&quot; - type)" />
    <mutant id="mutant_1024" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;From MAP serializedClass(&quot; + type)" to="(&quot;From MAP serializedClass(&quot; * type)" />
    <mutant id="mutant_1021" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;From MAP serializedClass(&quot; + type)" to="(&quot;From MAP serializedClass(&quot; / type)" />
    <mutant id="mutant_1022" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;From MAP serializedClass(&quot; + type)" to="&quot;From MAP serializedClass(&quot;" />
    <mutant id="mutant_1020" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + ')')" to="((&quot;serializedClass(&quot; + type) - ')')" />
    <mutant id="mutant_650" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_651" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_652" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1029" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="&quot;)  ==&quot;" />
    <mutant id="mutant_1027" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="((&quot;From MAP serializedClass(&quot; + type) - &quot;)  ==&quot;)" />
    <mutant id="mutant_1028" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="((&quot;From MAP serializedClass(&quot; + type) * &quot;)  ==&quot;)" />
    <mutant id="mutant_668" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((seglist.length) - 1)" to="1" />
    <mutant id="mutant_669" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((seglist.length) - 1)" to="((seglist.length) % 1)" />
    <mutant id="mutant_664" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="i - 1" to="i" />
    <mutant id="mutant_665" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="i - 1" to="i * 1" />
    <mutant id="mutant_666" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="i - 1" to="i % 1" />
    <mutant id="mutant_667" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((seglist.length) - 1)" to="((seglist.length) / 1)" />
    <mutant id="mutant_1014" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="(&quot;serializedClass(&quot; - type)" />
    <mutant id="mutant_1498" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Unsupported Content-Type &quot; + contentType)" to="contentType" />
    <mutant id="mutant_1015" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + ')')" to="((&quot;serializedClass(&quot; + type) % ')')" />
    <mutant id="mutant_1499" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Unsupported Content-Type &quot; + contentType)" to="&quot;Unsupported Content-Type &quot;" />
    <mutant id="mutant_1012" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="(&quot;serializedClass(&quot; * type)" />
    <mutant id="mutant_1496" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Unsupported Content-Type &quot; + contentType)" to="(&quot;Unsupported Content-Type &quot; % contentType)" />
    <mutant id="mutant_1013" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="type" />
    <mutant id="mutant_1497" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Unsupported Content-Type &quot; + contentType)" to="(&quot;Unsupported Content-Type &quot; * contentType)" />
    <mutant id="mutant_1010" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="(&quot;serializedClass(&quot; / type)" />
    <mutant id="mutant_1494" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Cannot use disallowed Content-Type &quot; + contentType)" to="(&quot;Cannot use disallowed Content-Type &quot; % contentType)" />
    <mutant id="mutant_1011" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="&quot;serializedClass(&quot;" />
    <mutant id="mutant_1495" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Unsupported Content-Type &quot; + contentType)" to="(&quot;Unsupported Content-Type &quot; / contentType)" />
    <mutant id="mutant_1492" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Cannot use disallowed Content-Type &quot; + contentType)" to="contentType" />
    <mutant id="mutant_1493" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Cannot use disallowed Content-Type &quot; + contentType)" to="(&quot;Cannot use disallowed Content-Type &quot; - contentType)" />
    <mutant id="mutant_660" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="index2 + 1" to="index2 * 1" />
    <mutant id="mutant_661" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="i - 1" to="i / 1" />
    <mutant id="mutant_662" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="i - 1" to="i + 1" />
    <mutant id="mutant_663" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="i - 1" to="1" />
    <mutant id="mutant_1018" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + ')')" to="((&quot;serializedClass(&quot; + type) / ')')" />
    <mutant id="mutant_1019" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + ')')" to="((&quot;serializedClass(&quot; + type) * ')')" />
    <mutant id="mutant_1016" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + ')')" to="(&quot;serializedClass(&quot; + type)" />
    <mutant id="mutant_1017" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + ')')" to="')'" />
    <mutant id="mutant_679" viable="false" in="org.apache.shindig.common.uri.Uri.fromJavaUri(java.net.URI)" from="(&quot;No support for opaque Uris &quot; + (uri.toString()))" to="(&quot;No support for opaque Uris &quot; * (uri.toString()))" />
    <mutant id="mutant_675" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((newpath.length()) - 1)" to="((newpath.length()) + 1)" />
    <mutant id="mutant_676" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((newpath.length()) - 1)" to="newpath.length()" />
    <mutant id="mutant_677" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((newpath.length()) - 1)" to="((newpath.length()) / 1)" />
    <mutant id="mutant_678" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((newpath.length()) - 1)" to="((newpath.length()) % 1)" />
    <mutant id="mutant_1490" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Cannot use disallowed Content-Type &quot; + contentType)" to="&quot;Cannot use disallowed Content-Type &quot;" />
    <mutant id="mutant_1491" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Cannot use disallowed Content-Type &quot; + contentType)" to="(&quot;Cannot use disallowed Content-Type &quot; * contentType)" />
    <mutant id="mutant_1003" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type)))" to="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) - (Collection.class.isAssignableFrom(type)))" />
    <mutant id="mutant_1487" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="&quot; is required&quot;" />
    <mutant id="mutant_1004" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type)))" to="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) % (Collection.class.isAssignableFrom(type)))" />
    <mutant id="mutant_1488" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) - &quot; is required&quot;)" />
    <mutant id="mutant_1001" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" to="&quot;) is a collection member &quot;" />
    <mutant id="mutant_1485" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) / &quot; is required&quot;)" />
    <mutant id="mutant_1002" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" to="((&quot;serializedClass(&quot; + type) - &quot;) is a collection member &quot;)" />
    <mutant id="mutant_1486" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) * &quot; is required&quot;)" />
    <mutant id="mutant_1483" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) % &quot; is required&quot;)" />
    <mutant id="mutant_1000" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" to="((&quot;serializedClass(&quot; + type) * &quot;) is a collection member &quot;)" />
    <mutant id="mutant_1484" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_1481" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="&quot;No Content-Type specified. One of &quot;" />
    <mutant id="mutant_1482" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="(&quot;No Content-Type specified. One of &quot; % (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" />
    <mutant id="mutant_671" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((seglist.length) - 1)" to="((seglist.length) + 1)" />
    <mutant id="mutant_672" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((seglist.length) - 1)" to="seglist.length" />
    <mutant id="mutant_673" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((newpath.length()) - 1)" to="1" />
    <mutant id="mutant_1009" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="(&quot;serializedClass(&quot; % type)" />
    <mutant id="mutant_674" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((newpath.length()) - 1)" to="((newpath.length()) * 1)" />
    <mutant id="mutant_1007" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type)))" to="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) * (Collection.class.isAssignableFrom(type)))" />
    <mutant id="mutant_1008" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type)))" to="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" />
    <mutant id="mutant_1005" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type)))" to="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) / (Collection.class.isAssignableFrom(type)))" />
    <mutant id="mutant_1489" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Cannot use disallowed Content-Type &quot; + contentType)" to="(&quot;Cannot use disallowed Content-Type &quot; / contentType)" />
    <mutant id="mutant_670" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((seglist.length) - 1)" to="((seglist.length) * 1)" />
    <mutant id="mutant_1006" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type)))" to="Collection.class.isAssignableFrom(type)" />
  </mutants>
</mutation>
