<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="LCR" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="233970">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_327" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale))" to="true" />
    <mutant id="mutant_569" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object)" from="(source == null) || ((delegatedClasses) == null)" to="true" />
    <mutant id="mutant_328" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale))" to="false" />
    <mutant id="mutant_329" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale))" to="(value instanceof java.util.Locale)" />
    <mutant id="mutant_323" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime))" to="(value instanceof java.lang.CharSequence)" />
    <mutant id="mutant_565" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(!(enumConvertionMap.containsKey(f))) || ((enumConvertionMap.get(f).getClass()) != interfaceType)" to="false" />
    <mutant id="mutant_324" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime))" to="((value instanceof java.lang.CharSequence) &amp;&amp; (value instanceof org.joda.time.DateTime))" />
    <mutant id="mutant_566" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(!(enumConvertionMap.containsKey(f))) || ((enumConvertionMap.get(f).getClass()) != interfaceType)" to="(!(enumConvertionMap.containsKey(f))) &amp;&amp; ((enumConvertionMap.get(f).getClass()) != interfaceType)" />
    <mutant id="mutant_325" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime))" to="(value instanceof org.joda.time.DateTime)" />
    <mutant id="mutant_567" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object)" from="(source == null) || ((delegatedClasses) == null)" to="(source == null) &amp;&amp; ((delegatedClasses) == null)" />
    <mutant id="mutant_326" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale))" to="((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime))" />
    <mutant id="mutant_568" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object)" from="(source == null) || ((delegatedClasses) == null)" to="(delegatedClasses) == null" />
    <mutant id="mutant_561" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataType))) &amp;&amp; (!(((Class&lt;?&gt;)(dataType)).isPrimitive())))" to="(!(((Class&lt;?&gt;)(dataType)).isPrimitive()))" />
    <mutant id="mutant_320" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)" to="value instanceof java.lang.Number" />
    <mutant id="mutant_562" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(!(enumConvertionMap.containsKey(f))) || ((enumConvertionMap.get(f).getClass()) != interfaceType)" to="(enumConvertionMap.get(f).getClass()) != interfaceType" />
    <mutant id="mutant_321" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime))" to="true" />
    <mutant id="mutant_563" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(!(enumConvertionMap.containsKey(f))) || ((enumConvertionMap.get(f).getClass()) != interfaceType)" to="!(enumConvertionMap.containsKey(f))" />
    <mutant id="mutant_322" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime))" to="false" />
    <mutant id="mutant_564" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(!(enumConvertionMap.containsKey(f))) || ((enumConvertionMap.get(f).getClass()) != interfaceType)" to="true" />
    <mutant id="mutant_560" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataType))) &amp;&amp; (!(((Class&lt;?&gt;)(dataType)).isPrimitive())))" to="(!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataType)))" />
    <mutant id="mutant_338" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)) || (value.getClass().isEnum())" to="false" />
    <mutant id="mutant_339" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)) || (value.getClass().isEnum())" to="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)) &amp;&amp; (value.getClass().isEnum())" />
    <mutant id="mutant_334" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri))" to="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) &amp;&amp; (value instanceof org.apache.shindig.common.uri.Uri))" />
    <mutant id="mutant_576" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(method.getName().startsWith(&quot;get&quot;)) &amp;&amp; (!(method.getReturnType().isPrimitive()))" to="!(method.getReturnType().isPrimitive())" />
    <mutant id="mutant_335" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri))" to="(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale))" />
    <mutant id="mutant_577" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!required) &amp;&amp; (!(fields.contains(fieldName)))" to="!required" />
    <mutant id="mutant_336" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)) || (value.getClass().isEnum())" to="(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)" />
    <mutant id="mutant_578" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!required) &amp;&amp; (!(fields.contains(fieldName)))" to="true" />
    <mutant id="mutant_337" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)) || (value.getClass().isEnum())" to="true" />
    <mutant id="mutant_579" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!required) &amp;&amp; (!(fields.contains(fieldName)))" to="false" />
    <mutant id="mutant_330" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale))" to="(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) &amp;&amp; (value instanceof java.util.Locale))" />
    <mutant id="mutant_572" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(method.getName().startsWith(&quot;get&quot;)) &amp;&amp; (!(method.getReturnType().isPrimitive()))" to="(method.getName().startsWith(&quot;get&quot;)) || (!(method.getReturnType().isPrimitive()))" />
    <mutant id="mutant_331" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri))" to="(value instanceof org.apache.shindig.common.uri.Uri)" />
    <mutant id="mutant_573" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(method.getName().startsWith(&quot;get&quot;)) &amp;&amp; (!(method.getReturnType().isPrimitive()))" to="true" />
    <mutant id="mutant_332" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri))" to="true" />
    <mutant id="mutant_574" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(method.getName().startsWith(&quot;get&quot;)) &amp;&amp; (!(method.getReturnType().isPrimitive()))" to="false" />
    <mutant id="mutant_333" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri))" to="false" />
    <mutant id="mutant_575" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(method.getName().startsWith(&quot;get&quot;)) &amp;&amp; (!(method.getReturnType().isPrimitive()))" to="method.getName().startsWith(&quot;get&quot;)" />
    <mutant id="mutant_570" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object)" from="(source == null) || ((delegatedClasses) == null)" to="false" />
    <mutant id="mutant_571" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object)" from="(source == null) || ((delegatedClasses) == null)" to="source == null" />
    <mutant id="mutant_107" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(obj instanceof java.lang.Double) &amp;&amp; (!(obj.toString().equals(value)))" to="obj instanceof java.lang.Double" />
    <mutant id="mutant_349" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="(((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute))) &amp;&amp; (value.equals(java.lang.Boolean.FALSE)))" to="((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute)))" />
    <mutant id="mutant_108" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(obj instanceof java.lang.Double) &amp;&amp; (!(obj.toString().equals(value)))" to="(obj instanceof java.lang.Double) || (!(obj.toString().equals(value)))" />
    <mutant id="mutant_109" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor)))" to="(((ver.major) == (major)) || ((ver.minor) == (minor)))" />
    <mutant id="mutant_103" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(value.startsWith(&quot;(&quot;)) &amp;&amp; (value.endsWith(&quot;)&quot;))" to="value.startsWith(&quot;(&quot;)" />
    <mutant id="mutant_345" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="(((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute))) &amp;&amp; (value.equals(java.lang.Boolean.FALSE)))" to="(value.equals(java.lang.Boolean.FALSE))" />
    <mutant id="mutant_587" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null)) &amp;&amp; (!(fields.contains(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)))))" to="!(fields.contains(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))))" />
    <mutant id="mutant_104" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(obj instanceof java.lang.Double) &amp;&amp; (!(obj.toString().equals(value)))" to="!(obj.toString().equals(value))" />
    <mutant id="mutant_346" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="(((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute))) &amp;&amp; (value.equals(java.lang.Boolean.FALSE)))" to="true" />
    <mutant id="mutant_588" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null)) &amp;&amp; (!(fields.contains(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)))))" to="true" />
    <mutant id="mutant_105" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(obj instanceof java.lang.Double) &amp;&amp; (!(obj.toString().equals(value)))" to="true" />
    <mutant id="mutant_347" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="(((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute))) &amp;&amp; (value.equals(java.lang.Boolean.FALSE)))" to="false" />
    <mutant id="mutant_589" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null)) &amp;&amp; (!(fields.contains(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)))))" to="false" />
    <mutant id="mutant_106" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(obj instanceof java.lang.Double) &amp;&amp; (!(obj.toString().equals(value)))" to="false" />
    <mutant id="mutant_348" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="(((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute))) &amp;&amp; (value.equals(java.lang.Boolean.FALSE)))" to="(((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute))) || (value.equals(java.lang.Boolean.FALSE)))" />
    <mutant id="mutant_341" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute)))" to="((&quot;isOwner&quot;.equals(attribute)) &amp;&amp; (&quot;isViewer&quot;.equals(attribute)))" />
    <mutant id="mutant_583" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null))" to="((result != null) || (fieldName != null))" />
    <mutant id="mutant_100" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(value.startsWith(&quot;(&quot;)) &amp;&amp; (value.endsWith(&quot;)&quot;))" to="value.endsWith(&quot;)&quot;)" />
    <mutant id="mutant_342" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute)))" to="(&quot;isOwner&quot;.equals(attribute))" />
    <mutant id="mutant_584" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null))" to="true" />
    <mutant id="mutant_101" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(value.startsWith(&quot;(&quot;)) &amp;&amp; (value.endsWith(&quot;)&quot;))" to="true" />
    <mutant id="mutant_343" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute)))" to="true" />
    <mutant id="mutant_585" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null))" to="false" />
    <mutant id="mutant_102" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(value.startsWith(&quot;(&quot;)) &amp;&amp; (value.endsWith(&quot;)&quot;))" to="false" />
    <mutant id="mutant_344" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute)))" to="false" />
    <mutant id="mutant_586" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null))" to="(result != null)" />
    <mutant id="mutant_580" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!required) &amp;&amp; (!(fields.contains(fieldName)))" to="!(fields.contains(fieldName))" />
    <mutant id="mutant_581" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!required) &amp;&amp; (!(fields.contains(fieldName)))" to="(!required) || (!(fields.contains(fieldName)))" />
    <mutant id="mutant_340" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)) || (value.getClass().isEnum())" to="value.getClass().isEnum()" />
    <mutant id="mutant_582" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null))" to="(fieldName != null)" />
    <mutant id="mutant_118" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))) &amp;&amp; ((ver.patch) == (patch))" to="(ver.patch) == (patch)" />
    <mutant id="mutant_119" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.minor) &gt; (-1)) &amp;&amp; ((minor) &gt; (-1))" to="(version.minor) &gt; (-1)" />
    <mutant id="mutant_114" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))) &amp;&amp; ((ver.patch) == (patch))" to="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))) || ((ver.patch) == (patch))" />
    <mutant id="mutant_356" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= '') &amp;&amp; (current &lt; ' '))" to="((current &gt;= '') || (current &lt; ' '))" />
    <mutant id="mutant_598" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass())))" to="true" />
    <mutant id="mutant_115" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))) &amp;&amp; ((ver.patch) == (patch))" to="((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))" />
    <mutant id="mutant_357" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= '') &amp;&amp; (current &lt; ' '))" to="true" />
    <mutant id="mutant_599" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass())))" to="false" />
    <mutant id="mutant_116" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))) &amp;&amp; ((ver.patch) == (patch))" to="true" />
    <mutant id="mutant_358" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= '') &amp;&amp; (current &lt; ' '))" to="false" />
    <mutant id="mutant_117" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))) &amp;&amp; ((ver.patch) == (patch))" to="false" />
    <mutant id="mutant_359" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= '') &amp;&amp; (current &lt; ' '))" to="(current &lt; ' ')" />
    <mutant id="mutant_110" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor)))" to="true" />
    <mutant id="mutant_352" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="(string == null) || ((string.length()) == 0)" to="(string == null) &amp;&amp; ((string.length()) == 0)" />
    <mutant id="mutant_594" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="((data == null) || (fields == null))" to="true" />
    <mutant id="mutant_111" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor)))" to="false" />
    <mutant id="mutant_353" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="(string == null) || ((string.length()) == 0)" to="true" />
    <mutant id="mutant_595" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="((data == null) || (fields == null))" to="false" />
    <mutant id="mutant_112" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor)))" to="((ver.major) == (major))" />
    <mutant id="mutant_354" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="(string == null) || ((string.length()) == 0)" to="false" />
    <mutant id="mutant_596" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="((data == null) || (fields == null))" to="(data == null)" />
    <mutant id="mutant_113" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor)))" to="((ver.minor) == (minor))" />
    <mutant id="mutant_355" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= '') &amp;&amp; (current &lt; ' '))" to="(current &gt;= '')" />
    <mutant id="mutant_597" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass())))" to="((data == null) || (fields == null))" />
    <mutant id="mutant_590" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null)) &amp;&amp; (!(fields.contains(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)))))" to="((result != null) &amp;&amp; (fieldName != null)) || (!(fields.contains(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)))))" />
    <mutant id="mutant_591" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null)) &amp;&amp; (!(fields.contains(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)))))" to="(result != null) &amp;&amp; (fieldName != null)" />
    <mutant id="mutant_350" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="(string == null) || ((string.length()) == 0)" to="(string.length()) == 0" />
    <mutant id="mutant_592" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="((data == null) || (fields == null))" to="(fields == null)" />
    <mutant id="mutant_351" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="(string == null) || ((string.length()) == 0)" to="string == null" />
    <mutant id="mutant_593" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="((data == null) || (fields == null))" to="((data == null) &amp;&amp; (fields == null))" />
    <mutant id="mutant_129" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1)))" to="true" />
    <mutant id="mutant_125" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.patch) &gt; (-1)) &amp;&amp; ((patch) &gt; (-1))" to="false" />
    <mutant id="mutant_367" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="(current &lt; '℀')" />
    <mutant id="mutant_126" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.patch) &gt; (-1)) &amp;&amp; ((patch) &gt; (-1))" to="((version.patch) &gt; (-1)) || ((patch) &gt; (-1))" />
    <mutant id="mutant_368" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="true" />
    <mutant id="mutant_127" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1)))" to="((version.minor) &gt; (-1))" />
    <mutant id="mutant_369" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="false" />
    <mutant id="mutant_128" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1)))" to="(cmp == 0)" />
    <mutant id="mutant_121" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.minor) &gt; (-1)) &amp;&amp; ((minor) &gt; (-1))" to="true" />
    <mutant id="mutant_363" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' ')))" to="(current &lt; ' ')" />
    <mutant id="mutant_122" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.minor) &gt; (-1)) &amp;&amp; ((minor) &gt; (-1))" to="false" />
    <mutant id="mutant_364" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' ')))" to="((current &lt; ' ') &amp;&amp; ((current &gt;= '') &amp;&amp; (current &lt; ' ')))" />
    <mutant id="mutant_123" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.patch) &gt; (-1)) &amp;&amp; ((patch) &gt; (-1))" to="(version.patch) &gt; (-1)" />
    <mutant id="mutant_365" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="(current &gt;= ' ')" />
    <mutant id="mutant_124" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.patch) &gt; (-1)) &amp;&amp; ((patch) &gt; (-1))" to="true" />
    <mutant id="mutant_366" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="((current &gt;= ' ') || (current &lt; '℀'))" />
    <mutant id="mutant_360" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' ')))" to="((current &gt;= '') &amp;&amp; (current &lt; ' '))" />
    <mutant id="mutant_361" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' ')))" to="true" />
    <mutant id="mutant_120" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.minor) &gt; (-1)) &amp;&amp; ((minor) &gt; (-1))" to="((version.minor) &gt; (-1)) || ((minor) &gt; (-1))" />
    <mutant id="mutant_362" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' ')))" to="false" />
    <mutant id="mutant_136" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))) &amp;&amp; ((minor) &gt; (-1))" to="false" />
    <mutant id="mutant_378" viable="false" in="org.apache.shindig.common.JsonUtil$1.load(java.lang.Class)" from="((method.getParameterTypes().length) == 0) &amp;&amp; (!(method.isSynthetic()))" to="!(method.isSynthetic())" />
    <mutant id="mutant_137" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1)))" to="(cmp == 0)" />
    <mutant id="mutant_379" viable="false" in="org.apache.shindig.common.JsonUtil$1.load(java.lang.Class)" from="((method.getParameterTypes().length) == 0) &amp;&amp; (!(method.isSynthetic()))" to="(method.getParameterTypes().length) == 0" />
    <mutant id="mutant_138" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1)))" to="((version.patch) &gt; (-1))" />
    <mutant id="mutant_139" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1)))" to="((cmp == 0) || ((version.patch) &gt; (-1)))" />
    <mutant id="mutant_132" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))) &amp;&amp; ((minor) &gt; (-1))" to="(cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))" />
    <mutant id="mutant_374" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))) || ((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))) &amp;&amp; ((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" />
    <mutant id="mutant_133" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))) &amp;&amp; ((minor) &gt; (-1))" to="(minor) &gt; (-1)" />
    <mutant id="mutant_375" viable="false" in="org.apache.shindig.common.JsonUtil$1.load(java.lang.Class)" from="((method.getParameterTypes().length) == 0) &amp;&amp; (!(method.isSynthetic()))" to="((method.getParameterTypes().length) == 0) || (!(method.isSynthetic()))" />
    <mutant id="mutant_134" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))) &amp;&amp; ((minor) &gt; (-1))" to="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))) || ((minor) &gt; (-1))" />
    <mutant id="mutant_376" viable="false" in="org.apache.shindig.common.JsonUtil$1.load(java.lang.Class)" from="((method.getParameterTypes().length) == 0) &amp;&amp; (!(method.isSynthetic()))" to="true" />
    <mutant id="mutant_135" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))) &amp;&amp; ((minor) &gt; (-1))" to="true" />
    <mutant id="mutant_377" viable="false" in="org.apache.shindig.common.JsonUtil$1.load(java.lang.Class)" from="((method.getParameterTypes().length) == 0) &amp;&amp; (!(method.isSynthetic()))" to="false" />
    <mutant id="mutant_370" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))) || ((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="(current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))" />
    <mutant id="mutant_371" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))) || ((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="(current &gt;= ' ') &amp;&amp; (current &lt; '℀')" />
    <mutant id="mutant_130" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1)))" to="false" />
    <mutant id="mutant_372" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))) || ((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="true" />
    <mutant id="mutant_131" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1)))" to="((cmp == 0) || ((version.minor) &gt; (-1)))" />
    <mutant id="mutant_373" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))) || ((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="false" />
    <mutant id="mutant_147" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(((MASK) + 1) != (1 &lt;&lt; (SHIFT))) || ((digits.length) &gt;= 256)" to="true" />
    <mutant id="mutant_389" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2))" to="false" />
    <mutant id="mutant_148" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(((MASK) + 1) != (1 &lt;&lt; (SHIFT))) || ((digits.length) &gt;= 256)" to="false" />
    <mutant id="mutant_149" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(((MASK) + 1) != (1 &lt;&lt; (SHIFT))) || ((digits.length) &gt;= 256)" to="(digits.length) &gt;= 256" />
    <mutant id="mutant_380" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="(name.startsWith(&quot;get&quot;)) &amp;&amp; (!(JsonUtil.EXCLUDE_METHODS.contains(name)))" to="!(JsonUtil.EXCLUDE_METHODS.contains(name))" />
    <mutant id="mutant_143" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))) &amp;&amp; ((patch) &gt; (-1))" to="(cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))" />
    <mutant id="mutant_385" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2))" to="((name.length()) &gt; 2)" />
    <mutant id="mutant_144" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))) &amp;&amp; ((patch) &gt; (-1))" to="true" />
    <mutant id="mutant_386" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2))" to="((name.startsWith(&quot;is&quot;)) || ((name.length()) &gt; 2))" />
    <mutant id="mutant_145" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))) &amp;&amp; ((patch) &gt; (-1))" to="false" />
    <mutant id="mutant_387" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2))" to="(name.startsWith(&quot;is&quot;))" />
    <mutant id="mutant_146" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))) &amp;&amp; ((patch) &gt; (-1))" to="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))) || ((patch) &gt; (-1))" />
    <mutant id="mutant_388" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2))" to="true" />
    <mutant id="mutant_381" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="(name.startsWith(&quot;get&quot;)) &amp;&amp; (!(JsonUtil.EXCLUDE_METHODS.contains(name)))" to="true" />
    <mutant id="mutant_140" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1)))" to="true" />
    <mutant id="mutant_382" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="(name.startsWith(&quot;get&quot;)) &amp;&amp; (!(JsonUtil.EXCLUDE_METHODS.contains(name)))" to="false" />
    <mutant id="mutant_141" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1)))" to="false" />
    <mutant id="mutant_383" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="(name.startsWith(&quot;get&quot;)) &amp;&amp; (!(JsonUtil.EXCLUDE_METHODS.contains(name)))" to="name.startsWith(&quot;get&quot;)" />
    <mutant id="mutant_142" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))) &amp;&amp; ((patch) &gt; (-1))" to="(patch) &gt; (-1)" />
    <mutant id="mutant_384" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="(name.startsWith(&quot;get&quot;)) &amp;&amp; (!(JsonUtil.EXCLUDE_METHODS.contains(name)))" to="(name.startsWith(&quot;get&quot;)) || (!(JsonUtil.EXCLUDE_METHODS.contains(name)))" />
    <mutant id="mutant_158" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft &gt; 0) || (next &lt; (data.length))" to="(bitsLeft &gt; 0) &amp;&amp; (next &lt; (data.length))" />
    <mutant id="mutant_159" viable="false" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft &gt; 0) || (next &lt; (data.length))" to="true" />
    <mutant id="mutant_390" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)) &amp;&amp; (Character.isUpperCase(name.charAt(2)))" to="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)) || (Character.isUpperCase(name.charAt(2)))" />
    <mutant id="mutant_391" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)) &amp;&amp; (Character.isUpperCase(name.charAt(2)))" to="true" />
    <mutant id="mutant_154" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(next == outLength) &amp;&amp; (bitsLeft &lt; (SHIFT))" to="false" />
    <mutant id="mutant_396" viable="true" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(value != null) &amp;&amp; (value.contains(&quot;%contextRoot%&quot;))" to="(value != null) || (value.contains(&quot;%contextRoot%&quot;))" />
    <mutant id="mutant_155" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(next == outLength) &amp;&amp; (bitsLeft &lt; (SHIFT))" to="bitsLeft &lt; (SHIFT)" />
    <mutant id="mutant_397" viable="true" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(value != null) &amp;&amp; (value.contains(&quot;%contextRoot%&quot;))" to="true" />
    <mutant id="mutant_156" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(next == outLength) &amp;&amp; (bitsLeft &lt; (SHIFT))" to="(next == outLength) || (bitsLeft &lt; (SHIFT))" />
    <mutant id="mutant_398" viable="true" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(value != null) &amp;&amp; (value.contains(&quot;%contextRoot%&quot;))" to="false" />
    <mutant id="mutant_157" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft &gt; 0) || (next &lt; (data.length))" to="next &lt; (data.length)" />
    <mutant id="mutant_399" viable="true" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(value != null) &amp;&amp; (value.contains(&quot;%contextRoot%&quot;))" to="value != null" />
    <mutant id="mutant_150" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(((MASK) + 1) != (1 &lt;&lt; (SHIFT))) || ((digits.length) &gt;= 256)" to="(((MASK) + 1) != (1 &lt;&lt; (SHIFT))) &amp;&amp; ((digits.length) &gt;= 256)" />
    <mutant id="mutant_392" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)) &amp;&amp; (Character.isUpperCase(name.charAt(2)))" to="false" />
    <mutant id="mutant_151" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(((MASK) + 1) != (1 &lt;&lt; (SHIFT))) || ((digits.length) &gt;= 256)" to="((MASK) + 1) != (1 &lt;&lt; (SHIFT))" />
    <mutant id="mutant_393" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)) &amp;&amp; (Character.isUpperCase(name.charAt(2)))" to="Character.isUpperCase(name.charAt(2))" />
    <mutant id="mutant_152" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(next == outLength) &amp;&amp; (bitsLeft &lt; (SHIFT))" to="next == outLength" />
    <mutant id="mutant_394" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)) &amp;&amp; (Character.isUpperCase(name.charAt(2)))" to="(name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)" />
    <mutant id="mutant_153" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(next == outLength) &amp;&amp; (bitsLeft &lt; (SHIFT))" to="true" />
    <mutant id="mutant_395" viable="true" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(value != null) &amp;&amp; (value.contains(&quot;%contextRoot%&quot;))" to="value.contains(&quot;%contextRoot%&quot;)" />
    <mutant id="mutant_169" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="((key != null) &amp;&amp; ((key.trim().length()) &gt; 0))" to="true" />
    <mutant id="mutant_160" viable="false" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft &gt; 0) || (next &lt; (data.length))" to="false" />
    <mutant id="mutant_165" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(systemProperties != null) &amp;&amp; ((systemProperties.trim().length()) &gt; 0)" to="false" />
    <mutant id="mutant_166" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(systemProperties != null) &amp;&amp; ((systemProperties.trim().length()) &gt; 0)" to="(systemProperties != null) || ((systemProperties.trim().length()) &gt; 0)" />
    <mutant id="mutant_167" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="((key != null) &amp;&amp; ((key.trim().length()) &gt; 0))" to="((key.trim().length()) &gt; 0)" />
    <mutant id="mutant_168" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="((key != null) &amp;&amp; ((key.trim().length()) &gt; 0))" to="((key != null) || ((key.trim().length()) &gt; 0))" />
    <mutant id="mutant_161" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft &gt; 0) || (next &lt; (data.length))" to="bitsLeft &gt; 0" />
    <mutant id="mutant_162" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(systemProperties != null) &amp;&amp; ((systemProperties.trim().length()) &gt; 0)" to="systemProperties != null" />
    <mutant id="mutant_163" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(systemProperties != null) &amp;&amp; ((systemProperties.trim().length()) &gt; 0)" to="(systemProperties.trim().length()) &gt; 0" />
    <mutant id="mutant_164" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(systemProperties != null) &amp;&amp; ((systemProperties.trim().length()) &gt; 0)" to="true" />
    <mutant id="mutant_170" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="((key != null) &amp;&amp; ((key.trim().length()) &gt; 0))" to="false" />
    <mutant id="mutant_171" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="((key != null) &amp;&amp; ((key.trim().length()) &gt; 0))" to="(key != null)" />
    <mutant id="mutant_176" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null))" to="(value != null)" />
    <mutant id="mutant_177" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)) &amp;&amp; ((value.trim().length()) &gt; 0)" to="(value.trim().length()) &gt; 0" />
    <mutant id="mutant_178" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)) &amp;&amp; ((value.trim().length()) &gt; 0)" to="((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)" />
    <mutant id="mutant_179" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)) &amp;&amp; ((value.trim().length()) &gt; 0)" to="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)) || ((value.trim().length()) &gt; 0)" />
    <mutant id="mutant_172" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null))" to="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) || (value != null))" />
    <mutant id="mutant_173" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null))" to="((key != null) &amp;&amp; ((key.trim().length()) &gt; 0))" />
    <mutant id="mutant_174" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null))" to="true" />
    <mutant id="mutant_175" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null))" to="false" />
    <mutant id="mutant_180" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)) &amp;&amp; ((value.trim().length()) &gt; 0)" to="true" />
    <mutant id="mutant_181" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)) &amp;&amp; ((value.trim().length()) &gt; 0)" to="false" />
    <mutant id="mutant_182" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1))" to="((path.length()) &gt; 1)" />
    <mutant id="mutant_187" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1)) &amp;&amp; (!(path.startsWith(&quot;/&quot;)))" to="(((path) != null) &amp;&amp; ((path.length()) &gt; 1)) || (!(path.startsWith(&quot;/&quot;)))" />
    <mutant id="mutant_188" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1)) &amp;&amp; (!(path.startsWith(&quot;/&quot;)))" to="!(path.startsWith(&quot;/&quot;))" />
    <mutant id="mutant_189" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1)) &amp;&amp; (!(path.startsWith(&quot;/&quot;)))" to="true" />
    <mutant id="mutant_183" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1))" to="true" />
    <mutant id="mutant_184" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1))" to="false" />
    <mutant id="mutant_185" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1))" to="((path) != null)" />
    <mutant id="mutant_186" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1))" to="(((path) != null) || ((path.length()) &gt; 1))" />
    <mutant id="mutant_190" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1)) &amp;&amp; (!(path.startsWith(&quot;/&quot;)))" to="false" />
    <mutant id="mutant_191" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1)) &amp;&amp; (!(path.startsWith(&quot;/&quot;)))" to="((path) != null) &amp;&amp; ((path.length()) &gt; 1)" />
    <mutant id="mutant_192" viable="true" in="org.apache.shindig.common.uri.Uri.isAbsolute()" from="((scheme) != null) &amp;&amp; ((authority) != null)" to="(authority) != null" />
    <mutant id="mutant_193" viable="true" in="org.apache.shindig.common.uri.Uri.isAbsolute()" from="((scheme) != null) &amp;&amp; ((authority) != null)" to="true" />
    <mutant id="mutant_198" viable="true" in="org.apache.shindig.common.uri.Uri.getFragmentParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="values.isEmpty()" />
    <mutant id="mutant_199" viable="true" in="org.apache.shindig.common.uri.Uri.getFragmentParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="true" />
    <mutant id="mutant_194" viable="true" in="org.apache.shindig.common.uri.Uri.isAbsolute()" from="((scheme) != null) &amp;&amp; ((authority) != null)" to="false" />
    <mutant id="mutant_195" viable="true" in="org.apache.shindig.common.uri.Uri.isAbsolute()" from="((scheme) != null) &amp;&amp; ((authority) != null)" to="((scheme) != null) || ((authority) != null)" />
    <mutant id="mutant_196" viable="true" in="org.apache.shindig.common.uri.Uri.isAbsolute()" from="((scheme) != null) &amp;&amp; ((authority) != null)" to="(scheme) != null" />
    <mutant id="mutant_197" viable="true" in="org.apache.shindig.common.uri.Uri.getFragmentParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="(values == null) &amp;&amp; (values.isEmpty())" />
    <mutant id="mutant_701" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(response instanceof org.apache.shindig.protocol.DataCollection)) &amp;&amp; (!(response instanceof org.apache.shindig.protocol.RestfulCollection))" to="!(response instanceof org.apache.shindig.protocol.RestfulCollection)" />
    <mutant id="mutant_702" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest)))" to="(this.isJSONPAllowed)" />
    <mutant id="mutant_703" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest)))" to="((this.isJSONPAllowed) || (HttpUtil.isJSONP(servletRequest)))" />
    <mutant id="mutant_704" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest)))" to="true" />
    <mutant id="mutant_700" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(response instanceof org.apache.shindig.protocol.DataCollection)) &amp;&amp; (!(response instanceof org.apache.shindig.protocol.RestfulCollection))" to="!(response instanceof org.apache.shindig.protocol.DataCollection)" />
    <mutant id="mutant_709" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))) &amp;&amp; (ContentTypes.OUTPUT_JSON_CONTENT_TYPE.equals(responseConverter.getContentType()))" to="ContentTypes.OUTPUT_JSON_CONTENT_TYPE.equals(responseConverter.getContentType())" />
    <mutant id="mutant_705" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest)))" to="false" />
    <mutant id="mutant_706" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest)))" to="(HttpUtil.isJSONP(servletRequest))" />
    <mutant id="mutant_707" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))) &amp;&amp; (ContentTypes.OUTPUT_JSON_CONTENT_TYPE.equals(responseConverter.getContentType()))" to="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))) || (ContentTypes.OUTPUT_JSON_CONTENT_TYPE.equals(responseConverter.getContentType()))" />
    <mutant id="mutant_708" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))) &amp;&amp; (ContentTypes.OUTPUT_JSON_CONTENT_TYPE.equals(responseConverter.getContentType()))" to="(this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))" />
    <mutant id="mutant_712" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$MethodCaller(java.lang.reflect.Method,boolean)" from="((inputClass) != null) &amp;&amp; (RequestItem.class.isAssignableFrom(inputClass))" to="RequestItem.class.isAssignableFrom(inputClass)" />
    <mutant id="mutant_713" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$MethodCaller(java.lang.reflect.Method,boolean)" from="((inputClass) != null) &amp;&amp; (RequestItem.class.isAssignableFrom(inputClass))" to="true" />
    <mutant id="mutant_714" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$MethodCaller(java.lang.reflect.Method,boolean)" from="((inputClass) != null) &amp;&amp; (RequestItem.class.isAssignableFrom(inputClass))" to="false" />
    <mutant id="mutant_715" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$MethodCaller(java.lang.reflect.Method,boolean)" from="((inputClass) != null) &amp;&amp; (RequestItem.class.isAssignableFrom(inputClass))" to="(inputClass) != null" />
    <mutant id="mutant_710" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))) &amp;&amp; (ContentTypes.OUTPUT_JSON_CONTENT_TYPE.equals(responseConverter.getContentType()))" to="true" />
    <mutant id="mutant_711" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))) &amp;&amp; (ContentTypes.OUTPUT_JSON_CONTENT_TYPE.equals(responseConverter.getContentType()))" to="false" />
    <mutant id="mutant_716" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$MethodCaller(java.lang.reflect.Method,boolean)" from="((inputClass) != null) &amp;&amp; (RequestItem.class.isAssignableFrom(inputClass))" to="((inputClass) != null) || (RequestItem.class.isAssignableFrom(inputClass))" />
    <mutant id="mutant_717" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex)))" to="(((this.constCount) == (that.constCount)) || ((this.lastConstIndex) == (that.lastConstIndex)))" />
    <mutant id="mutant_718" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex)))" to="((this.lastConstIndex) == (that.lastConstIndex))" />
    <mutant id="mutant_719" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex)))" to="true" />
    <mutant id="mutant_723" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))) &amp;&amp; (Objects.equal(this.operationPath, that.operationPath))" to="((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))" />
    <mutant id="mutant_724" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))) &amp;&amp; (Objects.equal(this.operationPath, that.operationPath))" to="true" />
    <mutant id="mutant_725" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))) &amp;&amp; (Objects.equal(this.operationPath, that.operationPath))" to="false" />
    <mutant id="mutant_726" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))) &amp;&amp; (Objects.equal(this.operationPath, that.operationPath))" to="Objects.equal(this.operationPath, that.operationPath)" />
    <mutant id="mutant_720" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex)))" to="false" />
    <mutant id="mutant_721" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex)))" to="((this.constCount) == (that.constCount))" />
    <mutant id="mutant_722" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))) &amp;&amp; (Objects.equal(this.operationPath, that.operationPath))" to="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))) || (Objects.equal(this.operationPath, that.operationPath))" />
    <mutant id="mutant_727" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((parts.get(i).type) == (DefaultHandlerRegistry.RestPath.PartType.CONST)) &amp;&amp; (!(parts.get(i).partName.equals(requestPathParts[i])))" to="(parts.get(i).type) == (DefaultHandlerRegistry.RestPath.PartType.CONST)" />
    <mutant id="mutant_728" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((parts.get(i).type) == (DefaultHandlerRegistry.RestPath.PartType.CONST)) &amp;&amp; (!(parts.get(i).partName.equals(requestPathParts[i])))" to="((parts.get(i).type) == (DefaultHandlerRegistry.RestPath.PartType.CONST)) || (!(parts.get(i).partName.equals(requestPathParts[i])))" />
    <mutant id="mutant_729" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((parts.get(i).type) == (DefaultHandlerRegistry.RestPath.PartType.CONST)) &amp;&amp; (!(parts.get(i).partName.equals(requestPathParts[i])))" to="!(parts.get(i).partName.equals(requestPathParts[i]))" />
    <mutant id="mutant_734" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.isContentJsonBatch(java.lang.String)" from="((content.indexOf('[')) != (-1)) &amp;&amp; ((content.indexOf('[')) &lt; (content.indexOf('{')))" to="true" />
    <mutant id="mutant_735" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.isContentJsonBatch(java.lang.String)" from="((content.indexOf('[')) != (-1)) &amp;&amp; ((content.indexOf('[')) &lt; (content.indexOf('{')))" to="false" />
    <mutant id="mutant_736" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.isContentJsonBatch(java.lang.String)" from="((content.indexOf('[')) != (-1)) &amp;&amp; ((content.indexOf('[')) &lt; (content.indexOf('{')))" to="((content.indexOf('[')) != (-1)) || ((content.indexOf('[')) &lt; (content.indexOf('{')))" />
    <mutant id="mutant_737" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getJSONResponse(java.lang.String,org.apache.shindig.protocol.ResponseItem)" from="((responseItem.getErrorCode()) &lt; 200) || ((responseItem.getErrorCode()) &gt;= 400)" to="(responseItem.getErrorCode()) &lt; 200" />
    <mutant id="mutant_730" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((parts.get(i).type) == (DefaultHandlerRegistry.RestPath.PartType.CONST)) &amp;&amp; (!(parts.get(i).partName.equals(requestPathParts[i])))" to="true" />
    <mutant id="mutant_731" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((parts.get(i).type) == (DefaultHandlerRegistry.RestPath.PartType.CONST)) &amp;&amp; (!(parts.get(i).partName.equals(requestPathParts[i])))" to="false" />
    <mutant id="mutant_732" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.isContentJsonBatch(java.lang.String)" from="((content.indexOf('[')) != (-1)) &amp;&amp; ((content.indexOf('[')) &lt; (content.indexOf('{')))" to="(content.indexOf('[')) &lt; (content.indexOf('{'))" />
    <mutant id="mutant_733" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.isContentJsonBatch(java.lang.String)" from="((content.indexOf('[')) != (-1)) &amp;&amp; ((content.indexOf('[')) &lt; (content.indexOf('{')))" to="(content.indexOf('[')) != (-1)" />
    <mutant id="mutant_738" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getJSONResponse(java.lang.String,org.apache.shindig.protocol.ResponseItem)" from="((responseItem.getErrorCode()) &lt; 200) || ((responseItem.getErrorCode()) &gt;= 400)" to="((responseItem.getErrorCode()) &lt; 200) &amp;&amp; ((responseItem.getErrorCode()) &gt;= 400)" />
    <mutant id="mutant_739" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getJSONResponse(java.lang.String,org.apache.shindig.protocol.ResponseItem)" from="((responseItem.getErrorCode()) &lt; 200) || ((responseItem.getErrorCode()) &gt;= 400)" to="true" />
    <mutant id="mutant_503" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!(extraFields.isEmpty())) &amp;&amp; (method.getName().startsWith(&quot;get&quot;))" to="method.getName().startsWith(&quot;get&quot;)" />
    <mutant id="mutant_745" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName())))" to="false" />
    <mutant id="mutant_504" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!(extraFields.isEmpty())) &amp;&amp; (method.getName().startsWith(&quot;get&quot;))" to="!(extraFields.isEmpty())" />
    <mutant id="mutant_746" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName())))" to="(item.isFormField())" />
    <mutant id="mutant_505" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source == null) &amp;&amp; (!(extraFields.isEmpty()))" to="true" />
    <mutant id="mutant_747" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))) &amp;&amp; (content == null)" to="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))) || (content == null)" />
    <mutant id="mutant_506" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source == null) &amp;&amp; (!(extraFields.isEmpty()))" to="false" />
    <mutant id="mutant_748" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))) &amp;&amp; (content == null)" to="true" />
    <mutant id="mutant_741" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getJSONResponse(java.lang.String,org.apache.shindig.protocol.ResponseItem)" from="((responseItem.getErrorCode()) &lt; 200) || ((responseItem.getErrorCode()) &gt;= 400)" to="(responseItem.getErrorCode()) &gt;= 400" />
    <mutant id="mutant_500" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!(extraFields.isEmpty())) &amp;&amp; (method.getName().startsWith(&quot;get&quot;))" to="(!(extraFields.isEmpty())) || (method.getName().startsWith(&quot;get&quot;))" />
    <mutant id="mutant_742" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName())))" to="((item.isFormField()) || (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName())))" />
    <mutant id="mutant_501" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!(extraFields.isEmpty())) &amp;&amp; (method.getName().startsWith(&quot;get&quot;))" to="true" />
    <mutant id="mutant_743" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName())))" to="(JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))" />
    <mutant id="mutant_502" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!(extraFields.isEmpty())) &amp;&amp; (method.getName().startsWith(&quot;get&quot;))" to="false" />
    <mutant id="mutant_744" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName())))" to="true" />
    <mutant id="mutant_507" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source == null) &amp;&amp; (!(extraFields.isEmpty()))" to="(source == null) || (!(extraFields.isEmpty()))" />
    <mutant id="mutant_749" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))) &amp;&amp; (content == null)" to="false" />
    <mutant id="mutant_508" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source == null) &amp;&amp; (!(extraFields.isEmpty()))" to="source == null" />
    <mutant id="mutant_509" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source == null) &amp;&amp; (!(extraFields.isEmpty()))" to="!(extraFields.isEmpty())" />
    <mutant id="mutant_740" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getJSONResponse(java.lang.String,org.apache.shindig.protocol.ResponseItem)" from="((responseItem.getErrorCode()) &lt; 200) || ((responseItem.getErrorCode()) &gt;= 400)" to="false" />
    <mutant id="mutant_514" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(apiInterface.isPrimitive()) || (apiInterface.isAssignableFrom(source.getClass()))" to="false" />
    <mutant id="mutant_756" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))" to="this.isJSONPAllowed" />
    <mutant id="mutant_515" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source instanceof java.lang.Enum&lt;?&gt;) &amp;&amp; (delegatedClasses.containsKey(source.getClass()))" to="true" />
    <mutant id="mutant_757" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))" to="(this.isJSONPAllowed) || (HttpUtil.isJSONP(servletRequest))" />
    <mutant id="mutant_516" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source instanceof java.lang.Enum&lt;?&gt;) &amp;&amp; (delegatedClasses.containsKey(source.getClass()))" to="false" />
    <mutant id="mutant_758" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))" to="true" />
    <mutant id="mutant_517" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source instanceof java.lang.Enum&lt;?&gt;) &amp;&amp; (delegatedClasses.containsKey(source.getClass()))" to="source instanceof java.lang.Enum&lt;?&gt;" />
    <mutant id="mutant_759" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))" to="false" />
    <mutant id="mutant_510" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(apiInterface.isPrimitive()) || (apiInterface.isAssignableFrom(source.getClass()))" to="apiInterface.isPrimitive()" />
    <mutant id="mutant_752" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="((&quot;GET&quot;.equals(method)) || (&quot;POST&quot;.equals(method)))" to="true" />
    <mutant id="mutant_511" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(apiInterface.isPrimitive()) || (apiInterface.isAssignableFrom(source.getClass()))" to="(apiInterface.isPrimitive()) &amp;&amp; (apiInterface.isAssignableFrom(source.getClass()))" />
    <mutant id="mutant_753" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="((&quot;GET&quot;.equals(method)) || (&quot;POST&quot;.equals(method)))" to="false" />
    <mutant id="mutant_512" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(apiInterface.isPrimitive()) || (apiInterface.isAssignableFrom(source.getClass()))" to="apiInterface.isAssignableFrom(source.getClass())" />
    <mutant id="mutant_754" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="((&quot;GET&quot;.equals(method)) || (&quot;POST&quot;.equals(method)))" to="(&quot;GET&quot;.equals(method))" />
    <mutant id="mutant_513" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(apiInterface.isPrimitive()) || (apiInterface.isAssignableFrom(source.getClass()))" to="true" />
    <mutant id="mutant_755" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="((&quot;GET&quot;.equals(method)) || (&quot;POST&quot;.equals(method)))" to="((&quot;GET&quot;.equals(method)) &amp;&amp; (&quot;POST&quot;.equals(method)))" />
    <mutant id="mutant_518" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source instanceof java.lang.Enum&lt;?&gt;) &amp;&amp; (delegatedClasses.containsKey(source.getClass()))" to="delegatedClasses.containsKey(source.getClass())" />
    <mutant id="mutant_519" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source instanceof java.lang.Enum&lt;?&gt;) &amp;&amp; (delegatedClasses.containsKey(source.getClass()))" to="(source instanceof java.lang.Enum&lt;?&gt;) || (delegatedClasses.containsKey(source.getClass()))" />
    <mutant id="mutant_750" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))) &amp;&amp; (content == null)" to="content == null" />
    <mutant id="mutant_751" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))) &amp;&amp; (content == null)" to="(item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))" />
    <mutant id="mutant_525" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="!(mapSource.isEmpty())" />
    <mutant id="mutant_767" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))) &amp;&amp; (Objects.equal(response, that.response))" to="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))) || (Objects.equal(response, that.response))" />
    <mutant id="mutant_526" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="true" />
    <mutant id="mutant_768" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))) &amp;&amp; (Objects.equal(response, that.response))" to="true" />
    <mutant id="mutant_527" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="false" />
    <mutant id="mutant_769" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))) &amp;&amp; (Objects.equal(response, that.response))" to="false" />
    <mutant id="mutant_528" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="(!(mapSource.isEmpty())) || (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" />
    <mutant id="mutant_521" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="false" />
    <mutant id="mutant_763" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage)))" to="false" />
    <mutant id="mutant_522" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="delegatedClasses.containsKey(mapSource.values().iterator().next().getClass())" />
    <mutant id="mutant_764" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage)))" to="(((errorCode) == (that.errorCode)) || (Objects.equal(errorMessage, that.errorMessage)))" />
    <mutant id="mutant_523" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="!(mapSource.isEmpty())" />
    <mutant id="mutant_765" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage)))" to="((errorCode) == (that.errorCode))" />
    <mutant id="mutant_524" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="(!(mapSource.isEmpty())) || (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" />
    <mutant id="mutant_766" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))) &amp;&amp; (Objects.equal(response, that.response))" to="Objects.equal(response, that.response)" />
    <mutant id="mutant_529" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="delegatedClasses.containsKey(mapSource.values().iterator().next().getClass())" />
    <mutant id="mutant_760" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))" to="HttpUtil.isJSONP(servletRequest)" />
    <mutant id="mutant_761" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage)))" to="(Objects.equal(errorMessage, that.errorMessage))" />
    <mutant id="mutant_520" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="true" />
    <mutant id="mutant_762" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage)))" to="true" />
    <mutant id="mutant_536" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="true" />
    <mutant id="mutant_778" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))) &amp;&amp; (&quot;REST&quot;.equalsIgnoreCase(request.getFilterValue()))" to="false" />
    <mutant id="mutant_537" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="false" />
    <mutant id="mutant_779" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))) &amp;&amp; (&quot;REST&quot;.equalsIgnoreCase(request.getFilterValue()))" to="&quot;REST&quot;.equalsIgnoreCase(request.getFilterValue())" />
    <mutant id="mutant_538" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="(List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) || (List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" />
    <mutant id="mutant_539" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))" />
    <mutant id="mutant_532" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(listSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(listSource.get(0).getClass()))" to="true" />
    <mutant id="mutant_774" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation())))" to="false" />
    <mutant id="mutant_533" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(listSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(listSource.get(0).getClass()))" to="false" />
    <mutant id="mutant_775" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation())))" to="(&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy()))" />
    <mutant id="mutant_534" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(listSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(listSource.get(0).getClass()))" to="delegatedClasses.containsKey(listSource.get(0).getClass())" />
    <mutant id="mutant_776" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))) &amp;&amp; (&quot;REST&quot;.equalsIgnoreCase(request.getFilterValue()))" to="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))) || (&quot;REST&quot;.equalsIgnoreCase(request.getFilterValue()))" />
    <mutant id="mutant_535" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))" />
    <mutant id="mutant_777" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))) &amp;&amp; (&quot;REST&quot;.equalsIgnoreCase(request.getFilterValue()))" to="true" />
    <mutant id="mutant_770" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))) &amp;&amp; (Objects.equal(response, that.response))" to="((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))" />
    <mutant id="mutant_771" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation())))" to="((FilterOperation.equals) == (request.getFilterOperation()))" />
    <mutant id="mutant_530" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(listSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(listSource.get(0).getClass()))" to="(!(listSource.isEmpty())) || (delegatedClasses.containsKey(listSource.get(0).getClass()))" />
    <mutant id="mutant_772" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation())))" to="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) || ((FilterOperation.equals) == (request.getFilterOperation())))" />
    <mutant id="mutant_531" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(listSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(listSource.get(0).getClass()))" to="!(listSource.isEmpty())" />
    <mutant id="mutant_773" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation())))" to="true" />
    <mutant id="mutant_305" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0)" to="true" />
    <mutant id="mutant_547" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType))" />
    <mutant id="mutant_306" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0)" to="false" />
    <mutant id="mutant_548" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))" />
    <mutant id="mutant_307" viable="true" in="org.apache.shindig.common.xml.XmlUtil.getHttpUriAttribute(org.w3c.dom.Node,java.lang.String,org.apache.shindig.common.uri.Uri,org.apache.shindig.common.uri.Uri)" from="(!(&quot;http&quot;.equalsIgnoreCase(uri.getScheme()))) &amp;&amp; (!(&quot;https&quot;.equalsIgnoreCase(uri.getScheme())))" to="true" />
    <mutant id="mutant_549" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="true" />
    <mutant id="mutant_308" viable="true" in="org.apache.shindig.common.xml.XmlUtil.getHttpUriAttribute(org.w3c.dom.Node,java.lang.String,org.apache.shindig.common.uri.Uri,org.apache.shindig.common.uri.Uri)" from="(!(&quot;http&quot;.equalsIgnoreCase(uri.getScheme()))) &amp;&amp; (!(&quot;https&quot;.equalsIgnoreCase(uri.getScheme())))" to="false" />
    <mutant id="mutant_301" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme))))" to="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) &amp;&amp; ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme))))" />
    <mutant id="mutant_543" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="(dataKeyType != interfaceKeyType) &amp;&amp; (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" />
    <mutant id="mutant_302" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0)" to="((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))" />
    <mutant id="mutant_544" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="dataKeyType != interfaceKeyType" />
    <mutant id="mutant_303" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0)" to="serverPort &lt;= 0" />
    <mutant id="mutant_545" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="true" />
    <mutant id="mutant_304" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0)" to="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) &amp;&amp; (serverPort &lt;= 0)" />
    <mutant id="mutant_546" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="false" />
    <mutant id="mutant_309" viable="true" in="org.apache.shindig.common.xml.XmlUtil.getHttpUriAttribute(org.w3c.dom.Node,java.lang.String,org.apache.shindig.common.uri.Uri,org.apache.shindig.common.uri.Uri)" from="(!(&quot;http&quot;.equalsIgnoreCase(uri.getScheme()))) &amp;&amp; (!(&quot;https&quot;.equalsIgnoreCase(uri.getScheme())))" to="(!(&quot;http&quot;.equalsIgnoreCase(uri.getScheme()))) || (!(&quot;https&quot;.equalsIgnoreCase(uri.getScheme())))" />
    <mutant id="mutant_540" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="true" />
    <mutant id="mutant_541" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="false" />
    <mutant id="mutant_300" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme))))" to="false" />
    <mutant id="mutant_542" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="(Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) || (Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" />
    <mutant id="mutant_780" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))) &amp;&amp; (&quot;REST&quot;.equalsIgnoreCase(request.getFilterValue()))" to="(&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))" />
    <mutant id="mutant_316" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)" to="value instanceof java.lang.Boolean" />
    <mutant id="mutant_558" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataType))) &amp;&amp; (!(((Class&lt;?&gt;)(dataType)).isPrimitive())))" to="true" />
    <mutant id="mutant_317" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)" to="true" />
    <mutant id="mutant_559" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataType))) &amp;&amp; (!(((Class&lt;?&gt;)(dataType)).isPrimitive())))" to="false" />
    <mutant id="mutant_318" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)" to="false" />
    <mutant id="mutant_319" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)" to="(value instanceof java.lang.Number) &amp;&amp; (value instanceof java.lang.Boolean)" />
    <mutant id="mutant_312" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value == null) || (value == (JSONObject.NULL))" to="value == null" />
    <mutant id="mutant_554" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="true" />
    <mutant id="mutant_313" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value == null) || (value == (JSONObject.NULL))" to="true" />
    <mutant id="mutant_555" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="false" />
    <mutant id="mutant_314" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value == null) || (value == (JSONObject.NULL))" to="false" />
    <mutant id="mutant_556" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType))" />
    <mutant id="mutant_315" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value == null) || (value == (JSONObject.NULL))" to="(value == null) &amp;&amp; (value == (JSONObject.NULL))" />
    <mutant id="mutant_557" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataType))) &amp;&amp; (!(((Class&lt;?&gt;)(dataType)).isPrimitive())))" to="((!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataType))) || (!(((Class&lt;?&gt;)(dataType)).isPrimitive())))" />
    <mutant id="mutant_550" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="false" />
    <mutant id="mutant_551" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="(Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) || (Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" />
    <mutant id="mutant_310" viable="true" in="org.apache.shindig.common.xml.XmlUtil.getHttpUriAttribute(org.w3c.dom.Node,java.lang.String,org.apache.shindig.common.uri.Uri,org.apache.shindig.common.uri.Uri)" from="(!(&quot;http&quot;.equalsIgnoreCase(uri.getScheme()))) &amp;&amp; (!(&quot;https&quot;.equalsIgnoreCase(uri.getScheme())))" to="!(&quot;http&quot;.equalsIgnoreCase(uri.getScheme()))" />
    <mutant id="mutant_552" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="(dataKeyType != interfaceKeyType) &amp;&amp; (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" />
    <mutant id="mutant_311" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value == null) || (value == (JSONObject.NULL))" to="value == (JSONObject.NULL)" />
    <mutant id="mutant_553" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="dataKeyType != interfaceKeyType" />
    <mutant id="mutant_9" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class)))" to="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) &amp;&amp; (type == (JSONArray.class)))" />
    <mutant id="mutant_206" viable="true" in="org.apache.shindig.common.uri.Uri.getQueryParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="values == null" />
    <mutant id="mutant_448" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(content == null) || ((content.length()) == 0)" to="content == null" />
    <mutant id="mutant_8" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class)))" to="(type == (JSONArray.class))" />
    <mutant id="mutant_207" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) != '/')" to="pathlen &gt; 0" />
    <mutant id="mutant_449" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(content == null) || ((content.length()) == 0)" to="(content == null) &amp;&amp; ((content.length()) == 0)" />
    <mutant id="mutant_208" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) != '/')" to="(pathlen &gt; 0) || ((path.charAt(0)) != '/')" />
    <mutant id="mutant_209" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) != '/')" to="true" />
    <mutant id="mutant_5" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class)))" to="((type == (Boolean.class)) || (type == (Boolean.TYPE)))" />
    <mutant id="mutant_202" viable="true" in="org.apache.shindig.common.uri.Uri.getQueryParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="(values == null) &amp;&amp; (values.isEmpty())" />
    <mutant id="mutant_444" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.js&quot;)) || (file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.json&quot;))" to="(file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.js&quot;)) &amp;&amp; (file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.json&quot;))" />
    <mutant id="mutant_686" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getListParameter(java.lang.String)" from="(param instanceof String) &amp;&amp; ((((String)(param)).indexOf(',')) != (-1))" to="(((String)(param)).indexOf(',')) != (-1)" />
    <mutant id="mutant_4" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="((type == (Boolean.class)) || (type == (Boolean.TYPE)))" to="(type == (Boolean.class))" />
    <mutant id="mutant_203" viable="true" in="org.apache.shindig.common.uri.Uri.getQueryParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="values.isEmpty()" />
    <mutant id="mutant_445" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(content == null) || ((content.length()) == 0)" to="(content.length()) == 0" />
    <mutant id="mutant_687" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(servletRequest.getMethod().equals(&quot;GET&quot;))) &amp;&amp; (!(servletRequest.getMethod().equals(&quot;HEAD&quot;)))" to="(!(servletRequest.getMethod().equals(&quot;GET&quot;))) || (!(servletRequest.getMethod().equals(&quot;HEAD&quot;)))" />
    <mutant id="mutant_7" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class)))" to="false" />
    <mutant id="mutant_204" viable="true" in="org.apache.shindig.common.uri.Uri.getQueryParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="true" />
    <mutant id="mutant_446" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(content == null) || ((content.length()) == 0)" to="true" />
    <mutant id="mutant_688" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(servletRequest.getMethod().equals(&quot;GET&quot;))) &amp;&amp; (!(servletRequest.getMethod().equals(&quot;HEAD&quot;)))" to="!(servletRequest.getMethod().equals(&quot;HEAD&quot;))" />
    <mutant id="mutant_6" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class)))" to="true" />
    <mutant id="mutant_205" viable="true" in="org.apache.shindig.common.uri.Uri.getQueryParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="false" />
    <mutant id="mutant_447" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(content == null) || ((content.length()) == 0)" to="false" />
    <mutant id="mutant_689" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(servletRequest.getMethod().equals(&quot;GET&quot;))) &amp;&amp; (!(servletRequest.getMethod().equals(&quot;HEAD&quot;)))" to="true" />
    <mutant id="mutant_85" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="((injector) != null) &amp;&amp; (name != null)" to="false" />
    <mutant id="mutant_84" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="((injector) != null) &amp;&amp; (name != null)" to="true" />
    <mutant id="mutant_87" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="((injector) != null) &amp;&amp; (name != null)" to="name != null" />
    <mutant id="mutant_86" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="((injector) != null) &amp;&amp; (name != null)" to="(injector) != null" />
    <mutant id="mutant_89" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="((jsonArr.get(i)) instanceof org.json.JSONObject)" />
    <mutant id="mutant_88" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="((injector) != null) &amp;&amp; (name != null)" to="((injector) != null) || (name != null)" />
    <mutant id="mutant_90" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="((jsonArr.get(i)) instanceof JSONArray)" />
    <mutant id="mutant_92" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="false" />
    <mutant id="mutant_91" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="true" />
    <mutant id="mutant_94" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(!(jsonArr.isNull(i))) &amp;&amp; (((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray)" />
    <mutant id="mutant_93" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="(((jsonArr.get(i)) instanceof org.json.JSONObject) &amp;&amp; ((jsonArr.get(i)) instanceof JSONArray))" />
    <mutant id="mutant_1" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="((type == (Boolean.class)) || (type == (Boolean.TYPE)))" to="(type == (Boolean.TYPE))" />
    <mutant id="mutant_440" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.js&quot;)) || (file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.json&quot;))" to="true" />
    <mutant id="mutant_682" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getListParameter(java.lang.String)" from="(param instanceof String) &amp;&amp; ((((String)(param)).indexOf(',')) != (-1))" to="(param instanceof String) || ((((String)(param)).indexOf(',')) != (-1))" />
    <mutant id="mutant_0" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="((type == (Boolean.class)) || (type == (Boolean.TYPE)))" to="((type == (Boolean.class)) &amp;&amp; (type == (Boolean.TYPE)))" />
    <mutant id="mutant_441" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.js&quot;)) || (file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.json&quot;))" to="false" />
    <mutant id="mutant_683" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getListParameter(java.lang.String)" from="(param instanceof String) &amp;&amp; ((((String)(param)).indexOf(',')) != (-1))" to="param instanceof java.lang.String" />
    <mutant id="mutant_3" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="((type == (Boolean.class)) || (type == (Boolean.TYPE)))" to="false" />
    <mutant id="mutant_200" viable="true" in="org.apache.shindig.common.uri.Uri.getFragmentParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="false" />
    <mutant id="mutant_442" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.js&quot;)) || (file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.json&quot;))" to="file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.json&quot;)" />
    <mutant id="mutant_684" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getListParameter(java.lang.String)" from="(param instanceof String) &amp;&amp; ((((String)(param)).indexOf(',')) != (-1))" to="true" />
    <mutant id="mutant_2" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="((type == (Boolean.class)) || (type == (Boolean.TYPE)))" to="true" />
    <mutant id="mutant_201" viable="true" in="org.apache.shindig.common.uri.Uri.getFragmentParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="values == null" />
    <mutant id="mutant_443" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.js&quot;)) || (file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.json&quot;))" to="file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.js&quot;)" />
    <mutant id="mutant_685" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getListParameter(java.lang.String)" from="(param instanceof String) &amp;&amp; ((((String)(param)).indexOf(',')) != (-1))" to="false" />
    <mutant id="mutant_680" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getAppId()" from="(appId != null) &amp;&amp; (appId.equals(org.apache.shindig.protocol.RequestItem.APP_SUBSTITUTION_TOKEN))" to="true" />
    <mutant id="mutant_681" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getAppId()" from="(appId != null) &amp;&amp; (appId.equals(org.apache.shindig.protocol.RequestItem.APP_SUBSTITUTION_TOKEN))" to="false" />
    <mutant id="mutant_217" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) == '/')" to="pathlen &gt; 0" />
    <mutant id="mutant_459" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.canStreamProperty(java.beans.PropertyDescriptor)" from="((descriptor.getReadMethod()) != null) &amp;&amp; ((descriptor.getWriteMethod()) != null)" to="false" />
    <mutant id="mutant_218" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) == '/')" to="true" />
    <mutant id="mutant_219" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) == '/')" to="false" />
    <mutant id="mutant_213" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index + 1) &lt; pathlen) &amp;&amp; ((path.charAt((index + 1))) != '/')" to="true" />
    <mutant id="mutant_455" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.canStreamProperty(java.beans.PropertyDescriptor)" from="((descriptor.getReadMethod()) != null) &amp;&amp; ((descriptor.getWriteMethod()) != null)" to="(descriptor.getReadMethod()) != null" />
    <mutant id="mutant_697" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(response instanceof org.apache.shindig.protocol.DataCollection)) &amp;&amp; (!(response instanceof org.apache.shindig.protocol.RestfulCollection))" to="(!(response instanceof org.apache.shindig.protocol.DataCollection)) || (!(response instanceof org.apache.shindig.protocol.RestfulCollection))" />
    <mutant id="mutant_214" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index + 1) &lt; pathlen) &amp;&amp; ((path.charAt((index + 1))) != '/')" to="false" />
    <mutant id="mutant_456" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.canStreamProperty(java.beans.PropertyDescriptor)" from="((descriptor.getReadMethod()) != null) &amp;&amp; ((descriptor.getWriteMethod()) != null)" to="(descriptor.getWriteMethod()) != null" />
    <mutant id="mutant_698" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(response instanceof org.apache.shindig.protocol.DataCollection)) &amp;&amp; (!(response instanceof org.apache.shindig.protocol.RestfulCollection))" to="true" />
    <mutant id="mutant_215" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index + 1) &lt; pathlen) &amp;&amp; ((path.charAt((index + 1))) != '/')" to="(index + 1) &lt; pathlen" />
    <mutant id="mutant_457" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.canStreamProperty(java.beans.PropertyDescriptor)" from="((descriptor.getReadMethod()) != null) &amp;&amp; ((descriptor.getWriteMethod()) != null)" to="((descriptor.getReadMethod()) != null) || ((descriptor.getWriteMethod()) != null)" />
    <mutant id="mutant_699" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(response instanceof org.apache.shindig.protocol.DataCollection)) &amp;&amp; (!(response instanceof org.apache.shindig.protocol.RestfulCollection))" to="false" />
    <mutant id="mutant_216" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index + 1) &lt; pathlen) &amp;&amp; ((path.charAt((index + 1))) != '/')" to="(path.charAt((index + 1))) != '/'" />
    <mutant id="mutant_458" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.canStreamProperty(java.beans.PropertyDescriptor)" from="((descriptor.getReadMethod()) != null) &amp;&amp; ((descriptor.getWriteMethod()) != null)" to="true" />
    <mutant id="mutant_74" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(token == null) &amp;&amp; isSecure" to="(token == null) || isSecure" />
    <mutant id="mutant_73" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure) &amp;&amp; ((request.getParameter(net.oauth.OAuth.OAUTH_SIGNATURE_METHOD)) == null)" to="(request.getParameter(net.oauth.OAuth.OAUTH_SIGNATURE_METHOD)) == null" />
    <mutant id="mutant_76" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(token == null) &amp;&amp; isSecure" to="isSecure" />
    <mutant id="mutant_75" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(token == null) &amp;&amp; isSecure" to="token == null" />
    <mutant id="mutant_78" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(token == null) &amp;&amp; isSecure" to="false" />
    <mutant id="mutant_77" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(token == null) &amp;&amp; isSecure" to="true" />
    <mutant id="mutant_79" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(headers != null) &amp;&amp; (headers.hasMoreElements())" to="headers.hasMoreElements()" />
    <mutant id="mutant_81" viable="false" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(headers != null) &amp;&amp; (headers.hasMoreElements())" to="false" />
    <mutant id="mutant_80" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(headers != null) &amp;&amp; (headers.hasMoreElements())" to="true" />
    <mutant id="mutant_83" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(headers != null) &amp;&amp; (headers.hasMoreElements())" to="(headers != null) || (headers.hasMoreElements())" />
    <mutant id="mutant_82" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(headers != null) &amp;&amp; (headers.hasMoreElements())" to="headers != null" />
    <mutant id="mutant_451" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ClassFieldMapping.matches(java.lang.String,java.lang.Class)" from="(fieldParentName.equals(parent)) &amp;&amp; (mappedClazz.isAssignableFrom(type))" to="false" />
    <mutant id="mutant_693" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((responseItem.getErrorCode()) &gt;= 200) &amp;&amp; ((responseItem.getErrorCode()) &lt; 400)" to="false" />
    <mutant id="mutant_210" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) != '/')" to="false" />
    <mutant id="mutant_452" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ClassFieldMapping.matches(java.lang.String,java.lang.Class)" from="(fieldParentName.equals(parent)) &amp;&amp; (mappedClazz.isAssignableFrom(type))" to="mappedClazz.isAssignableFrom(type)" />
    <mutant id="mutant_694" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((responseItem.getErrorCode()) &gt;= 200) &amp;&amp; ((responseItem.getErrorCode()) &lt; 400)" to="(responseItem.getErrorCode()) &gt;= 200" />
    <mutant id="mutant_211" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) != '/')" to="(path.charAt(0)) != '/'" />
    <mutant id="mutant_453" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ClassFieldMapping.matches(java.lang.String,java.lang.Class)" from="(fieldParentName.equals(parent)) &amp;&amp; (mappedClazz.isAssignableFrom(type))" to="(fieldParentName.equals(parent)) || (mappedClazz.isAssignableFrom(type))" />
    <mutant id="mutant_695" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((responseItem.getErrorCode()) &gt;= 200) &amp;&amp; ((responseItem.getErrorCode()) &lt; 400)" to="((responseItem.getErrorCode()) &gt;= 200) || ((responseItem.getErrorCode()) &lt; 400)" />
    <mutant id="mutant_212" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index + 1) &lt; pathlen) &amp;&amp; ((path.charAt((index + 1))) != '/')" to="((index + 1) &lt; pathlen) || ((path.charAt((index + 1))) != '/')" />
    <mutant id="mutant_454" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ClassFieldMapping.matches(java.lang.String,java.lang.Class)" from="(fieldParentName.equals(parent)) &amp;&amp; (mappedClazz.isAssignableFrom(type))" to="fieldParentName.equals(parent)" />
    <mutant id="mutant_696" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((responseItem.getErrorCode()) &gt;= 200) &amp;&amp; ((responseItem.getErrorCode()) &lt; 400)" to="(responseItem.getErrorCode()) &lt; 400" />
    <mutant id="mutant_690" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(servletRequest.getMethod().equals(&quot;GET&quot;))) &amp;&amp; (!(servletRequest.getMethod().equals(&quot;HEAD&quot;)))" to="false" />
    <mutant id="mutant_691" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(servletRequest.getMethod().equals(&quot;GET&quot;))) &amp;&amp; (!(servletRequest.getMethod().equals(&quot;HEAD&quot;)))" to="!(servletRequest.getMethod().equals(&quot;GET&quot;))" />
    <mutant id="mutant_450" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ClassFieldMapping.matches(java.lang.String,java.lang.Class)" from="(fieldParentName.equals(parent)) &amp;&amp; (mappedClazz.isAssignableFrom(type))" to="true" />
    <mutant id="mutant_692" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((responseItem.getErrorCode()) &gt;= 200) &amp;&amp; ((responseItem.getErrorCode()) &lt; 400)" to="true" />
    <mutant id="mutant_228" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(seglist[remove].equals(&quot;..&quot;)))" to="remove &gt; (-1)" />
    <mutant id="mutant_229" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(seglist[remove].equals(&quot;..&quot;)))" to="!(seglist[remove].equals(&quot;..&quot;))" />
    <mutant id="mutant_224" viable="false" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(include[remove]))" to="true" />
    <mutant id="mutant_466" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.String)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.fieldName.equals(fieldName))" to="true" />
    <mutant id="mutant_225" viable="false" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(include[remove]))" to="false" />
    <mutant id="mutant_467" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.String)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.fieldName.equals(fieldName))" to="false" />
    <mutant id="mutant_226" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(include[remove]))" to="(remove &gt; (-1)) || (!(include[remove]))" />
    <mutant id="mutant_468" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.String)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.fieldName.equals(fieldName))" to="(this.definedIn.isAssignableFrom(definedIn)) || (this.fieldName.equals(fieldName))" />
    <mutant id="mutant_227" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(seglist[remove].equals(&quot;..&quot;)))" to="(remove &gt; (-1)) || (!(seglist[remove].equals(&quot;..&quot;)))" />
    <mutant id="mutant_469" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.String)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.fieldName.equals(fieldName))" to="this.definedIn.isAssignableFrom(definedIn)" />
    <mutant id="mutant_220" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) == '/')" to="(path.charAt(0)) == '/'" />
    <mutant id="mutant_462" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.Class)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.itemType.isAssignableFrom(itemType))" to="this.itemType.isAssignableFrom(itemType)" />
    <mutant id="mutant_221" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) == '/')" to="(pathlen &gt; 0) || ((path.charAt(0)) == '/')" />
    <mutant id="mutant_463" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.Class)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.itemType.isAssignableFrom(itemType))" to="(this.definedIn.isAssignableFrom(definedIn)) || (this.itemType.isAssignableFrom(itemType))" />
    <mutant id="mutant_222" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(include[remove]))" to="remove &gt; (-1)" />
    <mutant id="mutant_464" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.Class)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.itemType.isAssignableFrom(itemType))" to="this.definedIn.isAssignableFrom(definedIn)" />
    <mutant id="mutant_223" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(include[remove]))" to="!(include[remove])" />
    <mutant id="mutant_465" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.String)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.fieldName.equals(fieldName))" to="this.fieldName.equals(fieldName)" />
    <mutant id="mutant_460" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.Class)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.itemType.isAssignableFrom(itemType))" to="true" />
    <mutant id="mutant_461" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.Class)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.itemType.isAssignableFrom(itemType))" to="false" />
    <mutant id="mutant_239" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)) &amp;&amp; (include[((seglist.length) - 1)])" to="true" />
    <mutant id="mutant_235" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0))" to="(!(path.endsWith(&quot;/&quot;)))" />
    <mutant id="mutant_477" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasingMapper.serializedMember(java.lang.Class,java.lang.String)" from="(ifa.getType().isAssignableFrom(type)) &amp;&amp; (ifa.getParent().equals(writerStack.peek()))" to="true" />
    <mutant id="mutant_236" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0))" to="((seglist.length) &gt; 0)" />
    <mutant id="mutant_478" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasingMapper.serializedMember(java.lang.Class,java.lang.String)" from="(ifa.getType().isAssignableFrom(type)) &amp;&amp; (ifa.getParent().equals(writerStack.peek()))" to="false" />
    <mutant id="mutant_237" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)) &amp;&amp; (include[((seglist.length) - 1)])" to="(!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)" />
    <mutant id="mutant_479" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasingMapper.serializedMember(java.lang.Class,java.lang.String)" from="(ifa.getType().isAssignableFrom(type)) &amp;&amp; (ifa.getParent().equals(writerStack.peek()))" to="ifa.getType().isAssignableFrom(type)" />
    <mutant id="mutant_238" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)) &amp;&amp; (include[((seglist.length) - 1)])" to="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)) || (include[((seglist.length) - 1)])" />
    <mutant id="mutant_96" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(!(jsonArr.isNull(i))) &amp;&amp; (((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="false" />
    <mutant id="mutant_95" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(!(jsonArr.isNull(i))) &amp;&amp; (((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="true" />
    <mutant id="mutant_98" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(!(jsonArr.isNull(i))) &amp;&amp; (((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="!(jsonArr.isNull(i))" />
    <mutant id="mutant_97" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(!(jsonArr.isNull(i))) &amp;&amp; (((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="(!(jsonArr.isNull(i))) || (((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" />
    <mutant id="mutant_99" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(value.startsWith(&quot;(&quot;)) &amp;&amp; (value.endsWith(&quot;)&quot;))" to="(value.startsWith(&quot;(&quot;)) || (value.endsWith(&quot;)&quot;))" />
    <mutant id="mutant_231" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(seglist[remove].equals(&quot;..&quot;)))" to="false" />
    <mutant id="mutant_473" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(Collection.class.isAssignableFrom(type)) &amp;&amp; ((firstChild.get()) != null)" to="(firstChild.get()) != null" />
    <mutant id="mutant_232" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0))" to="((!(path.endsWith(&quot;/&quot;))) || ((seglist.length) &gt; 0))" />
    <mutant id="mutant_474" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(Collection.class.isAssignableFrom(type)) &amp;&amp; ((firstChild.get()) != null)" to="(Collection.class.isAssignableFrom(type)) || ((firstChild.get()) != null)" />
    <mutant id="mutant_233" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0))" to="true" />
    <mutant id="mutant_475" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasingMapper.serializedMember(java.lang.Class,java.lang.String)" from="(ifa.getType().isAssignableFrom(type)) &amp;&amp; (ifa.getParent().equals(writerStack.peek()))" to="(ifa.getType().isAssignableFrom(type)) || (ifa.getParent().equals(writerStack.peek()))" />
    <mutant id="mutant_234" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0))" to="false" />
    <mutant id="mutant_476" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasingMapper.serializedMember(java.lang.Class,java.lang.String)" from="(ifa.getType().isAssignableFrom(type)) &amp;&amp; (ifa.getParent().equals(writerStack.peek()))" to="ifa.getParent().equals(writerStack.peek())" />
    <mutant id="mutant_470" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(Collection.class.isAssignableFrom(type)) &amp;&amp; ((firstChild.get()) != null)" to="true" />
    <mutant id="mutant_471" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(Collection.class.isAssignableFrom(type)) &amp;&amp; ((firstChild.get()) != null)" to="false" />
    <mutant id="mutant_230" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(seglist[remove].equals(&quot;..&quot;)))" to="true" />
    <mutant id="mutant_472" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(Collection.class.isAssignableFrom(type)) &amp;&amp; ((firstChild.get()) != null)" to="Collection.class.isAssignableFrom(type)" />
    <mutant id="mutant_246" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index &lt; index2) || (index2 == (-1)))" to="false" />
    <mutant id="mutant_488" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.addNamespace(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="namespaceSet != null" />
    <mutant id="mutant_247" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index != (-1)) &amp;&amp; ((index &lt; index2) || (index2 == (-1)))" to="index != (-1)" />
    <mutant id="mutant_489" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.addNamespace(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="namespaceSet != currentNamespace" />
    <mutant id="mutant_248" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index != (-1)) &amp;&amp; ((index &lt; index2) || (index2 == (-1)))" to="(index != (-1)) || ((index &lt; index2) || (index2 == (-1)))" />
    <mutant id="mutant_249" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index != (-1)) &amp;&amp; ((index &lt; index2) || (index2 == (-1)))" to="true" />
    <mutant id="mutant_242" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index &lt; index2) || (index2 == (-1)))" to="(index &lt; index2)" />
    <mutant id="mutant_484" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.translateName(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="namespaceSet != currentNamespace" />
    <mutant id="mutant_243" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index &lt; index2) || (index2 == (-1)))" to="(index2 == (-1))" />
    <mutant id="mutant_485" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.addNamespace(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="(namespaceSet != null) || (namespaceSet != currentNamespace)" />
    <mutant id="mutant_244" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index &lt; index2) || (index2 == (-1)))" to="((index &lt; index2) &amp;&amp; (index2 == (-1)))" />
    <mutant id="mutant_486" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.addNamespace(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="true" />
    <mutant id="mutant_245" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index &lt; index2) || (index2 == (-1)))" to="true" />
    <mutant id="mutant_487" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.addNamespace(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="false" />
    <mutant id="mutant_480" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.translateName(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="(namespaceSet != null) || (namespaceSet != currentNamespace)" />
    <mutant id="mutant_481" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.translateName(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="true" />
    <mutant id="mutant_240" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)) &amp;&amp; (include[((seglist.length) - 1)])" to="false" />
    <mutant id="mutant_482" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.translateName(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="false" />
    <mutant id="mutant_241" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)) &amp;&amp; (include[((seglist.length) - 1)])" to="include[((seglist.length) - 1)]" />
    <mutant id="mutant_483" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.translateName(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="namespaceSet != null" />
    <mutant id="mutant_257" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null))" to="((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null))" />
    <mutant id="mutant_499" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="(o != null) &amp;&amp; ((o.length) &gt; 0)" to="(o != null) || ((o.length) &gt; 0)" />
    <mutant id="mutant_258" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null))" to="true" />
    <mutant id="mutant_259" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null))" to="false" />
    <mutant id="mutant_490" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="(o != null) &amp;&amp; ((o.length) &gt; i)" to="(o.length) &gt; i" />
    <mutant id="mutant_253" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null))" to="false" />
    <mutant id="mutant_495" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="(o != null) &amp;&amp; ((o.length) &gt; 0)" to="true" />
    <mutant id="mutant_254" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null))" to="(Strings.isNullOrEmpty(relative.path))" />
    <mutant id="mutant_496" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="(o != null) &amp;&amp; ((o.length) &gt; 0)" to="false" />
    <mutant id="mutant_255" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null))" to="((Strings.isNullOrEmpty(relative.path)) || ((relative.scheme) == null))" />
    <mutant id="mutant_497" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="(o != null) &amp;&amp; ((o.length) &gt; 0)" to="o != null" />
    <mutant id="mutant_256" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null))" to="((relative.scheme) == null)" />
    <mutant id="mutant_498" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="(o != null) &amp;&amp; ((o.length) &gt; 0)" to="(o.length) &gt; 0" />
    <mutant id="mutant_491" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="(o != null) &amp;&amp; ((o.length) &gt; i)" to="true" />
    <mutant id="mutant_250" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index != (-1)) &amp;&amp; ((index &lt; index2) || (index2 == (-1)))" to="false" />
    <mutant id="mutant_492" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="(o != null) &amp;&amp; ((o.length) &gt; i)" to="false" />
    <mutant id="mutant_251" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index != (-1)) &amp;&amp; ((index &lt; index2) || (index2 == (-1)))" to="(index &lt; index2) || (index2 == (-1))" />
    <mutant id="mutant_493" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="(o != null) &amp;&amp; ((o.length) &gt; i)" to="(o != null) || ((o.length) &gt; i)" />
    <mutant id="mutant_252" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null))" to="true" />
    <mutant id="mutant_494" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="(o != null) &amp;&amp; ((o.length) &gt; i)" to="o != null" />
    <mutant id="mutant_268" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)) &amp;&amp; ((relative.fragment) != null)" to="true" />
    <mutant id="mutant_269" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)) &amp;&amp; ((relative.fragment) != null)" to="false" />
    <mutant id="mutant_264" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null))" to="true" />
    <mutant id="mutant_265" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null))" to="false" />
    <mutant id="mutant_266" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null))" to="(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null))" />
    <mutant id="mutant_267" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)) &amp;&amp; ((relative.fragment) != null)" to="(relative.fragment) != null" />
    <mutant id="mutant_260" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null))" to="((relative.authority) == null)" />
    <mutant id="mutant_261" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null))" to="(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) || ((relative.authority) == null))" />
    <mutant id="mutant_262" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null))" to="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) || ((relative.query) == null))" />
    <mutant id="mutant_263" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null))" to="((relative.query) == null)" />
    <mutant id="mutant_279" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))) &amp;&amp; (Strings.isNullOrEmpty(uri.query))" to="false" />
    <mutant id="mutant_270" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)) &amp;&amp; ((relative.fragment) != null)" to="(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)" />
    <mutant id="mutant_275" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path)))" to="((Strings.isNullOrEmpty(uri.authority)) || (Strings.isNullOrEmpty(uri.path)))" />
    <mutant id="mutant_276" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path)))" to="(Strings.isNullOrEmpty(uri.authority))" />
    <mutant id="mutant_277" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))) &amp;&amp; (Strings.isNullOrEmpty(uri.query))" to="(Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))" />
    <mutant id="mutant_278" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))) &amp;&amp; (Strings.isNullOrEmpty(uri.query))" to="true" />
    <mutant id="mutant_271" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)) &amp;&amp; ((relative.fragment) != null)" to="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)) || ((relative.fragment) != null)" />
    <mutant id="mutant_272" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path)))" to="true" />
    <mutant id="mutant_273" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path)))" to="false" />
    <mutant id="mutant_274" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path)))" to="(Strings.isNullOrEmpty(uri.path))" />
    <mutant id="mutant_280" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))) &amp;&amp; (Strings.isNullOrEmpty(uri.query))" to="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))) || (Strings.isNullOrEmpty(uri.query))" />
    <mutant id="mutant_281" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))) &amp;&amp; (Strings.isNullOrEmpty(uri.query))" to="Strings.isNullOrEmpty(uri.query)" />
    <mutant id="mutant_286" viable="true" in="org.apache.shindig.common.uri.UriBuilder$ParamString.get(java.lang.String)" from="(values == null) || (values.isEmpty())" to="values == null" />
    <mutant id="mutant_287" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme)))" to="((serverPort == 80) || (&quot;http&quot;.equals(scheme)))" />
    <mutant id="mutant_288" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme)))" to="true" />
    <mutant id="mutant_289" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme)))" to="false" />
    <mutant id="mutant_282" viable="true" in="org.apache.shindig.common.uri.UriBuilder$ParamString.get(java.lang.String)" from="(values == null) || (values.isEmpty())" to="(values == null) &amp;&amp; (values.isEmpty())" />
    <mutant id="mutant_283" viable="true" in="org.apache.shindig.common.uri.UriBuilder$ParamString.get(java.lang.String)" from="(values == null) || (values.isEmpty())" to="values.isEmpty()" />
    <mutant id="mutant_284" viable="true" in="org.apache.shindig.common.uri.UriBuilder$ParamString.get(java.lang.String)" from="(values == null) || (values.isEmpty())" to="true" />
    <mutant id="mutant_285" viable="true" in="org.apache.shindig.common.uri.UriBuilder$ParamString.get(java.lang.String)" from="(values == null) || (values.isEmpty())" to="false" />
    <mutant id="mutant_290" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme)))" to="(serverPort == 80)" />
    <mutant id="mutant_291" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme)))" to="(&quot;http&quot;.equals(scheme))" />
    <mutant id="mutant_292" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))" to="(serverPort == 443)" />
    <mutant id="mutant_297" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme))))" to="((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme)))" />
    <mutant id="mutant_298" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme))))" to="((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))" />
    <mutant id="mutant_299" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme))))" to="true" />
    <mutant id="mutant_293" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))" to="true" />
    <mutant id="mutant_294" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))" to="false" />
    <mutant id="mutant_295" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))" to="(&quot;https&quot;.equals(scheme))" />
    <mutant id="mutant_296" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))" to="((serverPort == 443) || (&quot;https&quot;.equals(scheme)))" />
    <mutant id="mutant_27" viable="true" in="org.apache.shindig.expressions.RootELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="false" />
    <mutant id="mutant_26" viable="true" in="org.apache.shindig.expressions.RootELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="true" />
    <mutant id="mutant_29" viable="true" in="org.apache.shindig.expressions.RootELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="map.containsKey(property)" />
    <mutant id="mutant_28" viable="true" in="org.apache.shindig.expressions.RootELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="base == null" />
    <mutant id="mutant_21" viable="true" in="org.apache.shindig.expressions.OpensocialFunctions.parseJson(java.lang.String)" from="(text == null) || (&quot;&quot;.equals(text))" to="(text == null) &amp;&amp; (&quot;&quot;.equals(text))" />
    <mutant id="mutant_20" viable="true" in="org.apache.shindig.expressions.OpensocialFunctions.parseJson(java.lang.String)" from="(text == null) || (&quot;&quot;.equals(text))" to="text == null" />
    <mutant id="mutant_23" viable="true" in="org.apache.shindig.expressions.OpensocialFunctions.parseJson(java.lang.String)" from="(text == null) || (&quot;&quot;.equals(text))" to="false" />
    <mutant id="mutant_22" viable="true" in="org.apache.shindig.expressions.OpensocialFunctions.parseJson(java.lang.String)" from="(text == null) || (&quot;&quot;.equals(text))" to="true" />
    <mutant id="mutant_25" viable="true" in="org.apache.shindig.expressions.RootELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="(base == null) || (map.containsKey(property))" />
    <mutant id="mutant_24" viable="true" in="org.apache.shindig.expressions.OpensocialFunctions.parseJson(java.lang.String)" from="(text == null) || (&quot;&quot;.equals(text))" to="&quot;&quot;.equals(text)" />
    <mutant id="mutant_16" viable="true" in="org.apache.shindig.expressions.JsonELResolver.isJson(java.lang.Object)" from="(base instanceof org.json.JSONObject) || (base instanceof org.json.JSONArray)" to="true" />
    <mutant id="mutant_15" viable="true" in="org.apache.shindig.expressions.JsonELResolver.isJson(java.lang.Object)" from="(base instanceof org.json.JSONObject) || (base instanceof org.json.JSONArray)" to="base instanceof org.json.JSONArray" />
    <mutant id="mutant_18" viable="true" in="org.apache.shindig.expressions.JsonELResolver.isJson(java.lang.Object)" from="(base instanceof org.json.JSONObject) || (base instanceof org.json.JSONArray)" to="base instanceof org.json.JSONObject" />
    <mutant id="mutant_17" viable="true" in="org.apache.shindig.expressions.JsonELResolver.isJson(java.lang.Object)" from="(base instanceof org.json.JSONObject) || (base instanceof org.json.JSONArray)" to="false" />
    <mutant id="mutant_19" viable="true" in="org.apache.shindig.expressions.JsonELResolver.isJson(java.lang.Object)" from="(base instanceof org.json.JSONObject) || (base instanceof org.json.JSONArray)" to="(base instanceof org.json.JSONObject) &amp;&amp; (base instanceof org.json.JSONArray)" />
    <mutant id="mutant_10" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))) || (type == (Iterable.class))" to="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))) &amp;&amp; (type == (Iterable.class))" />
    <mutant id="mutant_12" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))) || (type == (Iterable.class))" to="false" />
    <mutant id="mutant_11" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))) || (type == (Iterable.class))" to="true" />
    <mutant id="mutant_14" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))) || (type == (Iterable.class))" to="type == (Iterable.class)" />
    <mutant id="mutant_13" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))) || (type == (Iterable.class))" to="((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))" />
    <mutant id="mutant_49" viable="true" in="org.apache.shindig.auth.AuthenticationServletFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)" from="((request instanceof javax.servlet.http.HttpServletRequest) &amp;&amp; (response instanceof javax.servlet.http.HttpServletResponse))" to="(response instanceof javax.servlet.http.HttpServletResponse)" />
    <mutant id="mutant_48" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToBoolean(java.lang.Object)" from="((&quot;&quot;.equals(obj)) || (&quot;false&quot;.equals(obj)))" to="(&quot;&quot;.equals(obj))" />
    <mutant id="mutant_41" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.convert(java.lang.Object,java.lang.Class)" from="(type == (Boolean.class)) || (type == (Boolean.TYPE))" to="type == (Boolean.TYPE)" />
    <mutant id="mutant_40" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.convert(java.lang.Object,java.lang.Class)" from="(type == (Boolean.class)) || (type == (Boolean.TYPE))" to="(type == (Boolean.class)) &amp;&amp; (type == (Boolean.TYPE))" />
    <mutant id="mutant_43" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.convert(java.lang.Object,java.lang.Class)" from="(type == (Boolean.class)) || (type == (Boolean.TYPE))" to="false" />
    <mutant id="mutant_42" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.convert(java.lang.Object,java.lang.Class)" from="(type == (Boolean.class)) || (type == (Boolean.TYPE))" to="true" />
    <mutant id="mutant_45" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToBoolean(java.lang.Object)" from="((&quot;&quot;.equals(obj)) || (&quot;false&quot;.equals(obj)))" to="((&quot;&quot;.equals(obj)) &amp;&amp; (&quot;false&quot;.equals(obj)))" />
    <mutant id="mutant_44" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.convert(java.lang.Object,java.lang.Class)" from="(type == (Boolean.class)) || (type == (Boolean.TYPE))" to="type == (Boolean.class)" />
    <mutant id="mutant_47" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToBoolean(java.lang.Object)" from="((&quot;&quot;.equals(obj)) || (&quot;false&quot;.equals(obj)))" to="false" />
    <mutant id="mutant_46" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToBoolean(java.lang.Object)" from="((&quot;&quot;.equals(obj)) || (&quot;false&quot;.equals(obj)))" to="true" />
    <mutant id="mutant_50" viable="true" in="org.apache.shindig.auth.AuthenticationServletFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)" from="((request instanceof javax.servlet.http.HttpServletRequest) &amp;&amp; (response instanceof javax.servlet.http.HttpServletResponse))" to="(request instanceof javax.servlet.http.HttpServletRequest)" />
    <mutant id="mutant_38" viable="true" in="org.apache.shindig.expressions.RootELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="base == null" />
    <mutant id="mutant_37" viable="true" in="org.apache.shindig.expressions.RootELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="false" />
    <mutant id="mutant_39" viable="true" in="org.apache.shindig.expressions.RootELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="map.containsKey(property)" />
    <mutant id="mutant_30" viable="true" in="org.apache.shindig.expressions.RootELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="(base == null) || (map.containsKey(property))" />
    <mutant id="mutant_32" viable="true" in="org.apache.shindig.expressions.RootELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="false" />
    <mutant id="mutant_31" viable="true" in="org.apache.shindig.expressions.RootELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="true" />
    <mutant id="mutant_34" viable="true" in="org.apache.shindig.expressions.RootELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="map.containsKey(property)" />
    <mutant id="mutant_33" viable="true" in="org.apache.shindig.expressions.RootELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="base == null" />
    <mutant id="mutant_36" viable="true" in="org.apache.shindig.expressions.RootELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="true" />
    <mutant id="mutant_35" viable="true" in="org.apache.shindig.expressions.RootELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="(base == null) || (map.containsKey(property))" />
    <mutant id="mutant_63" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="((tokens.length) &gt; (BasicSecurityTokenCodec.TOKEN_COUNT)) &amp;&amp; (!(tokens[BasicSecurityTokenCodec.EXPIRY_INDEX].equals(&quot;&quot;)))" to="false" />
    <mutant id="mutant_62" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="((tokens.length) &gt; (BasicSecurityTokenCodec.TOKEN_COUNT)) &amp;&amp; (!(tokens[BasicSecurityTokenCodec.EXPIRY_INDEX].equals(&quot;&quot;)))" to="true" />
    <mutant id="mutant_65" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure)" to="(token == null)" />
    <mutant id="mutant_64" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure)" to="((token == null) || isSecure)" />
    <mutant id="mutant_67" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure)" to="true" />
    <mutant id="mutant_66" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure)" to="isSecure" />
    <mutant id="mutant_69" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure) &amp;&amp; ((request.getParameter(net.oauth.OAuth.OAUTH_SIGNATURE_METHOD)) == null)" to="((token == null) &amp;&amp; isSecure) || ((request.getParameter(net.oauth.OAuth.OAUTH_SIGNATURE_METHOD)) == null)" />
    <mutant id="mutant_68" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure)" to="false" />
    <mutant id="mutant_70" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure) &amp;&amp; ((request.getParameter(net.oauth.OAuth.OAUTH_SIGNATURE_METHOD)) == null)" to="(token == null) &amp;&amp; isSecure" />
    <mutant id="mutant_72" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure) &amp;&amp; ((request.getParameter(net.oauth.OAuth.OAUTH_SIGNATURE_METHOD)) == null)" to="false" />
    <mutant id="mutant_71" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure) &amp;&amp; ((request.getParameter(net.oauth.OAuth.OAUTH_SIGNATURE_METHOD)) == null)" to="true" />
    <mutant id="mutant_59" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="((tokens.length) &gt; (BasicSecurityTokenCodec.TOKEN_COUNT)) &amp;&amp; (!(tokens[BasicSecurityTokenCodec.EXPIRY_INDEX].equals(&quot;&quot;)))" to="(tokens.length) &gt; (BasicSecurityTokenCodec.TOKEN_COUNT)" />
    <mutant id="mutant_52" viable="true" in="org.apache.shindig.auth.AuthenticationServletFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)" from="((request instanceof javax.servlet.http.HttpServletRequest) &amp;&amp; (response instanceof javax.servlet.http.HttpServletResponse))" to="false" />
    <mutant id="mutant_51" viable="true" in="org.apache.shindig.auth.AuthenticationServletFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)" from="((request instanceof javax.servlet.http.HttpServletRequest) &amp;&amp; (response instanceof javax.servlet.http.HttpServletResponse))" to="true" />
    <mutant id="mutant_54" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="(token == null) || ((token.trim().length()) == 0)" to="token == null" />
    <mutant id="mutant_53" viable="true" in="org.apache.shindig.auth.AuthenticationServletFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)" from="((request instanceof javax.servlet.http.HttpServletRequest) &amp;&amp; (response instanceof javax.servlet.http.HttpServletResponse))" to="((request instanceof javax.servlet.http.HttpServletRequest) || (response instanceof javax.servlet.http.HttpServletResponse))" />
    <mutant id="mutant_56" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="(token == null) || ((token.trim().length()) == 0)" to="true" />
    <mutant id="mutant_55" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="(token == null) || ((token.trim().length()) == 0)" to="(token.trim().length()) == 0" />
    <mutant id="mutant_58" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="(token == null) || ((token.trim().length()) == 0)" to="(token == null) &amp;&amp; ((token.trim().length()) == 0)" />
    <mutant id="mutant_57" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="(token == null) || ((token.trim().length()) == 0)" to="false" />
    <mutant id="mutant_61" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="((tokens.length) &gt; (BasicSecurityTokenCodec.TOKEN_COUNT)) &amp;&amp; (!(tokens[BasicSecurityTokenCodec.EXPIRY_INDEX].equals(&quot;&quot;)))" to="!(tokens[BasicSecurityTokenCodec.EXPIRY_INDEX].equals(&quot;&quot;))" />
    <mutant id="mutant_60" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="((tokens.length) &gt; (BasicSecurityTokenCodec.TOKEN_COUNT)) &amp;&amp; (!(tokens[BasicSecurityTokenCodec.EXPIRY_INDEX].equals(&quot;&quot;)))" to="((tokens.length) &gt; (BasicSecurityTokenCodec.TOKEN_COUNT)) || (!(tokens[BasicSecurityTokenCodec.EXPIRY_INDEX].equals(&quot;&quot;)))" />
    <mutant id="mutant_602" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))) || (fields.contains(org.apache.shindig.protocol.conversion.BeanFilter.ALL_FIELDS))" to="fields.contains(org.apache.shindig.protocol.conversion.BeanFilter.ALL_FIELDS)" />
    <mutant id="mutant_603" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))) || (fields.contains(org.apache.shindig.protocol.conversion.BeanFilter.ALL_FIELDS))" to="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))) &amp;&amp; (fields.contains(org.apache.shindig.protocol.conversion.BeanFilter.ALL_FIELDS))" />
    <mutant id="mutant_604" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))) || (fields.contains(org.apache.shindig.protocol.conversion.BeanFilter.ALL_FIELDS))" to="((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))" />
    <mutant id="mutant_605" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))) || (fields.contains(org.apache.shindig.protocol.conversion.BeanFilter.ALL_FIELDS))" to="true" />
    <mutant id="mutant_600" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass())))" to="(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))" />
    <mutant id="mutant_601" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass())))" to="(((data == null) || (fields == null)) &amp;&amp; (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass())))" />
    <mutant id="mutant_606" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))) || (fields.contains(org.apache.shindig.protocol.conversion.BeanFilter.ALL_FIELDS))" to="false" />
    <mutant id="mutant_607" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((depth &gt; 1) &amp;&amp; (returnType != null))" to="(depth &gt; 1)" />
    <mutant id="mutant_608" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((depth &gt; 1) &amp;&amp; (returnType != null))" to="(returnType != null)" />
    <mutant id="mutant_609" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((depth &gt; 1) &amp;&amp; (returnType != null))" to="true" />
    <mutant id="mutant_613" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive())))" to="false" />
    <mutant id="mutant_614" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive())))" to="((depth &gt; 1) &amp;&amp; (returnType != null))" />
    <mutant id="mutant_615" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive())))" to="(((depth &gt; 1) &amp;&amp; (returnType != null)) || (!(returnType.isPrimitive())))" />
    <mutant id="mutant_616" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive())))" to="(!(returnType.isPrimitive()))" />
    <mutant id="mutant_610" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((depth &gt; 1) &amp;&amp; (returnType != null))" to="false" />
    <mutant id="mutant_611" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((depth &gt; 1) &amp;&amp; (returnType != null))" to="((depth &gt; 1) || (returnType != null))" />
    <mutant id="mutant_612" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive())))" to="true" />
    <mutant id="mutant_617" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum())))" to="(!(returnType.isEnum()))" />
    <mutant id="mutant_618" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum())))" to="true" />
    <mutant id="mutant_619" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum())))" to="false" />
    <mutant id="mutant_624" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))) &amp;&amp; (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(returnType)))" to="false" />
    <mutant id="mutant_625" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))) &amp;&amp; (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(returnType)))" to="!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(returnType))" />
    <mutant id="mutant_626" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))) &amp;&amp; (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(returnType)))" to="(((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))" />
    <mutant id="mutant_627" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type == null) || (type.equals(java.lang.Object.class))" to="(type == null) &amp;&amp; (type.equals(java.lang.Object.class))" />
    <mutant id="mutant_620" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum())))" to="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) || (!(returnType.isEnum())))" />
    <mutant id="mutant_621" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum())))" to="(((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive())))" />
    <mutant id="mutant_622" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))) &amp;&amp; (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(returnType)))" to="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(returnType)))" />
    <mutant id="mutant_623" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))) &amp;&amp; (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(returnType)))" to="true" />
    <mutant id="mutant_628" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type == null) || (type.equals(java.lang.Object.class))" to="type.equals(java.lang.Object.class)" />
    <mutant id="mutant_629" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type == null) || (type.equals(java.lang.Object.class))" to="true" />
    <mutant id="mutant_635" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Boolean.class)) || (type.equals(java.lang.Boolean.TYPE))" to="type.equals(java.lang.Boolean.class)" />
    <mutant id="mutant_636" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Boolean.class)) || (type.equals(java.lang.Boolean.TYPE))" to="(type.equals(java.lang.Boolean.class)) &amp;&amp; (type.equals(java.lang.Boolean.TYPE))" />
    <mutant id="mutant_637" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Integer.class)) || (type.equals(java.lang.Integer.TYPE))" to="type.equals(java.lang.Integer.class)" />
    <mutant id="mutant_638" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Integer.class)) || (type.equals(java.lang.Integer.TYPE))" to="true" />
    <mutant id="mutant_631" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type == null) || (type.equals(java.lang.Object.class))" to="type == null" />
    <mutant id="mutant_632" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Boolean.class)) || (type.equals(java.lang.Boolean.TYPE))" to="type.equals(java.lang.Boolean.TYPE)" />
    <mutant id="mutant_633" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Boolean.class)) || (type.equals(java.lang.Boolean.TYPE))" to="true" />
    <mutant id="mutant_634" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Boolean.class)) || (type.equals(java.lang.Boolean.TYPE))" to="false" />
    <mutant id="mutant_639" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Integer.class)) || (type.equals(java.lang.Integer.TYPE))" to="false" />
    <mutant id="mutant_630" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type == null) || (type.equals(java.lang.Object.class))" to="false" />
    <mutant id="mutant_404" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeObjects(java.util.Map,java.util.Map)" from="(fromContainer instanceof java.util.Map&lt;?, ?&gt;) &amp;&amp; (fromParents instanceof java.util.Map&lt;?, ?&gt;)" to="fromContainer instanceof java.util.Map&lt;?, ?&gt;" />
    <mutant id="mutant_646" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Long.class)) || (type.equals(java.lang.Long.TYPE))" to="(type.equals(java.lang.Long.class)) &amp;&amp; (type.equals(java.lang.Long.TYPE))" />
    <mutant id="mutant_405" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="(base == null) &amp;&amp; (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" />
    <mutant id="mutant_647" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Double.class)) || (type.equals(java.lang.Double.TYPE))" to="type.equals(java.lang.Double.class)" />
    <mutant id="mutant_406" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference" />
    <mutant id="mutant_648" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Double.class)) || (type.equals(java.lang.Double.TYPE))" to="(type.equals(java.lang.Double.class)) &amp;&amp; (type.equals(java.lang.Double.TYPE))" />
    <mutant id="mutant_407" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="true" />
    <mutant id="mutant_649" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Double.class)) || (type.equals(java.lang.Double.TYPE))" to="true" />
    <mutant id="mutant_400" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeObjects(java.util.Map,java.util.Map)" from="(fromContainer instanceof java.util.Map&lt;?, ?&gt;) &amp;&amp; (fromParents instanceof java.util.Map&lt;?, ?&gt;)" to="fromParents instanceof java.util.Map&lt;?, ?&gt;" />
    <mutant id="mutant_642" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Long.class)) || (type.equals(java.lang.Long.TYPE))" to="type.equals(java.lang.Long.TYPE)" />
    <mutant id="mutant_401" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeObjects(java.util.Map,java.util.Map)" from="(fromContainer instanceof java.util.Map&lt;?, ?&gt;) &amp;&amp; (fromParents instanceof java.util.Map&lt;?, ?&gt;)" to="(fromContainer instanceof java.util.Map&lt;?, ?&gt;) || (fromParents instanceof java.util.Map&lt;?, ?&gt;)" />
    <mutant id="mutant_643" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Long.class)) || (type.equals(java.lang.Long.TYPE))" to="type.equals(java.lang.Long.class)" />
    <mutant id="mutant_402" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeObjects(java.util.Map,java.util.Map)" from="(fromContainer instanceof java.util.Map&lt;?, ?&gt;) &amp;&amp; (fromParents instanceof java.util.Map&lt;?, ?&gt;)" to="true" />
    <mutant id="mutant_644" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Long.class)) || (type.equals(java.lang.Long.TYPE))" to="true" />
    <mutant id="mutant_403" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeObjects(java.util.Map,java.util.Map)" from="(fromContainer instanceof java.util.Map&lt;?, ?&gt;) &amp;&amp; (fromParents instanceof java.util.Map&lt;?, ?&gt;)" to="false" />
    <mutant id="mutant_645" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Long.class)) || (type.equals(java.lang.Long.TYPE))" to="false" />
    <mutant id="mutant_408" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="false" />
    <mutant id="mutant_409" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="base == null" />
    <mutant id="mutant_640" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Integer.class)) || (type.equals(java.lang.Integer.TYPE))" to="type.equals(java.lang.Integer.TYPE)" />
    <mutant id="mutant_641" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Integer.class)) || (type.equals(java.lang.Integer.TYPE))" to="(type.equals(java.lang.Integer.class)) &amp;&amp; (type.equals(java.lang.Integer.TYPE))" />
    <mutant id="mutant_415" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="(base == null) &amp;&amp; (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" />
    <mutant id="mutant_657" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.util.List.class)) || (type.equals(java.util.Collection.class))" to="type.equals(java.util.Collection.class)" />
    <mutant id="mutant_416" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference" />
    <mutant id="mutant_658" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.util.List.class)) || (type.equals(java.util.Collection.class))" to="(type.equals(java.util.List.class)) &amp;&amp; (type.equals(java.util.Collection.class))" />
    <mutant id="mutant_417" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="true" />
    <mutant id="mutant_659" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.util.List.class)) || (type.equals(java.util.Collection.class))" to="true" />
    <mutant id="mutant_418" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="false" />
    <mutant id="mutant_411" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getCommonPropertyType(javax.el.ELContext,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference" />
    <mutant id="mutant_653" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Float.class)) || (type.equals(java.lang.Float.TYPE))" to="type.equals(java.lang.Float.class)" />
    <mutant id="mutant_412" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getCommonPropertyType(javax.el.ELContext,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="true" />
    <mutant id="mutant_654" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Float.class)) || (type.equals(java.lang.Float.TYPE))" to="true" />
    <mutant id="mutant_413" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getCommonPropertyType(javax.el.ELContext,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="false" />
    <mutant id="mutant_655" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Float.class)) || (type.equals(java.lang.Float.TYPE))" to="false" />
    <mutant id="mutant_414" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getCommonPropertyType(javax.el.ELContext,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="base == null" />
    <mutant id="mutant_656" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Float.class)) || (type.equals(java.lang.Float.TYPE))" to="(type.equals(java.lang.Float.class)) &amp;&amp; (type.equals(java.lang.Float.TYPE))" />
    <mutant id="mutant_419" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="base == null" />
    <mutant id="mutant_650" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Double.class)) || (type.equals(java.lang.Double.TYPE))" to="false" />
    <mutant id="mutant_651" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Double.class)) || (type.equals(java.lang.Double.TYPE))" to="type.equals(java.lang.Double.TYPE)" />
    <mutant id="mutant_410" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getCommonPropertyType(javax.el.ELContext,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="(base == null) &amp;&amp; (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" />
    <mutant id="mutant_652" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Float.class)) || (type.equals(java.lang.Float.TYPE))" to="type.equals(java.lang.Float.TYPE)" />
    <mutant id="mutant_426" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.setValue(javax.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference" />
    <mutant id="mutant_668" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))) &amp;&amp; (!(setter.isBridge()))" to="true" />
    <mutant id="mutant_427" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.setValue(javax.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="true" />
    <mutant id="mutant_669" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))) &amp;&amp; (!(setter.isBridge()))" to="false" />
    <mutant id="mutant_428" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.setValue(javax.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="false" />
    <mutant id="mutant_429" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.setValue(javax.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="base == null" />
    <mutant id="mutant_422" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(ContainerConfigELResolver.CURRENT_CONFIG_KEY.equals(property)) &amp;&amp; (base == null)" to="true" />
    <mutant id="mutant_664" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers()))))" to="true" />
    <mutant id="mutant_423" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(ContainerConfigELResolver.CURRENT_CONFIG_KEY.equals(property)) &amp;&amp; (base == null)" to="false" />
    <mutant id="mutant_665" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers()))))" to="false" />
    <mutant id="mutant_424" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(ContainerConfigELResolver.CURRENT_CONFIG_KEY.equals(property)) &amp;&amp; (base == null)" to="base == null" />
    <mutant id="mutant_666" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers()))))" to="(!(Modifier.isStatic(setter.getModifiers())))" />
    <mutant id="mutant_425" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.setValue(javax.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="(base == null) &amp;&amp; (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" />
    <mutant id="mutant_667" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))) &amp;&amp; (!(setter.isBridge()))" to="(name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))" />
    <mutant id="mutant_660" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.util.List.class)) || (type.equals(java.util.Collection.class))" to="false" />
    <mutant id="mutant_661" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.util.List.class)) || (type.equals(java.util.Collection.class))" to="type.equals(java.util.List.class)" />
    <mutant id="mutant_420" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(ContainerConfigELResolver.CURRENT_CONFIG_KEY.equals(property)) &amp;&amp; (base == null)" to="(ContainerConfigELResolver.CURRENT_CONFIG_KEY.equals(property)) || (base == null)" />
    <mutant id="mutant_662" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers()))))" to="(name.startsWith(&quot;set&quot;))" />
    <mutant id="mutant_421" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(ContainerConfigELResolver.CURRENT_CONFIG_KEY.equals(property)) &amp;&amp; (base == null)" to="ContainerConfigELResolver.CURRENT_CONFIG_KEY.equals(property)" />
    <mutant id="mutant_663" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers()))))" to="((name.startsWith(&quot;set&quot;)) || (!(Modifier.isStatic(setter.getModifiers()))))" />
    <mutant id="mutant_437" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.addHostAndPortToDefaultContainer(java.util.List,java.lang.String,java.lang.String,java.lang.String)" from="(names != null) &amp;&amp; (names.contains(org.apache.shindig.config.ContainerConfig.DEFAULT_CONTAINER))" to="(names != null) || (names.contains(org.apache.shindig.config.ContainerConfig.DEFAULT_CONTAINER))" />
    <mutant id="mutant_679" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getAppId()" from="(appId != null) &amp;&amp; (appId.equals(org.apache.shindig.protocol.RequestItem.APP_SUBSTITUTION_TOKEN))" to="appId.equals(org.apache.shindig.protocol.RequestItem.APP_SUBSTITUTION_TOKEN)" />
    <mutant id="mutant_438" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.addHostAndPortToDefaultContainer(java.util.List,java.lang.String,java.lang.String,java.lang.String)" from="(names != null) &amp;&amp; (names.contains(org.apache.shindig.config.ContainerConfig.DEFAULT_CONTAINER))" to="names != null" />
    <mutant id="mutant_439" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.addHostAndPortToDefaultContainer(java.util.List,java.lang.String,java.lang.String,java.lang.String)" from="(names != null) &amp;&amp; (names.contains(org.apache.shindig.config.ContainerConfig.DEFAULT_CONTAINER))" to="names.contains(org.apache.shindig.config.ContainerConfig.DEFAULT_CONTAINER)" />
    <mutant id="mutant_433" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.jsonToMap(org.json.JSONObject)" from="(stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.RESOURCE_PREFIX)) || (stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.FILE_PREFIX))" to="(stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.RESOURCE_PREFIX)) &amp;&amp; (stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.FILE_PREFIX))" />
    <mutant id="mutant_675" viable="true" in="org.apache.shindig.protocol.ApiServlet.init(javax.servlet.ServletConfig)" from="(handlers == null) || (&quot;&quot;.equals(handlers))" to="(handlers == null) &amp;&amp; (&quot;&quot;.equals(handlers))" />
    <mutant id="mutant_434" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.jsonToMap(org.json.JSONObject)" from="(stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.RESOURCE_PREFIX)) || (stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.FILE_PREFIX))" to="stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.RESOURCE_PREFIX)" />
    <mutant id="mutant_676" viable="true" in="org.apache.shindig.protocol.ApiServlet.init(javax.servlet.ServletConfig)" from="(handlers == null) || (&quot;&quot;.equals(handlers))" to="handlers == null" />
    <mutant id="mutant_435" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.addHostAndPortToDefaultContainer(java.util.List,java.lang.String,java.lang.String,java.lang.String)" from="(names != null) &amp;&amp; (names.contains(org.apache.shindig.config.ContainerConfig.DEFAULT_CONTAINER))" to="true" />
    <mutant id="mutant_677" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getAppId()" from="(appId != null) &amp;&amp; (appId.equals(org.apache.shindig.protocol.RequestItem.APP_SUBSTITUTION_TOKEN))" to="(appId != null) || (appId.equals(org.apache.shindig.protocol.RequestItem.APP_SUBSTITUTION_TOKEN))" />
    <mutant id="mutant_436" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.addHostAndPortToDefaultContainer(java.util.List,java.lang.String,java.lang.String,java.lang.String)" from="(names != null) &amp;&amp; (names.contains(org.apache.shindig.config.ContainerConfig.DEFAULT_CONTAINER))" to="false" />
    <mutant id="mutant_678" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getAppId()" from="(appId != null) &amp;&amp; (appId.equals(org.apache.shindig.protocol.RequestItem.APP_SUBSTITUTION_TOKEN))" to="appId != null" />
    <mutant id="mutant_671" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))) &amp;&amp; (!(setter.isBridge()))" to="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))) || (!(setter.isBridge()))" />
    <mutant id="mutant_430" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.jsonToMap(org.json.JSONObject)" from="(stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.RESOURCE_PREFIX)) || (stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.FILE_PREFIX))" to="stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.FILE_PREFIX)" />
    <mutant id="mutant_672" viable="true" in="org.apache.shindig.protocol.ApiServlet.init(javax.servlet.ServletConfig)" from="(handlers == null) || (&quot;&quot;.equals(handlers))" to="&quot;&quot;.equals(handlers)" />
    <mutant id="mutant_431" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.jsonToMap(org.json.JSONObject)" from="(stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.RESOURCE_PREFIX)) || (stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.FILE_PREFIX))" to="true" />
    <mutant id="mutant_673" viable="true" in="org.apache.shindig.protocol.ApiServlet.init(javax.servlet.ServletConfig)" from="(handlers == null) || (&quot;&quot;.equals(handlers))" to="true" />
    <mutant id="mutant_432" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.jsonToMap(org.json.JSONObject)" from="(stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.RESOURCE_PREFIX)) || (stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.FILE_PREFIX))" to="false" />
    <mutant id="mutant_674" viable="true" in="org.apache.shindig.protocol.ApiServlet.init(javax.servlet.ServletConfig)" from="(handlers == null) || (&quot;&quot;.equals(handlers))" to="false" />
    <mutant id="mutant_670" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))) &amp;&amp; (!(setter.isBridge()))" to="!(setter.isBridge())" />
  </mutants>
</mutation>
