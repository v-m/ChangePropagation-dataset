<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="AOR" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="117127">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_569" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_565" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="(index + 2)" />
    <mutant id="mutant_566" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="(index % 2)" />
    <mutant id="mutant_567" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_568" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2172" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="(&quot;Negative skip length: &quot; + n)" to="(&quot;Negative skip length: &quot; / n)" />
    <mutant id="mutant_2173" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n - todo" to="n" />
    <mutant id="mutant_2170" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="(&quot;Negative skip length: &quot; + n)" to="(&quot;Negative skip length: &quot; * n)" />
    <mutant id="mutant_2171" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="(&quot;Negative skip length: &quot; + n)" to="(&quot;Negative skip length: &quot; % n)" />
    <mutant id="mutant_2169" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="(&quot;Negative skip length: &quot; + n)" to="&quot;Negative skip length: &quot;" />
    <mutant id="mutant_2167" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="(&quot;Negative skip length: &quot; + n)" to="n" />
    <mutant id="mutant_2168" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="(&quot;Negative skip length: &quot; + n)" to="(&quot;Negative skip length: &quot; - n)" />
    <mutant id="mutant_2165" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset + len)" to="(offset / len)" />
    <mutant id="mutant_2166" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset + len)" to="(offset * len)" />
    <mutant id="mutant_2163" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset + len)" to="(offset % len)" />
    <mutant id="mutant_2164" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset + len)" to="offset" />
    <mutant id="mutant_561" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="2" />
    <mutant id="mutant_562" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="(index * 2)" />
    <mutant id="mutant_563" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="(index / 2)" />
    <mutant id="mutant_564" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="index" />
    <mutant id="mutant_560" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_576" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_577" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_578" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_579" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 2)" to="2" />
    <mutant id="mutant_2161" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset + len)" to="(offset - len)" />
    <mutant id="mutant_2162" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset + len)" to="len" />
    <mutant id="mutant_2160" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="256 + b" to="256 * b" />
    <mutant id="mutant_2158" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="256 + b" to="256 - b" />
    <mutant id="mutant_2159" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="256 + b" to="256 / b" />
    <mutant id="mutant_2156" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="256 + b" to="256" />
    <mutant id="mutant_2157" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="256 + b" to="256 % b" />
    <mutant id="mutant_2154" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)" to="chunkSeparatorLength" />
    <mutant id="mutant_2155" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="256 + b" to="b" />
    <mutant id="mutant_2152" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)" to="(((len + (lineLength)) - 1) / (lineLength)) / (chunkSeparatorLength)" />
    <mutant id="mutant_2153" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)" to="(((len + (lineLength)) - 1) / (lineLength)) % (chunkSeparatorLength)" />
    <mutant id="mutant_572" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_573" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_574" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_575" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_570" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_571" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_107" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="l + remainder" to="l" />
    <mutant id="mutant_108" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(&quot;(&quot; * (encode(remainder)))" />
    <mutant id="mutant_109" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(encode(remainder))" />
    <mutant id="mutant_103" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="l + remainder" to="l - remainder" />
    <mutant id="mutant_587" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_104" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="l + remainder" to="l / remainder" />
    <mutant id="mutant_588" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_105" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="l + remainder" to="l * remainder" />
    <mutant id="mutant_589" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_106" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="l + remainder" to="remainder" />
    <mutant id="mutant_2150" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)" to="(((len + (lineLength)) - 1) / (lineLength)) + (chunkSeparatorLength)" />
    <mutant id="mutant_2151" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)" to="(((len + (lineLength)) - 1) / (lineLength)) - (chunkSeparatorLength)" />
    <mutant id="mutant_2147" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength))" to="(((len + (lineLength)) - 1) * (lineLength))" />
    <mutant id="mutant_2148" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength))" to="(((len + (lineLength)) - 1) % (lineLength))" />
    <mutant id="mutant_1298" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2145" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength))" to="(lineLength)" />
    <mutant id="mutant_1299" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_2146" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength))" to="(((len + (lineLength)) - 1) - (lineLength))" />
    <mutant id="mutant_1296" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2143" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength))" to="(((len + (lineLength)) - 1) + (lineLength))" />
    <mutant id="mutant_1297" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_2144" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength))" to="((len + (lineLength)) - 1)" />
    <mutant id="mutant_1294" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2141" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((len + (lineLength)) - 1)" to="(len + (lineLength))" />
    <mutant id="mutant_1295" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2142" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((len + (lineLength)) - 1)" to="((len + (lineLength)) + 1)" />
    <mutant id="mutant_583" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 2)" to="(index + 2)" />
    <mutant id="mutant_100" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((l.length()) + 1)" to="((l.length()) * 1)" />
    <mutant id="mutant_584" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 2)" to="(index % 2)" />
    <mutant id="mutant_101" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((l.length()) + 1)" to="((l.length()) - 1)" />
    <mutant id="mutant_585" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_102" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="l + remainder" to="l % remainder" />
    <mutant id="mutant_586" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_580" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 2)" to="(index * 2)" />
    <mutant id="mutant_581" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 2)" to="(index / 2)" />
    <mutant id="mutant_2149" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)" to="((len + (lineLength)) - 1) / (lineLength)" />
    <mutant id="mutant_582" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 2)" to="index" />
    <mutant id="mutant_118" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="((&quot;(&quot; + (encode(remainder))) / &quot;)-(&quot;)" />
    <mutant id="mutant_119" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="((&quot;(&quot; + (encode(remainder))) % &quot;)-(&quot;)" />
    <mutant id="mutant_114" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="((&quot;(&quot; + (encode(remainder))) - &quot;)-(&quot;)" />
    <mutant id="mutant_598" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_115" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="((&quot;(&quot; + (encode(remainder))) * &quot;)-(&quot;)" />
    <mutant id="mutant_599" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_116" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="&quot;)-(&quot;" />
    <mutant id="mutant_117" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="(&quot;(&quot; + (encode(remainder)))" />
    <mutant id="mutant_1292" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1293" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_2140" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((len + (lineLength)) - 1)" to="((len + (lineLength)) / 1)" />
    <mutant id="mutant_1290" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1291" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1289" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2136" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(len + (lineLength))" to="(len * (lineLength))" />
    <mutant id="mutant_2137" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((len + (lineLength)) - 1)" to="((len + (lineLength)) % 1)" />
    <mutant id="mutant_1287" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2134" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(len + (lineLength))" to="(len - (lineLength))" />
    <mutant id="mutant_1288" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2135" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(len + (lineLength))" to="(len % (lineLength))" />
    <mutant id="mutant_1285" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_2132" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(len + (lineLength))" to="len" />
    <mutant id="mutant_1286" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_2133" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(len + (lineLength))" to="(lineLength)" />
    <mutant id="mutant_1283" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_2130" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))" to="((long)(encodedBlockSize))" />
    <mutant id="mutant_1284" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_2131" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(len + (lineLength))" to="(len / (lineLength))" />
    <mutant id="mutant_110" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(&quot;(&quot; / (encode(remainder)))" />
    <mutant id="mutant_594" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_111" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(&quot;(&quot; % (encode(remainder)))" />
    <mutant id="mutant_595" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_112" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="&quot;(&quot;" />
    <mutant id="mutant_596" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_113" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(&quot;(&quot; - (encode(remainder)))" />
    <mutant id="mutant_597" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_590" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_591" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_592" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_2138" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((len + (lineLength)) - 1)" to="1" />
    <mutant id="mutant_593" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_2139" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((len + (lineLength)) - 1)" to="((len + (lineLength)) * 1)" />
    <mutant id="mutant_129" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) / &quot;)&quot;" />
    <mutant id="mutant_125" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" />
    <mutant id="mutant_126" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) % &quot;)&quot;" />
    <mutant id="mutant_127" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))" />
    <mutant id="mutant_128" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) * &quot;)&quot;" />
    <mutant id="mutant_121" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) - (encode(combined)))" />
    <mutant id="mutant_122" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) * (encode(combined)))" />
    <mutant id="mutant_123" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(encode(combined))" />
    <mutant id="mutant_124" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) / (encode(combined)))" />
    <mutant id="mutant_120" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) % (encode(combined)))" />
    <mutant id="mutant_136" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((parts.length) - 1)" to="((parts.length) + 1)" />
    <mutant id="mutant_137" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((parts.length) - 1)" to="parts.length" />
    <mutant id="mutant_138" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;Unreachable case: &quot; + (this.nameType))" to="(&quot;Unreachable case: &quot; % (this.nameType))" />
    <mutant id="mutant_139" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;Unreachable case: &quot; + (this.nameType))" to="this.nameType" />
    <mutant id="mutant_2198" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii.length) - 1" to="1" />
    <mutant id="mutant_2199" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii.length) - 1" to="(ascii.length) % 1" />
    <mutant id="mutant_2196" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(jj - bits)" to="(jj / bits)" />
    <mutant id="mutant_2197" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii.length) - 1" to="(ascii.length) / 1" />
    <mutant id="mutant_132" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((parts.length) - 1)" to="((parts.length) / 1)" />
    <mutant id="mutant_133" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((parts.length) - 1)" to="1" />
    <mutant id="mutant_134" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((parts.length) - 1)" to="((parts.length) % 1)" />
    <mutant id="mutant_135" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((parts.length) - 1)" to="((parts.length) * 1)" />
    <mutant id="mutant_130" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="&quot;)&quot;" />
    <mutant id="mutant_131" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) - &quot;)&quot;" />
    <mutant id="mutant_147" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_148" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_149" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_2194" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(jj - bits)" to="bits" />
    <mutant id="mutant_2195" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(jj - bits)" to="(jj * bits)" />
    <mutant id="mutant_2192" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(jj - bits)" to="(jj % bits)" />
    <mutant id="mutant_2193" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(jj - bits)" to="(jj + bits)" />
    <mutant id="mutant_2190" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii.length) - 1" to="ascii.length" />
    <mutant id="mutant_2191" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(jj - bits)" to="jj" />
    <mutant id="mutant_2189" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii.length) - 1" to="(ascii.length) + 1" />
    <mutant id="mutant_2187" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii.length) - 1" to="(ascii.length) % 1" />
    <mutant id="mutant_2188" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii.length) - 1" to="(ascii.length) * 1" />
    <mutant id="mutant_2185" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii.length) - 1" to="(ascii.length) / 1" />
    <mutant id="mutant_2186" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii.length) - 1" to="1" />
    <mutant id="mutant_143" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;Unreachable case: &quot; + (this.nameType))" to="&quot;Unreachable case: &quot;" />
    <mutant id="mutant_144" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_145" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="(i + 1)" to="1" />
    <mutant id="mutant_146" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="(i + 1)" to="i" />
    <mutant id="mutant_140" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;Unreachable case: &quot; + (this.nameType))" to="(&quot;Unreachable case: &quot; * (this.nameType))" />
    <mutant id="mutant_141" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;Unreachable case: &quot; + (this.nameType))" to="(&quot;Unreachable case: &quot; - (this.nameType))" />
    <mutant id="mutant_142" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;Unreachable case: &quot; + (this.nameType))" to="(&quot;Unreachable case: &quot; / (this.nameType))" />
    <mutant id="mutant_158" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))" to="o1.phonemeText.charAt(i)" />
    <mutant id="mutant_159" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))" to="(o1.phonemeText.charAt(i)) + (o2.phonemeText.charAt(i))" />
    <mutant id="mutant_2183" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset + len)" to="(offset / len)" />
    <mutant id="mutant_2184" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset + len)" to="(offset * len)" />
    <mutant id="mutant_2181" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset + len)" to="(offset % len)" />
    <mutant id="mutant_2182" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset + len)" to="offset" />
    <mutant id="mutant_2180" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset + len)" to="len" />
    <mutant id="mutant_2178" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n - todo" to="n % todo" />
    <mutant id="mutant_2179" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset + len)" to="(offset - len)" />
    <mutant id="mutant_2176" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n - todo" to="n + todo" />
    <mutant id="mutant_2177" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n - todo" to="n / todo" />
    <mutant id="mutant_2174" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n - todo" to="todo" />
    <mutant id="mutant_2175" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n - todo" to="n * todo" />
    <mutant id="mutant_154" viable="false" in="?" from="(&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" to="&quot;Problem processing &quot;" />
    <mutant id="mutant_155" viable="false" in="?" from="(&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" to="(&quot;Problem processing &quot; * (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" />
    <mutant id="mutant_156" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))" to="(o1.phonemeText.charAt(i)) / (o2.phonemeText.charAt(i))" />
    <mutant id="mutant_157" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))" to="(o1.phonemeText.charAt(i)) % (o2.phonemeText.charAt(i))" />
    <mutant id="mutant_150" viable="false" in="?" from="(&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" to="(&quot;Problem processing &quot; / (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" />
    <mutant id="mutant_151" viable="false" in="?" from="(&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" to="org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)" />
    <mutant id="mutant_152" viable="false" in="?" from="(&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" to="(&quot;Problem processing &quot; % (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" />
    <mutant id="mutant_153" viable="false" in="?" from="(&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" to="(&quot;Problem processing &quot; - (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" />
    <mutant id="mutant_169" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages))" to="((phonemeText.toString()) + &quot;[&quot;)" />
    <mutant id="mutant_160" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))" to="(o1.phonemeText.charAt(i)) * (o2.phonemeText.charAt(i))" />
    <mutant id="mutant_165" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="((phonemeText.toString()) + &quot;[&quot;)" to="((phonemeText.toString()) / &quot;[&quot;)" />
    <mutant id="mutant_166" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="((phonemeText.toString()) + &quot;[&quot;)" to="((phonemeText.toString()) * &quot;[&quot;)" />
    <mutant id="mutant_167" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages))" to="(((phonemeText.toString()) + &quot;[&quot;) / (languages))" />
    <mutant id="mutant_168" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages))" to="(((phonemeText.toString()) + &quot;[&quot;) - (languages))" />
    <mutant id="mutant_161" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="((phonemeText.toString()) + &quot;[&quot;)" to="((phonemeText.toString()) - &quot;[&quot;)" />
    <mutant id="mutant_162" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="((phonemeText.toString()) + &quot;[&quot;)" to="((phonemeText.toString()) % &quot;[&quot;)" />
    <mutant id="mutant_163" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="((phonemeText.toString()) + &quot;[&quot;)" to="&quot;[&quot;" />
    <mutant id="mutant_164" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="((phonemeText.toString()) + &quot;[&quot;)" to="(phonemeText.toString())" />
    <mutant id="mutant_170" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages))" to="(((phonemeText.toString()) + &quot;[&quot;) * (languages))" />
    <mutant id="mutant_171" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages))" to="(((phonemeText.toString()) + &quot;[&quot;) % (languages))" />
    <mutant id="mutant_176" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;" to="&quot;]&quot;" />
    <mutant id="mutant_177" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;" to="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) / &quot;]&quot;" />
    <mutant id="mutant_178" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;" to="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) % &quot;]&quot;" />
    <mutant id="mutant_179" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.join(org.apache.commons.codec.language.bm.Rule$Phoneme)" from="((this.phonemeText.toString()) + (right.phonemeText.toString()))" to="((this.phonemeText.toString()) / (right.phonemeText.toString()))" />
    <mutant id="mutant_172" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages))" to="(languages)" />
    <mutant id="mutant_173" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;" to="((phonemeText.toString()) + &quot;[&quot;) + (languages)" />
    <mutant id="mutant_174" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;" to="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) - &quot;]&quot;" />
    <mutant id="mutant_175" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;" to="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) * &quot;]&quot;" />
    <mutant id="mutant_180" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.join(org.apache.commons.codec.language.bm.Rule$Phoneme)" from="((this.phonemeText.toString()) + (right.phonemeText.toString()))" to="((this.phonemeText.toString()) * (right.phonemeText.toString()))" />
    <mutant id="mutant_181" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.join(org.apache.commons.codec.language.bm.Rule$Phoneme)" from="((this.phonemeText.toString()) + (right.phonemeText.toString()))" to="((this.phonemeText.toString()) % (right.phonemeText.toString()))" />
    <mutant id="mutant_182" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.join(org.apache.commons.codec.language.bm.Rule$Phoneme)" from="((this.phonemeText.toString()) + (right.phonemeText.toString()))" to="this.phonemeText.toString()" />
    <mutant id="mutant_187" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(lContext + &quot;$&quot;)" to="(lContext % &quot;$&quot;)" />
    <mutant id="mutant_188" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(lContext + &quot;$&quot;)" to="(lContext - &quot;$&quot;)" />
    <mutant id="mutant_189" viable="true" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(lContext + &quot;$&quot;)" to="lContext" />
    <mutant id="mutant_183" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.join(org.apache.commons.codec.language.bm.Rule$Phoneme)" from="((this.phonemeText.toString()) + (right.phonemeText.toString()))" to="((this.phonemeText.toString()) - (right.phonemeText.toString()))" />
    <mutant id="mutant_184" viable="true" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(lContext + &quot;$&quot;)" to="&quot;$&quot;" />
    <mutant id="mutant_185" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(lContext + &quot;$&quot;)" to="(lContext / &quot;$&quot;)" />
    <mutant id="mutant_186" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(lContext + &quot;$&quot;)" to="(lContext * &quot;$&quot;)" />
    <mutant id="mutant_190" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(&quot;^&quot; + rContext)" to="(&quot;^&quot; / rContext)" />
    <mutant id="mutant_191" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(&quot;^&quot; + rContext)" to="(&quot;^&quot; * rContext)" />
    <mutant id="mutant_192" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(&quot;^&quot; + rContext)" to="(&quot;^&quot; - rContext)" />
    <mutant id="mutant_193" viable="true" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(&quot;^&quot; + rContext)" to="rContext" />
    <mutant id="mutant_198" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.length()) - 1" to="(input.length()) / 1" />
    <mutant id="mutant_199" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.length()) - 1" to="(input.length()) + 1" />
    <mutant id="mutant_194" viable="true" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(&quot;^&quot; + rContext)" to="&quot;^&quot;" />
    <mutant id="mutant_195" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(&quot;^&quot; + rContext)" to="(&quot;^&quot; % rContext)" />
    <mutant id="mutant_196" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.length()) - 1" to="1" />
    <mutant id="mutant_197" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.length()) - 1" to="input.length()" />
    <mutant id="mutant_1719" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n - 1)" to="n" />
    <mutant id="mutant_1717" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n - 1)" to="1" />
    <mutant id="mutant_1718" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n - 1)" to="(n / 1)" />
    <mutant id="mutant_1715" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n * 1)" />
    <mutant id="mutant_1716" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n % 1)" />
    <mutant id="mutant_1713" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n / 1)" />
    <mutant id="mutant_1714" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="n" />
    <mutant id="mutant_1711" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n - 1)" />
    <mutant id="mutant_1712" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="1" />
    <mutant id="mutant_1710" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="(n % 2)" />
    <mutant id="mutant_1708" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="n" />
    <mutant id="mutant_1709" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="(n * 2)" />
    <mutant id="mutant_1706" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="(n - 2)" />
    <mutant id="mutant_1707" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="2" />
    <mutant id="mutant_1704" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n % 1)" />
    <mutant id="mutant_1705" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="(n / 2)" />
    <mutant id="mutant_1702" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="n" />
    <mutant id="mutant_1703" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n * 1)" />
    <mutant id="mutant_1700" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="1" />
    <mutant id="mutant_1701" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n / 1)" />
    <mutant id="mutant_2608" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(text.length()) - 2" to="(text.length()) + 2" />
    <mutant id="mutant_2609" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(text.length()) - 2" to="(text.length()) % 2" />
    <mutant id="mutant_1751" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 2)" to="(len / 2)" />
    <mutant id="mutant_1752" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 2)" to="(len + 2)" />
    <mutant id="mutant_1750" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 2)" to="(len % 2)" />
    <mutant id="mutant_1759" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_2606" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(text.length()) - 2" to="2" />
    <mutant id="mutant_2607" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(text.length()) - 2" to="(text.length()) / 2" />
    <mutant id="mutant_1757" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 2)" to="(i * 2)" />
    <mutant id="mutant_2604" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;)" to="(&quot;Objects of type &quot; + (obj.getClass().getName()))" />
    <mutant id="mutant_1758" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 2)" to="(i - 2)" />
    <mutant id="mutant_2605" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(text.length()) - 2" to="text.length()" />
    <mutant id="mutant_1755" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 2)" to="i" />
    <mutant id="mutant_2602" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) / &quot; cannot be quoted-printable encoded&quot;)" />
    <mutant id="mutant_1756" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 2)" to="(i % 2)" />
    <mutant id="mutant_2603" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * &quot; cannot be quoted-printable encoded&quot;)" />
    <mutant id="mutant_1753" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 2)" to="(i / 2)" />
    <mutant id="mutant_2600" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;)" to="&quot; cannot be quoted-printable encoded&quot;" />
    <mutant id="mutant_1754" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 2)" to="2" />
    <mutant id="mutant_2601" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) % &quot; cannot be quoted-printable encoded&quot;)" />
    <mutant id="mutant_1740" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 1)" to="(len + 1)" />
    <mutant id="mutant_1741" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_1748" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 2)" to="len" />
    <mutant id="mutant_1749" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 2)" to="2" />
    <mutant id="mutant_1746" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_1747" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 2)" to="(len * 2)" />
    <mutant id="mutant_1744" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_1745" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_1742" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 1)" to="1" />
    <mutant id="mutant_1743" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 1)" to="i" />
    <mutant id="mutant_900" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index / 3)" />
    <mutant id="mutant_901" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index * 3)" />
    <mutant id="mutant_902" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index % 3)" />
    <mutant id="mutant_1739" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 1)" to="(len / 1)" />
    <mutant id="mutant_907" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 4)" to="(index * 4)" />
    <mutant id="mutant_908" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 4)" to="(index % 4)" />
    <mutant id="mutant_909" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_903" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 4)" to="4" />
    <mutant id="mutant_904" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 4)" to="(index + 4)" />
    <mutant id="mutant_905" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 4)" to="index" />
    <mutant id="mutant_906" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 4)" to="(index / 4)" />
    <mutant id="mutant_1730" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="1" />
    <mutant id="mutant_1737" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 1)" to="len" />
    <mutant id="mutant_1738" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 1)" to="(len % 1)" />
    <mutant id="mutant_1735" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 1)" to="(len * 1)" />
    <mutant id="mutant_1736" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 1)" to="1" />
    <mutant id="mutant_1733" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n * 1)" />
    <mutant id="mutant_1734" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n % 1)" />
    <mutant id="mutant_1731" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n / 1)" />
    <mutant id="mutant_1732" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="n" />
    <mutant id="mutant_910" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_911" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_912" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_913" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_1728" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n % 1)" />
    <mutant id="mutant_1729" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n - 1)" />
    <mutant id="mutant_918" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index / 3)" />
    <mutant id="mutant_919" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index * 3)" />
    <mutant id="mutant_914" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_915" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="3" />
    <mutant id="mutant_916" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index + 3)" />
    <mutant id="mutant_917" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="index" />
    <mutant id="mutant_1726" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="n" />
    <mutant id="mutant_1727" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n * 1)" />
    <mutant id="mutant_1724" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="1" />
    <mutant id="mutant_1725" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n / 1)" />
    <mutant id="mutant_1722" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n - 1)" to="(n % 1)" />
    <mutant id="mutant_1723" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n - 1)" />
    <mutant id="mutant_1720" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n - 1)" to="(n * 1)" />
    <mutant id="mutant_1721" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n - 1)" to="(n + 1)" />
    <mutant id="mutant_921" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_922" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_923" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_924" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_920" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index % 3)" />
    <mutant id="mutant_929" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_925" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_926" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_927" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_928" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_1311" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_1795" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="2" />
    <mutant id="mutant_2642" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="256 + b" to="256" />
    <mutant id="mutant_1312" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_1796" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="key.length()" />
    <mutant id="mutant_2643" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="256 + b" to="256 - b" />
    <mutant id="mutant_1793" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="((key.length()) * 2)" />
    <mutant id="mutant_2640" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="((u &lt;&lt; 4) - l)" />
    <mutant id="mutant_1310" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1794" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="((key.length()) % 2)" />
    <mutant id="mutant_2641" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="256 + b" to="256 / b" />
    <mutant id="mutant_1791" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="((key.length()) + 2)" />
    <mutant id="mutant_1792" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="((key.length()) / 2)" />
    <mutant id="mutant_1790" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="key.length()" />
    <mutant id="mutant_1319" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_1317" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_2648" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_1318" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2649" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="&quot;Objects of type &quot;" />
    <mutant id="mutant_1315" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_1799" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="((key.length()) * 2)" />
    <mutant id="mutant_2646" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="256 + b" to="b" />
    <mutant id="mutant_1316" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2647" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(obj.getClass().getName())" />
    <mutant id="mutant_1313" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_1797" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="((key.length()) + 2)" />
    <mutant id="mutant_2644" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="256 + b" to="256 * b" />
    <mutant id="mutant_1314" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_1798" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="((key.length()) / 2)" />
    <mutant id="mutant_2645" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="256 + b" to="256 % b" />
    <mutant id="mutant_932" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_933" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_934" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_935" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_930" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_931" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_936" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_937" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_938" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_939" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 4)" to="(index - 4)" />
    <mutant id="mutant_1300" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_1784" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) * 1)" />
    <mutant id="mutant_2631" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to % 1" />
    <mutant id="mutant_1301" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_1785" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) + 1)" />
    <mutant id="mutant_2632" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to / 1" />
    <mutant id="mutant_1782" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) % 1)" />
    <mutant id="mutant_1783" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="1" />
    <mutant id="mutant_2630" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="1" />
    <mutant id="mutant_1780" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="key.length()" />
    <mutant id="mutant_1781" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) / 1)" />
    <mutant id="mutant_1308" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2639" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="((u &lt;&lt; 4) / l)" />
    <mutant id="mutant_1309" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1306" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2637" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="((u &lt;&lt; 4) % l)" />
    <mutant id="mutant_1307" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2638" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="(u &lt;&lt; 4)" />
    <mutant id="mutant_1304" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_1788" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) % 1)" />
    <mutant id="mutant_2635" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="((u &lt;&lt; 4) * l)" />
    <mutant id="mutant_1305" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1789" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="2" />
    <mutant id="mutant_2636" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="l" />
    <mutant id="mutant_1302" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_1786" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="key.length()" />
    <mutant id="mutant_2633" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to - 1" />
    <mutant id="mutant_1303" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_1787" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) / 1)" />
    <mutant id="mutant_2634" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to" />
    <mutant id="mutant_943" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 4)" to="(index * 4)" />
    <mutant id="mutant_944" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 4)" to="(index % 4)" />
    <mutant id="mutant_945" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="1" />
    <mutant id="mutant_946" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_940" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 4)" to="4" />
    <mutant id="mutant_941" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 4)" to="index" />
    <mutant id="mutant_942" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 4)" to="(index / 4)" />
    <mutant id="mutant_947" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_948" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_949" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="index" />
    <mutant id="mutant_1773" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) + 1)" />
    <mutant id="mutant_2620" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(&quot;This codec cannot decode &quot; + encoding)" to="(&quot;This codec cannot decode &quot; % encoding)" />
    <mutant id="mutant_1774" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="key.length()" />
    <mutant id="mutant_2621" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(&quot;This codec cannot decode &quot; + encoding)" to="(&quot;This codec cannot decode &quot; * encoding)" />
    <mutant id="mutant_1771" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="1" />
    <mutant id="mutant_1772" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) * 1)" />
    <mutant id="mutant_1770" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_2628" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;)" to="((&quot;This codec cannot decode &quot; + encoding) % &quot; encoded content&quot;)" />
    <mutant id="mutant_2629" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to * 1" />
    <mutant id="mutant_1779" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) + 1)" />
    <mutant id="mutant_2626" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;)" to="((&quot;This codec cannot decode &quot; + encoding) / &quot; encoded content&quot;)" />
    <mutant id="mutant_2627" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;)" to="((&quot;This codec cannot decode &quot; + encoding) * &quot; encoded content&quot;)" />
    <mutant id="mutant_1777" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="1" />
    <mutant id="mutant_2624" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;)" to="((&quot;This codec cannot decode &quot; + encoding) - &quot; encoded content&quot;)" />
    <mutant id="mutant_1778" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) * 1)" />
    <mutant id="mutant_2625" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;)" to="&quot; encoded content&quot;" />
    <mutant id="mutant_1775" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) / 1)" />
    <mutant id="mutant_2622" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(&quot;This codec cannot decode &quot; + encoding)" to="(&quot;This codec cannot decode &quot; - encoding)" />
    <mutant id="mutant_1776" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) % 1)" />
    <mutant id="mutant_2623" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;)" to="(&quot;This codec cannot decode &quot; + encoding)" />
    <mutant id="mutant_954" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_955" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_956" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_957" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_950" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_951" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_952" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2619" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(&quot;This codec cannot decode &quot; + encoding)" to="encoding" />
    <mutant id="mutant_953" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_958" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_959" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1762" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="i" />
    <mutant id="mutant_1763" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_2610" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(text.length()) - 2" to="(text.length()) * 2" />
    <mutant id="mutant_1760" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_1761" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="1" />
    <mutant id="mutant_2617" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(&quot;This codec cannot decode &quot; + encoding)" to="&quot;This codec cannot decode &quot;" />
    <mutant id="mutant_2618" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(&quot;This codec cannot decode &quot; + encoding)" to="(&quot;This codec cannot decode &quot; / encoding)" />
    <mutant id="mutant_1768" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="i" />
    <mutant id="mutant_2615" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to - 1" />
    <mutant id="mutant_1769" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="(i * 1)" />
    <mutant id="mutant_2616" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to" />
    <mutant id="mutant_1766" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="(i + 1)" />
    <mutant id="mutant_2613" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to % 1" />
    <mutant id="mutant_1767" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="1" />
    <mutant id="mutant_2614" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to / 1" />
    <mutant id="mutant_1764" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="(i % 1)" />
    <mutant id="mutant_2611" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="to * 1" />
    <mutant id="mutant_1765" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="(i / 1)" />
    <mutant id="mutant_2612" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="1" />
    <mutant id="mutant_965" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_966" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_967" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_968" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_961" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_962" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_963" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(value.length())" />
    <mutant id="mutant_964" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_969" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1355" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2202" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii.length) - 1" to="ascii.length" />
    <mutant id="mutant_2686" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b)" to="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) % b)" />
    <mutant id="mutant_1356" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2203" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(jj - bits)" to="jj" />
    <mutant id="mutant_2687" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b)" to="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) * b)" />
    <mutant id="mutant_1353" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2200" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii.length) - 1" to="(ascii.length) * 1" />
    <mutant id="mutant_2684" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b)" to="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) - b)" />
    <mutant id="mutant_1354" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2201" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii.length) - 1" to="(ascii.length) + 1" />
    <mutant id="mutant_2685" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b)" to="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) / b)" />
    <mutant id="mutant_1351" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_2682" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" to="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) * &quot;): &quot;)" />
    <mutant id="mutant_1352" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2683" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b)" to="b" />
    <mutant id="mutant_2680" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" to="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) % &quot;): &quot;)" />
    <mutant id="mutant_1350" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2681" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" to="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) / &quot;): &quot;)" />
    <mutant id="mutant_2208" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(jj - bits)" to="(jj / bits)" />
    <mutant id="mutant_960" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2209" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(l_ascii.length) - 1" to="(l_ascii.length) / 1" />
    <mutant id="mutant_1359" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_2206" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(jj - bits)" to="bits" />
    <mutant id="mutant_2207" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(jj - bits)" to="(jj * bits)" />
    <mutant id="mutant_1357" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_2204" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(jj - bits)" to="(jj % bits)" />
    <mutant id="mutant_2688" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b)" to="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" />
    <mutant id="mutant_1358" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2205" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(jj - bits)" to="(jj + bits)" />
    <mutant id="mutant_976" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_977" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_978" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_979" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="index" />
    <mutant id="mutant_972" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_973" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_974" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_975" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="1" />
    <mutant id="mutant_1344" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2675" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" to="(&quot;Invalid URL encoding: not a valid digit (radix &quot; / (URLCodec.RADIX))" />
    <mutant id="mutant_1345" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_2676" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" to="(&quot;Invalid URL encoding: not a valid digit (radix &quot; % (URLCodec.RADIX))" />
    <mutant id="mutant_1342" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2673" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" to="(URLCodec.RADIX)" />
    <mutant id="mutant_1343" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2674" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" to="(&quot;Invalid URL encoding: not a valid digit (radix &quot; - (URLCodec.RADIX))" />
    <mutant id="mutant_1340" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2671" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" to="(&quot;Invalid URL encoding: not a valid digit (radix &quot; * (URLCodec.RADIX))" />
    <mutant id="mutant_1341" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_2672" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" to="&quot;Invalid URL encoding: not a valid digit (radix &quot;" />
    <mutant id="mutant_2670" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;)" to="(&quot;Objects of type &quot; + (obj.getClass().getName()))" />
    <mutant id="mutant_970" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_971" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1348" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2679" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" to="&quot;): &quot;" />
    <mutant id="mutant_1349" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_1346" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2677" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" to="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) - &quot;): &quot;)" />
    <mutant id="mutant_1347" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_2678" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" to="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" />
    <mutant id="mutant_503" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) - &quot; in &quot;)" />
    <mutant id="mutant_987" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_504" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="&quot; in &quot;" />
    <mutant id="mutant_988" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_505" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) % &quot; in &quot;)" />
    <mutant id="mutant_989" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_506" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" />
    <mutant id="mutant_983" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_500" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="rawLine" />
    <mutant id="mutant_984" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_501" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) * &quot; in &quot;)" />
    <mutant id="mutant_985" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_502" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) / &quot; in &quot;)" />
    <mutant id="mutant_986" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_507" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" />
    <mutant id="mutant_508" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="location" />
    <mutant id="mutant_509" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) / location)" />
    <mutant id="mutant_1333" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_2664" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_1334" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2665" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * &quot; cannot be URL encoded&quot;)" />
    <mutant id="mutant_1331" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2662" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_1332" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2663" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_2660" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_1330" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2661" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="&quot;Objects of type &quot;" />
    <mutant id="mutant_980" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_981" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1339" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_982" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1337" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_2668" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - &quot; cannot be URL encoded&quot;)" />
    <mutant id="mutant_1338" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2669" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) / &quot; cannot be URL encoded&quot;)" />
    <mutant id="mutant_1335" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_2666" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;)" to="&quot; cannot be URL encoded&quot;" />
    <mutant id="mutant_1336" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2667" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) % &quot; cannot be URL encoded&quot;)" />
    <mutant id="mutant_514" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="(&quot;Problem parsing line \'&quot; * currentLine)" />
    <mutant id="mutant_998" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_515" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="(&quot;Problem parsing line \'&quot; - currentLine)" />
    <mutant id="mutant_999" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_516" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="currentLine" />
    <mutant id="mutant_517" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="&quot;Problem parsing line \'&quot;" />
    <mutant id="mutant_510" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) * location)" />
    <mutant id="mutant_994" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_511" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) - location)" />
    <mutant id="mutant_995" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_512" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) % location)" />
    <mutant id="mutant_996" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_513" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="(&quot;Problem parsing line \'&quot; / currentLine)" />
    <mutant id="mutant_997" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_518" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="(&quot;Problem parsing line \'&quot; % currentLine)" />
    <mutant id="mutant_519" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="((&quot;Problem parsing line \'&quot; + currentLine) % &quot;\' in &quot;)" />
    <mutant id="mutant_1322" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2653" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * &quot; cannot be URL decoded&quot;)" />
    <mutant id="mutant_1323" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2654" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;)" to="&quot; cannot be URL decoded&quot;" />
    <mutant id="mutant_1320" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2651" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_1321" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_2652" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_2650" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_990" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_991" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_992" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1328" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2659" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(obj.getClass().getName())" />
    <mutant id="mutant_993" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_1329" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_1326" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2657" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - &quot; cannot be URL decoded&quot;)" />
    <mutant id="mutant_1327" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_2658" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;)" to="(&quot;Objects of type &quot; + (obj.getClass().getName()))" />
    <mutant id="mutant_1324" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2655" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) % &quot; cannot be URL decoded&quot;)" />
    <mutant id="mutant_1325" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2656" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) / &quot; cannot be URL decoded&quot;)" />
    <mutant id="mutant_525" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) % location)" />
    <mutant id="mutant_526" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="location" />
    <mutant id="mutant_527" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) - location)" />
    <mutant id="mutant_528" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) * location)" />
    <mutant id="mutant_521" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="((&quot;Problem parsing line \'&quot; + currentLine) - &quot;\' in &quot;)" />
    <mutant id="mutant_522" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="&quot;\' in &quot;" />
    <mutant id="mutant_523" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="((&quot;Problem parsing line \'&quot; + currentLine) * &quot;\' in &quot;)" />
    <mutant id="mutant_524" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="((&quot;Problem parsing line \'&quot; + currentLine) / &quot;\' in &quot;)" />
    <mutant id="mutant_2250" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(&quot;Illegal hexadecimal character &quot; + ch)" to="(&quot;Illegal hexadecimal character &quot; / ch)" />
    <mutant id="mutant_529" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" />
    <mutant id="mutant_1399" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_2246" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(&quot;Illegal hexadecimal character &quot; + ch)" to="(&quot;Illegal hexadecimal character &quot; * ch)" />
    <mutant id="mutant_2247" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(&quot;Illegal hexadecimal character &quot; + ch)" to="(&quot;Illegal hexadecimal character &quot; - ch)" />
    <mutant id="mutant_1397" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2244" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="(jj / bits)" />
    <mutant id="mutant_1398" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2245" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(&quot;Illegal hexadecimal character &quot; + ch)" to="ch" />
    <mutant id="mutant_1395" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_2242" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="bits" />
    <mutant id="mutant_1396" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2243" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="(jj * bits)" />
    <mutant id="mutant_1393" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_2240" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="(jj % bits)" />
    <mutant id="mutant_1394" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2241" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="(jj + bits)" />
    <mutant id="mutant_520" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="(&quot;Problem parsing line \'&quot; + currentLine)" />
    <mutant id="mutant_2248" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(&quot;Illegal hexadecimal character &quot; + ch)" to="(&quot;Illegal hexadecimal character &quot; % ch)" />
    <mutant id="mutant_2249" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(&quot;Illegal hexadecimal character &quot; + ch)" to="&quot;Illegal hexadecimal character &quot;" />
    <mutant id="mutant_536" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(this.maxLength) - (this.alternate.length())" to="(this.maxLength) / (this.alternate.length())" />
    <mutant id="mutant_537" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(this.maxLength) - (this.primary.length())" to="(this.maxLength) % (this.primary.length())" />
    <mutant id="mutant_538" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(this.maxLength) - (this.primary.length())" to="this.maxLength" />
    <mutant id="mutant_539" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(this.maxLength) - (this.primary.length())" to="this.primary.length()" />
    <mutant id="mutant_532" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(this.maxLength) - (this.alternate.length())" to="this.maxLength" />
    <mutant id="mutant_533" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(this.maxLength) - (this.alternate.length())" to="this.alternate.length()" />
    <mutant id="mutant_534" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(this.maxLength) - (this.alternate.length())" to="(this.maxLength) * (this.alternate.length())" />
    <mutant id="mutant_535" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(this.maxLength) - (this.alternate.length())" to="(this.maxLength) + (this.alternate.length())" />
    <mutant id="mutant_1391" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1392" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1390" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1388" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2235" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="(jj + bits)" />
    <mutant id="mutant_1389" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2236" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="bits" />
    <mutant id="mutant_1386" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2233" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="jj" />
    <mutant id="mutant_1387" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_2234" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="(jj % bits)" />
    <mutant id="mutant_1384" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2231" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(l_ascii.length) - 1" to="(l_ascii.length) + 1" />
    <mutant id="mutant_1385" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_2232" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(l_ascii.length) - 1" to="l_ascii.length" />
    <mutant id="mutant_1382" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_1383" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_2230" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(l_ascii.length) - 1" to="(l_ascii.length) * 1" />
    <mutant id="mutant_530" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) / location)" />
    <mutant id="mutant_531" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(this.maxLength) - (this.alternate.length())" to="(this.maxLength) % (this.alternate.length())" />
    <mutant id="mutant_2239" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="jj" />
    <mutant id="mutant_2237" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="(jj * bits)" />
    <mutant id="mutant_2238" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="(jj / bits)" />
    <mutant id="mutant_547" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="(index + 2)" />
    <mutant id="mutant_548" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="(index % 2)" />
    <mutant id="mutant_549" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_543" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="2" />
    <mutant id="mutant_544" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="(index * 2)" />
    <mutant id="mutant_545" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="(index / 2)" />
    <mutant id="mutant_546" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="index" />
    <mutant id="mutant_1380" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_1381" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_1377" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_2224" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="bits" />
    <mutant id="mutant_1378" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2225" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="(jj * bits)" />
    <mutant id="mutant_1375" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_2222" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="(jj % bits)" />
    <mutant id="mutant_1376" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2223" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="(jj + bits)" />
    <mutant id="mutant_1373" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2220" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="(jj / bits)" />
    <mutant id="mutant_1374" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2221" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="jj" />
    <mutant id="mutant_1371" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1372" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_540" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(this.maxLength) - (this.primary.length())" to="(this.maxLength) * (this.primary.length())" />
    <mutant id="mutant_541" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(this.maxLength) - (this.primary.length())" to="(this.maxLength) + (this.primary.length())" />
    <mutant id="mutant_542" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(this.maxLength) - (this.primary.length())" to="(this.maxLength) / (this.primary.length())" />
    <mutant id="mutant_2228" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(l_ascii.length) - 1" to="1" />
    <mutant id="mutant_2229" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(l_ascii.length) - 1" to="(l_ascii.length) % 1" />
    <mutant id="mutant_1379" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2226" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="(jj / bits)" />
    <mutant id="mutant_2227" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(l_ascii.length) - 1" to="(l_ascii.length) / 1" />
    <mutant id="mutant_558" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_559" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_554" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_555" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_556" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_557" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_1370" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_1366" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2213" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(l_ascii.length) - 1" to="(l_ascii.length) + 1" />
    <mutant id="mutant_1367" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_2214" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(l_ascii.length) - 1" to="l_ascii.length" />
    <mutant id="mutant_1364" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2211" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(l_ascii.length) - 1" to="(l_ascii.length) % 1" />
    <mutant id="mutant_1365" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_2212" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(l_ascii.length) - 1" to="(l_ascii.length) * 1" />
    <mutant id="mutant_1362" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_1363" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_2210" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(l_ascii.length) - 1" to="1" />
    <mutant id="mutant_1360" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_1361" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_550" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_551" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_552" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_2219" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="(jj * bits)" />
    <mutant id="mutant_553" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_2217" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="(jj + bits)" />
    <mutant id="mutant_2218" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="bits" />
    <mutant id="mutant_1368" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2215" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="jj" />
    <mutant id="mutant_1369" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_2216" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="(jj % bits)" />
    <mutant id="mutant_448" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) * &quot; in &quot;)" />
    <mutant id="mutant_449" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) / &quot; in &quot;)" />
    <mutant id="mutant_444" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) / rawLine)" />
    <mutant id="mutant_445" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" />
    <mutant id="mutant_446" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) % rawLine)" />
    <mutant id="mutant_447" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) % &quot; in &quot;)" />
    <mutant id="mutant_2051" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) - 1)" />
    <mutant id="mutant_2052" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) % 1)" />
    <mutant id="mutant_2050" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) / 1)" />
    <mutant id="mutant_2048" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="1" />
    <mutant id="mutant_2049" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) * 1)" />
    <mutant id="mutant_1199" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_2046" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="(context.pos) / savedPos" />
    <mutant id="mutant_2047" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(context.modulus)" />
    <mutant id="mutant_1197" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_2044" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="(context.pos) + savedPos" />
    <mutant id="mutant_1198" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_2045" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="(context.pos) * savedPos" />
    <mutant id="mutant_1195" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_2042" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="context.pos" />
    <mutant id="mutant_1196" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_2043" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="savedPos" />
    <mutant id="mutant_440" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(&quot;Malformed folding statement split into &quot; + (parts.length))" />
    <mutant id="mutant_441" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) * rawLine)" />
    <mutant id="mutant_442" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="rawLine" />
    <mutant id="mutant_443" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) - rawLine)" />
    <mutant id="mutant_459" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" to="(&quot;Malformed folding statement - &quot; * &quot;patterns are not single characters: &quot;)" />
    <mutant id="mutant_455" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) / location)" />
    <mutant id="mutant_456" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" />
    <mutant id="mutant_457" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) * location)" />
    <mutant id="mutant_458" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) % location)" />
    <mutant id="mutant_1193" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_2040" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; - (context.modulus))" />
    <mutant id="mutant_1194" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_2041" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="(context.pos) % savedPos" />
    <mutant id="mutant_1191" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="(value.length())" />
    <mutant id="mutant_1192" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_1190" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2037" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; * (context.modulus))" />
    <mutant id="mutant_2038" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; / (context.modulus))" />
    <mutant id="mutant_1188" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2035" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="context.modulus" />
    <mutant id="mutant_1189" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_2036" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="&quot;Impossible modulus &quot;" />
    <mutant id="mutant_1186" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2033" viable="false" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; % (context.modulus))" />
    <mutant id="mutant_1187" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2034" viable="false" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; - (context.modulus))" />
    <mutant id="mutant_1184" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2031" viable="false" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; * (context.modulus))" />
    <mutant id="mutant_1185" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_2032" viable="false" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; / (context.modulus))" />
    <mutant id="mutant_451" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) - &quot; in &quot;)" />
    <mutant id="mutant_452" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="&quot; in &quot;" />
    <mutant id="mutant_453" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) - location)" />
    <mutant id="mutant_454" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="location" />
    <mutant id="mutant_2039" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; % (context.modulus))" />
    <mutant id="mutant_450" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" />
    <mutant id="mutant_466" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" to="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) % rawLine)" />
    <mutant id="mutant_467" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" to="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) / rawLine)" />
    <mutant id="mutant_468" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" to="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) - rawLine)" />
    <mutant id="mutant_469" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" to="rawLine" />
    <mutant id="mutant_1182" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1183" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_2030" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="&quot;Impossible modulus &quot;" />
    <mutant id="mutant_1180" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1181" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1179" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_2026" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result" to="result" />
    <mutant id="mutant_2027" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result" to="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) * result" />
    <mutant id="mutant_1177" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index" />
    <mutant id="mutant_2024" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result" to="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) / result" />
    <mutant id="mutant_1178" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2025" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result" to="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) - result" />
    <mutant id="mutant_1175" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index - 1" />
    <mutant id="mutant_2022" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)" to="(context.modulus) + 1" />
    <mutant id="mutant_1176" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2023" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result" to="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) % result" />
    <mutant id="mutant_1173" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="1" />
    <mutant id="mutant_2020" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)" to="((context.modulus) + 1) + (Base64.BYTES_PER_ENCODED_BLOCK)" />
    <mutant id="mutant_1174" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2021" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)" to="((context.modulus) + 1) * (Base64.BYTES_PER_ENCODED_BLOCK)" />
    <mutant id="mutant_462" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" to="(&quot;Malformed folding statement - &quot; % &quot;patterns are not single characters: &quot;)" />
    <mutant id="mutant_463" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" to="(&quot;Malformed folding statement - &quot; - &quot;patterns are not single characters: &quot;)" />
    <mutant id="mutant_464" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" to="&quot;Malformed folding statement - &quot;" />
    <mutant id="mutant_465" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" to="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) * rawLine)" />
    <mutant id="mutant_460" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" to="&quot;patterns are not single characters: &quot;" />
    <mutant id="mutant_2028" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result" to="(context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)" />
    <mutant id="mutant_461" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" to="(&quot;Malformed folding statement - &quot; / &quot;patterns are not single characters: &quot;)" />
    <mutant id="mutant_2029" viable="false" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="context.modulus" />
    <mutant id="mutant_477" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) % location)" />
    <mutant id="mutant_478" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location)" to="location" />
    <mutant id="mutant_479" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) - location)" />
    <mutant id="mutant_1171" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index" />
    <mutant id="mutant_1172" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index % 2" />
    <mutant id="mutant_1170" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index / 2" />
    <mutant id="mutant_1168" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2015" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) - 1)" />
    <mutant id="mutant_2499" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;)" to="((&quot;Objects of type &quot; + (value.getClass().getName())) % &quot; cannot be encoded using BCodec&quot;)" />
    <mutant id="mutant_1169" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2016" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) % 1)" />
    <mutant id="mutant_1166" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2013" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) * 1)" />
    <mutant id="mutant_2497" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;)" to="((&quot;Objects of type &quot; + (value.getClass().getName())) * &quot; cannot be encoded using BCodec&quot;)" />
    <mutant id="mutant_1167" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="2" />
    <mutant id="mutant_2014" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) / 1)" />
    <mutant id="mutant_2498" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;)" to="&quot; cannot be encoded using BCodec&quot;" />
    <mutant id="mutant_1164" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2011" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(context.modulus)" />
    <mutant id="mutant_2495" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(&quot;Objects of type &quot; % (value.getClass().getName()))" />
    <mutant id="mutant_1165" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_2012" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="1" />
    <mutant id="mutant_2496" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(&quot;Objects of type &quot; / (value.getClass().getName()))" />
    <mutant id="mutant_1162" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2493" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="&quot;Objects of type &quot;" />
    <mutant id="mutant_1163" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2010" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="bitlen / 8" to="8" />
    <mutant id="mutant_2494" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(&quot;Objects of type &quot; - (value.getClass().getName()))" />
    <mutant id="mutant_473" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" to="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) * &quot; in &quot;)" />
    <mutant id="mutant_474" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" to="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" />
    <mutant id="mutant_475" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" to="&quot; in &quot;" />
    <mutant id="mutant_476" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" to="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) - &quot; in &quot;)" />
    <mutant id="mutant_2019" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)" to="((context.modulus) + 1) - (Base64.BYTES_PER_ENCODED_BLOCK)" />
    <mutant id="mutant_470" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" to="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" />
    <mutant id="mutant_471" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" to="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) % &quot; in &quot;)" />
    <mutant id="mutant_2017" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)" to="Base64.BYTES_PER_ENCODED_BLOCK" />
    <mutant id="mutant_472" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" to="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) / &quot; in &quot;)" />
    <mutant id="mutant_2018" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)" to="((context.modulus) + 1) / (Base64.BYTES_PER_ENCODED_BLOCK)" />
    <mutant id="mutant_488" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(&quot;Malformed rule statement split into &quot; - (parts.length))" />
    <mutant id="mutant_489" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) - &quot; parts: &quot;)" />
    <mutant id="mutant_2095" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" to="BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR" />
    <mutant id="mutant_2096" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" to="(context.buffer.length) % (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" />
    <mutant id="mutant_2093" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.pos) + size)" to="((context.pos) / size)" />
    <mutant id="mutant_2094" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.pos) + size)" to="(context.pos)" />
    <mutant id="mutant_2091" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.pos) + size)" to="((context.pos) * size)" />
    <mutant id="mutant_2092" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.pos) + size)" to="((context.pos) - size)" />
    <mutant id="mutant_2090" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.pos) + size)" to="size" />
    <mutant id="mutant_2088" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(context.pos) - (context.readPos)" to="(context.pos) % (context.readPos)" />
    <mutant id="mutant_2089" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.pos) + size)" to="((context.pos) % size)" />
    <mutant id="mutant_2086" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(context.pos) - (context.readPos)" to="(context.pos) / (context.readPos)" />
    <mutant id="mutant_2087" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(context.pos) - (context.readPos)" to="(context.pos) * (context.readPos)" />
    <mutant id="mutant_484" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="&quot;Malformed rule statement split into &quot;" />
    <mutant id="mutant_485" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(&quot;Malformed rule statement split into &quot; / (parts.length))" />
    <mutant id="mutant_486" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(&quot;Malformed rule statement split into &quot; * (parts.length))" />
    <mutant id="mutant_487" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(parts.length)" />
    <mutant id="mutant_480" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) * location)" />
    <mutant id="mutant_481" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) / location)" />
    <mutant id="mutant_482" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" />
    <mutant id="mutant_483" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(&quot;Malformed rule statement split into &quot; % (parts.length))" />
    <mutant id="mutant_499" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) - rawLine)" />
    <mutant id="mutant_2084" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(context.pos) - (context.readPos)" to="context.pos" />
    <mutant id="mutant_2085" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(context.pos) - (context.readPos)" to="(context.pos) + (context.readPos)" />
    <mutant id="mutant_2082" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize) * encodedBlockSize" to="(lineLength / encodedBlockSize) - encodedBlockSize" />
    <mutant id="mutant_2083" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(context.pos) - (context.readPos)" to="context.readPos" />
    <mutant id="mutant_2080" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize) * encodedBlockSize" to="(lineLength / encodedBlockSize) % encodedBlockSize" />
    <mutant id="mutant_2081" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize) * encodedBlockSize" to="encodedBlockSize" />
    <mutant id="mutant_2079" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize) * encodedBlockSize" to="lineLength / encodedBlockSize" />
    <mutant id="mutant_490" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="&quot; parts: &quot;" />
    <mutant id="mutant_2077" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize) * encodedBlockSize" to="(lineLength / encodedBlockSize) / encodedBlockSize" />
    <mutant id="mutant_2078" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize) * encodedBlockSize" to="(lineLength / encodedBlockSize) + encodedBlockSize" />
    <mutant id="mutant_2075" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize)" to="lineLength" />
    <mutant id="mutant_2076" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize)" to="(lineLength % encodedBlockSize)" />
    <mutant id="mutant_495" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) % rawLine)" />
    <mutant id="mutant_496" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" />
    <mutant id="mutant_497" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) * rawLine)" />
    <mutant id="mutant_498" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) / rawLine)" />
    <mutant id="mutant_491" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(&quot;Malformed rule statement split into &quot; + (parts.length))" />
    <mutant id="mutant_492" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) * &quot; parts: &quot;)" />
    <mutant id="mutant_493" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) / &quot; parts: &quot;)" />
    <mutant id="mutant_494" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) % &quot; parts: &quot;)" />
    <mutant id="mutant_2073" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize)" to="encodedBlockSize" />
    <mutant id="mutant_2074" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize)" to="(lineLength + encodedBlockSize)" />
    <mutant id="mutant_2071" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize)" to="(lineLength - encodedBlockSize)" />
    <mutant id="mutant_2072" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize)" to="(lineLength * encodedBlockSize)" />
    <mutant id="mutant_2070" viable="false" in="org.apache.commons.codec.binary.BaseNCodec$Context.toString()" from="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" to="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; - &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" />
    <mutant id="mutant_2068" viable="false" in="org.apache.commons.codec.binary.BaseNCodec$Context.toString()" from="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" to="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; / &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" />
    <mutant id="mutant_2069" viable="true" in="org.apache.commons.codec.binary.BaseNCodec$Context.toString()" from="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" to="&quot;modulus=%s, pos=%s, readPos=%s]&quot;" />
    <mutant id="mutant_2066" viable="false" in="org.apache.commons.codec.binary.BaseNCodec$Context.toString()" from="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" to="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; % &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" />
    <mutant id="mutant_2067" viable="false" in="org.apache.commons.codec.binary.BaseNCodec$Context.toString()" from="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" to="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; * &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" />
    <mutant id="mutant_2064" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; 8) + b" to="((context.ibitWorkArea) &lt;&lt; 8) - b" />
    <mutant id="mutant_2065" viable="true" in="org.apache.commons.codec.binary.BaseNCodec$Context.toString()" from="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" to="&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot;" />
    <mutant id="mutant_2062" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; 8) + b" to="(context.ibitWorkArea) &lt;&lt; 8" />
    <mutant id="mutant_2063" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; 8) + b" to="b" />
    <mutant id="mutant_2060" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; 8) + b" to="((context.ibitWorkArea) &lt;&lt; 8) / b" />
    <mutant id="mutant_2061" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; 8) + b" to="((context.ibitWorkArea) &lt;&lt; 8) * b" />
    <mutant id="mutant_2059" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; 8) + b" to="((context.ibitWorkArea) &lt;&lt; 8) % b" />
    <mutant id="mutant_2057" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)" to="(context.modulus) + 1" />
    <mutant id="mutant_2058" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)" to="Base64.BYTES_PER_UNENCODED_BLOCK" />
    <mutant id="mutant_2055" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)" to="((context.modulus) + 1) * (Base64.BYTES_PER_UNENCODED_BLOCK)" />
    <mutant id="mutant_2056" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)" to="((context.modulus) + 1) / (Base64.BYTES_PER_UNENCODED_BLOCK)" />
    <mutant id="mutant_2053" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)" to="((context.modulus) + 1) - (Base64.BYTES_PER_UNENCODED_BLOCK)" />
    <mutant id="mutant_2054" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)" to="((context.modulus) + 1) + (Base64.BYTES_PER_UNENCODED_BLOCK)" />
    <mutant id="mutant_2099" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" to="(context.buffer.length) / (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" />
    <mutant id="mutant_2097" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" to="(context.buffer.length) - (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" />
    <mutant id="mutant_2098" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" to="context.buffer.length" />
    <mutant id="mutant_1630" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="(index * (test.length()))" />
    <mutant id="mutant_1631" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="index" />
    <mutant id="mutant_1638" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="((index + (test.length())) - 1)" to="(index + (test.length()))" />
    <mutant id="mutant_1639" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="test.length()" />
    <mutant id="mutant_1636" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="((index + (test.length())) - 1)" to="((index + (test.length())) * 1)" />
    <mutant id="mutant_1637" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="((index + (test.length())) - 1)" to="((index + (test.length())) / 1)" />
    <mutant id="mutant_1634" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="((index + (test.length())) - 1)" to="1" />
    <mutant id="mutant_1635" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="((index + (test.length())) - 1)" to="((index + (test.length())) % 1)" />
    <mutant id="mutant_1632" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="(index / (test.length()))" />
    <mutant id="mutant_1633" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="((index + (test.length())) - 1)" to="((index + (test.length())) + 1)" />
    <mutant id="mutant_1629" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="(index - (test.length()))" />
    <mutant id="mutant_1620" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1627" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="(test.length())" />
    <mutant id="mutant_1628" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="(index % (test.length()))" />
    <mutant id="mutant_1625" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index - 1)" to="index" />
    <mutant id="mutant_1626" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_1623" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_1624" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_1621" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index - 1)" to="1" />
    <mutant id="mutant_1622" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_1618" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1619" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index + 1)" to="index" />
    <mutant id="mutant_1616" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1617" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1614" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="((string.length()) - 1)" to="((string.length()) % 1)" />
    <mutant id="mutant_1615" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index + 1)" to="1" />
    <mutant id="mutant_1612" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="((string.length()) - 1)" to="(string.length())" />
    <mutant id="mutant_1613" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="((string.length()) - 1)" to="((string.length()) / 1)" />
    <mutant id="mutant_1610" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="((string.length()) - 1)" to="((string.length()) * 1)" />
    <mutant id="mutant_1611" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="((string.length()) - 1)" to="((string.length()) + 1)" />
    <mutant id="mutant_1609" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="((string.length()) - 1)" to="1" />
    <mutant id="mutant_1607" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1)" to="(n * 1)" />
    <mutant id="mutant_1608" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1)" to="(n % 1)" />
    <mutant id="mutant_1605" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1)" to="(n / 1)" />
    <mutant id="mutant_1606" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1)" to="n" />
    <mutant id="mutant_1603" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1)" to="(n - 1)" />
    <mutant id="mutant_1604" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1)" to="1" />
    <mutant id="mutant_1601" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)" from="firstLetter + name" to="firstLetter / name" />
    <mutant id="mutant_1602" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)" from="firstLetter + name" to="firstLetter % name" />
    <mutant id="mutant_1600" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)" from="firstLetter + name" to="firstLetter * name" />
    <mutant id="mutant_800" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_801" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_802" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_803" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_808" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_809" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_804" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_805" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_806" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_807" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1674" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n % 1)" />
    <mutant id="mutant_2521" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) % &quot; cannot be encoded using Q codec&quot;)" />
    <mutant id="mutant_1675" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n - 1)" />
    <mutant id="mutant_2522" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * &quot; cannot be encoded using Q codec&quot;)" />
    <mutant id="mutant_1672" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="n" />
    <mutant id="mutant_1673" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n * 1)" />
    <mutant id="mutant_2520" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_1670" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="1" />
    <mutant id="mutant_1671" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n / 1)" />
    <mutant id="mutant_2529" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="((u &lt;&lt; 4) % l)" />
    <mutant id="mutant_2527" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="((u &lt;&lt; 4) * l)" />
    <mutant id="mutant_2528" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="l" />
    <mutant id="mutant_1678" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="n" />
    <mutant id="mutant_2525" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;)" to="&quot; cannot be encoded using Q codec&quot;" />
    <mutant id="mutant_1679" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n * 1)" />
    <mutant id="mutant_2526" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;)" to="(&quot;Objects of type &quot; + (obj.getClass().getName()))" />
    <mutant id="mutant_1676" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="1" />
    <mutant id="mutant_2523" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) / &quot; cannot be encoded using Q codec&quot;)" />
    <mutant id="mutant_1677" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n / 1)" />
    <mutant id="mutant_2524" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - &quot; cannot be encoded using Q codec&quot;)" />
    <mutant id="mutant_811" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_812" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_813" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_814" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_810" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_819" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_815" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_816" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_817" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_818" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1663" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) / 1)" />
    <mutant id="mutant_2510" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * &quot; cannot be decoded using Q codec&quot;)" />
    <mutant id="mutant_1664" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="1" />
    <mutant id="mutant_2511" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) % &quot; cannot be decoded using Q codec&quot;)" />
    <mutant id="mutant_1661" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) + 1)" />
    <mutant id="mutant_1662" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="inwd.length" />
    <mutant id="mutant_1660" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) * 1)" />
    <mutant id="mutant_2518" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_2519" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_1669" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n - 1)" />
    <mutant id="mutant_2516" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_2517" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="&quot;Objects of type &quot;" />
    <mutant id="mutant_1667" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) + 1)" />
    <mutant id="mutant_2514" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;)" to="(&quot;Objects of type &quot; + (obj.getClass().getName()))" />
    <mutant id="mutant_1668" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="inwd.length" />
    <mutant id="mutant_2515" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(obj.getClass().getName())" />
    <mutant id="mutant_1665" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) % 1)" />
    <mutant id="mutant_2512" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;)" to="&quot; cannot be decoded using Q codec&quot;" />
    <mutant id="mutant_1666" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) * 1)" />
    <mutant id="mutant_2513" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) / &quot; cannot be decoded using Q codec&quot;)" />
    <mutant id="mutant_822" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_823" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_824" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_825" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_820" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2509" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - &quot; cannot be decoded using Q codec&quot;)" />
    <mutant id="mutant_821" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_826" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_827" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_828" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_829" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1652" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="1" />
    <mutant id="mutant_1653" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) % 1)" />
    <mutant id="mutant_2500" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;)" to="((&quot;Objects of type &quot; + (value.getClass().getName())) - &quot; cannot be encoded using BCodec&quot;)" />
    <mutant id="mutant_1650" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="inwd.length" />
    <mutant id="mutant_1651" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) / 1)" />
    <mutant id="mutant_2507" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_2508" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_1658" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="1" />
    <mutant id="mutant_2505" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="&quot;Objects of type &quot;" />
    <mutant id="mutant_1659" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) % 1)" />
    <mutant id="mutant_2506" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_1656" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="inwd.length" />
    <mutant id="mutant_2503" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(obj.getClass().getName())" />
    <mutant id="mutant_1657" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) / 1)" />
    <mutant id="mutant_2504" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_1654" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) * 1)" />
    <mutant id="mutant_2501" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;)" to="((&quot;Objects of type &quot; + (value.getClass().getName())) / &quot; cannot be encoded using BCodec&quot;)" />
    <mutant id="mutant_1655" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) + 1)" />
    <mutant id="mutant_2502" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;)" to="(&quot;Objects of type &quot; + (value.getClass().getName()))" />
    <mutant id="mutant_833" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_834" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_835" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_836" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_830" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_831" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_832" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_837" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="1" />
    <mutant id="mutant_838" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_839" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_1641" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="(index - (test.length()))" />
    <mutant id="mutant_1642" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="(index * (test.length()))" />
    <mutant id="mutant_1640" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="(index % (test.length()))" />
    <mutant id="mutant_1649" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) + 1)" />
    <mutant id="mutant_1647" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) % 1)" />
    <mutant id="mutant_1648" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) * 1)" />
    <mutant id="mutant_1645" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="((inwd.length) / 1)" />
    <mutant id="mutant_1646" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="1" />
    <mutant id="mutant_1643" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="index" />
    <mutant id="mutant_1644" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="(index / (test.length()))" />
    <mutant id="mutant_844" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_845" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_846" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_847" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="index" />
    <mutant id="mutant_840" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_841" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="index" />
    <mutant id="mutant_842" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_843" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="1" />
    <mutant id="mutant_848" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_849" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1234" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2565" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 2)" to="((bytes.length) * 2)" />
    <mutant id="mutant_1235" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2566" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 2)" to="((bytes.length) / 2)" />
    <mutant id="mutant_1232" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2563" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 2)" to="2" />
    <mutant id="mutant_1233" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="2" />
    <mutant id="mutant_2564" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 2)" to="((bytes.length) % 2)" />
    <mutant id="mutant_1230" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2561" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(bytes.length) - 2" to="(bytes.length) + 2" />
    <mutant id="mutant_1231" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_2562" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(bytes.length) - 2" to="bytes.length" />
    <mutant id="mutant_2560" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(bytes.length) - 2" to="(bytes.length) / 2" />
    <mutant id="mutant_1238" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2569" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="256 + b" to="256 / b" />
    <mutant id="mutant_1239" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="1" />
    <mutant id="mutant_1236" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2567" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 2)" to="((bytes.length) + 2)" />
    <mutant id="mutant_1237" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index" />
    <mutant id="mutant_2568" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 2)" to="(bytes.length)" />
    <mutant id="mutant_855" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="1" />
    <mutant id="mutant_856" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_857" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_858" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_851" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_852" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_853" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_854" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_859" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="index" />
    <mutant id="mutant_1223" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index / 2)" />
    <mutant id="mutant_2554" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="((QuotedPrintableCodec.SAFE_LENGTH) / 2)" />
    <mutant id="mutant_1224" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="index" />
    <mutant id="mutant_2555" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="((QuotedPrintableCodec.SAFE_LENGTH) * 2)" />
    <mutant id="mutant_1221" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="2" />
    <mutant id="mutant_2552" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="2" />
    <mutant id="mutant_1222" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index * 2)" />
    <mutant id="mutant_2553" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="(QuotedPrintableCodec.SAFE_LENGTH)" />
    <mutant id="mutant_2550" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 5)" to="((QuotedPrintableCodec.SAFE_LENGTH) + 5)" />
    <mutant id="mutant_1220" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index % 3)" />
    <mutant id="mutant_2551" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="((QuotedPrintableCodec.SAFE_LENGTH) % 2)" />
    <mutant id="mutant_1229" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_850" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1227" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_2558" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(bytes.length) - 2" to="(bytes.length) % 2" />
    <mutant id="mutant_1228" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2559" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(bytes.length) - 2" to="(bytes.length) * 2" />
    <mutant id="mutant_1225" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index + 2)" />
    <mutant id="mutant_2556" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="((QuotedPrintableCodec.SAFE_LENGTH) + 2)" />
    <mutant id="mutant_1226" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index % 2)" />
    <mutant id="mutant_2557" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(bytes.length) - 2" to="2" />
    <mutant id="mutant_866" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_867" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_868" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_869" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_862" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_863" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_864" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_865" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1212" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_1696" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="n" />
    <mutant id="mutant_2543" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="bytes.length" />
    <mutant id="mutant_1213" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_1697" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n * 1)" />
    <mutant id="mutant_2544" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="((bytes.length) + 3)" />
    <mutant id="mutant_1210" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_1694" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="1" />
    <mutant id="mutant_2541" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="((bytes.length) * 3)" />
    <mutant id="mutant_1211" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_1695" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n / 1)" />
    <mutant id="mutant_2542" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="((bytes.length) / 3)" />
    <mutant id="mutant_1692" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="(n % 2)" />
    <mutant id="mutant_1693" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n - 1)" />
    <mutant id="mutant_2540" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="3" />
    <mutant id="mutant_1690" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="n" />
    <mutant id="mutant_1691" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="(n * 2)" />
    <mutant id="mutant_860" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_1218" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index / 3)" />
    <mutant id="mutant_2549" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 5)" to="((QuotedPrintableCodec.SAFE_LENGTH) / 5)" />
    <mutant id="mutant_861" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1219" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index * 3)" />
    <mutant id="mutant_1216" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index + 3)" />
    <mutant id="mutant_2547" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 5)" to="(QuotedPrintableCodec.SAFE_LENGTH)" />
    <mutant id="mutant_1217" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="index" />
    <mutant id="mutant_2548" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 5)" to="5" />
    <mutant id="mutant_1214" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_1698" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n % 1)" />
    <mutant id="mutant_2545" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 5)" to="((QuotedPrintableCodec.SAFE_LENGTH) % 5)" />
    <mutant id="mutant_1215" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="3" />
    <mutant id="mutant_1699" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n - 1)" />
    <mutant id="mutant_2546" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 5)" to="((QuotedPrintableCodec.SAFE_LENGTH) * 5)" />
    <mutant id="mutant_877" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_878" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_879" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_873" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_874" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_875" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_876" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1201" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_1685" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n * 1)" />
    <mutant id="mutant_2532" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="((u &lt;&lt; 4) - l)" />
    <mutant id="mutant_1202" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_1686" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n % 1)" />
    <mutant id="mutant_2533" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="((bytes.length) % 3)" />
    <mutant id="mutant_1683" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n / 1)" />
    <mutant id="mutant_2530" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="(u &lt;&lt; 4)" />
    <mutant id="mutant_1200" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_1684" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="n" />
    <mutant id="mutant_2531" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="((u &lt;&lt; 4) / l)" />
    <mutant id="mutant_1681" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n - 1)" />
    <mutant id="mutant_1682" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="1" />
    <mutant id="mutant_1680" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="(n % 1)" />
    <mutant id="mutant_1209" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="(value.length())" />
    <mutant id="mutant_870" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_871" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1207" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_2538" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="((bytes.length) + 3)" />
    <mutant id="mutant_872" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1208" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_2539" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="((bytes.length) % 3)" />
    <mutant id="mutant_1205" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_1689" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="2" />
    <mutant id="mutant_2536" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="((bytes.length) / 3)" />
    <mutant id="mutant_1206" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_2537" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="(bytes.length)" />
    <mutant id="mutant_1203" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_1687" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="(n / 2)" />
    <mutant id="mutant_2534" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="3" />
    <mutant id="mutant_1204" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_1688" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="(n - 2)" />
    <mutant id="mutant_2535" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="((bytes.length) * 3)" />
    <mutant id="mutant_404" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((text.length()) * 2)" to="((text.length()) % 2)" />
    <mutant id="mutant_888" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_405" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((text.length()) * 2)" to="((text.length()) - 2)" />
    <mutant id="mutant_889" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_406" viable="false" in="?" from="(&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE))" to="&quot;Unable to load resource: &quot;" />
    <mutant id="mutant_407" viable="false" in="?" from="(&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE))" to="(&quot;Unable to load resource: &quot; % (DaitchMokotoffSoundex.RESOURCE_FILE))" />
    <mutant id="mutant_400" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((text.length()) * 2)" to="text.length()" />
    <mutant id="mutant_884" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_401" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((text.length()) * 2)" to="2" />
    <mutant id="mutant_885" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_402" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((text.length()) * 2)" to="((text.length()) / 2)" />
    <mutant id="mutant_886" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_403" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((text.length()) * 2)" to="((text.length()) + 2)" />
    <mutant id="mutant_887" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_1281" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="((value.length()) - 1)" to="(value.length())" />
    <mutant id="mutant_1282" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_1280" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_408" viable="false" in="?" from="(&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE))" to="(&quot;Unable to load resource: &quot; - (DaitchMokotoffSoundex.RESOURCE_FILE))" />
    <mutant id="mutant_409" viable="false" in="?" from="(&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE))" to="DaitchMokotoffSoundex.RESOURCE_FILE" />
    <mutant id="mutant_1278" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2125" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))" to="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) + ((long)(encodedBlockSize))" />
    <mutant id="mutant_1279" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_2126" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))" to="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) / ((long)(encodedBlockSize))" />
    <mutant id="mutant_1276" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2123" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize))" to="((((pArray.length) + (unencodedBlockSize)) - 1) - (unencodedBlockSize))" />
    <mutant id="mutant_1277" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_2124" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize))" to="(((pArray.length) + (unencodedBlockSize)) - 1)" />
    <mutant id="mutant_1274" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2121" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize))" to="((((pArray.length) + (unencodedBlockSize)) - 1) + (unencodedBlockSize))" />
    <mutant id="mutant_1275" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_2122" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize))" to="((((pArray.length) + (unencodedBlockSize)) - 1) % (unencodedBlockSize))" />
    <mutant id="mutant_1272" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_1273" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_2120" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize))" to="(unencodedBlockSize)" />
    <mutant id="mutant_880" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_881" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_882" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_883" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_2129" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))" to="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) - ((long)(encodedBlockSize))" />
    <mutant id="mutant_2127" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))" to="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) % ((long)(encodedBlockSize))" />
    <mutant id="mutant_2128" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))" to="(((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)" />
    <mutant id="mutant_415" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$1.compare(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule,org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule)" from="(rule2.getPatternLength()) - (rule1.getPatternLength())" to="rule2.getPatternLength()" />
    <mutant id="mutant_899" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="index" />
    <mutant id="mutant_416" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$1.compare(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule,org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule)" from="(rule2.getPatternLength()) - (rule1.getPatternLength())" to="(rule2.getPatternLength()) * (rule1.getPatternLength())" />
    <mutant id="mutant_417" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="str.length()" />
    <mutant id="mutant_418" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="1" />
    <mutant id="mutant_411" viable="false" in="?" from="(&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE))" to="(&quot;Unable to load resource: &quot; / (DaitchMokotoffSoundex.RESOURCE_FILE))" />
    <mutant id="mutant_895" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index + 2)" />
    <mutant id="mutant_412" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$1.compare(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule,org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule)" from="(rule2.getPatternLength()) - (rule1.getPatternLength())" to="(rule2.getPatternLength()) + (rule1.getPatternLength())" />
    <mutant id="mutant_896" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index % 2)" />
    <mutant id="mutant_413" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$1.compare(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule,org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule)" from="(rule2.getPatternLength()) - (rule1.getPatternLength())" to="(rule2.getPatternLength()) / (rule1.getPatternLength())" />
    <mutant id="mutant_897" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="3" />
    <mutant id="mutant_414" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$1.compare(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule,org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule)" from="(rule2.getPatternLength()) - (rule1.getPatternLength())" to="(rule2.getPatternLength()) % (rule1.getPatternLength())" />
    <mutant id="mutant_898" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="(index + 3)" />
    <mutant id="mutant_1270" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_1271" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_419" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) / 1)" />
    <mutant id="mutant_1267" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_2114" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((pArray.length) + (unencodedBlockSize)) - 1)" to="1" />
    <mutant id="mutant_2598" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_1268" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2115" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((pArray.length) + (unencodedBlockSize)) - 1)" to="(((pArray.length) + (unencodedBlockSize)) * 1)" />
    <mutant id="mutant_2599" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - &quot; cannot be quoted-printable encoded&quot;)" />
    <mutant id="mutant_1265" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2112" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((pArray.length) + (unencodedBlockSize))" to="((pArray.length) % (unencodedBlockSize))" />
    <mutant id="mutant_2596" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_1266" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2113" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((pArray.length) + (unencodedBlockSize)) - 1)" to="(((pArray.length) + (unencodedBlockSize)) % 1)" />
    <mutant id="mutant_2597" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_1263" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2110" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((pArray.length) + (unencodedBlockSize))" to="(pArray.length)" />
    <mutant id="mutant_2594" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_1264" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2111" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((pArray.length) + (unencodedBlockSize))" to="((pArray.length) / (unencodedBlockSize))" />
    <mutant id="mutant_2595" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="&quot;Objects of type &quot;" />
    <mutant id="mutant_1261" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="index" />
    <mutant id="mutant_2592" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;)" to="(&quot;Objects of type &quot; + (obj.getClass().getName()))" />
    <mutant id="mutant_1262" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_2593" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(obj.getClass().getName())" />
    <mutant id="mutant_891" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="2" />
    <mutant id="mutant_892" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index * 2)" />
    <mutant id="mutant_893" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index / 2)" />
    <mutant id="mutant_410" viable="false" in="?" from="(&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE))" to="(&quot;Unable to load resource: &quot; * (DaitchMokotoffSoundex.RESOURCE_FILE))" />
    <mutant id="mutant_894" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="index" />
    <mutant id="mutant_2118" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((pArray.length) + (unencodedBlockSize)) - 1)" to="(((pArray.length) + (unencodedBlockSize)) / 1)" />
    <mutant id="mutant_2119" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize))" to="((((pArray.length) + (unencodedBlockSize)) - 1) * (unencodedBlockSize))" />
    <mutant id="mutant_1269" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_2116" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((pArray.length) + (unencodedBlockSize)) - 1)" to="(((pArray.length) + (unencodedBlockSize)) + 1)" />
    <mutant id="mutant_890" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_2117" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((pArray.length) + (unencodedBlockSize)) - 1)" to="((pArray.length) + (unencodedBlockSize))" />
    <mutant id="mutant_426" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(rule.getPatternLength()) - 1" to="rule.getPatternLength()" />
    <mutant id="mutant_427" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(rule.getPatternLength()) - 1" to="(rule.getPatternLength()) / 1" />
    <mutant id="mutant_428" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(rule.getPatternLength()) - 1" to="(rule.getPatternLength()) + 1" />
    <mutant id="mutant_429" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement split into &quot; + (parts.length))" to="&quot;Malformed folding statement split into &quot;" />
    <mutant id="mutant_422" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) * 1)" />
    <mutant id="mutant_423" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(rule.getPatternLength()) - 1" to="1" />
    <mutant id="mutant_424" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(rule.getPatternLength()) - 1" to="(rule.getPatternLength()) % 1" />
    <mutant id="mutant_425" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(rule.getPatternLength()) - 1" to="(rule.getPatternLength()) * 1" />
    <mutant id="mutant_2590" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) / &quot; cannot be quoted-printable decoded&quot;)" />
    <mutant id="mutant_1260" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_2591" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * &quot; cannot be quoted-printable decoded&quot;)" />
    <mutant id="mutant_1256" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2103" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - (context.readPos)" to="(context.pos) + (context.readPos)" />
    <mutant id="mutant_2587" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - &quot; cannot be quoted-printable decoded&quot;)" />
    <mutant id="mutant_1257" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="1" />
    <mutant id="mutant_2104" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - (context.readPos)" to="(context.pos) / (context.readPos)" />
    <mutant id="mutant_2588" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;)" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) % &quot; cannot be quoted-printable decoded&quot;)" />
    <mutant id="mutant_1254" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2101" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - (context.readPos)" to="context.readPos" />
    <mutant id="mutant_2585" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; % (obj.getClass().getName()))" />
    <mutant id="mutant_1255" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_2102" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - (context.readPos)" to="context.pos" />
    <mutant id="mutant_2586" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; / (obj.getClass().getName()))" />
    <mutant id="mutant_1252" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2583" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="&quot;Objects of type &quot;" />
    <mutant id="mutant_1253" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2100" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" to="(context.buffer.length) + (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" />
    <mutant id="mutant_2584" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; - (obj.getClass().getName()))" />
    <mutant id="mutant_1250" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2581" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(obj.getClass().getName())" />
    <mutant id="mutant_1251" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2582" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="(&quot;Objects of type &quot; * (obj.getClass().getName()))" />
    <mutant id="mutant_420" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) + 1)" />
    <mutant id="mutant_2109" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((pArray.length) + (unencodedBlockSize))" to="((pArray.length) - (unencodedBlockSize))" />
    <mutant id="mutant_421" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) % 1)" />
    <mutant id="mutant_2107" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((pArray.length) + (unencodedBlockSize))" to="(unencodedBlockSize)" />
    <mutant id="mutant_2108" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((pArray.length) + (unencodedBlockSize))" to="((pArray.length) * (unencodedBlockSize))" />
    <mutant id="mutant_1258" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_2105" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - (context.readPos)" to="(context.pos) * (context.readPos)" />
    <mutant id="mutant_2589" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;)" to="&quot; cannot be quoted-printable decoded&quot;" />
    <mutant id="mutant_1259" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_2106" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - (context.readPos)" to="(context.pos) % (context.readPos)" />
    <mutant id="mutant_437" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed folding statement split into &quot; + (parts.length)) % &quot; parts: &quot;)" />
    <mutant id="mutant_438" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed folding statement split into &quot; + (parts.length)) * &quot; parts: &quot;)" />
    <mutant id="mutant_439" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed folding statement split into &quot; + (parts.length)) / &quot; parts: &quot;)" />
    <mutant id="mutant_433" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement split into &quot; + (parts.length))" to="(parts.length)" />
    <mutant id="mutant_434" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement split into &quot; + (parts.length))" to="(&quot;Malformed folding statement split into &quot; % (parts.length))" />
    <mutant id="mutant_435" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="&quot; parts: &quot;" />
    <mutant id="mutant_436" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed folding statement split into &quot; + (parts.length)) - &quot; parts: &quot;)" />
    <mutant id="mutant_2580" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="256 + b" to="b" />
    <mutant id="mutant_1245" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2576" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="256 + b" to="256" />
    <mutant id="mutant_1246" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2577" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="256 + b" to="256 - b" />
    <mutant id="mutant_1243" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index" />
    <mutant id="mutant_2574" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="256 + b" to="b" />
    <mutant id="mutant_1244" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2575" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="256 + b" to="256 / b" />
    <mutant id="mutant_1241" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index - 1" />
    <mutant id="mutant_2572" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="256 + b" to="256 * b" />
    <mutant id="mutant_1242" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2573" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="256 + b" to="256 % b" />
    <mutant id="mutant_2570" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="256 + b" to="256" />
    <mutant id="mutant_1240" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2571" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="256 + b" to="256 - b" />
    <mutant id="mutant_430" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement split into &quot; + (parts.length))" to="(&quot;Malformed folding statement split into &quot; / (parts.length))" />
    <mutant id="mutant_431" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement split into &quot; + (parts.length))" to="(&quot;Malformed folding statement split into &quot; * (parts.length))" />
    <mutant id="mutant_432" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement split into &quot; + (parts.length))" to="(&quot;Malformed folding statement split into &quot; - (parts.length))" />
    <mutant id="mutant_1249" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1247" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2578" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="256 + b" to="256 * b" />
    <mutant id="mutant_1248" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2579" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="256 + b" to="256 % b" />
    <mutant id="mutant_327" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="((ph.length()) - 1)" to="((ph.length()) * 1)" />
    <mutant id="mutant_328" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(regex.length()) - 1" to="regex.length()" />
    <mutant id="mutant_329" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(regex.length()) - 1" to="1" />
    <mutant id="mutant_323" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="((ph.length()) - 1)" to="1" />
    <mutant id="mutant_324" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="((ph.length()) - 1)" to="((ph.length()) / 1)" />
    <mutant id="mutant_325" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="((ph.length()) - 1)" to="((ph.length()) + 1)" />
    <mutant id="mutant_326" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="((ph.length()) - 1)" to="((ph.length()) % 1)" />
    <mutant id="mutant_1083" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_1084" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_1081" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1082" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1080" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1078" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1079" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1076" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1077" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1074" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1075" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_320" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="((ph.length()) - 1)" to="((ph.length()) % 1)" />
    <mutant id="mutant_321" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="((ph.length()) - 1)" to="((ph.length()) * 1)" />
    <mutant id="mutant_322" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="((ph.length()) - 1)" to="ph.length()" />
    <mutant id="mutant_338" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) - 1)" to="((content.length()) % 1)" />
    <mutant id="mutant_339" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) - 1)" to="((content.length()) * 1)" />
    <mutant id="mutant_334" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) - 1)" to="content.length()" />
    <mutant id="mutant_335" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) - 1)" to="1" />
    <mutant id="mutant_336" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) - 1)" to="((content.length()) / 1)" />
    <mutant id="mutant_337" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) - 1)" to="((content.length()) + 1)" />
    <mutant id="mutant_1072" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1073" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1070" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1071" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1069" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1067" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2398" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(rounds - 1)" to="(rounds / 1)" />
    <mutant id="mutant_1068" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2399" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(rounds - 1)" to="(rounds * 1)" />
    <mutant id="mutant_1065" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2396" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(rounds - 1)" to="rounds" />
    <mutant id="mutant_1066" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2397" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(rounds - 1)" to="(rounds % 1)" />
    <mutant id="mutant_1063" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_2394" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - cp)" to="(saltLen + cp)" />
    <mutant id="mutant_1064" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2395" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(rounds - 1)" to="1" />
    <mutant id="mutant_330" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(regex.length()) - 1" to="(regex.length()) / 1" />
    <mutant id="mutant_331" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(regex.length()) - 1" to="(regex.length()) + 1" />
    <mutant id="mutant_332" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(regex.length()) - 1" to="(regex.length()) % 1" />
    <mutant id="mutant_333" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(regex.length()) - 1" to="(regex.length()) * 1" />
    <mutant id="mutant_349" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="txt + (Caverphone1.SIX_1)" to="txt % (Caverphone1.SIX_1)" />
    <mutant id="mutant_345" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) - 1)" to="((input.length()) % 1)" />
    <mutant id="mutant_346" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="txt + (Caverphone1.SIX_1)" to="txt - (Caverphone1.SIX_1)" />
    <mutant id="mutant_347" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="txt + (Caverphone1.SIX_1)" to="txt" />
    <mutant id="mutant_348" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="txt + (Caverphone1.SIX_1)" to="Caverphone1.SIX_1" />
    <mutant id="mutant_1061" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2392" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - cp)" to="(saltLen / cp)" />
    <mutant id="mutant_1062" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2393" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - cp)" to="cp" />
    <mutant id="mutant_2390" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - cp)" to="(saltLen * cp)" />
    <mutant id="mutant_1060" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2391" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - cp)" to="(saltLen % cp)" />
    <mutant id="mutant_1058" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_2389" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - cp)" to="saltLen" />
    <mutant id="mutant_1059" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1056" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_2387" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - blocksize)" to="(saltLen * blocksize)" />
    <mutant id="mutant_1057" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="index" />
    <mutant id="mutant_2388" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - blocksize)" to="(saltLen % blocksize)" />
    <mutant id="mutant_1054" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_2385" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - blocksize)" to="(saltLen + blocksize)" />
    <mutant id="mutant_1055" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_2386" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - blocksize)" to="blocksize" />
    <mutant id="mutant_1052" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2383" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - blocksize)" to="saltLen" />
    <mutant id="mutant_1053" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="1" />
    <mutant id="mutant_2384" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - blocksize)" to="(saltLen / blocksize)" />
    <mutant id="mutant_341" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) - 1)" to="input.length()" />
    <mutant id="mutant_342" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) - 1)" to="((input.length()) / 1)" />
    <mutant id="mutant_343" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) - 1)" to="((input.length()) + 1)" />
    <mutant id="mutant_344" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) - 1)" to="((input.length()) * 1)" />
    <mutant id="mutant_340" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) - 1)" to="1" />
    <mutant id="mutant_356" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="txt + (Caverphone2.TEN_1)" to="txt / (Caverphone2.TEN_1)" />
    <mutant id="mutant_357" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="txt + (Caverphone2.TEN_1)" to="txt % (Caverphone2.TEN_1)" />
    <mutant id="mutant_358" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="((data.length) - (this.length))" to="((data.length) * (this.length))" />
    <mutant id="mutant_359" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="((data.length) - (this.length))" to="((data.length) + (this.length))" />
    <mutant id="mutant_1050" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2381" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(16 + ((altResult[0]) &amp; 255))" to="(16 - ((altResult[0]) &amp; 255))" />
    <mutant id="mutant_1051" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_2382" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(16 + ((altResult[0]) &amp; 255))" to="16" />
    <mutant id="mutant_2380" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(16 + ((altResult[0]) &amp; 255))" to="(16 / ((altResult[0]) &amp; 255))" />
    <mutant id="mutant_1047" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_2378" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(16 + ((altResult[0]) &amp; 255))" to="(16 * ((altResult[0]) &amp; 255))" />
    <mutant id="mutant_1048" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2379" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(16 + ((altResult[0]) &amp; 255))" to="((altResult[0]) &amp; 255)" />
    <mutant id="mutant_1045" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_2376" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - cp)" to="cp" />
    <mutant id="mutant_1046" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2377" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(16 + ((altResult[0]) &amp; 255))" to="(16 % ((altResult[0]) &amp; 255))" />
    <mutant id="mutant_1043" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2374" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - cp)" to="(keyLen + cp)" />
    <mutant id="mutant_1044" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2375" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - cp)" to="(keyLen * cp)" />
    <mutant id="mutant_1041" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_2372" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - cp)" to="(keyLen % cp)" />
    <mutant id="mutant_1042" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2373" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - cp)" to="keyLen" />
    <mutant id="mutant_352" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="txt + (Caverphone2.TEN_1)" to="txt * (Caverphone2.TEN_1)" />
    <mutant id="mutant_353" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="txt + (Caverphone2.TEN_1)" to="txt - (Caverphone2.TEN_1)" />
    <mutant id="mutant_354" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="txt + (Caverphone2.TEN_1)" to="Caverphone2.TEN_1" />
    <mutant id="mutant_355" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="txt + (Caverphone2.TEN_1)" to="txt" />
    <mutant id="mutant_350" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="txt + (Caverphone1.SIX_1)" to="txt / (Caverphone1.SIX_1)" />
    <mutant id="mutant_1049" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_351" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="txt + (Caverphone1.SIX_1)" to="txt * (Caverphone1.SIX_1)" />
    <mutant id="mutant_367" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="(((data.length) - (this.length)) + start)" to="(((data.length) - (this.length)) - start)" />
    <mutant id="mutant_368" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="(((data.length) - (this.length)) + start)" to="start" />
    <mutant id="mutant_369" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="(((data.length) - (this.length)) + start)" to="((data.length) - (this.length))" />
    <mutant id="mutant_363" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="((data.length) - (this.length))" to="((data.length) / (this.length))" />
    <mutant id="mutant_364" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="(((data.length) - (this.length)) + start)" to="(((data.length) - (this.length)) % start)" />
    <mutant id="mutant_365" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="(((data.length) - (this.length)) + start)" to="(((data.length) - (this.length)) / start)" />
    <mutant id="mutant_366" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="(((data.length) - (this.length)) + start)" to="(((data.length) - (this.length)) * start)" />
    <mutant id="mutant_360" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="((data.length) - (this.length))" to="(data.length)" />
    <mutant id="mutant_361" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="((data.length) - (this.length))" to="(this.length)" />
    <mutant id="mutant_362" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="((data.length) - (this.length))" to="((data.length) % (this.length))" />
    <mutant id="mutant_378" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" to="(&quot;This method\'s parameter was expected to be of the type &quot; / (String.class.getName()))" />
    <mutant id="mutant_379" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" to="(String.class.getName())" />
    <mutant id="mutant_374" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos()" from="(data.length) - (length)" to="(data.length) % (length)" />
    <mutant id="mutant_375" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos()" from="(data.length) - (length)" to="(data.length) / (length)" />
    <mutant id="mutant_376" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" to="(&quot;This method\'s parameter was expected to be of the type &quot; % (String.class.getName()))" />
    <mutant id="mutant_377" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" to="(&quot;This method\'s parameter was expected to be of the type &quot; - (String.class.getName()))" />
    <mutant id="mutant_370" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos()" from="(data.length) - (length)" to="(data.length) * (length)" />
    <mutant id="mutant_371" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos()" from="(data.length) - (length)" to="(data.length) + (length)" />
    <mutant id="mutant_372" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos()" from="(data.length) - (length)" to="data.length" />
    <mutant id="mutant_373" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos()" from="(data.length) - (length)" to="length" />
    <mutant id="mutant_389" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" to="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) / (object.getClass().getName()))" />
    <mutant id="mutant_380" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" to="(&quot;This method\'s parameter was expected to be of the type &quot; * (String.class.getName()))" />
    <mutant id="mutant_1098" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_1099" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_1096" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_1097" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_385" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" to="&quot;. But actually it was of the type &quot;" />
    <mutant id="mutant_386" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" to="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) % &quot;. But actually it was of the type &quot;)" />
    <mutant id="mutant_387" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" to="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) / &quot;. But actually it was of the type &quot;)" />
    <mutant id="mutant_388" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" to="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) - (object.getClass().getName()))" />
    <mutant id="mutant_381" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" to="&quot;This method\'s parameter was expected to be of the type &quot;" />
    <mutant id="mutant_382" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" to="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) * &quot;. But actually it was of the type &quot;)" />
    <mutant id="mutant_383" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" to="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) - &quot;. But actually it was of the type &quot;)" />
    <mutant id="mutant_384" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" to="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" />
    <mutant id="mutant_1094" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_1095" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(value.length())" />
    <mutant id="mutant_1092" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_1093" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_1090" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_1091" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_390" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" to="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) % (object.getClass().getName()))" />
    <mutant id="mutant_1089" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_391" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" to="(object.getClass().getName())" />
    <mutant id="mutant_1087" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_1088" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_1085" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_1086" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_396" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;)" to="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) * &quot;.&quot;)" />
    <mutant id="mutant_397" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;)" to="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) - &quot;.&quot;)" />
    <mutant id="mutant_398" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;)" to="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) % &quot;.&quot;)" />
    <mutant id="mutant_399" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;)" to="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" />
    <mutant id="mutant_392" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" to="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) * (object.getClass().getName()))" />
    <mutant id="mutant_393" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" to="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" />
    <mutant id="mutant_394" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;)" to="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) / &quot;.&quot;)" />
    <mutant id="mutant_395" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;)" to="&quot;.&quot;" />
    <mutant id="mutant_1919" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" to="(&quot;lineSeparator must not contain base64 characters: [&quot; / sep)" />
    <mutant id="mutant_1917" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" to="&quot;lineSeparator must not contain base64 characters: [&quot;" />
    <mutant id="mutant_1918" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" to="(&quot;lineSeparator must not contain base64 characters: [&quot; % sep)" />
    <mutant id="mutant_1915" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" to="sep" />
    <mutant id="mutant_1916" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" to="(&quot;lineSeparator must not contain base64 characters: [&quot; - sep)" />
    <mutant id="mutant_1913" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; 8) + b" to="b" />
    <mutant id="mutant_1914" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; 8) + b" to="((context.lbitWorkArea) &lt;&lt; 8) * b" />
    <mutant id="mutant_1911" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; 8) + b" to="(context.lbitWorkArea) &lt;&lt; 8" />
    <mutant id="mutant_1912" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; 8) + b" to="((context.lbitWorkArea) &lt;&lt; 8) % b" />
    <mutant id="mutant_1910" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; 8) + b" to="((context.lbitWorkArea) &lt;&lt; 8) / b" />
    <mutant id="mutant_1908" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)" to="Base32.BYTES_PER_UNENCODED_BLOCK" />
    <mutant id="mutant_1909" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; 8) + b" to="((context.lbitWorkArea) &lt;&lt; 8) - b" />
    <mutant id="mutant_1906" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)" to="((context.modulus) + 1) - (Base32.BYTES_PER_UNENCODED_BLOCK)" />
    <mutant id="mutant_1907" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)" to="(context.modulus) + 1" />
    <mutant id="mutant_1904" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)" to="((context.modulus) + 1) * (Base32.BYTES_PER_UNENCODED_BLOCK)" />
    <mutant id="mutant_1905" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)" to="((context.modulus) + 1) + (Base32.BYTES_PER_UNENCODED_BLOCK)" />
    <mutant id="mutant_1902" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) % 1)" />
    <mutant id="mutant_1903" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)" to="((context.modulus) + 1) / (Base32.BYTES_PER_UNENCODED_BLOCK)" />
    <mutant id="mutant_1900" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) / 1)" />
    <mutant id="mutant_1901" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) - 1)" />
    <mutant id="mutant_1959" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen + 7)" to="(bitlen % 7)" />
    <mutant id="mutant_1950" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" to="(&quot;Input array too big, the output array would be bigger (&quot; + len)" />
    <mutant id="mutant_1957" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen + 7)" to="(bitlen * 7)" />
    <mutant id="mutant_1958" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen + 7)" to="(bitlen - 7)" />
    <mutant id="mutant_1955" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize)" to="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" />
    <mutant id="mutant_1956" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize)" to="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) % maxResultSize)" />
    <mutant id="mutant_1953" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize)" to="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) / maxResultSize)" />
    <mutant id="mutant_1954" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize)" to="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) * maxResultSize)" />
    <mutant id="mutant_1951" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize)" to="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) - maxResultSize)" />
    <mutant id="mutant_1952" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize)" to="maxResultSize" />
    <mutant id="mutant_1948" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" to="((&quot;Input array too big, the output array would be bigger (&quot; + len) * &quot;) than the specified maximum size of &quot;)" />
    <mutant id="mutant_1949" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" to="((&quot;Input array too big, the output array would be bigger (&quot; + len) / &quot;) than the specified maximum size of &quot;)" />
    <mutant id="mutant_1946" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" to="((&quot;Input array too big, the output array would be bigger (&quot; + len) % &quot;) than the specified maximum size of &quot;)" />
    <mutant id="mutant_1947" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" to="((&quot;Input array too big, the output array would be bigger (&quot; + len) - &quot;) than the specified maximum size of &quot;)" />
    <mutant id="mutant_1944" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(&quot;Input array too big, the output array would be bigger (&quot; + len)" to="(&quot;Input array too big, the output array would be bigger (&quot; % len)" />
    <mutant id="mutant_1945" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" to="&quot;) than the specified maximum size of &quot;" />
    <mutant id="mutant_1942" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(&quot;Input array too big, the output array would be bigger (&quot; + len)" to="(&quot;Input array too big, the output array would be bigger (&quot; / len)" />
    <mutant id="mutant_1943" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(&quot;Input array too big, the output array would be bigger (&quot; + len)" to="(&quot;Input array too big, the output array would be bigger (&quot; * len)" />
    <mutant id="mutant_1940" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(&quot;Input array too big, the output array would be bigger (&quot; + len)" to="(&quot;Input array too big, the output array would be bigger (&quot; - len)" />
    <mutant id="mutant_1941" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(&quot;Input array too big, the output array would be bigger (&quot; + len)" to="&quot;Input array too big, the output array would be bigger (&quot;" />
    <mutant id="mutant_1939" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(&quot;Input array too big, the output array would be bigger (&quot; + len)" to="len" />
    <mutant id="mutant_1937" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(this.encodeSize) - 1" to="this.encodeSize" />
    <mutant id="mutant_1938" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(this.encodeSize) - 1" to="(this.encodeSize) % 1" />
    <mutant id="mutant_1935" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(this.encodeSize) - 1" to="(this.encodeSize) / 1" />
    <mutant id="mutant_1936" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(this.encodeSize) - 1" to="(this.encodeSize) + 1" />
    <mutant id="mutant_1933" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(this.encodeSize) - 1" to="1" />
    <mutant id="mutant_1934" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(this.encodeSize) - 1" to="(this.encodeSize) * 1" />
    <mutant id="mutant_1931" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="lineSeparator.length" />
    <mutant id="mutant_1932" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="(Base64.BYTES_PER_ENCODED_BLOCK) / (lineSeparator.length)" />
    <mutant id="mutant_1930" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="(Base64.BYTES_PER_ENCODED_BLOCK) * (lineSeparator.length)" />
    <mutant id="mutant_1928" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="(Base64.BYTES_PER_ENCODED_BLOCK) % (lineSeparator.length)" />
    <mutant id="mutant_1929" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="(Base64.BYTES_PER_ENCODED_BLOCK) - (lineSeparator.length)" />
    <mutant id="mutant_1926" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;)" to="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) - &quot;]&quot;)" />
    <mutant id="mutant_1927" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="Base64.BYTES_PER_ENCODED_BLOCK" />
    <mutant id="mutant_1924" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;)" to="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) * &quot;]&quot;)" />
    <mutant id="mutant_1925" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;)" to="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) / &quot;]&quot;)" />
    <mutant id="mutant_1922" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;)" to="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" />
    <mutant id="mutant_1923" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;)" to="&quot;]&quot;" />
    <mutant id="mutant_1920" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" to="(&quot;lineSeparator must not contain base64 characters: [&quot; * sep)" />
    <mutant id="mutant_1921" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;)" to="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) % &quot;]&quot;)" />
    <mutant id="mutant_1519" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size % i)" />
    <mutant id="mutant_1993" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="(bitlen * 8)" />
    <mutant id="mutant_1510" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2.length()) - 1" to="(name2.length()) + 1" />
    <mutant id="mutant_1994" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="(bitlen - 8)" />
    <mutant id="mutant_1991" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="((bigInt.bitLength()) / 8)" />
    <mutant id="mutant_1992" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="(bigInt.bitLength())" />
    <mutant id="mutant_1990" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="((bigInt.bitLength()) + 8)" />
    <mutant id="mutant_1517" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_1518" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_1515" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="i" />
    <mutant id="mutant_1999" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8) - len" to="len" />
    <mutant id="mutant_1516" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_1513" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_1997" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="bitlen" />
    <mutant id="mutant_1514" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="1" />
    <mutant id="mutant_1998" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="8" />
    <mutant id="mutant_1511" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2.length()) - 1" to="(name2.length()) % 1" />
    <mutant id="mutant_1995" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="(bitlen % 8)" />
    <mutant id="mutant_1512" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2.length()) - 1" to="(name2.length()) * 1" />
    <mutant id="mutant_1996" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="(bitlen + 8)" />
    <mutant id="mutant_1508" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2.length()) - 1" to="1" />
    <mutant id="mutant_1509" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2.length()) - 1" to="(name2.length()) / 1" />
    <mutant id="mutant_1982" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="(bitlen - 8)" />
    <mutant id="mutant_1983" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="(bitlen % 8)" />
    <mutant id="mutant_1980" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) / 8) + 1)" to="(((bigInt.bitLength()) / 8) % 1)" />
    <mutant id="mutant_1981" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="(bitlen * 8)" />
    <mutant id="mutant_1506" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1.length()) - 1" to="(name1.length()) * 1" />
    <mutant id="mutant_1507" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2.length()) - 1" to="name2.length()" />
    <mutant id="mutant_1504" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1.length()) - 1" to="(name1.length()) + 1" />
    <mutant id="mutant_1988" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="8" />
    <mutant id="mutant_1505" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1.length()) - 1" to="(name1.length()) % 1" />
    <mutant id="mutant_1989" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="((bigInt.bitLength()) - 8)" />
    <mutant id="mutant_1502" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1.length()) - 1" to="1" />
    <mutant id="mutant_1986" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="8" />
    <mutant id="mutant_1503" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1.length()) - 1" to="(name1.length()) / 1" />
    <mutant id="mutant_1987" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="((bigInt.bitLength()) * 8)" />
    <mutant id="mutant_1500" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) + (name2.length()))" to="((name1.length()) % (name2.length()))" />
    <mutant id="mutant_1984" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="(bitlen + 8)" />
    <mutant id="mutant_1501" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1.length()) - 1" to="name1.length()" />
    <mutant id="mutant_1985" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="bitlen" />
    <mutant id="mutant_1971" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) / 8)" to="8" />
    <mutant id="mutant_1972" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) / 8)" to="((bigInt.bitLength()) - 8)" />
    <mutant id="mutant_1970" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) / 8)" to="((bigInt.bitLength()) % 8)" />
    <mutant id="mutant_1979" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) / 8) + 1)" to="((bigInt.bitLength()) / 8)" />
    <mutant id="mutant_1977" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) / 8) + 1)" to="(((bigInt.bitLength()) / 8) - 1)" />
    <mutant id="mutant_1978" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) / 8) + 1)" to="(((bigInt.bitLength()) / 8) * 1)" />
    <mutant id="mutant_1975" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) / 8) + 1)" to="1" />
    <mutant id="mutant_1976" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) / 8) + 1)" to="(((bigInt.bitLength()) / 8) / 1)" />
    <mutant id="mutant_1973" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) / 8)" to="((bigInt.bitLength()) + 8)" />
    <mutant id="mutant_1974" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) / 8)" to="(bigInt.bitLength())" />
    <mutant id="mutant_1960" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen + 7)" to="(bitlen / 7)" />
    <mutant id="mutant_1961" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen + 7)" to="bitlen" />
    <mutant id="mutant_1968" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="(bigInt.bitLength())" />
    <mutant id="mutant_1969" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) / 8)" to="((bigInt.bitLength()) * 8)" />
    <mutant id="mutant_1966" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="((bigInt.bitLength()) + 8)" />
    <mutant id="mutant_1967" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="((bigInt.bitLength()) / 8)" />
    <mutant id="mutant_1964" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="8" />
    <mutant id="mutant_1965" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="((bigInt.bitLength()) - 8)" />
    <mutant id="mutant_1962" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen + 7)" to="7" />
    <mutant id="mutant_1963" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="((bigInt.bitLength()) * 8)" />
    <mutant id="mutant_1553" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size / i)" />
    <mutant id="mutant_2400" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(rounds - 1)" to="(rounds + 1)" />
    <mutant id="mutant_1554" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size + i)" />
    <mutant id="mutant_2401" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3)" to="(i / 3)" />
    <mutant id="mutant_1551" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="name2Size" />
    <mutant id="mutant_1552" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="i" />
    <mutant id="mutant_1550" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size % i)" />
    <mutant id="mutant_2408" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7)" to="(i / 7)" />
    <mutant id="mutant_2409" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7)" to="(i * 7)" />
    <mutant id="mutant_1559" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name2Size - i) + 1)" to="((name2Size - i) / 1)" />
    <mutant id="mutant_2406" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3)" to="(i + 3)" />
    <mutant id="mutant_2407" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7)" to="i" />
    <mutant id="mutant_1557" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name2Size - i) + 1)" to="1" />
    <mutant id="mutant_2404" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3)" to="(i * 3)" />
    <mutant id="mutant_1558" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name2Size - i) + 1)" to="((name2Size - i) * 1)" />
    <mutant id="mutant_2405" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3)" to="(i - 3)" />
    <mutant id="mutant_1555" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name2Size - i) + 1)" to="((name2Size - i) % 1)" />
    <mutant id="mutant_2402" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3)" to="i" />
    <mutant id="mutant_1556" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name2Size - i) + 1)" to="(name2Size - i)" />
    <mutant id="mutant_2403" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3)" to="3" />
    <mutant id="mutant_1542" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="(i % 1)" />
    <mutant id="mutant_1543" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size * i)" />
    <mutant id="mutant_1540" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="(i * 1)" />
    <mutant id="mutant_1541" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="(i - 1)" />
    <mutant id="mutant_1548" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size + i)" />
    <mutant id="mutant_1549" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size * i)" />
    <mutant id="mutant_1546" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="i" />
    <mutant id="mutant_1547" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size / i)" />
    <mutant id="mutant_1544" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size % i)" />
    <mutant id="mutant_1545" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="name2Size" />
    <mutant id="mutant_701" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_702" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_703" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_704" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_700" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_709" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_705" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_706" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_707" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_708" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1531" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name1Size - i) + 1)" to="((name1Size - i) - 1)" />
    <mutant id="mutant_1532" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name1Size - i) + 1)" to="1" />
    <mutant id="mutant_1530" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size / i)" />
    <mutant id="mutant_1539" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="i" />
    <mutant id="mutant_1537" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="(i / 1)" />
    <mutant id="mutant_1538" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="1" />
    <mutant id="mutant_1535" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name1Size - i) + 1)" to="((name1Size - i) / 1)" />
    <mutant id="mutant_1536" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name1Size - i) + 1)" to="((name1Size - i) * 1)" />
    <mutant id="mutant_1533" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name1Size - i) + 1)" to="((name1Size - i) % 1)" />
    <mutant id="mutant_1534" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name1Size - i) + 1)" to="(name1Size - i)" />
    <mutant id="mutant_712" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_713" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_714" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_715" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_710" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_711" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_716" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_717" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_718" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_719" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1520" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="name1Size" />
    <mutant id="mutant_1521" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size * i)" />
    <mutant id="mutant_1528" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size + i)" />
    <mutant id="mutant_1529" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="i" />
    <mutant id="mutant_1526" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="name1Size" />
    <mutant id="mutant_1527" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size * i)" />
    <mutant id="mutant_1524" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size / i)" />
    <mutant id="mutant_1525" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size % i)" />
    <mutant id="mutant_1522" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size + i)" />
    <mutant id="mutant_1523" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="i" />
    <mutant id="mutant_723" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_724" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_725" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_726" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_720" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_721" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_722" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_727" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_728" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_729" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_1113" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="2" />
    <mutant id="mutant_1597" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)" from="firstLetter + name" to="firstLetter" />
    <mutant id="mutant_2444" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="(i + 2)" to="2" />
    <mutant id="mutant_1114" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index * 2" />
    <mutant id="mutant_1598" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)" from="firstLetter + name" to="firstLetter - name" />
    <mutant id="mutant_2445" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="(i + 2)" to="i" />
    <mutant id="mutant_1111" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1595" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="firstThree + lastThree" to="firstThree / lastThree" />
    <mutant id="mutant_2442" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="(16 * n)" />
    <mutant id="mutant_1112" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1596" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="firstThree + lastThree" to="firstThree - lastThree" />
    <mutant id="mutant_2443" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="(i + 2)" to="(i / 2)" />
    <mutant id="mutant_1593" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="firstThree + lastThree" to="lastThree" />
    <mutant id="mutant_2440" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="n" />
    <mutant id="mutant_1110" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1594" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="firstThree + lastThree" to="firstThree % lastThree" />
    <mutant id="mutant_2441" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="(16 % n)" />
    <mutant id="mutant_1591" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="firstThree + lastThree" to="firstThree" />
    <mutant id="mutant_1592" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="firstThree + lastThree" to="firstThree * lastThree" />
    <mutant id="mutant_1119" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_1117" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index" />
    <mutant id="mutant_2448" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="(i + 2)" to="(i - 2)" />
    <mutant id="mutant_1118" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_2449" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" to="&quot;&quot;" />
    <mutant id="mutant_1115" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index - 2" />
    <mutant id="mutant_1599" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)" from="firstLetter + name" to="name" />
    <mutant id="mutant_2446" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="(i + 2)" to="(i % 2)" />
    <mutant id="mutant_1116" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2447" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="(i + 2)" to="(i * 2)" />
    <mutant id="mutant_734" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_735" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_736" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_737" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_730" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_731" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_732" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_733" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_1590" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="(nameLength - (MatchRatingApproachEncoder.THREE))" to="nameLength" />
    <mutant id="mutant_738" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_739" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_1102" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="(index * 2)" />
    <mutant id="mutant_1586" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="(nameLength - (MatchRatingApproachEncoder.THREE))" to="MatchRatingApproachEncoder.THREE" />
    <mutant id="mutant_2433" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="16" />
    <mutant id="mutant_1103" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="(index / 2)" />
    <mutant id="mutant_1587" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="(nameLength - (MatchRatingApproachEncoder.THREE))" to="(nameLength * (MatchRatingApproachEncoder.THREE))" />
    <mutant id="mutant_2434" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="n" />
    <mutant id="mutant_1100" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_1584" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strB.length()))" to="MatchRatingApproachEncoder.SIX" />
    <mutant id="mutant_2431" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="(16 / n)" />
    <mutant id="mutant_1101" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="2" />
    <mutant id="mutant_1585" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="(nameLength - (MatchRatingApproachEncoder.THREE))" to="(nameLength / (MatchRatingApproachEncoder.THREE))" />
    <mutant id="mutant_2432" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="(16 + n)" />
    <mutant id="mutant_1582" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strB.length()))" to="((MatchRatingApproachEncoder.SIX) * (strB.length()))" />
    <mutant id="mutant_1583" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strB.length()))" to="((MatchRatingApproachEncoder.SIX) % (strB.length()))" />
    <mutant id="mutant_2430" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" from="(s + 1)" to="(s - 1)" />
    <mutant id="mutant_1580" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strB.length()))" to="strB.length()" />
    <mutant id="mutant_1581" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strB.length()))" to="((MatchRatingApproachEncoder.SIX) / (strB.length()))" />
    <mutant id="mutant_1108" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2439" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="16" />
    <mutant id="mutant_1109" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1106" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="(index % 2)" />
    <mutant id="mutant_2437" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="(16 / n)" />
    <mutant id="mutant_1107" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2438" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="(16 + n)" />
    <mutant id="mutant_1104" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="index" />
    <mutant id="mutant_1588" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="(nameLength - (MatchRatingApproachEncoder.THREE))" to="(nameLength % (MatchRatingApproachEncoder.THREE))" />
    <mutant id="mutant_2435" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="(16 % n)" />
    <mutant id="mutant_1105" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="(index + 2)" />
    <mutant id="mutant_1589" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="(nameLength - (MatchRatingApproachEncoder.THREE))" to="(nameLength + (MatchRatingApproachEncoder.THREE))" />
    <mutant id="mutant_2436" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="(16 * n)" />
    <mutant id="mutant_745" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_746" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_747" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="2" />
    <mutant id="mutant_748" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index * 2" />
    <mutant id="mutant_741" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_742" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_743" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_744" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_749" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index - 2" />
    <mutant id="mutant_1575" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strA.length()))" to="((MatchRatingApproachEncoder.SIX) / (strA.length()))" />
    <mutant id="mutant_2422" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value + 256" to="value - 256" />
    <mutant id="mutant_1576" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strA.length()))" to="((MatchRatingApproachEncoder.SIX) * (strA.length()))" />
    <mutant id="mutant_2423" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value + 256" to="value" />
    <mutant id="mutant_1573" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strA.length()))" to="((MatchRatingApproachEncoder.SIX) + (strA.length()))" />
    <mutant id="mutant_2420" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value + 256" to="256" />
    <mutant id="mutant_1574" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strA.length()))" to="strA.length()" />
    <mutant id="mutant_2421" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value + 256" to="value % 256" />
    <mutant id="mutant_1571" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size / i)" />
    <mutant id="mutant_1572" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size + i)" />
    <mutant id="mutant_1570" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="i" />
    <mutant id="mutant_2428" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" from="(s + 1)" to="(s % 1)" />
    <mutant id="mutant_740" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_2429" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" from="(s + 1)" to="s" />
    <mutant id="mutant_1579" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strB.length()))" to="((MatchRatingApproachEncoder.SIX) + (strB.length()))" />
    <mutant id="mutant_2426" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" from="(s + 1)" to="(s * 1)" />
    <mutant id="mutant_2427" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" from="(s + 1)" to="(s / 1)" />
    <mutant id="mutant_1577" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strA.length()))" to="((MatchRatingApproachEncoder.SIX) % (strA.length()))" />
    <mutant id="mutant_2424" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value + 256" to="value * 256" />
    <mutant id="mutant_1578" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strA.length()))" to="MatchRatingApproachEncoder.SIX" />
    <mutant id="mutant_2425" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" from="(s + 1)" to="1" />
    <mutant id="mutant_756" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index / 2" />
    <mutant id="mutant_757" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index" />
    <mutant id="mutant_758" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index % 2" />
    <mutant id="mutant_759" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="2" />
    <mutant id="mutant_752" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index % 2" />
    <mutant id="mutant_753" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="2" />
    <mutant id="mutant_754" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index * 2" />
    <mutant id="mutant_755" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index - 2" />
    <mutant id="mutant_1564" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size + i)" />
    <mutant id="mutant_2411" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7)" to="(i + 7)" />
    <mutant id="mutant_1565" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="i" />
    <mutant id="mutant_2412" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7)" to="(i - 7)" />
    <mutant id="mutant_1562" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="name1Size" />
    <mutant id="mutant_1563" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size * i)" />
    <mutant id="mutant_2410" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7)" to="7" />
    <mutant id="mutant_1560" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name2Size - i) + 1)" to="((name2Size - i) - 1)" />
    <mutant id="mutant_1561" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size % i)" />
    <mutant id="mutant_2419" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value + 256" to="value / 256" />
    <mutant id="mutant_750" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2417" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))" to="Sha2Crypt.SHA512_PREFIX" />
    <mutant id="mutant_751" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index" />
    <mutant id="mutant_2418" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))" to="B64.getRandomSalt(8)" />
    <mutant id="mutant_1568" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size % i)" />
    <mutant id="mutant_2415" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))" to="(Sha2Crypt.SHA512_PREFIX) % (B64.getRandomSalt(8))" />
    <mutant id="mutant_1569" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="name2Size" />
    <mutant id="mutant_2416" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))" to="(Sha2Crypt.SHA512_PREFIX) - (B64.getRandomSalt(8))" />
    <mutant id="mutant_1566" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="(name1Size / i)" />
    <mutant id="mutant_2413" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))" to="(Sha2Crypt.SHA512_PREFIX) / (B64.getRandomSalt(8))" />
    <mutant id="mutant_1567" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="(name2Size * i)" />
    <mutant id="mutant_2414" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))" to="(Sha2Crypt.SHA512_PREFIX) * (B64.getRandomSalt(8))" />
    <mutant id="mutant_767" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index - 2" />
    <mutant id="mutant_768" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index / 2" />
    <mutant id="mutant_769" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index" />
    <mutant id="mutant_763" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index" />
    <mutant id="mutant_764" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index % 2" />
    <mutant id="mutant_765" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="2" />
    <mutant id="mutant_766" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index * 2" />
    <mutant id="mutant_1160" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_2491" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(value.getClass().getName())" />
    <mutant id="mutant_1161" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_2492" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(&quot;Objects of type &quot; * (value.getClass().getName()))" />
    <mutant id="mutant_2490" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;)" to="(&quot;Objects of type &quot; + (value.getClass().getName()))" />
    <mutant id="mutant_1157" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_2004" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8) - len" to="(bitlen / 8) % len" />
    <mutant id="mutant_2488" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;)" to="((&quot;Objects of type &quot; + (value.getClass().getName())) / &quot; cannot be decoded using BCodec&quot;)" />
    <mutant id="mutant_1158" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_2005" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="bitlen / 8" to="bitlen * 8" />
    <mutant id="mutant_2489" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;)" to="((&quot;Objects of type &quot; + (value.getClass().getName())) - &quot; cannot be decoded using BCodec&quot;)" />
    <mutant id="mutant_1155" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_2002" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8) - len" to="(bitlen / 8) / len" />
    <mutant id="mutant_2486" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;)" to="((&quot;Objects of type &quot; + (value.getClass().getName())) % &quot; cannot be decoded using BCodec&quot;)" />
    <mutant id="mutant_1156" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_2003" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8) - len" to="bitlen / 8" />
    <mutant id="mutant_2487" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;)" to="((&quot;Objects of type &quot; + (value.getClass().getName())) * &quot; cannot be decoded using BCodec&quot;)" />
    <mutant id="mutant_1153" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 3" to="index * 3" />
    <mutant id="mutant_2000" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8) - len" to="(bitlen / 8) * len" />
    <mutant id="mutant_2484" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(&quot;Objects of type &quot; / (value.getClass().getName()))" />
    <mutant id="mutant_1154" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 3" to="index % 3" />
    <mutant id="mutant_2001" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8) - len" to="(bitlen / 8) + len" />
    <mutant id="mutant_2485" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;)" to="&quot; cannot be decoded using BCodec&quot;" />
    <mutant id="mutant_1151" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 3" to="index" />
    <mutant id="mutant_2482" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(&quot;Objects of type &quot; - (value.getClass().getName()))" />
    <mutant id="mutant_1152" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 3" to="index / 3" />
    <mutant id="mutant_2483" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(&quot;Objects of type &quot; % (value.getClass().getName()))" />
    <mutant id="mutant_760" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index * 2" />
    <mutant id="mutant_761" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index - 2" />
    <mutant id="mutant_762" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2008" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="bitlen / 8" to="bitlen + 8" />
    <mutant id="mutant_2009" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="bitlen / 8" to="bitlen" />
    <mutant id="mutant_1159" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_2006" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="bitlen / 8" to="bitlen - 8" />
    <mutant id="mutant_2007" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="bitlen / 8" to="bitlen % 8" />
    <mutant id="mutant_778" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_779" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_774" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_775" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_776" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_777" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2480" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(&quot;Objects of type &quot; * (value.getClass().getName()))" />
    <mutant id="mutant_1150" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 3" to="3" />
    <mutant id="mutant_2481" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="&quot;Objects of type &quot;" />
    <mutant id="mutant_1146" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_2477" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; - salt)" />
    <mutant id="mutant_1147" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_2478" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="&quot;Invalid salt value: &quot;" />
    <mutant id="mutant_1144" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_2475" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="salt" />
    <mutant id="mutant_1145" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_2476" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; % salt)" />
    <mutant id="mutant_1142" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="(index % 3)" />
    <mutant id="mutant_2473" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; / salt)" />
    <mutant id="mutant_1143" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_2474" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; * salt)" />
    <mutant id="mutant_1140" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="(index / 3)" />
    <mutant id="mutant_2471" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;)" to="(&quot;^[&quot; + (B64.B64T))" />
    <mutant id="mutant_1141" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="(index * 3)" />
    <mutant id="mutant_2472" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;)" to="((&quot;^[&quot; + (B64.B64T)) % &quot;]{2,}$&quot;)" />
    <mutant id="mutant_770" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index % 2" />
    <mutant id="mutant_771" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_772" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_773" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_1148" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_2479" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="(value.getClass().getName())" />
    <mutant id="mutant_1149" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 3" to="index - 3" />
    <mutant id="mutant_305" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="(&quot;Unable to load resource: &quot; % resName)" />
    <mutant id="mutant_789" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 2)" to="2" />
    <mutant id="mutant_306" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="(&quot;Unable to load resource: &quot; / resName)" />
    <mutant id="mutant_307" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="resName" />
    <mutant id="mutant_308" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="(&quot;Unable to load resource: &quot; - resName)" />
    <mutant id="mutant_301" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="resName" />
    <mutant id="mutant_785" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_302" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="(&quot;Unable to load resource: &quot; - resName)" />
    <mutant id="mutant_786" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_303" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="(&quot;Unable to load resource: &quot; * resName)" />
    <mutant id="mutant_787" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_304" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="&quot;Unable to load resource: &quot;" />
    <mutant id="mutant_788" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2470" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;)" to="((&quot;^[&quot; + (B64.B64T)) * &quot;]{2,}$&quot;)" />
    <mutant id="mutant_309" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="(&quot;Unable to load resource: &quot; * resName)" />
    <mutant id="mutant_1135" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="(index * 3)" />
    <mutant id="mutant_2466" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;^[&quot; + (B64.B64T))" to="(B64.B64T)" />
    <mutant id="mutant_1136" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="(index % 3)" />
    <mutant id="mutant_2467" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;)" to="((&quot;^[&quot; + (B64.B64T)) / &quot;]{2,}$&quot;)" />
    <mutant id="mutant_1133" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="index" />
    <mutant id="mutant_2464" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;^[&quot; + (B64.B64T))" to="(&quot;^[&quot; - (B64.B64T))" />
    <mutant id="mutant_1134" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="(index / 3)" />
    <mutant id="mutant_2465" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;^[&quot; + (B64.B64T))" to="(&quot;^[&quot; % (B64.B64T))" />
    <mutant id="mutant_1131" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="(index - 3)" />
    <mutant id="mutant_2462" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;^[&quot; + (B64.B64T))" to="&quot;^[&quot;" />
    <mutant id="mutant_1132" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="3" />
    <mutant id="mutant_2463" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;^[&quot; + (B64.B64T))" to="(&quot;^[&quot; * (B64.B64T))" />
    <mutant id="mutant_2460" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" to="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) % (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" />
    <mutant id="mutant_1130" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_2461" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;^[&quot; + (B64.B64T))" to="(&quot;^[&quot; / (B64.B64T))" />
    <mutant id="mutant_781" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_782" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_783" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_300" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="(&quot;Unable to load resource: &quot; / resName)" />
    <mutant id="mutant_784" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1139" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="index" />
    <mutant id="mutant_1137" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="(index - 3)" />
    <mutant id="mutant_2468" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;)" to="((&quot;^[&quot; + (B64.B64T)) - &quot;]{2,}$&quot;)" />
    <mutant id="mutant_780" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1138" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="3" />
    <mutant id="mutant_2469" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;)" to="&quot;]{2,}$&quot;" />
    <mutant id="mutant_316" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="((ph.length()) - 1)" to="ph.length()" />
    <mutant id="mutant_317" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="((ph.length()) - 1)" to="1" />
    <mutant id="mutant_318" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="((ph.length()) - 1)" to="((ph.length()) / 1)" />
    <mutant id="mutant_319" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="((ph.length()) - 1)" to="((ph.length()) + 1)" />
    <mutant id="mutant_312" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="(open + 1)" to="(open % 1)" />
    <mutant id="mutant_796" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_313" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="(open + 1)" to="(open * 1)" />
    <mutant id="mutant_797" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_314" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="(open + 1)" to="(open - 1)" />
    <mutant id="mutant_798" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_315" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="(open + 1)" to="open" />
    <mutant id="mutant_799" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_1124" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2455" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" to="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) / (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" />
    <mutant id="mutant_1125" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_2456" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" to="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) * (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" />
    <mutant id="mutant_1122" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_2453" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" to="(&quot;&quot; / (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" />
    <mutant id="mutant_1123" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_2454" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" to="(&quot;&quot; - (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" />
    <mutant id="mutant_1120" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_2451" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" to="(UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" />
    <mutant id="mutant_1121" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_2452" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" to="(&quot;&quot; * (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" />
    <mutant id="mutant_2450" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" to="(&quot;&quot; % (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" />
    <mutant id="mutant_792" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_793" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 2)" to="index" />
    <mutant id="mutant_310" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="(open + 1)" to="(open / 1)" />
    <mutant id="mutant_794" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_311" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="(open + 1)" to="1" />
    <mutant id="mutant_795" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_1128" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_2459" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" to="UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]" />
    <mutant id="mutant_1129" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_790" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_1126" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_2457" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" to="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) - (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" />
    <mutant id="mutant_791" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_1127" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_2458" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" to="&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" />
    <mutant id="mutant_9" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Malformed line \'&quot; + rawLine)" to="&quot;Malformed line \'&quot;" />
    <mutant id="mutant_206" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) - 1" to="(suffix.length()) * 1" />
    <mutant id="mutant_8" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Malformed line \'&quot; + rawLine)" to="(&quot;Malformed line \'&quot; % rawLine)" />
    <mutant id="mutant_207" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) - 1" to="(suffix.length()) % 1" />
    <mutant id="mutant_208" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i + patternLength" to="i / patternLength" />
    <mutant id="mutant_209" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i + patternLength" to="i % patternLength" />
    <mutant id="mutant_5" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN))" to="&quot;Unable to resolve required resource:&quot;" />
    <mutant id="mutant_202" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) - 1" to="1" />
    <mutant id="mutant_686" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="start" />
    <mutant id="mutant_4" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN))" to="(&quot;Unable to resolve required resource:&quot; * (Lang.LANGUAGE_RULES_RN))" />
    <mutant id="mutant_203" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) - 1" to="suffix.length()" />
    <mutant id="mutant_687" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="1" />
    <mutant id="mutant_7" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Malformed line \'&quot; + rawLine)" to="(&quot;Malformed line \'&quot; - rawLine)" />
    <mutant id="mutant_204" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) - 1" to="(suffix.length()) / 1" />
    <mutant id="mutant_688" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index * 1" />
    <mutant id="mutant_6" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Malformed line \'&quot; + rawLine)" to="(&quot;Malformed line \'&quot; * rawLine)" />
    <mutant id="mutant_205" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) - 1" to="(suffix.length()) + 1" />
    <mutant id="mutant_689" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index - 1" />
    <mutant id="mutant_85" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))" />
    <mutant id="mutant_2293" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" from="((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8)))" to="Md5Crypt.APR1_PREFIX" />
    <mutant id="mutant_84" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) % &quot;)&quot;" />
    <mutant id="mutant_2294" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" from="((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8)))" to="((Md5Crypt.APR1_PREFIX) - (B64.getRandomSalt(8)))" />
    <mutant id="mutant_87" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) / &quot;)&quot;" />
    <mutant id="mutant_2291" viable="true" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="((charsetName + &quot;: &quot;) + e)" to="(charsetName + &quot;: &quot;)" />
    <mutant id="mutant_86" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) * &quot;)&quot;" />
    <mutant id="mutant_2292" viable="true" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="((charsetName + &quot;: &quot;) + e)" to="e" />
    <mutant id="mutant_89" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) - &quot;)&quot;" />
    <mutant id="mutant_88" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="&quot;)&quot;" />
    <mutant id="mutant_2290" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="((charsetName + &quot;: &quot;) + e)" to="((charsetName + &quot;: &quot;) % e)" />
    <mutant id="mutant_90" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(l + &quot; &quot;)" to="(l / &quot; &quot;)" />
    <mutant id="mutant_2288" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="((charsetName + &quot;: &quot;) + e)" to="((charsetName + &quot;: &quot;) - e)" />
    <mutant id="mutant_2289" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="((charsetName + &quot;: &quot;) + e)" to="((charsetName + &quot;: &quot;) * e)" />
    <mutant id="mutant_92" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(l + &quot; &quot;)" to="(l * &quot; &quot;)" />
    <mutant id="mutant_2286" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="(charsetName + &quot;: &quot;)" to="(charsetName - &quot;: &quot;)" />
    <mutant id="mutant_91" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(l + &quot; &quot;)" to="&quot; &quot;" />
    <mutant id="mutant_2287" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="((charsetName + &quot;: &quot;) + e)" to="((charsetName + &quot;: &quot;) / e)" />
    <mutant id="mutant_94" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(l + &quot; &quot;)" to="(l - &quot; &quot;)" />
    <mutant id="mutant_2284" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="(charsetName + &quot;: &quot;)" to="(charsetName / &quot;: &quot;)" />
    <mutant id="mutant_93" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(l + &quot; &quot;)" to="l" />
    <mutant id="mutant_2285" viable="true" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="(charsetName + &quot;: &quot;)" to="&quot;: &quot;" />
    <mutant id="mutant_1" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN))" to="(&quot;Unable to resolve required resource:&quot; - (Lang.LANGUAGE_RULES_RN))" />
    <mutant id="mutant_682" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="length" />
    <mutant id="mutant_0" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN))" to="Lang.LANGUAGE_RULES_RN" />
    <mutant id="mutant_683" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="(start * length)" />
    <mutant id="mutant_3" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN))" to="(&quot;Unable to resolve required resource:&quot; % (Lang.LANGUAGE_RULES_RN))" />
    <mutant id="mutant_200" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.length()) - 1" to="(input.length()) * 1" />
    <mutant id="mutant_684" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="(start % length)" />
    <mutant id="mutant_2" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN))" to="(&quot;Unable to resolve required resource:&quot; / (Lang.LANGUAGE_RULES_RN))" />
    <mutant id="mutant_201" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.length()) - 1" to="(input.length()) % 1" />
    <mutant id="mutant_685" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="(start / length)" />
    <mutant id="mutant_680" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="start" />
    <mutant id="mutant_681" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="(start - length)" />
    <mutant id="mutant_217" viable="true" in="org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) + 1)" />
    <mutant id="mutant_218" viable="true" in="org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) % 1)" />
    <mutant id="mutant_219" viable="true" in="org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) * 1)" />
    <mutant id="mutant_213" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i + patternLength" to="i - patternLength" />
    <mutant id="mutant_697" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index + 2)" />
    <mutant id="mutant_214" viable="true" in="org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="str.length()" />
    <mutant id="mutant_698" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index % 2)" />
    <mutant id="mutant_215" viable="true" in="org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="1" />
    <mutant id="mutant_699" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_216" viable="true" in="org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="((str.length()) / 1)" />
    <mutant id="mutant_74" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="&quot;)-(&quot;" />
    <mutant id="mutant_2282" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="(charsetName + &quot;: &quot;)" to="(charsetName * &quot;: &quot;)" />
    <mutant id="mutant_73" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="((&quot;(&quot; + (encode(remainder))) * &quot;)-(&quot;)" />
    <mutant id="mutant_2283" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="(charsetName + &quot;: &quot;)" to="(charsetName % &quot;: &quot;)" />
    <mutant id="mutant_76" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="((&quot;(&quot; + (encode(remainder))) / &quot;)-(&quot;)" />
    <mutant id="mutant_2280" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;" to="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) % &quot;]&quot;" />
    <mutant id="mutant_75" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="(&quot;(&quot; + (encode(remainder)))" />
    <mutant id="mutant_2281" viable="true" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="(charsetName + &quot;: &quot;)" to="charsetName" />
    <mutant id="mutant_78" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) % (encode(combined)))" />
    <mutant id="mutant_77" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="((&quot;(&quot; + (encode(remainder))) % &quot;)-(&quot;)" />
    <mutant id="mutant_79" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) - (encode(combined)))" />
    <mutant id="mutant_2279" viable="true" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;" to="((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)" />
    <mutant id="mutant_2277" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;" to="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) / &quot;]&quot;" />
    <mutant id="mutant_2278" viable="true" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;" to="&quot;]&quot;" />
    <mutant id="mutant_81" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(encode(combined))" />
    <mutant id="mutant_2275" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;" to="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) * &quot;]&quot;" />
    <mutant id="mutant_80" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) * (encode(combined)))" />
    <mutant id="mutant_2276" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;" to="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) - &quot;]&quot;" />
    <mutant id="mutant_83" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" />
    <mutant id="mutant_2273" viable="true" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset))" to="((super.toString()) + &quot;[charsetName=&quot;)" />
    <mutant id="mutant_82" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) / (encode(combined)))" />
    <mutant id="mutant_2274" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset))" to="(((super.toString()) + &quot;[charsetName=&quot;) / (this.charset))" />
    <mutant id="mutant_693" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="2" />
    <mutant id="mutant_210" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i + patternLength" to="i" />
    <mutant id="mutant_694" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index * 2)" />
    <mutant id="mutant_211" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i + patternLength" to="patternLength" />
    <mutant id="mutant_695" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="(index / 2)" />
    <mutant id="mutant_212" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i + patternLength" to="i * patternLength" />
    <mutant id="mutant_696" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="index" />
    <mutant id="mutant_690" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index / 1" />
    <mutant id="mutant_691" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index" />
    <mutant id="mutant_692" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index % 1" />
    <mutant id="mutant_228" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" to="((&quot;Malformed import statement \'&quot; + rawLine) - &quot;\' in &quot;)" />
    <mutant id="mutant_229" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" to="(&quot;Malformed import statement \'&quot; + rawLine)" />
    <mutant id="mutant_224" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed import statement \'&quot; + rawLine)" to="rawLine" />
    <mutant id="mutant_225" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed import statement \'&quot; + rawLine)" to="(&quot;Malformed import statement \'&quot; / rawLine)" />
    <mutant id="mutant_226" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" to="((&quot;Malformed import statement \'&quot; + rawLine) % &quot;\' in &quot;)" />
    <mutant id="mutant_227" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" to="((&quot;Malformed import statement \'&quot; + rawLine) / &quot;\' in &quot;)" />
    <mutant id="mutant_2271" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset))" to="(((super.toString()) + &quot;[charsetName=&quot;) * (this.charset))" />
    <mutant id="mutant_2272" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset))" to="(((super.toString()) + &quot;[charsetName=&quot;) % (this.charset))" />
    <mutant id="mutant_2270" viable="true" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset))" to="(this.charset)" />
    <mutant id="mutant_2268" viable="true" in="org.apache.commons.codec.binary.Hex.toString()" from="((super.toString()) + &quot;[charsetName=&quot;)" to="&quot;[charsetName=&quot;" />
    <mutant id="mutant_2269" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset))" to="(((super.toString()) + &quot;[charsetName=&quot;) - (this.charset))" />
    <mutant id="mutant_2266" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="((super.toString()) + &quot;[charsetName=&quot;)" to="((super.toString()) * &quot;[charsetName=&quot;)" />
    <mutant id="mutant_2267" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="((super.toString()) + &quot;[charsetName=&quot;)" to="((super.toString()) % &quot;[charsetName=&quot;)" />
    <mutant id="mutant_2264" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="((super.toString()) + &quot;[charsetName=&quot;)" to="((super.toString()) - &quot;[charsetName=&quot;)" />
    <mutant id="mutant_2265" viable="true" in="org.apache.commons.codec.binary.Hex.toString()" from="((super.toString()) + &quot;[charsetName=&quot;)" to="(super.toString())" />
    <mutant id="mutant_2262" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index)" to="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) - index)" />
    <mutant id="mutant_2263" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="((super.toString()) + &quot;[charsetName=&quot;)" to="((super.toString()) / &quot;[charsetName=&quot;)" />
    <mutant id="mutant_220" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed import statement \'&quot; + rawLine)" to="(&quot;Malformed import statement \'&quot; - rawLine)" />
    <mutant id="mutant_221" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed import statement \'&quot; + rawLine)" to="&quot;Malformed import statement \'&quot;" />
    <mutant id="mutant_222" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed import statement \'&quot; + rawLine)" to="(&quot;Malformed import statement \'&quot; * rawLine)" />
    <mutant id="mutant_223" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed import statement \'&quot; + rawLine)" to="(&quot;Malformed import statement \'&quot; % rawLine)" />
    <mutant id="mutant_239" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(location + &quot;-&gt;&quot;)" to="(location % &quot;-&gt;&quot;)" />
    <mutant id="mutant_235" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location)" to="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) * location)" />
    <mutant id="mutant_236" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location)" to="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) / location)" />
    <mutant id="mutant_237" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location)" to="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) % location)" />
    <mutant id="mutant_238" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(location + &quot;-&gt;&quot;)" to="(location * &quot;-&gt;&quot;)" />
    <mutant id="mutant_96" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((l.length()) + 1)" to="l.length()" />
    <mutant id="mutant_2260" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index)" to="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" />
    <mutant id="mutant_95" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(l + &quot; &quot;)" to="(l % &quot; &quot;)" />
    <mutant id="mutant_2261" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index)" to="index" />
    <mutant id="mutant_98" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((l.length()) + 1)" to="((l.length()) / 1)" />
    <mutant id="mutant_97" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((l.length()) + 1)" to="1" />
    <mutant id="mutant_99" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((l.length()) + 1)" to="((l.length()) % 1)" />
    <mutant id="mutant_2257" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index)" to="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) * index)" />
    <mutant id="mutant_2258" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index)" to="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) / index)" />
    <mutant id="mutant_2255" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" to="((&quot;Illegal hexadecimal character &quot; + ch) / &quot; at index &quot;)" />
    <mutant id="mutant_2256" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" to="(&quot;Illegal hexadecimal character &quot; + ch)" />
    <mutant id="mutant_2253" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" to="&quot; at index &quot;" />
    <mutant id="mutant_2254" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" to="((&quot;Illegal hexadecimal character &quot; + ch) * &quot; at index &quot;)" />
    <mutant id="mutant_2251" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" to="((&quot;Illegal hexadecimal character &quot; + ch) - &quot; at index &quot;)" />
    <mutant id="mutant_2252" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" to="((&quot;Illegal hexadecimal character &quot; + ch) % &quot; at index &quot;)" />
    <mutant id="mutant_231" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" to="((&quot;Malformed import statement \'&quot; + rawLine) * &quot;\' in &quot;)" />
    <mutant id="mutant_232" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location)" to="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" />
    <mutant id="mutant_233" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location)" to="location" />
    <mutant id="mutant_234" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location)" to="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) - location)" />
    <mutant id="mutant_2259" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index)" to="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) % index)" />
    <mutant id="mutant_230" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" to="&quot;\' in &quot;" />
    <mutant id="mutant_246" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((location + &quot;-&gt;&quot;) + incl)" to="((location + &quot;-&gt;&quot;) - incl)" />
    <mutant id="mutant_247" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((location + &quot;-&gt;&quot;) + incl)" to="((location + &quot;-&gt;&quot;) / incl)" />
    <mutant id="mutant_248" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((location + &quot;-&gt;&quot;) + incl)" to="((location + &quot;-&gt;&quot;) % incl)" />
    <mutant id="mutant_249" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((location + &quot;-&gt;&quot;) + incl)" to="(location + &quot;-&gt;&quot;)" />
    <mutant id="mutant_242" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(location + &quot;-&gt;&quot;)" to="(location - &quot;-&gt;&quot;)" />
    <mutant id="mutant_243" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(location + &quot;-&gt;&quot;)" to="&quot;-&gt;&quot;" />
    <mutant id="mutant_244" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((location + &quot;-&gt;&quot;) + incl)" to="incl" />
    <mutant id="mutant_245" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((location + &quot;-&gt;&quot;) + incl)" to="((location + &quot;-&gt;&quot;) * incl)" />
    <mutant id="mutant_240" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(location + &quot;-&gt;&quot;)" to="location" />
    <mutant id="mutant_241" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(location + &quot;-&gt;&quot;)" to="(location / &quot;-&gt;&quot;)" />
    <mutant id="mutant_257" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="&quot; parts: &quot;" />
    <mutant id="mutant_258" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(&quot;Malformed rule statement split into &quot; + (parts.length))" />
    <mutant id="mutant_259" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) * &quot; parts: &quot;)" />
    <mutant id="mutant_253" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(&quot;Malformed rule statement split into &quot; * (parts.length))" />
    <mutant id="mutant_254" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(parts.length)" />
    <mutant id="mutant_255" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(&quot;Malformed rule statement split into &quot; - (parts.length))" />
    <mutant id="mutant_256" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) - &quot; parts: &quot;)" />
    <mutant id="mutant_250" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(&quot;Malformed rule statement split into &quot; % (parts.length))" />
    <mutant id="mutant_251" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="&quot;Malformed rule statement split into &quot;" />
    <mutant id="mutant_252" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="(&quot;Malformed rule statement split into &quot; / (parts.length))" />
    <mutant id="mutant_268" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) * &quot; in &quot;)" />
    <mutant id="mutant_269" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) / &quot; in &quot;)" />
    <mutant id="mutant_264" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) * rawLine)" />
    <mutant id="mutant_265" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) / rawLine)" />
    <mutant id="mutant_266" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) - rawLine)" />
    <mutant id="mutant_267" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="rawLine" />
    <mutant id="mutant_260" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) / &quot; parts: &quot;)" />
    <mutant id="mutant_261" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) % &quot; parts: &quot;)" />
    <mutant id="mutant_262" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) % rawLine)" />
    <mutant id="mutant_263" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" />
    <mutant id="mutant_279" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) % location)" />
    <mutant id="mutant_2299" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(Md5Crypt.APR1_PREFIX) + salt" to="Md5Crypt.APR1_PREFIX" />
    <mutant id="mutant_270" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) - &quot; in &quot;)" />
    <mutant id="mutant_2297" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" from="((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8)))" to="B64.getRandomSalt(8)" />
    <mutant id="mutant_2298" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" from="((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8)))" to="((Md5Crypt.APR1_PREFIX) / (B64.getRandomSalt(8)))" />
    <mutant id="mutant_2295" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" from="((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8)))" to="((Md5Crypt.APR1_PREFIX) * (B64.getRandomSalt(8)))" />
    <mutant id="mutant_2296" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" from="((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8)))" to="((Md5Crypt.APR1_PREFIX) % (B64.getRandomSalt(8)))" />
    <mutant id="mutant_275" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="location" />
    <mutant id="mutant_276" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) / location)" />
    <mutant id="mutant_277" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) * location)" />
    <mutant id="mutant_278" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) - location)" />
    <mutant id="mutant_271" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="&quot; in &quot;" />
    <mutant id="mutant_272" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) % &quot; in &quot;)" />
    <mutant id="mutant_273" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" />
    <mutant id="mutant_274" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" />
    <mutant id="mutant_280" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="(&quot;Problem parsing line \'&quot; / currentLine)" />
    <mutant id="mutant_281" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="(&quot;Problem parsing line \'&quot; * currentLine)" />
    <mutant id="mutant_286" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="((&quot;Problem parsing line \'&quot; + currentLine) % &quot;\' in &quot;)" />
    <mutant id="mutant_287" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="(&quot;Problem parsing line \'&quot; + currentLine)" />
    <mutant id="mutant_288" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="((&quot;Problem parsing line \'&quot; + currentLine) - &quot;\' in &quot;)" />
    <mutant id="mutant_289" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="&quot;\' in &quot;" />
    <mutant id="mutant_282" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="(&quot;Problem parsing line \'&quot; - currentLine)" />
    <mutant id="mutant_283" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="currentLine" />
    <mutant id="mutant_284" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="&quot;Problem parsing line \'&quot;" />
    <mutant id="mutant_285" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="(&quot;Problem parsing line \'&quot; % currentLine)" />
    <mutant id="mutant_290" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="((&quot;Problem parsing line \'&quot; + currentLine) * &quot;\' in &quot;)" />
    <mutant id="mutant_291" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="((&quot;Problem parsing line \'&quot; + currentLine) / &quot;\' in &quot;)" />
    <mutant id="mutant_292" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) % location)" />
    <mutant id="mutant_297" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) / location)" />
    <mutant id="mutant_298" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="&quot;Unable to load resource: &quot;" />
    <mutant id="mutant_299" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="(&quot;Unable to load resource: &quot; % resName)" />
    <mutant id="mutant_293" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="location" />
    <mutant id="mutant_294" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) - location)" />
    <mutant id="mutant_295" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) * location)" />
    <mutant id="mutant_296" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" />
    <mutant id="mutant_27" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;)" to="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" />
    <mutant id="mutant_26" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;)" to="&quot;\'&quot;" />
    <mutant id="mutant_29" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;)" to="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) % &quot;\'&quot;)" />
    <mutant id="mutant_28" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;)" to="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) * &quot;\'&quot;)" />
    <mutant id="mutant_21" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" to="languageRulesResourceName" />
    <mutant id="mutant_20" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" to="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" />
    <mutant id="mutant_23" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" to="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) / languageRulesResourceName)" />
    <mutant id="mutant_22" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" to="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) - languageRulesResourceName)" />
    <mutant id="mutant_25" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;)" to="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) - &quot;\'&quot;)" />
    <mutant id="mutant_24" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;)" to="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) / &quot;\'&quot;)" />
    <mutant id="mutant_16" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" to="((&quot;Malformed line \'&quot; + rawLine) / &quot;\' in language resource \'&quot;)" />
    <mutant id="mutant_15" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" to="((&quot;Malformed line \'&quot; + rawLine) - &quot;\' in language resource \'&quot;)" />
    <mutant id="mutant_18" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" to="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) % languageRulesResourceName)" />
    <mutant id="mutant_17" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" to="((&quot;Malformed line \'&quot; + rawLine) % &quot;\' in language resource \'&quot;)" />
    <mutant id="mutant_19" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" to="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) * languageRulesResourceName)" />
    <mutant id="mutant_10" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Malformed line \'&quot; + rawLine)" to="rawLine" />
    <mutant id="mutant_12" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" to="(&quot;Malformed line \'&quot; + rawLine)" />
    <mutant id="mutant_11" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Malformed line \'&quot; + rawLine)" to="(&quot;Malformed line \'&quot; / rawLine)" />
    <mutant id="mutant_14" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" to="&quot;\' in language resource \'&quot;" />
    <mutant id="mutant_13" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" to="((&quot;Malformed line \'&quot; + rawLine) * &quot;\' in language resource \'&quot;)" />
    <mutant id="mutant_49" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="((i) + patternLength)" to="((i) * patternLength)" />
    <mutant id="mutant_48" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="((i) + patternLength)" to="((i) % patternLength)" />
    <mutant id="mutant_1838" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" to="(&quot;lineSeparator must not contain Base32 characters: [&quot; / sep)" />
    <mutant id="mutant_1839" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" to="(&quot;lineSeparator must not contain Base32 characters: [&quot; % sep)" />
    <mutant id="mutant_41" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;" to="(&quot;Languages(&quot; + (languages.toString())) * &quot;)&quot;" />
    <mutant id="mutant_40" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;" to="&quot;)&quot;" />
    <mutant id="mutant_43" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(&quot;Unable to resolve required resource: &quot; + languagesResourceName)" to="(&quot;Unable to resolve required resource: &quot; * languagesResourceName)" />
    <mutant id="mutant_42" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(&quot;Unable to resolve required resource: &quot; + languagesResourceName)" to="(&quot;Unable to resolve required resource: &quot; / languagesResourceName)" />
    <mutant id="mutant_45" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(&quot;Unable to resolve required resource: &quot; + languagesResourceName)" to="&quot;Unable to resolve required resource: &quot;" />
    <mutant id="mutant_44" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(&quot;Unable to resolve required resource: &quot; + languagesResourceName)" to="(&quot;Unable to resolve required resource: &quot; - languagesResourceName)" />
    <mutant id="mutant_47" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(&quot;Unable to resolve required resource: &quot; + languagesResourceName)" to="(&quot;Unable to resolve required resource: &quot; % languagesResourceName)" />
    <mutant id="mutant_46" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(&quot;Unable to resolve required resource: &quot; + languagesResourceName)" to="languagesResourceName" />
    <mutant id="mutant_50" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="((i) + patternLength)" to="((i) - patternLength)" />
    <mutant id="mutant_1836" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;)" to="((&quot;lineLength &quot; + lineLength) - &quot; &gt; 0, but lineSeparator is null&quot;)" />
    <mutant id="mutant_1837" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" to="sep" />
    <mutant id="mutant_1834" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;)" to="((&quot;lineLength &quot; + lineLength) / &quot; &gt; 0, but lineSeparator is null&quot;)" />
    <mutant id="mutant_1835" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;)" to="((&quot;lineLength &quot; + lineLength) % &quot; &gt; 0, but lineSeparator is null&quot;)" />
    <mutant id="mutant_1832" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;)" to="((&quot;lineLength &quot; + lineLength) * &quot; &gt; 0, but lineSeparator is null&quot;)" />
    <mutant id="mutant_1833" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;)" to="(&quot;lineLength &quot; + lineLength)" />
    <mutant id="mutant_1830" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineLength &quot; + lineLength)" to="(&quot;lineLength &quot; - lineLength)" />
    <mutant id="mutant_1831" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;)" to="&quot; &gt; 0, but lineSeparator is null&quot;" />
    <mutant id="mutant_38" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;" to="(&quot;Languages(&quot; + (languages.toString())) % &quot;)&quot;" />
    <mutant id="mutant_37" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;" to="&quot;Languages(&quot; + (languages.toString())" />
    <mutant id="mutant_39" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;" to="(&quot;Languages(&quot; + (languages.toString())) - &quot;)&quot;" />
    <mutant id="mutant_1829" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineLength &quot; + lineLength)" to="(&quot;lineLength &quot; % lineLength)" />
    <mutant id="mutant_1827" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineLength &quot; + lineLength)" to="(&quot;lineLength &quot; * lineLength)" />
    <mutant id="mutant_1828" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineLength &quot; + lineLength)" to="lineLength" />
    <mutant id="mutant_30" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString()))" to="(&quot;Languages(&quot; - (languages.toString()))" />
    <mutant id="mutant_32" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString()))" to="(languages.toString())" />
    <mutant id="mutant_31" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString()))" to="(&quot;Languages(&quot; / (languages.toString()))" />
    <mutant id="mutant_34" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString()))" to="&quot;Languages(&quot;" />
    <mutant id="mutant_33" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString()))" to="(&quot;Languages(&quot; % (languages.toString()))" />
    <mutant id="mutant_36" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;" to="(&quot;Languages(&quot; + (languages.toString())) / &quot;)&quot;" />
    <mutant id="mutant_35" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString()))" to="(&quot;Languages(&quot; * (languages.toString()))" />
    <mutant id="mutant_1825" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineLength &quot; + lineLength)" to="(&quot;lineLength &quot; / lineLength)" />
    <mutant id="mutant_1826" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineLength &quot; + lineLength)" to="&quot;lineLength &quot;" />
    <mutant id="mutant_1823" viable="false" in="org.apache.commons.codec.language.Soundex.map(char)" from="(&quot;The character is not mapped: &quot; + ch)" to="(&quot;The character is not mapped: &quot; * ch)" />
    <mutant id="mutant_1824" viable="false" in="org.apache.commons.codec.language.Soundex.map(char)" from="(&quot;The character is not mapped: &quot; + ch)" to="(&quot;The character is not mapped: &quot; / ch)" />
    <mutant id="mutant_1821" viable="false" in="org.apache.commons.codec.language.Soundex.map(char)" from="(&quot;The character is not mapped: &quot; + ch)" to="(&quot;The character is not mapped: &quot; % ch)" />
    <mutant id="mutant_1822" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(&quot;The character is not mapped: &quot; + ch)" to="&quot;The character is not mapped: &quot;" />
    <mutant id="mutant_1820" viable="false" in="org.apache.commons.codec.language.Soundex.map(char)" from="(&quot;The character is not mapped: &quot; + ch)" to="ch" />
    <mutant id="mutant_1818" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="ch - 'A'" to="'A'" />
    <mutant id="mutant_1819" viable="false" in="org.apache.commons.codec.language.Soundex.map(char)" from="(&quot;The character is not mapped: &quot; + ch)" to="(&quot;The character is not mapped: &quot; - ch)" />
    <mutant id="mutant_1816" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="ch - 'A'" to="ch + 'A'" />
    <mutant id="mutant_1817" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="ch - 'A'" to="ch * 'A'" />
    <mutant id="mutant_63" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="&quot;d&quot; + remainder" to="&quot;d&quot; * remainder" />
    <mutant id="mutant_62" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="&quot;d&quot; + remainder" to="&quot;d&quot; % remainder" />
    <mutant id="mutant_65" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="&quot;d&quot; + remainder" to="remainder" />
    <mutant id="mutant_64" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="&quot;d&quot; + remainder" to="&quot;d&quot; - remainder" />
    <mutant id="mutant_67" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(encode(remainder))" />
    <mutant id="mutant_66" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(&quot;(&quot; * (encode(remainder)))" />
    <mutant id="mutant_69" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(&quot;(&quot; % (encode(remainder)))" />
    <mutant id="mutant_68" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(&quot;(&quot; / (encode(remainder)))" />
    <mutant id="mutant_70" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="&quot;(&quot;" />
    <mutant id="mutant_72" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="((&quot;(&quot; + (encode(remainder))) - &quot;)-(&quot;)" />
    <mutant id="mutant_71" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="(&quot;(&quot; - (encode(remainder)))" />
    <mutant id="mutant_1814" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="ch - 'A'" to="ch" />
    <mutant id="mutant_1815" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="ch - 'A'" to="ch / 'A'" />
    <mutant id="mutant_1812" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" from="((Character.toUpperCase(c)) - 'A')" to="'A'" />
    <mutant id="mutant_1813" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="ch - 'A'" to="ch % 'A'" />
    <mutant id="mutant_1810" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" from="((Character.toUpperCase(c)) - 'A')" to="Character.toUpperCase(c)" />
    <mutant id="mutant_1811" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" from="((Character.toUpperCase(c)) - 'A')" to="((Character.toUpperCase(c)) % 'A')" />
    <mutant id="mutant_59" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="(&quot;ruleType must not be &quot; + (RuleType.RULES))" to="(&quot;ruleType must not be &quot; - (RuleType.RULES))" />
    <mutant id="mutant_1809" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" from="((Character.toUpperCase(c)) - 'A')" to="((Character.toUpperCase(c)) + 'A')" />
    <mutant id="mutant_1807" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" from="((Character.toUpperCase(c)) - 'A')" to="((Character.toUpperCase(c)) * 'A')" />
    <mutant id="mutant_1808" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" from="((Character.toUpperCase(c)) - 'A')" to="((Character.toUpperCase(c)) / 'A')" />
    <mutant id="mutant_1805" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) / 1)" />
    <mutant id="mutant_1806" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) % 1)" />
    <mutant id="mutant_52" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="((i) + patternLength)" to="patternLength" />
    <mutant id="mutant_51" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="((i) + patternLength)" to="i" />
    <mutant id="mutant_54" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="(&quot;ruleType must not be &quot; + (RuleType.RULES))" to="&quot;ruleType must not be &quot;" />
    <mutant id="mutant_53" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="((i) + patternLength)" to="((i) / patternLength)" />
    <mutant id="mutant_56" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="(&quot;ruleType must not be &quot; + (RuleType.RULES))" to="(&quot;ruleType must not be &quot; / (RuleType.RULES))" />
    <mutant id="mutant_55" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="(&quot;ruleType must not be &quot; + (RuleType.RULES))" to="(&quot;ruleType must not be &quot; * (RuleType.RULES))" />
    <mutant id="mutant_58" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="(&quot;ruleType must not be &quot; + (RuleType.RULES))" to="RuleType.RULES" />
    <mutant id="mutant_57" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="(&quot;ruleType must not be &quot; + (RuleType.RULES))" to="(&quot;ruleType must not be &quot; % (RuleType.RULES))" />
    <mutant id="mutant_61" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="&quot;d&quot; + remainder" to="&quot;d&quot; / remainder" />
    <mutant id="mutant_60" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="&quot;d&quot; + remainder" to="&quot;d&quot;" />
    <mutant id="mutant_1803" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) + 1)" />
    <mutant id="mutant_1804" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="key.length()" />
    <mutant id="mutant_1801" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="1" />
    <mutant id="mutant_1802" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="((key.length()) * 1)" />
    <mutant id="mutant_1800" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="((key.length()) % 2)" />
    <mutant id="mutant_1872" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)" to="((context.modulus) + 1) - (Base32.BYTES_PER_ENCODED_BLOCK)" />
    <mutant id="mutant_1873" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result" to="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) / result" />
    <mutant id="mutant_1870" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)" to="((context.modulus) + 1) + (Base32.BYTES_PER_ENCODED_BLOCK)" />
    <mutant id="mutant_1871" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)" to="(context.modulus) + 1" />
    <mutant id="mutant_1878" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result" to="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) * result" />
    <mutant id="mutant_1879" viable="false" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="context.modulus" />
    <mutant id="mutant_1876" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result" to="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) - result" />
    <mutant id="mutant_1877" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result" to="(context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)" />
    <mutant id="mutant_1874" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result" to="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) % result" />
    <mutant id="mutant_1875" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result" to="result" />
    <mutant id="mutant_1861" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(context.modulus)" />
    <mutant id="mutant_1862" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="1" />
    <mutant id="mutant_1860" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(this.encodeSize) - 1" to="this.encodeSize" />
    <mutant id="mutant_1869" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)" to="((context.modulus) + 1) * (Base32.BYTES_PER_ENCODED_BLOCK)" />
    <mutant id="mutant_1867" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)" to="Base32.BYTES_PER_ENCODED_BLOCK" />
    <mutant id="mutant_1868" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)" to="((context.modulus) + 1) / (Base32.BYTES_PER_ENCODED_BLOCK)" />
    <mutant id="mutant_1865" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) - 1)" />
    <mutant id="mutant_1866" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) % 1)" />
    <mutant id="mutant_1863" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) * 1)" />
    <mutant id="mutant_1864" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) / 1)" />
    <mutant id="mutant_1850" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="(Base32.BYTES_PER_ENCODED_BLOCK) - (lineSeparator.length)" />
    <mutant id="mutant_1851" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="Base32.BYTES_PER_ENCODED_BLOCK" />
    <mutant id="mutant_1858" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(this.encodeSize) - 1" to="(this.encodeSize) / 1" />
    <mutant id="mutant_1859" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(this.encodeSize) - 1" to="(this.encodeSize) * 1" />
    <mutant id="mutant_1856" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(this.encodeSize) - 1" to="1" />
    <mutant id="mutant_1857" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(this.encodeSize) - 1" to="(this.encodeSize) % 1" />
    <mutant id="mutant_1854" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="(Base32.BYTES_PER_ENCODED_BLOCK) * (lineSeparator.length)" />
    <mutant id="mutant_1855" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(this.encodeSize) - 1" to="(this.encodeSize) + 1" />
    <mutant id="mutant_1852" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="(Base32.BYTES_PER_ENCODED_BLOCK) % (lineSeparator.length)" />
    <mutant id="mutant_1853" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="lineSeparator.length" />
    <mutant id="mutant_1849" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="(Base32.BYTES_PER_ENCODED_BLOCK) / (lineSeparator.length)" />
    <mutant id="mutant_1840" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" to="(&quot;lineSeparator must not contain Base32 characters: [&quot; * sep)" />
    <mutant id="mutant_1847" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;)" to="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" />
    <mutant id="mutant_1848" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;)" to="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) % &quot;]&quot;)" />
    <mutant id="mutant_1845" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;)" to="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) * &quot;]&quot;)" />
    <mutant id="mutant_1846" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;)" to="&quot;]&quot;" />
    <mutant id="mutant_1843" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;)" to="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) / &quot;]&quot;)" />
    <mutant id="mutant_1844" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;)" to="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) - &quot;]&quot;)" />
    <mutant id="mutant_1841" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" to="&quot;lineSeparator must not contain Base32 characters: [&quot;" />
    <mutant id="mutant_1842" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" to="(&quot;lineSeparator must not contain Base32 characters: [&quot; - sep)" />
    <mutant id="mutant_1432" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" to="(&quot;AaEeIiOoUuYy&quot; % (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" />
    <mutant id="mutant_1433" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" to="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" />
    <mutant id="mutant_1430" viable="false" in="?" from="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" to="&quot;AaOoNn&quot;" />
    <mutant id="mutant_1431" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" to="&quot;AaEeIiOoUuYy&quot;" />
    <mutant id="mutant_1438" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="(&quot;AaEeIiOoUuYy&quot; / (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" />
    <mutant id="mutant_1439" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" />
    <mutant id="mutant_1436" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" to="(&quot;AaEeIiOoUuYy&quot; * (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" />
    <mutant id="mutant_1437" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="&quot;AaEeIiOoUuYy&quot;" />
    <mutant id="mutant_1434" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" to="(&quot;AaEeIiOoUuYy&quot; - (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" />
    <mutant id="mutant_1435" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" to="(&quot;AaEeIiOoUuYy&quot; / (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" />
    <mutant id="mutant_1421" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" to="&quot;AaEeIiOoUuYy&quot;" />
    <mutant id="mutant_1422" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" to="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" />
    <mutant id="mutant_1420" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" to="(&quot;AaEeIiOoUuYy&quot; - (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" />
    <mutant id="mutant_1429" viable="false" in="?" from="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" to="(&quot;AaOoNn&quot; % (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" />
    <mutant id="mutant_1427" viable="false" in="?" from="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" to="(&quot;AaOoNn&quot; * (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" />
    <mutant id="mutant_1428" viable="false" in="?" from="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" to="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" />
    <mutant id="mutant_1425" viable="false" in="?" from="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" to="(&quot;AaOoNn&quot; - (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" />
    <mutant id="mutant_1426" viable="false" in="?" from="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" to="(&quot;AaOoNn&quot; / (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" />
    <mutant id="mutant_1423" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" to="(&quot;AaEeIiOoUuYy&quot; % (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" />
    <mutant id="mutant_1424" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" to="(&quot;AaEeIiOoUuYy&quot; / (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" />
    <mutant id="mutant_1410" viable="false" in="?" from="(&quot;Cc&quot; + &quot;OoUu&quot;)" to="(&quot;Cc&quot; - &quot;OoUu&quot;)" />
    <mutant id="mutant_1894" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="(context.pos) + savedPos" />
    <mutant id="mutant_1411" viable="false" in="?" from="(&quot;Cc&quot; + &quot;OoUu&quot;)" to="(&quot;Cc&quot; / &quot;OoUu&quot;)" />
    <mutant id="mutant_1895" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="(context.pos) * savedPos" />
    <mutant id="mutant_1892" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="context.pos" />
    <mutant id="mutant_1893" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="savedPos" />
    <mutant id="mutant_1890" viable="false" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; - (context.modulus))" />
    <mutant id="mutant_1891" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="(context.pos) % savedPos" />
    <mutant id="mutant_1418" viable="false" in="?" from="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" to="(&quot;Aa&quot; / (&quot;Cc&quot; + &quot;OoUu&quot;))" />
    <mutant id="mutant_1419" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" to="(&quot;AaEeIiOoUuYy&quot; * (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" />
    <mutant id="mutant_1416" viable="false" in="?" from="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" to="(&quot;Cc&quot; + &quot;OoUu&quot;)" />
    <mutant id="mutant_1417" viable="false" in="?" from="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" to="(&quot;Aa&quot; * (&quot;Cc&quot; + &quot;OoUu&quot;))" />
    <mutant id="mutant_1414" viable="false" in="?" from="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" to="(&quot;Aa&quot; - (&quot;Cc&quot; + &quot;OoUu&quot;))" />
    <mutant id="mutant_1898" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="1" />
    <mutant id="mutant_1415" viable="false" in="?" from="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" to="(&quot;Aa&quot; % (&quot;Cc&quot; + &quot;OoUu&quot;))" />
    <mutant id="mutant_1899" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="((context.modulus) * 1)" />
    <mutant id="mutant_1412" viable="false" in="?" from="(&quot;Cc&quot; + &quot;OoUu&quot;)" to="(&quot;Cc&quot; * &quot;OoUu&quot;)" />
    <mutant id="mutant_1896" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="(context.pos) / savedPos" />
    <mutant id="mutant_1413" viable="false" in="?" from="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" to="&quot;Aa&quot;" />
    <mutant id="mutant_1897" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(context.modulus)" />
    <mutant id="mutant_1409" viable="false" in="?" from="(&quot;Cc&quot; + &quot;OoUu&quot;)" to="&quot;OoUu&quot;" />
    <mutant id="mutant_1883" viable="false" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; % (context.modulus))" />
    <mutant id="mutant_1400" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="index % 2" />
    <mutant id="mutant_1884" viable="false" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; - (context.modulus))" />
    <mutant id="mutant_1881" viable="false" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; * (context.modulus))" />
    <mutant id="mutant_1882" viable="false" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; / (context.modulus))" />
    <mutant id="mutant_1880" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="&quot;Impossible modulus &quot;" />
    <mutant id="mutant_1407" viable="false" in="?" from="(&quot;Cc&quot; + &quot;OoUu&quot;)" to="&quot;Cc&quot;" />
    <mutant id="mutant_1408" viable="false" in="?" from="(&quot;Cc&quot; + &quot;OoUu&quot;)" to="(&quot;Cc&quot; % &quot;OoUu&quot;)" />
    <mutant id="mutant_1405" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index" />
    <mutant id="mutant_1889" viable="false" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; % (context.modulus))" />
    <mutant id="mutant_1406" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index % 1" />
    <mutant id="mutant_1403" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index - 1" />
    <mutant id="mutant_1887" viable="false" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; * (context.modulus))" />
    <mutant id="mutant_1404" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index / 1" />
    <mutant id="mutant_1888" viable="false" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="(&quot;Impossible modulus &quot; / (context.modulus))" />
    <mutant id="mutant_1401" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="1" />
    <mutant id="mutant_1885" viable="false" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="context.modulus" />
    <mutant id="mutant_1402" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="index * 1" />
    <mutant id="mutant_1886" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="&quot;Impossible modulus &quot;" />
    <mutant id="mutant_602" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_603" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_604" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_605" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_600" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_601" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_1480" viable="false" in="?" from="(&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="(&quot;ÁáÉéÍíÓóÚúÝý&quot; - (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" />
    <mutant id="mutant_606" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_607" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_608" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_609" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((value.length()) - 1)" to="(value.length())" />
    <mutant id="mutant_1476" viable="false" in="?" from="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" to="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; * (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" />
    <mutant id="mutant_2323" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; / salt)" />
    <mutant id="mutant_1477" viable="false" in="?" from="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" to="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" />
    <mutant id="mutant_2324" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; * salt)" />
    <mutant id="mutant_1474" viable="false" in="?" from="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" to="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; - (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" />
    <mutant id="mutant_2321" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" to="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) / &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" />
    <mutant id="mutant_1475" viable="false" in="?" from="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" to="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; / (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" />
    <mutant id="mutant_2322" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" to="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) % &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" />
    <mutant id="mutant_1472" viable="false" in="?" from="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" to="&quot;ÃãÕõÑñ&quot;" />
    <mutant id="mutant_1473" viable="false" in="?" from="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" to="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; % (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" />
    <mutant id="mutant_2320" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" to="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) * &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" />
    <mutant id="mutant_1470" viable="false" in="?" from="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" to="(&quot;ÃãÕõÑñ&quot; - (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" />
    <mutant id="mutant_1471" viable="false" in="?" from="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" to="(&quot;ÃãÕõÑñ&quot; % (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" />
    <mutant id="mutant_2329" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(prefix + saltString)" to="(prefix - saltString)" />
    <mutant id="mutant_2327" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; - salt)" />
    <mutant id="mutant_2328" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="&quot;Invalid salt value: &quot;" />
    <mutant id="mutant_1478" viable="false" in="?" from="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" to="&quot;ÂâÊêÎîÔôÛûŶŷ&quot;" />
    <mutant id="mutant_2325" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="salt" />
    <mutant id="mutant_1479" viable="false" in="?" from="(&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" />
    <mutant id="mutant_2326" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; % salt)" />
    <mutant id="mutant_613" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_614" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_615" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 3)" to="(value.length())" />
    <mutant id="mutant_616" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 3)" to="((value.length()) / 3)" />
    <mutant id="mutant_610" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_611" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_612" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_617" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 3)" to="3" />
    <mutant id="mutant_618" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 3)" to="((value.length()) + 3)" />
    <mutant id="mutant_619" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 3)" to="((value.length()) * 3)" />
    <mutant id="mutant_1465" viable="false" in="?" from="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" to="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; / (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" />
    <mutant id="mutant_2312" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" to="(&quot;^&quot; / (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" />
    <mutant id="mutant_1466" viable="false" in="?" from="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" to="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; % (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" />
    <mutant id="mutant_2313" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" to="(&quot;^&quot; * (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" />
    <mutant id="mutant_1463" viable="false" in="?" from="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" to="&quot;ÄäËëÏïÖöÜüŸÿ&quot;" />
    <mutant id="mutant_2310" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" from="((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8)))" to="B64.getRandomSalt(8)" />
    <mutant id="mutant_1464" viable="false" in="?" from="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" to="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" />
    <mutant id="mutant_2311" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" to="(&quot;^&quot; - (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" />
    <mutant id="mutant_1461" viable="false" in="?" from="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" to="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; * (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" />
    <mutant id="mutant_1462" viable="false" in="?" from="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" to="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; - (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" />
    <mutant id="mutant_1460" viable="false" in="?" from="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" to="(&quot;Åå&quot; % (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" />
    <mutant id="mutant_2318" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" to="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" />
    <mutant id="mutant_2319" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" to="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) - &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" />
    <mutant id="mutant_1469" viable="false" in="?" from="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" to="(&quot;ÃãÕõÑñ&quot; / (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" />
    <mutant id="mutant_2316" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" to="(prefix.replace(&quot;$&quot;, &quot;\\$&quot;))" />
    <mutant id="mutant_2317" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" to="&quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;" />
    <mutant id="mutant_1467" viable="false" in="?" from="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" to="(&quot;ÃãÕõÑñ&quot; * (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" />
    <mutant id="mutant_2314" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" to="&quot;^&quot;" />
    <mutant id="mutant_1468" viable="false" in="?" from="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" to="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" />
    <mutant id="mutant_2315" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" to="(&quot;^&quot; % (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" />
    <mutant id="mutant_624" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_625" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_626" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_627" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 2)" to="value.length()" />
    <mutant id="mutant_620" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 3)" to="((value.length()) % 3)" />
    <mutant id="mutant_621" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_622" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_623" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_628" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 2)" to="2" />
    <mutant id="mutant_629" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 2)" to="((value.length()) / 2)" />
    <mutant id="mutant_1454" viable="false" in="?" from="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" to="&quot;ŐőŰű&quot;" />
    <mutant id="mutant_2301" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(Md5Crypt.APR1_PREFIX) + salt" to="(Md5Crypt.APR1_PREFIX) / salt" />
    <mutant id="mutant_1455" viable="false" in="?" from="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" to="(&quot;Åå&quot; - (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" />
    <mutant id="mutant_2302" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(Md5Crypt.APR1_PREFIX) + salt" to="(Md5Crypt.APR1_PREFIX) % salt" />
    <mutant id="mutant_1452" viable="false" in="?" from="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" to="(&quot;Çç&quot; / &quot;ŐőŰű&quot;)" />
    <mutant id="mutant_1453" viable="false" in="?" from="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" to="(&quot;Çç&quot; % &quot;ŐőŰű&quot;)" />
    <mutant id="mutant_2300" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(Md5Crypt.APR1_PREFIX) + salt" to="salt" />
    <mutant id="mutant_1450" viable="false" in="?" from="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" to="&quot;Çç&quot;" />
    <mutant id="mutant_1451" viable="false" in="?" from="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" to="(&quot;Çç&quot; * &quot;ŐőŰű&quot;)" />
    <mutant id="mutant_2309" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" from="((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8)))" to="((Md5Crypt.MD5_PREFIX) / (B64.getRandomSalt(8)))" />
    <mutant id="mutant_2307" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" from="((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8)))" to="((Md5Crypt.MD5_PREFIX) * (B64.getRandomSalt(8)))" />
    <mutant id="mutant_2308" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" from="((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8)))" to="Md5Crypt.MD5_PREFIX" />
    <mutant id="mutant_1458" viable="false" in="?" from="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" to="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" />
    <mutant id="mutant_2305" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" from="((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8)))" to="((Md5Crypt.MD5_PREFIX) - (B64.getRandomSalt(8)))" />
    <mutant id="mutant_1459" viable="false" in="?" from="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" to="(&quot;Åå&quot; * (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" />
    <mutant id="mutant_2306" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" from="((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8)))" to="((Md5Crypt.MD5_PREFIX) % (B64.getRandomSalt(8)))" />
    <mutant id="mutant_1456" viable="false" in="?" from="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" to="(&quot;Åå&quot; / (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" />
    <mutant id="mutant_2303" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(Md5Crypt.APR1_PREFIX) + salt" to="(Md5Crypt.APR1_PREFIX) * salt" />
    <mutant id="mutant_1457" viable="false" in="?" from="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" to="&quot;Åå&quot;" />
    <mutant id="mutant_2304" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(Md5Crypt.APR1_PREFIX) + salt" to="(Md5Crypt.APR1_PREFIX) - salt" />
    <mutant id="mutant_635" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_636" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_637" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_638" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_631" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 2)" to="((value.length()) % 2)" />
    <mutant id="mutant_632" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 2)" to="((value.length()) * 2)" />
    <mutant id="mutant_633" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 1)" to="value.length()" />
    <mutant id="mutant_634" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_639" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_1443" viable="false" in="?" from="&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="&quot;AaEeIiOoUu&quot; % (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" />
    <mutant id="mutant_1444" viable="false" in="?" from="&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="&quot;AaEeIiOoUu&quot; * (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" />
    <mutant id="mutant_1441" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="(&quot;AaEeIiOoUuYy&quot; * (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" />
    <mutant id="mutant_1442" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="(&quot;AaEeIiOoUuYy&quot; % (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" />
    <mutant id="mutant_1440" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="(&quot;AaEeIiOoUuYy&quot; - (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" />
    <mutant id="mutant_1449" viable="false" in="?" from="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" to="(&quot;Çç&quot; - &quot;ŐőŰű&quot;)" />
    <mutant id="mutant_630" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 2)" to="((value.length()) + 2)" />
    <mutant id="mutant_1447" viable="false" in="?" from="&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" />
    <mutant id="mutant_1448" viable="false" in="?" from="&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="&quot;AaEeIiOoUu&quot; / (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" />
    <mutant id="mutant_1445" viable="false" in="?" from="&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="&quot;AaEeIiOoUu&quot; - (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" />
    <mutant id="mutant_1446" viable="false" in="?" from="&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="&quot;AaEeIiOoUu&quot;" />
    <mutant id="mutant_646" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_647" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_648" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_649" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_642" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_643" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_644" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_645" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_2370" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - blocksize)" to="blocksize" />
    <mutant id="mutant_1040" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_2371" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - cp)" to="(keyLen / cp)" />
    <mutant id="mutant_1036" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_2367" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - blocksize)" to="(keyLen / blocksize)" />
    <mutant id="mutant_1037" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_2368" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - blocksize)" to="(keyLen % blocksize)" />
    <mutant id="mutant_1034" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 4)" to="(index % 4)" />
    <mutant id="mutant_2365" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - blocksize)" to="keyLen" />
    <mutant id="mutant_1035" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="1" />
    <mutant id="mutant_2366" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - blocksize)" to="(keyLen + blocksize)" />
    <mutant id="mutant_1032" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 4)" to="(index / 4)" />
    <mutant id="mutant_2363" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; - salt)" />
    <mutant id="mutant_1033" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 4)" to="(index * 4)" />
    <mutant id="mutant_2364" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="&quot;Invalid salt value: &quot;" />
    <mutant id="mutant_1030" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 4)" to="(index + 4)" />
    <mutant id="mutant_2361" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="salt" />
    <mutant id="mutant_1031" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 4)" to="index" />
    <mutant id="mutant_2362" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; % salt)" />
    <mutant id="mutant_640" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_641" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_1038" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_2369" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - blocksize)" to="(keyLen * blocksize)" />
    <mutant id="mutant_1039" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="index" />
    <mutant id="mutant_657" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="1" />
    <mutant id="mutant_658" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_659" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_653" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index - 1)" to="(index / 1)" />
    <mutant id="mutant_654" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index - 1)" to="(index + 1)" />
    <mutant id="mutant_655" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index - 1)" to="index" />
    <mutant id="mutant_656" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index - 1)" to="(index % 1)" />
    <mutant id="mutant_2360" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; * salt)" />
    <mutant id="mutant_1025" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="(index / 2)" />
    <mutant id="mutant_2356" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))" to="B64.getRandomSalt(8)" />
    <mutant id="mutant_1026" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="index" />
    <mutant id="mutant_2357" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))" to="(Sha2Crypt.SHA256_PREFIX) / (B64.getRandomSalt(8))" />
    <mutant id="mutant_1023" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="2" />
    <mutant id="mutant_2354" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))" to="(Sha2Crypt.SHA256_PREFIX) % (B64.getRandomSalt(8))" />
    <mutant id="mutant_1024" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="(index * 2)" />
    <mutant id="mutant_2355" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))" to="(Sha2Crypt.SHA256_PREFIX) - (B64.getRandomSalt(8))" />
    <mutant id="mutant_1021" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_2352" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7)" to="(i - 7)" />
    <mutant id="mutant_1022" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_2353" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))" to="(Sha2Crypt.SHA256_PREFIX) * (B64.getRandomSalt(8))" />
    <mutant id="mutant_2350" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7)" to="7" />
    <mutant id="mutant_1020" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_2351" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7)" to="(i + 7)" />
    <mutant id="mutant_650" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_651" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index - 1)" to="1" />
    <mutant id="mutant_652" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index - 1)" to="(index * 1)" />
    <mutant id="mutant_1029" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 4)" to="4" />
    <mutant id="mutant_1027" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="(index + 2)" />
    <mutant id="mutant_2358" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))" to="Sha2Crypt.SHA256_PREFIX" />
    <mutant id="mutant_1028" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="(index % 2)" />
    <mutant id="mutant_2359" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="(&quot;Invalid salt value: &quot; / salt)" />
    <mutant id="mutant_668" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) * 1)" />
    <mutant id="mutant_669" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 2)" to="2" />
    <mutant id="mutant_664" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_665" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_666" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) + 1)" />
    <mutant id="mutant_667" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((value.length()) - 1)" to="((value.length()) % 1)" />
    <mutant id="mutant_1014" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index / 1" />
    <mutant id="mutant_1498" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) + (name2.length()))" to="((name1.length()) / (name2.length()))" />
    <mutant id="mutant_2345" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3)" to="(i - 3)" />
    <mutant id="mutant_1015" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index" />
    <mutant id="mutant_1499" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) + (name2.length()))" to="((name1.length()) - (name2.length()))" />
    <mutant id="mutant_2346" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3)" to="(i + 3)" />
    <mutant id="mutant_1012" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index * 1" />
    <mutant id="mutant_1496" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) + (name2.length()))" to="name1.length()" />
    <mutant id="mutant_2343" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3)" to="3" />
    <mutant id="mutant_1013" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index - 1" />
    <mutant id="mutant_1497" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) + (name2.length()))" to="((name1.length()) * (name2.length()))" />
    <mutant id="mutant_2344" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3)" to="(i * 3)" />
    <mutant id="mutant_1010" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index % 2" />
    <mutant id="mutant_1494" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) - (name2.length()))" to="((name1.length()) + (name2.length()))" />
    <mutant id="mutant_2341" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3)" to="(i / 3)" />
    <mutant id="mutant_1011" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="1" />
    <mutant id="mutant_1495" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) - (name2.length()))" to="((name1.length()) % (name2.length()))" />
    <mutant id="mutant_2342" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3)" to="i" />
    <mutant id="mutant_1492" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) - (name2.length()))" to="((name1.length()) * (name2.length()))" />
    <mutant id="mutant_1493" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) - (name2.length()))" to="((name1.length()) / (name2.length()))" />
    <mutant id="mutant_2340" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((prefix + saltString) + &quot;$&quot;)" to="((prefix + saltString) * &quot;$&quot;)" />
    <mutant id="mutant_660" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_661" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_662" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_663" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((value.length()) - 1)" to="(value.length())" />
    <mutant id="mutant_1018" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="1" />
    <mutant id="mutant_2349" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7)" to="(i * 7)" />
    <mutant id="mutant_1019" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="((value.length()) / 1)" />
    <mutant id="mutant_1016" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="index % 1" />
    <mutant id="mutant_2347" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7)" to="i" />
    <mutant id="mutant_1017" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(value.length())" />
    <mutant id="mutant_2348" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7)" to="(i / 7)" />
    <mutant id="mutant_679" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="(start / length)" />
    <mutant id="mutant_675" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="(start - length)" />
    <mutant id="mutant_676" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="length" />
    <mutant id="mutant_677" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="(start * length)" />
    <mutant id="mutant_678" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="(start % length)" />
    <mutant id="mutant_1490" viable="false" in="?" from="&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="&quot;ÀàÈèÌìÒòÙù&quot; % (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" />
    <mutant id="mutant_1491" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) - (name2.length()))" to="name1.length()" />
    <mutant id="mutant_1003" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="index" />
    <mutant id="mutant_1487" viable="false" in="?" from="&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="&quot;ÀàÈèÌìÒòÙù&quot;" />
    <mutant id="mutant_2334" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(prefix + saltString)" to="(prefix % saltString)" />
    <mutant id="mutant_1004" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index % 1)" />
    <mutant id="mutant_1488" viable="false" in="?" from="&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="&quot;ÀàÈèÌìÒòÙù&quot; * (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" />
    <mutant id="mutant_2335" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((prefix + saltString) + &quot;$&quot;)" to="((prefix + saltString) - &quot;$&quot;)" />
    <mutant id="mutant_1001" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index - 1)" />
    <mutant id="mutant_1485" viable="false" in="?" from="&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="&quot;ÀàÈèÌìÒòÙù&quot; - (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" />
    <mutant id="mutant_2332" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(prefix + saltString)" to="(prefix / saltString)" />
    <mutant id="mutant_1002" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index / 1)" />
    <mutant id="mutant_1486" viable="false" in="?" from="&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="&quot;ÀàÈèÌìÒòÙù&quot; / (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" />
    <mutant id="mutant_2333" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(prefix + saltString)" to="saltString" />
    <mutant id="mutant_1483" viable="false" in="?" from="(&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="&quot;ÁáÉéÍíÓóÚúÝý&quot;" />
    <mutant id="mutant_2330" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(prefix + saltString)" to="(prefix * saltString)" />
    <mutant id="mutant_1000" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="(index * 1)" />
    <mutant id="mutant_1484" viable="false" in="?" from="(&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="(&quot;ÁáÉéÍíÓóÚúÝý&quot; / (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" />
    <mutant id="mutant_2331" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(prefix + saltString)" to="prefix" />
    <mutant id="mutant_1481" viable="false" in="?" from="(&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="(&quot;ÁáÉéÍíÓóÚúÝý&quot; * (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" />
    <mutant id="mutant_1482" viable="false" in="?" from="(&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="(&quot;ÁáÉéÍíÓóÚúÝý&quot; % (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" />
    <mutant id="mutant_671" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 2)" to="(index - 2)" />
    <mutant id="mutant_672" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 2)" to="(index / 2)" />
    <mutant id="mutant_673" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 2)" to="index" />
    <mutant id="mutant_1009" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index" />
    <mutant id="mutant_674" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 2)" to="(index % 2)" />
    <mutant id="mutant_1007" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index - 2" />
    <mutant id="mutant_2338" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((prefix + saltString) + &quot;$&quot;)" to="(prefix + saltString)" />
    <mutant id="mutant_1008" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index / 2" />
    <mutant id="mutant_2339" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((prefix + saltString) + &quot;$&quot;)" to="((prefix + saltString) % &quot;$&quot;)" />
    <mutant id="mutant_1005" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="2" />
    <mutant id="mutant_1489" viable="false" in="?" from="&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" />
    <mutant id="mutant_2336" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((prefix + saltString) + &quot;$&quot;)" to="&quot;$&quot;" />
    <mutant id="mutant_670" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 2)" to="(index * 2)" />
    <mutant id="mutant_1006" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="index * 2" />
    <mutant id="mutant_2337" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((prefix + saltString) + &quot;$&quot;)" to="((prefix + saltString) / &quot;$&quot;)" />
  </mutants>
</mutation>
