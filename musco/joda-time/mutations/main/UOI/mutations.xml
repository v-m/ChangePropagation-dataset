<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="UOI" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="401883">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_569" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.length()) - position" to="((text.length()) - position) - 1" />
    <mutant id="mutant_565" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(org.joda.time.ReadablePartial)" from="year % 100" to="(year % 100) + 1" />
    <mutant id="mutant_566" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(org.joda.time.ReadablePartial)" from="year % 100" to="(year % 100) - 1" />
    <mutant id="mutant_567" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.length()) - position" to="((text.length()) - position) * -1" />
    <mutant id="mutant_568" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.length()) - position" to="((text.length()) - position) + 1" />
    <mutant id="mutant_3020" viable="true" in="org.joda.time.field.ScaledDurationField.getValueAsLong(long)" from="(getWrappedField().getValueAsLong(duration)) / (iScalar)" to="((getWrappedField().getValueAsLong(duration)) / (iScalar)) + 1" />
    <mutant id="mutant_4351" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + 1)" />
    <mutant id="mutant_4350" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3017" viable="true" in="org.joda.time.field.ScaledDurationField.getUnitMillis()" from="(getWrappedField().getUnitMillis()) * (iScalar)" to="((getWrappedField().getUnitMillis()) * (iScalar)) + 1" />
    <mutant id="mutant_4348" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3016" viable="true" in="org.joda.time.field.ScaledDurationField.getUnitMillis()" from="(getWrappedField().getUnitMillis()) * (iScalar)" to="((getWrappedField().getUnitMillis()) * (iScalar)) * -1" />
    <mutant id="mutant_4347" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3015" viable="true" in="org.joda.time.field.ScaledDurationField.getUnitMillis()" from="(getWrappedField().getUnitMillis()) * (iScalar)" to="((getWrappedField().getUnitMillis()) * (iScalar)) - 1" />
    <mutant id="mutant_4346" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_3014" viable="true" in="org.joda.time.field.ScaledDurationField.getMillis(int,long)" from="((long)(value)) * ((long)(iScalar))" to="(((long)(value)) * ((long)(iScalar))) - 1" />
    <mutant id="mutant_4345" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3013" viable="true" in="org.joda.time.field.ScaledDurationField.getMillis(int,long)" from="((long)(value)) * ((long)(iScalar))" to="(((long)(value)) * ((long)(iScalar))) + 1" />
    <mutant id="mutant_4344" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) + 1)" />
    <mutant id="mutant_3012" viable="true" in="org.joda.time.field.ScaledDurationField.getMillis(int,long)" from="((long)(value)) * ((long)(iScalar))" to="(((long)(value)) * ((long)(iScalar))) * -1" />
    <mutant id="mutant_4343" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) - 1)" />
    <mutant id="mutant_3011" viable="true" in="org.joda.time.field.ScaledDurationField.getMillis(int)" from="((long)(value)) * ((long)(iScalar))" to="(((long)(value)) * ((long)(iScalar))) - 1" />
    <mutant id="mutant_4342" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) * -1)" />
    <mutant id="mutant_3010" viable="true" in="org.joda.time.field.ScaledDurationField.getMillis(int)" from="((long)(value)) * ((long)(iScalar))" to="(((long)(value)) * ((long)(iScalar))) + 1" />
    <mutant id="mutant_4341" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + 1)" />
    <mutant id="mutant_561" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(long,org.joda.time.Chronology)" from="year % 100" to="(year % 100) * -1" />
    <mutant id="mutant_562" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(long,org.joda.time.Chronology)" from="year % 100" to="(year % 100) + 1" />
    <mutant id="mutant_563" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(long,org.joda.time.Chronology)" from="year % 100" to="(year % 100) - 1" />
    <mutant id="mutant_564" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(org.joda.time.ReadablePartial)" from="year % 100" to="(year % 100) * -1" />
    <mutant id="mutant_3019" viable="true" in="org.joda.time.field.ScaledDurationField.getValueAsLong(long)" from="(getWrappedField().getValueAsLong(duration)) / (iScalar)" to="((getWrappedField().getValueAsLong(duration)) / (iScalar)) * -1" />
    <mutant id="mutant_560" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 3)" to="!((displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 3))" />
    <mutant id="mutant_3018" viable="true" in="org.joda.time.field.ScaledDurationField.getValueAsLong(long)" from="(getWrappedField().getValueAsLong(duration)) / (iScalar)" to="((getWrappedField().getValueAsLong(duration)) / (iScalar)) - 1" />
    <mutant id="mutant_4349" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_576" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="hasSignChar || (length != 2)" to="!(hasSignChar || (length != 2))" />
    <mutant id="mutant_577" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.charAt(i++)) - '0'" to="((text.charAt(i++)) - '0') * -1" />
    <mutant id="mutant_578" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.charAt(i++)) - '0'" to="((text.charAt(i++)) - '0') + 1" />
    <mutant id="mutant_579" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.charAt(i++)) - '0'" to="((text.charAt(i++)) - '0') - 1" />
    <mutant id="mutant_4340" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) * -1)" />
    <mutant id="mutant_3006" viable="true" in="org.joda.time.field.ScaledDurationField.getDifferenceAsLong(long,long)" from="(getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iScalar)" to="((getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iScalar)) - 1" />
    <mutant id="mutant_4337" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + 1)" />
    <mutant id="mutant_3005" viable="true" in="org.joda.time.field.ScaledDurationField.add(long,int)" from="((long)(value)) * ((long)(iScalar))" to="(((long)(value)) * ((long)(iScalar))) - 1" />
    <mutant id="mutant_4336" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) * -1)" />
    <mutant id="mutant_3004" viable="true" in="org.joda.time.field.ScaledDurationField.add(long,int)" from="((long)(value)) * ((long)(iScalar))" to="(((long)(value)) * ((long)(iScalar))) + 1" />
    <mutant id="mutant_4335" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3003" viable="true" in="org.joda.time.field.ScaledDurationField.add(long,int)" from="((long)(value)) * ((long)(iScalar))" to="(((long)(value)) * ((long)(iScalar))) * -1" />
    <mutant id="mutant_4334" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_3002" viable="true" in="org.joda.time.field.ScaledDurationField.getValue(long,long)" from="(getWrappedField().getValue(duration, instant)) / (iScalar)" to="((getWrappedField().getValue(duration, instant)) / (iScalar)) - 1" />
    <mutant id="mutant_4333" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3001" viable="true" in="org.joda.time.field.ScaledDurationField.getValue(long,long)" from="(getWrappedField().getValue(duration, instant)) / (iScalar)" to="((getWrappedField().getValue(duration, instant)) / (iScalar)) * -1" />
    <mutant id="mutant_4332" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName()))" to="((((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName())) + 1)" />
    <mutant id="mutant_3000" viable="true" in="org.joda.time.field.ScaledDurationField.getValue(long,long)" from="(getWrappedField().getValue(duration, instant)) / (iScalar)" to="((getWrappedField().getValue(duration, instant)) / (iScalar)) + 1" />
    <mutant id="mutant_4331" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName()))" to="((((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName())) - 1)" />
    <mutant id="mutant_4330" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName()))" to="((((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName())) * -1)" />
    <mutant id="mutant_572" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_573" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="(!((c == '-') || (c == '+')))" />
    <mutant id="mutant_574" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(length == 0) &amp;&amp; ((c == '-') || (c == '+'))" to="!((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" />
    <mutant id="mutant_575" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="!((c &lt; '0') || (c &gt; '9'))" />
    <mutant id="mutant_3009" viable="true" in="org.joda.time.field.ScaledDurationField.getMillis(int)" from="((long)(value)) * ((long)(iScalar))" to="(((long)(value)) * ((long)(iScalar))) * -1" />
    <mutant id="mutant_570" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_3008" viable="true" in="org.joda.time.field.ScaledDurationField.getDifferenceAsLong(long,long)" from="(getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iScalar)" to="((getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iScalar)) + 1" />
    <mutant id="mutant_4339" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) - 1)" />
    <mutant id="mutant_571" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_3007" viable="true" in="org.joda.time.field.ScaledDurationField.getDifferenceAsLong(long,long)" from="(getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iScalar)" to="((getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iScalar)) * -1" />
    <mutant id="mutant_4338" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) - 1)" />
    <mutant id="mutant_587" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0') * -1" />
    <mutant id="mutant_588" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0') + 1" />
    <mutant id="mutant_589" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="!((c &lt; '0') || (c &gt; '9'))" />
    <mutant id="mutant_4326" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) - 1)" />
    <mutant id="mutant_4325" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) * -1)" />
    <mutant id="mutant_1298" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)" from="(getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + millisOfDay" to="((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + millisOfDay) * -1" />
    <mutant id="mutant_4324" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + 1)" />
    <mutant id="mutant_1299" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)" from="(getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + millisOfDay" to="((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + millisOfDay) + 1" />
    <mutant id="mutant_4323" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_1296" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1)" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) + 1)" />
    <mutant id="mutant_4322" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1297" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)" from="(getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + millisOfDay" to="((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + millisOfDay) - 1" />
    <mutant id="mutant_4321" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1294" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1)" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) * -1)" />
    <mutant id="mutant_4320" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) + 1)" />
    <mutant id="mutant_1295" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1)" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) - 1)" />
    <mutant id="mutant_583" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++)))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - 1)" />
    <mutant id="mutant_584" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++)))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) + 1)" />
    <mutant id="mutant_585" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++)))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) * -1)" />
    <mutant id="mutant_586" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0') - 1" />
    <mutant id="mutant_580" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) - 1)" />
    <mutant id="mutant_4329" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;)" to="(((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) - 1)" />
    <mutant id="mutant_581" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + 1)" />
    <mutant id="mutant_4328" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;)" to="(((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + 1)" />
    <mutant id="mutant_582" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) * -1)" />
    <mutant id="mutant_4327" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;)" to="(((&quot;Types array must not contain duplicate unsupported: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) * -1)" />
    <mutant id="mutant_598" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((year &lt;&lt; 3) + (year &lt;&lt; 1))" to="(((year &lt;&lt; 3) + (year &lt;&lt; 1)) + 1)" />
    <mutant id="mutant_599" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((year &lt;&lt; 3) + (year &lt;&lt; 1))" to="(((year &lt;&lt; 3) + (year &lt;&lt; 1)) - 1)" />
    <mutant id="mutant_1292" viable="true" in="org.joda.time.chrono.BasicChronology.toString()" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_1293" viable="true" in="org.joda.time.chrono.BasicChronology.toString()" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1290" viable="true" in="org.joda.time.chrono.BasicChronology.hashCode()" from="(((getClass().getName().hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())" to="((((getClass().getName().hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) * -1" />
    <mutant id="mutant_1291" viable="true" in="org.joda.time.chrono.BasicChronology.toString()" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1289" viable="true" in="org.joda.time.chrono.BasicChronology.hashCode()" from="(((getClass().getName().hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())" to="((((getClass().getName().hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) - 1" />
    <mutant id="mutant_4315" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) - 1)" />
    <mutant id="mutant_4314" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) - 1)" />
    <mutant id="mutant_1287" viable="true" in="org.joda.time.chrono.BasicChronology.hashCode()" from="(((getClass().getName().hashCode()) * 11) + (getZone().hashCode()))" to="((((getClass().getName().hashCode()) * 11) + (getZone().hashCode())) * -1)" />
    <mutant id="mutant_4313" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + 1)" />
    <mutant id="mutant_1288" viable="true" in="org.joda.time.chrono.BasicChronology.hashCode()" from="(((getClass().getName().hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())" to="((((getClass().getName().hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) + 1" />
    <mutant id="mutant_4312" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) * -1)" />
    <mutant id="mutant_1285" viable="true" in="org.joda.time.chrono.BasicChronology.hashCode()" from="(((getClass().getName().hashCode()) * 11) + (getZone().hashCode()))" to="((((getClass().getName().hashCode()) * 11) + (getZone().hashCode())) + 1)" />
    <mutant id="mutant_4311" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_1286" viable="true" in="org.joda.time.chrono.BasicChronology.hashCode()" from="(((getClass().getName().hashCode()) * 11) + (getZone().hashCode()))" to="((((getClass().getName().hashCode()) * 11) + (getZone().hashCode())) - 1)" />
    <mutant id="mutant_4310" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1283" viable="true" in="org.joda.time.chrono.BasicChronology.hashCode()" from="((getClass().getName().hashCode()) * 11)" to="(((getClass().getName().hashCode()) * 11) + 1)" />
    <mutant id="mutant_1284" viable="true" in="org.joda.time.chrono.BasicChronology.hashCode()" from="((getClass().getName().hashCode()) * 11)" to="(((getClass().getName().hashCode()) * 11) * -1)" />
    <mutant id="mutant_594" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + 1)" to="((position + 1) * -1)" />
    <mutant id="mutant_595" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + 1)" to="((position + 1) + 1)" />
    <mutant id="mutant_596" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="!((c &lt; '0') || (c &gt; '9'))" />
    <mutant id="mutant_597" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((year &lt;&lt; 3) + (year &lt;&lt; 1))" to="(((year &lt;&lt; 3) + (year &lt;&lt; 1)) * -1)" />
    <mutant id="mutant_590" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="c - '0'" to="(c - '0') * -1" />
    <mutant id="mutant_4319" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) - 1)" />
    <mutant id="mutant_591" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="c - '0'" to="(c - '0') + 1" />
    <mutant id="mutant_4318" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) * -1)" />
    <mutant id="mutant_592" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="c - '0'" to="(c - '0') - 1" />
    <mutant id="mutant_4317" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + 1)" />
    <mutant id="mutant_593" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + 1)" to="((position + 1) - 1)" />
    <mutant id="mutant_4316" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) * -1)" />
    <mutant id="mutant_3064" viable="false" in="?" from="cacheSize - 1" to="(cacheSize - 1) * -1" />
    <mutant id="mutant_4395" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName()))" to="((((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName())) * -1)" />
    <mutant id="mutant_3063" viable="false" in="?" from="cacheSize - 1" to="(cacheSize - 1) - 1" />
    <mutant id="mutant_4394" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName()))" to="((((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName())) - 1)" />
    <mutant id="mutant_3062" viable="false" in="?" from="cacheSize - 1" to="(cacheSize - 1) + 1" />
    <mutant id="mutant_4393" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName()))" to="((((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName())) + 1)" />
    <mutant id="mutant_3061" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])" from="(getWrappedField().getMaximumValue(instant, values)) + 1" to="((getWrappedField().getMaximumValue(instant, values)) + 1) + 1" />
    <mutant id="mutant_4392" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;)" to="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) * -1)" />
    <mutant id="mutant_3060" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])" from="(getWrappedField().getMaximumValue(instant, values)) + 1" to="((getWrappedField().getMaximumValue(instant, values)) + 1) - 1" />
    <mutant id="mutant_4391" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;)" to="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) - 1)" />
    <mutant id="mutant_4390" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;)" to="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + 1)" />
    <mutant id="mutant_3059" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])" from="(getWrappedField().getMaximumValue(instant, values)) + 1" to="((getWrappedField().getMaximumValue(instant, values)) + 1) * -1" />
    <mutant id="mutant_3058" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)" from="(getWrappedField().getMaximumValue(instant)) + 1" to="((getWrappedField().getMaximumValue(instant)) + 1) * -1" />
    <mutant id="mutant_4389" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) * -1)" />
    <mutant id="mutant_3057" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)" from="(getWrappedField().getMaximumValue(instant)) + 1" to="((getWrappedField().getMaximumValue(instant)) + 1) + 1" />
    <mutant id="mutant_4388" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) - 1)" />
    <mutant id="mutant_3056" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)" from="(getWrappedField().getMaximumValue(instant)) + 1" to="((getWrappedField().getMaximumValue(instant)) + 1) - 1" />
    <mutant id="mutant_4387" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + 1)" />
    <mutant id="mutant_3055" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(long)" from="(getWrappedField().getMaximumValue(instant)) + 1" to="((getWrappedField().getMaximumValue(instant)) + 1) * -1" />
    <mutant id="mutant_4386" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3054" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(long)" from="(getWrappedField().getMaximumValue(instant)) + 1" to="((getWrappedField().getMaximumValue(instant)) + 1) + 1" />
    <mutant id="mutant_4385" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_3053" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(long)" from="(getWrappedField().getMaximumValue(instant)) + 1" to="((getWrappedField().getMaximumValue(instant)) + 1) - 1" />
    <mutant id="mutant_4384" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3052" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue()" from="(getWrappedField().getMaximumValue()) + 1" to="((getWrappedField().getMaximumValue()) + 1) + 1" />
    <mutant id="mutant_4383" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) + 1)" />
    <mutant id="mutant_3051" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue()" from="(getWrappedField().getMaximumValue()) + 1" to="((getWrappedField().getMaximumValue()) + 1) - 1" />
    <mutant id="mutant_4382" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) - 1)" />
    <mutant id="mutant_3050" viable="true" in="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue()" from="(getWrappedField().getMaximumValue()) + 1" to="((getWrappedField().getMaximumValue()) + 1) * -1" />
    <mutant id="mutant_4381" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) * -1)" />
    <mutant id="mutant_4380" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + 1)" />
    <mutant id="mutant_3049" viable="false" in="org.joda.time.field.UnsupportedDurationField.unsupported()" from="((iType) + &quot; field is unsupported&quot;)" to="(((iType) + &quot; field is unsupported&quot;) - 1)" />
    <mutant id="mutant_3048" viable="true" in="org.joda.time.field.UnsupportedDurationField.unsupported()" from="((iType) + &quot; field is unsupported&quot;)" to="(((iType) + &quot; field is unsupported&quot;) + 1)" />
    <mutant id="mutant_4379" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) * -1)" />
    <mutant id="mutant_3047" viable="false" in="org.joda.time.field.UnsupportedDurationField.unsupported()" from="((iType) + &quot; field is unsupported&quot;)" to="(((iType) + &quot; field is unsupported&quot;) * -1)" />
    <mutant id="mutant_4378" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) - 1)" />
    <mutant id="mutant_3046" viable="true" in="org.joda.time.field.UnsupportedDurationField.toString()" from="(&quot;UnsupportedDurationField[&quot; + (getName())) + ']'" to="((&quot;UnsupportedDurationField[&quot; + (getName())) + ']') + 1" />
    <mutant id="mutant_4377" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) - 1)" />
    <mutant id="mutant_3045" viable="false" in="org.joda.time.field.UnsupportedDurationField.toString()" from="(&quot;UnsupportedDurationField[&quot; + (getName())) + ']'" to="((&quot;UnsupportedDurationField[&quot; + (getName())) + ']') - 1" />
    <mutant id="mutant_4376" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + 1)" />
    <mutant id="mutant_3044" viable="false" in="org.joda.time.field.UnsupportedDurationField.toString()" from="(&quot;UnsupportedDurationField[&quot; + (getName())) + ']'" to="((&quot;UnsupportedDurationField[&quot; + (getName())) + ']') * -1" />
    <mutant id="mutant_4375" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) * -1)" />
    <mutant id="mutant_3043" viable="true" in="org.joda.time.field.UnsupportedDurationField.toString()" from="(&quot;UnsupportedDurationField[&quot; + (getName()))" to="((&quot;UnsupportedDurationField[&quot; + (getName())) + 1)" />
    <mutant id="mutant_4374" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3042" viable="false" in="org.joda.time.field.UnsupportedDurationField.toString()" from="(&quot;UnsupportedDurationField[&quot; + (getName()))" to="((&quot;UnsupportedDurationField[&quot; + (getName())) - 1)" />
    <mutant id="mutant_4373" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_3041" viable="false" in="org.joda.time.field.UnsupportedDurationField.toString()" from="(&quot;UnsupportedDurationField[&quot; + (getName()))" to="((&quot;UnsupportedDurationField[&quot; + (getName())) * -1)" />
    <mutant id="mutant_4372" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3040" viable="true" in="org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getDurationField()) != durationField)" to="!((field != null) &amp;&amp; ((field.getDurationField()) != durationField))" />
    <mutant id="mutant_4371" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) + 1)" />
    <mutant id="mutant_4370" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) - 1)" />
    <mutant id="mutant_3039" viable="false" in="org.joda.time.field.UnsupportedDateTimeField.unsupported()" from="((iType) + &quot; field is unsupported&quot;)" to="(((iType) + &quot; field is unsupported&quot;) * -1)" />
    <mutant id="mutant_3038" viable="false" in="org.joda.time.field.UnsupportedDateTimeField.unsupported()" from="((iType) + &quot; field is unsupported&quot;)" to="(((iType) + &quot; field is unsupported&quot;) - 1)" />
    <mutant id="mutant_4369" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="((((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) * -1)" />
    <mutant id="mutant_3037" viable="true" in="org.joda.time.field.UnsupportedDateTimeField.unsupported()" from="((iType) + &quot; field is unsupported&quot;)" to="(((iType) + &quot; field is unsupported&quot;) + 1)" />
    <mutant id="mutant_4368" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + 1)" />
    <mutant id="mutant_3036" viable="true" in="org.joda.time.field.UnsupportedDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(type == null) || (durationField == null)" to="!((type == null) || (durationField == null))" />
    <mutant id="mutant_4367" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) * -1)" />
    <mutant id="mutant_3035" viable="true" in="org.joda.time.field.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="(skip + 1)" to="((skip + 1) + 1)" />
    <mutant id="mutant_4366" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="(((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + &quot; &lt; &quot;) - 1)" />
    <mutant id="mutant_3034" viable="true" in="org.joda.time.field.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="(skip + 1)" to="((skip + 1) * -1)" />
    <mutant id="mutant_4365" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) - 1)" />
    <mutant id="mutant_3033" viable="true" in="org.joda.time.field.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="(skip + 1)" to="((skip + 1) - 1)" />
    <mutant id="mutant_4364" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) + 1)" />
    <mutant id="mutant_3032" viable="true" in="org.joda.time.field.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="min + 1" to="(min + 1) - 1" />
    <mutant id="mutant_4363" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must be in order largest-smallest: &quot; + (types[(i - 1)].getName())) * -1)" />
    <mutant id="mutant_3031" viable="true" in="org.joda.time.field.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="min + 1" to="(min + 1) * -1" />
    <mutant id="mutant_4362" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3030" viable="true" in="org.joda.time.field.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="min + 1" to="(min + 1) + 1" />
    <mutant id="mutant_4361" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4360" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3028" viable="true" in="org.joda.time.field.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="skip + 1" to="(skip + 1) * -1" />
    <mutant id="mutant_4359" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName()))" to="((((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName())) * -1)" />
    <mutant id="mutant_3027" viable="true" in="org.joda.time.field.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="skip + 1" to="(skip + 1) - 1" />
    <mutant id="mutant_4358" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName()))" to="((((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName())) - 1)" />
    <mutant id="mutant_3026" viable="true" in="org.joda.time.field.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="min - 1" to="(min - 1) * -1" />
    <mutant id="mutant_4357" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName()))" to="((((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + (loopType.getName())) + 1)" />
    <mutant id="mutant_3025" viable="true" in="org.joda.time.field.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="min - 1" to="(min - 1) - 1" />
    <mutant id="mutant_4356" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;)" to="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) * -1)" />
    <mutant id="mutant_3024" viable="true" in="org.joda.time.field.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="min - 1" to="(min - 1) + 1" />
    <mutant id="mutant_4355" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;)" to="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) - 1)" />
    <mutant id="mutant_3023" viable="true" in="org.joda.time.field.ScaledDurationField.getValueAsLong(long,long)" from="(getWrappedField().getValueAsLong(duration, instant)) / (iScalar)" to="((getWrappedField().getValueAsLong(duration, instant)) / (iScalar)) + 1" />
    <mutant id="mutant_4354" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;)" to="(((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) + &quot; and &quot;) + 1)" />
    <mutant id="mutant_3022" viable="true" in="org.joda.time.field.ScaledDurationField.getValueAsLong(long,long)" from="(getWrappedField().getValueAsLong(duration, instant)) / (iScalar)" to="((getWrappedField().getValueAsLong(duration, instant)) / (iScalar)) - 1" />
    <mutant id="mutant_4353" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) * -1)" />
    <mutant id="mutant_3021" viable="true" in="org.joda.time.field.ScaledDurationField.getValueAsLong(long,long)" from="(getWrappedField().getValueAsLong(duration, instant)) / (iScalar)" to="((getWrappedField().getValueAsLong(duration, instant)) / (iScalar)) * -1" />
    <mutant id="mutant_4352" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName()))" to="((&quot;Types array must not contain duplicate: &quot; + (types[(i - 1)].getName())) - 1)" />
    <mutant id="mutant_3029" viable="true" in="org.joda.time.field.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)" from="skip + 1" to="(skip + 1) + 1" />
    <mutant id="mutant_3099" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(long,int,int)" from="next - offset" to="(next - offset) - 1" />
    <mutant id="mutant_3098" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(long,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) - 1" />
    <mutant id="mutant_3097" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(long,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) * -1" />
    <mutant id="mutant_3096" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(long,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) + 1" />
    <mutant id="mutant_3095" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))) &amp;&amp; ((iMillisOfDay) == (other.iMillisOfDay))" to="!(((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))) &amp;&amp; ((iMillisOfDay) == (other.iMillisOfDay)))" />
    <mutant id="mutant_3094" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance)))" to="(!((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))))" />
    <mutant id="mutant_3093" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek)))" to="(!(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))))" />
    <mutant id="mutant_3092" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth)))" to="(!((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))))" />
    <mutant id="mutant_3091" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear)))" to="(!(((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))))" />
    <mutant id="mutant_3090" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="(&quot;Unknown mode: &quot; + mode)" to="((&quot;Unknown mode: &quot; + mode) + 1)" />
    <mutant id="mutant_3089" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="(&quot;Unknown mode: &quot; + mode)" to="((&quot;Unknown mode: &quot; + mode) - 1)" />
    <mutant id="mutant_3088" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="(&quot;Unknown mode: &quot; + mode)" to="((&quot;Unknown mode: &quot; + mode) * -1)" />
    <mutant id="mutant_3087" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w')) &amp;&amp; (mode != 's')" to="!(((mode != 'u') &amp;&amp; (mode != 'w')) &amp;&amp; (mode != 's'))" />
    <mutant id="mutant_3086" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w'))" to="(!((mode != 'u') &amp;&amp; (mode != 'w')))" />
    <mutant id="mutant_3085" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(start &gt; end ? start : end) - 1" to="((start &gt; end ? start : end) - 1) + 1" />
    <mutant id="mutant_3084" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(start &gt; end ? start : end) - 1" to="((start &gt; end ? start : end) - 1) - 1" />
    <mutant id="mutant_3083" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(start &gt; end ? start : end) - 1" to="((start &gt; end ? start : end) - 1) * -1" />
    <mutant id="mutant_3082" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (end &gt; 0)" to="!((instant &lt; 0) &amp;&amp; (end &gt; 0))" />
    <mutant id="mutant_3081" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (start &gt; 0)" to="!((instant &lt; 0) &amp;&amp; (start &gt; 0))" />
    <mutant id="mutant_3080" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (end &lt; 0)" to="!((instant &gt; 0) &amp;&amp; (end &lt; 0))" />
    <mutant id="mutant_3079" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (start &lt; 0)" to="!((instant &gt; 0) &amp;&amp; (start &lt; 0))" />
    <mutant id="mutant_3078" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(long)" from="(iStandardOffset) + (findMatchingRecurrence(instant).getSaveMillis())" to="((iStandardOffset) + (findMatchingRecurrence(instant).getSaveMillis())) + 1" />
    <mutant id="mutant_3077" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(long)" from="(iStandardOffset) + (findMatchingRecurrence(instant).getSaveMillis())" to="((iStandardOffset) + (findMatchingRecurrence(instant).getSaveMillis())) * -1" />
    <mutant id="mutant_3076" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(long)" from="(iStandardOffset) + (findMatchingRecurrence(instant).getSaveMillis())" to="((iStandardOffset) + (findMatchingRecurrence(instant).getSaveMillis())) - 1" />
    <mutant id="mutant_3075" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))) &amp;&amp; (iEndRecurrence.equals(other.iEndRecurrence))" to="!((((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))) &amp;&amp; (iEndRecurrence.equals(other.iEndRecurrence)))" />
    <mutant id="mutant_3074" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence)))" to="(!(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))))" />
    <mutant id="mutant_3073" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="(!((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))))" />
    <mutant id="mutant_3072" viable="true" in="org.joda.time.tz.CachedDateTimeZone.getInfo(long)" from="(info == null) || (((int)(((info.iPeriodStart) &gt;&gt; 32))) != period)" to="!((info == null) || (((int)(((info.iPeriodStart) &gt;&gt; 32))) != period))" />
    <mutant id="mutant_3071" viable="true" in="org.joda.time.tz.CachedDateTimeZone.createInfo(long)" from="(next == periodStart) || (next &gt; end)" to="!((next == periodStart) || (next &gt; end))" />
    <mutant id="mutant_3070" viable="false" in="?" from="(CachedDateTimeZone.cInfoCacheMask) + 1" to="((CachedDateTimeZone.cInfoCacheMask) + 1) + 1" />
    <mutant id="mutant_3069" viable="false" in="?" from="(CachedDateTimeZone.cInfoCacheMask) + 1" to="((CachedDateTimeZone.cInfoCacheMask) + 1) * -1" />
    <mutant id="mutant_3068" viable="false" in="?" from="(CachedDateTimeZone.cInfoCacheMask) + 1" to="((CachedDateTimeZone.cInfoCacheMask) + 1) - 1" />
    <mutant id="mutant_4399" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;)" to="((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) - 1)" />
    <mutant id="mutant_3067" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="!(((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart)))" />
    <mutant id="mutant_4398" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;)" to="((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) * -1)" />
    <mutant id="mutant_3066" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="!(((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart)))" />
    <mutant id="mutant_4397" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;)" to="((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + 1)" />
    <mutant id="mutant_3065" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="!(((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart)))" />
    <mutant id="mutant_4396" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(lastUnitField.isSupported()) &amp;&amp; ((lastUnitField.getType()) != (DurationFieldType.YEARS_TYPE))" to="!((lastUnitField.isSupported()) &amp;&amp; ((lastUnitField.getType()) != (DurationFieldType.YEARS_TYPE)))" />
    <mutant id="mutant_2608" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((j + 1) / divisor) - 1" to="(((j + 1) / divisor) - 1) * -1" />
    <mutant id="mutant_2609" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="value / (iDivisor)" to="(value / (iDivisor)) + 1" />
    <mutant id="mutant_3939" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="strict || (offsetLocal &lt; 0)" to="!(strict || (offsetLocal &lt; 0))" />
    <mutant id="mutant_3930" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant - diff" to="(instant - diff) - 1" />
    <mutant id="mutant_2606" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((j + 1) / divisor) - 1" to="(((j + 1) / divisor) - 1) + 1" />
    <mutant id="mutant_3938" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) * -1)" />
    <mutant id="mutant_2607" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((j + 1) / divisor) - 1" to="(((j + 1) / divisor) - 1) - 1" />
    <mutant id="mutant_3937" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) - 1)" />
    <mutant id="mutant_2604" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((j + 1) / divisor)" to="(((j + 1) / divisor) * -1)" />
    <mutant id="mutant_3936" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) + 1)" />
    <mutant id="mutant_2605" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((j + 1) / divisor)" to="(((j + 1) / divisor) - 1)" />
    <mutant id="mutant_3935" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant + diff" to="(instant + diff) * -1" />
    <mutant id="mutant_2602" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="(j + 1)" to="((j + 1) + 1)" />
    <mutant id="mutant_3934" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant + diff" to="(instant + diff) - 1" />
    <mutant id="mutant_2603" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((j + 1) / divisor)" to="(((j + 1) / divisor) + 1)" />
    <mutant id="mutant_3933" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant + diff" to="(instant + diff) + 1" />
    <mutant id="mutant_2600" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="(j + 1)" to="((j + 1) - 1)" />
    <mutant id="mutant_3932" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant - diff" to="(instant - diff) + 1" />
    <mutant id="mutant_2601" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="(j + 1)" to="((j + 1) * -1)" />
    <mutant id="mutant_3931" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant - diff" to="(instant - diff) * -1" />
    <mutant id="mutant_3929" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant - overlapStart" to="(instant - overlapStart) * -1" />
    <mutant id="mutant_3928" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant - overlapStart" to="(instant - overlapStart) - 1" />
    <mutant id="mutant_3927" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant - overlapStart" to="(instant - overlapStart) + 1" />
    <mutant id="mutant_3926" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(instant &lt; overlapStart) || (instant &gt;= overlapEnd)" to="!((instant &lt; overlapStart) || (instant &gt;= overlapEnd))" />
    <mutant id="mutant_3925" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="transition + diff" to="(transition + diff) - 1" />
    <mutant id="mutant_3924" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="transition + diff" to="(transition + diff) * -1" />
    <mutant id="mutant_3923" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="transition + diff" to="(transition + diff) + 1" />
    <mutant id="mutant_3922" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="transition - diff" to="(transition - diff) - 1" />
    <mutant id="mutant_3921" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="transition - diff" to="(transition - diff) * -1" />
    <mutant id="mutant_3920" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="transition - diff" to="(transition - diff) + 1" />
    <mutant id="mutant_3919" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="offsetBefore - offsetAfter" to="(offsetBefore - offsetAfter) - 1" />
    <mutant id="mutant_3918" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="offsetBefore - offsetAfter" to="(offsetBefore - offsetAfter) * -1" />
    <mutant id="mutant_3917" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="offsetBefore - offsetAfter" to="(offsetBefore - offsetAfter) + 1" />
    <mutant id="mutant_3916" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant + (3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="(instant + (3 * (DateTimeConstants.MILLIS_PER_HOUR))) - 1" />
    <mutant id="mutant_3915" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant + (3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="(instant + (3 * (DateTimeConstants.MILLIS_PER_HOUR))) * -1" />
    <mutant id="mutant_3914" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant + (3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="(instant + (3 * (DateTimeConstants.MILLIS_PER_HOUR))) + 1" />
    <mutant id="mutant_3913" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="((3 * (DateTimeConstants.MILLIS_PER_HOUR)) * -1)" />
    <mutant id="mutant_3912" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="((3 * (DateTimeConstants.MILLIS_PER_HOUR)) - 1)" />
    <mutant id="mutant_3911" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="((3 * (DateTimeConstants.MILLIS_PER_HOUR)) + 1)" />
    <mutant id="mutant_3910" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant - (3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="(instant - (3 * (DateTimeConstants.MILLIS_PER_HOUR))) * -1" />
    <mutant id="mutant_3909" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant - (3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="(instant - (3 * (DateTimeConstants.MILLIS_PER_HOUR))) + 1" />
    <mutant id="mutant_3908" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="instant - (3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="(instant - (3 * (DateTimeConstants.MILLIS_PER_HOUR))) - 1" />
    <mutant id="mutant_3907" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="((3 * (DateTimeConstants.MILLIS_PER_HOUR)) * -1)" />
    <mutant id="mutant_3906" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="((3 * (DateTimeConstants.MILLIS_PER_HOUR)) - 1)" />
    <mutant id="mutant_3905" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(3 * (DateTimeConstants.MILLIS_PER_HOUR))" to="((3 * (DateTimeConstants.MILLIS_PER_HOUR)) + 1)" />
    <mutant id="mutant_3904" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="seconds * (DateTimeConstants.MILLIS_PER_SECOND)" to="(seconds * (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_3903" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="seconds * (DateTimeConstants.MILLIS_PER_SECOND)" to="(seconds * (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_3902" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="seconds * (DateTimeConstants.MILLIS_PER_SECOND)" to="(seconds * (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_3901" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="offset / (DateTimeConstants.MILLIS_PER_SECOND)" to="(offset / (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_3900" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="offset / (DateTimeConstants.MILLIS_PER_SECOND)" to="(offset / (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_1311" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE)))" to="((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) * -1)" />
    <mutant id="mutant_2642" viable="true" in="org.joda.time.field.DividedDateTimeField.add(long,long)" from="(amount * (iDivisor))" to="((amount * (iDivisor)) - 1)" />
    <mutant id="mutant_3974" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(&quot;Hours out of range: &quot; + hoursOffset)" to="((&quot;Hours out of range: &quot; + hoursOffset) + 1)" />
    <mutant id="mutant_1312" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))" to="((secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND)) + 1)" />
    <mutant id="mutant_2643" viable="true" in="org.joda.time.field.DividedDateTimeField.add(long,long)" from="(amount * (iDivisor))" to="((amount * (iDivisor)) * -1)" />
    <mutant id="mutant_3973" viable="false" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(&quot;Hours out of range: &quot; + hoursOffset)" to="((&quot;Hours out of range: &quot; + hoursOffset) * -1)" />
    <mutant id="mutant_2640" viable="true" in="org.joda.time.field.DividedDateTimeField.add(long,int)" from="(amount * (iDivisor))" to="((amount * (iDivisor)) - 1)" />
    <mutant id="mutant_3972" viable="false" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(&quot;Hours out of range: &quot; + hoursOffset)" to="((&quot;Hours out of range: &quot; + hoursOffset) - 1)" />
    <mutant id="mutant_1310" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE)))" to="((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + 1)" />
    <mutant id="mutant_2641" viable="true" in="org.joda.time.field.DividedDateTimeField.add(long,int)" from="(amount * (iDivisor))" to="((amount * (iDivisor)) * -1)" />
    <mutant id="mutant_3971" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &lt; (-23)) || (hoursOffset &gt; 23)" to="!((hoursOffset &lt; (-23)) || (hoursOffset &gt; 23))" />
    <mutant id="mutant_3970" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset == 0) &amp;&amp; (minutesOffset == 0)" to="!((hoursOffset == 0) &amp;&amp; (minutesOffset == 0))" />
    <mutant id="mutant_1319" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))) + millisOfSecond" to="(((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))) + millisOfSecond) + 1" />
    <mutant id="mutant_1317" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND)))" to="(((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))) - 1)" />
    <mutant id="mutant_2648" viable="true" in="org.joda.time.field.DividedDateTimeField.roundFloor(long)" from="((get(instant)) * (iDivisor))" to="(((get(instant)) * (iDivisor)) * -1)" />
    <mutant id="mutant_1318" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))) + millisOfSecond" to="(((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))) + millisOfSecond) - 1" />
    <mutant id="mutant_2649" viable="true" in="org.joda.time.field.DividedDateTimeField.roundFloor(long)" from="((get(instant)) * (iDivisor))" to="(((get(instant)) * (iDivisor)) - 1)" />
    <mutant id="mutant_3979" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &gt; 0) &amp;&amp; (minutesOffset &lt; 0)" to="!((hoursOffset &gt; 0) &amp;&amp; (minutesOffset &lt; 0))" />
    <mutant id="mutant_1315" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND)))" to="(((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))) * -1)" />
    <mutant id="mutant_2646" viable="true" in="org.joda.time.field.DividedDateTimeField.getDifferenceAsLong(long,long)" from="(getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iDivisor)" to="((getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iDivisor)) * -1" />
    <mutant id="mutant_3978" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(&quot;Minutes out of range: &quot; + minutesOffset)" to="((&quot;Minutes out of range: &quot; + minutesOffset) + 1)" />
    <mutant id="mutant_1316" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND)))" to="(((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))) + 1)" />
    <mutant id="mutant_2647" viable="true" in="org.joda.time.field.DividedDateTimeField.getDifferenceAsLong(long,long)" from="(getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iDivisor)" to="((getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iDivisor)) + 1" />
    <mutant id="mutant_3977" viable="false" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(&quot;Minutes out of range: &quot; + minutesOffset)" to="((&quot;Minutes out of range: &quot; + minutesOffset) * -1)" />
    <mutant id="mutant_1313" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))" to="((secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND)) - 1)" />
    <mutant id="mutant_2644" viable="true" in="org.joda.time.field.DividedDateTimeField.add(long,long)" from="(amount * (iDivisor))" to="((amount * (iDivisor)) + 1)" />
    <mutant id="mutant_3976" viable="false" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(&quot;Minutes out of range: &quot; + minutesOffset)" to="((&quot;Minutes out of range: &quot; + minutesOffset) - 1)" />
    <mutant id="mutant_1314" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))" to="((secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND)) * -1)" />
    <mutant id="mutant_2645" viable="true" in="org.joda.time.field.DividedDateTimeField.getDifferenceAsLong(long,long)" from="(getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iDivisor)" to="((getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant)) / (iDivisor)) - 1" />
    <mutant id="mutant_3975" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(minutesOffset &lt; (-59)) || (minutesOffset &gt; 59)" to="!((minutesOffset &lt; (-59)) || (minutesOffset &gt; 59))" />
    <mutant id="mutant_1300" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))" to="((hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR)) - 1)" />
    <mutant id="mutant_2631" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="(value + 1)" to="((value + 1) + 1)" />
    <mutant id="mutant_3963" viable="true" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="(id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;))" to="!((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" />
    <mutant id="mutant_1301" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))" to="((hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR)) * -1)" />
    <mutant id="mutant_2632" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="(value + 1)" to="((value + 1) - 1)" />
    <mutant id="mutant_3962" viable="true" in="org.joda.time.DateTimeZone.convertUTCToLocal(long)" from="((instantUTC ^ instantLocal) &lt; 0) &amp;&amp; ((instantUTC ^ offset) &gt;= 0)" to="!(((instantUTC ^ instantLocal) &lt; 0) &amp;&amp; ((instantUTC ^ offset) &gt;= 0))" />
    <mutant id="mutant_3961" viable="true" in="org.joda.time.DateTimeZone.convertUTCToLocal(long)" from="instantUTC + offset" to="(instantUTC + offset) - 1" />
    <mutant id="mutant_2630" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="(value + 1)" to="((value + 1) * -1)" />
    <mutant id="mutant_3960" viable="true" in="org.joda.time.DateTimeZone.convertUTCToLocal(long)" from="instantUTC + offset" to="(instantUTC + offset) * -1" />
    <mutant id="mutant_1308" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))" to="((minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE)) + 1)" />
    <mutant id="mutant_2639" viable="true" in="org.joda.time.field.DividedDateTimeField.add(long,int)" from="(amount * (iDivisor))" to="((amount * (iDivisor)) + 1)" />
    <mutant id="mutant_1309" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE)))" to="((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) - 1)" />
    <mutant id="mutant_1306" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))" to="((minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE)) * -1)" />
    <mutant id="mutant_2637" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="((iDivisor) - 1) + ((value + 1) % (iDivisor))" to="(((iDivisor) - 1) + ((value + 1) % (iDivisor))) * -1" />
    <mutant id="mutant_3969" viable="true" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;)" to="(((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;) + 1)" />
    <mutant id="mutant_1307" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))" to="((minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE)) - 1)" />
    <mutant id="mutant_2638" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="((iDivisor) - 1) + ((value + 1) % (iDivisor))" to="(((iDivisor) - 1) + ((value + 1) % (iDivisor))) - 1" />
    <mutant id="mutant_3968" viable="false" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;)" to="(((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;) * -1)" />
    <mutant id="mutant_1304" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR)))" to="(((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) - 1)" />
    <mutant id="mutant_2635" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="((value + 1) % (iDivisor))" to="(((value + 1) % (iDivisor)) - 1)" />
    <mutant id="mutant_3967" viable="false" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;)" to="(((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;) - 1)" />
    <mutant id="mutant_1305" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR)))" to="(((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + 1)" />
    <mutant id="mutant_2636" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="((iDivisor) - 1) + ((value + 1) % (iDivisor))" to="(((iDivisor) - 1) + ((value + 1) % (iDivisor))) + 1" />
    <mutant id="mutant_3966" viable="false" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="(&quot;The datetime zone id \'&quot; + id)" to="((&quot;The datetime zone id \'&quot; + id) * -1)" />
    <mutant id="mutant_1302" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))" to="((hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR)) + 1)" />
    <mutant id="mutant_2633" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="((value + 1) % (iDivisor))" to="(((value + 1) % (iDivisor)) * -1)" />
    <mutant id="mutant_3965" viable="false" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="(&quot;The datetime zone id \'&quot; + id)" to="((&quot;The datetime zone id \'&quot; + id) - 1)" />
    <mutant id="mutant_1303" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR)))" to="(((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) * -1)" />
    <mutant id="mutant_2634" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="((value + 1) % (iDivisor))" to="(((value + 1) % (iDivisor)) + 1)" />
    <mutant id="mutant_3964" viable="true" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="(&quot;The datetime zone id \'&quot; + id)" to="((&quot;The datetime zone id \'&quot; + id) + 1)" />
    <mutant id="mutant_2620" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="((value + 1) / (iDivisor)) - 1" to="(((value + 1) / (iDivisor)) - 1) + 1" />
    <mutant id="mutant_3952" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="instantLocal - offset" to="(instantLocal - offset) - 1" />
    <mutant id="mutant_2621" viable="true" in="org.joda.time.field.DividedDateTimeField.getDifference(long,long)" from="(getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iDivisor)" to="((getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iDivisor)) + 1" />
    <mutant id="mutant_3951" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offset)" to="((instantLocal - offset) + 1)" />
    <mutant id="mutant_3950" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offset)" to="((instantLocal - offset) * -1)" />
    <mutant id="mutant_2628" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) - 1)" />
    <mutant id="mutant_2629" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) * -1)" />
    <mutant id="mutant_3959" viable="true" in="org.joda.time.DateTimeZone.convertUTCToLocal(long)" from="instantUTC + offset" to="(instantUTC + offset) + 1" />
    <mutant id="mutant_2626" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="value % (iDivisor)" to="(value % (iDivisor)) * -1" />
    <mutant id="mutant_3958" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)" from="instantLocal - offsetOriginal" to="(instantLocal - offsetOriginal) - 1" />
    <mutant id="mutant_2627" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) + 1)" />
    <mutant id="mutant_3957" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)" from="instantLocal - offsetOriginal" to="(instantLocal - offsetOriginal) + 1" />
    <mutant id="mutant_2624" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="value % (iDivisor)" to="(value % (iDivisor)) + 1" />
    <mutant id="mutant_3956" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)" from="instantLocal - offsetOriginal" to="(instantLocal - offsetOriginal) * -1" />
    <mutant id="mutant_2625" viable="true" in="org.joda.time.field.DividedDateTimeField.getRemainder(int)" from="value % (iDivisor)" to="(value % (iDivisor)) - 1" />
    <mutant id="mutant_3955" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="((instantLocal ^ instantUTC) &lt; 0) &amp;&amp; ((instantLocal ^ offset) &lt; 0)" to="!(((instantLocal ^ instantUTC) &lt; 0) &amp;&amp; ((instantLocal ^ offset) &lt; 0))" />
    <mutant id="mutant_2622" viable="true" in="org.joda.time.field.DividedDateTimeField.getDifference(long,long)" from="(getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iDivisor)" to="((getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iDivisor)) * -1" />
    <mutant id="mutant_3954" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="instantLocal - offset" to="(instantLocal - offset) + 1" />
    <mutant id="mutant_2623" viable="true" in="org.joda.time.field.DividedDateTimeField.getDifference(long,long)" from="(getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iDivisor)" to="((getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iDivisor)) - 1" />
    <mutant id="mutant_3953" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="instantLocal - offset" to="(instantLocal - offset) * -1" />
    <mutant id="mutant_2619" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="((value + 1) / (iDivisor)) - 1" to="(((value + 1) / (iDivisor)) - 1) - 1" />
    <mutant id="mutant_3941" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) - 1)" />
    <mutant id="mutant_2610" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="value / (iDivisor)" to="(value / (iDivisor)) - 1" />
    <mutant id="mutant_3940" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) + 1)" />
    <mutant id="mutant_2617" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="((value + 1) / (iDivisor))" to="(((value + 1) / (iDivisor)) - 1)" />
    <mutant id="mutant_3949" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offset)" to="((instantLocal - offset) - 1)" />
    <mutant id="mutant_2618" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="((value + 1) / (iDivisor)) - 1" to="(((value + 1) / (iDivisor)) - 1) * -1" />
    <mutant id="mutant_3948" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offset)" to="((instantLocal - offset) + 1)" />
    <mutant id="mutant_2615" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="((value + 1) / (iDivisor))" to="(((value + 1) / (iDivisor)) * -1)" />
    <mutant id="mutant_3947" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offset)" to="((instantLocal - offset) * -1)" />
    <mutant id="mutant_2616" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="((value + 1) / (iDivisor))" to="(((value + 1) / (iDivisor)) + 1)" />
    <mutant id="mutant_3946" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offset)" to="((instantLocal - offset) - 1)" />
    <mutant id="mutant_2613" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="(value + 1)" to="((value + 1) + 1)" />
    <mutant id="mutant_3945" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) * -1)" />
    <mutant id="mutant_2614" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="(value + 1)" to="((value + 1) - 1)" />
    <mutant id="mutant_3944" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) - 1)" />
    <mutant id="mutant_2611" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="value / (iDivisor)" to="(value / (iDivisor)) * -1" />
    <mutant id="mutant_3943" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) + 1)" />
    <mutant id="mutant_2612" viable="true" in="org.joda.time.field.DividedDateTimeField.get(long)" from="(value + 1)" to="((value + 1) * -1)" />
    <mutant id="mutant_3942" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) * -1)" />
    <mutant id="mutant_2690" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="(&quot;The calculation caused an overflow: &quot; + val1)" to="((&quot;The calculation caused an overflow: &quot; + val1) + 1)" />
    <mutant id="mutant_1355" viable="true" in="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)" from="(value &gt; maxLessOne) || (value &lt; 1)" to="!((value &gt; maxLessOne) || (value &lt; 1))" />
    <mutant id="mutant_2686" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="val1 + val2" to="(val1 + val2) - 1" />
    <mutant id="mutant_1356" viable="false" in="?" from="((long)(365.25 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((365.25 * (DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_2687" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="val1 + val2" to="(val1 + val2) + 1" />
    <mutant id="mutant_1353" viable="true" in="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)" from="(iChronology.getDaysInYearMax()) - 1" to="((iChronology.getDaysInYearMax()) - 1) * -1" />
    <mutant id="mutant_2684" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int,int)" from="(currentValue + wrapValue)" to="((currentValue + wrapValue) * -1)" />
    <mutant id="mutant_1354" viable="true" in="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)" from="(iChronology.getDaysInYearMax()) - 1" to="((iChronology.getDaysInYearMax()) - 1) - 1" />
    <mutant id="mutant_2685" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="val1 + val2" to="(val1 + val2) * -1" />
    <mutant id="mutant_1351" viable="true" in="org.joda.time.chrono.BasicChronology.getYearInfo(int)" from="(info == null) || ((info.iYear) != year)" to="!((info == null) || ((info.iYear) != year))" />
    <mutant id="mutant_2682" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int,int)" from="(currentValue + wrapValue)" to="((currentValue + wrapValue) + 1)" />
    <mutant id="mutant_1352" viable="true" in="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)" from="(iChronology.getDaysInYearMax()) - 1" to="((iChronology.getDaysInYearMax()) - 1) + 1" />
    <mutant id="mutant_2683" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int,int)" from="(currentValue + wrapValue)" to="((currentValue + wrapValue) - 1)" />
    <mutant id="mutant_2680" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(wrapRange - remByRange) + minValue" to="((wrapRange - remByRange) + minValue) * -1" />
    <mutant id="mutant_1350" viable="true" in="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)" from="millis + ((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(millis + ((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_2681" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(wrapRange - remByRange) + minValue" to="((wrapRange - remByRange) + minValue) + 1" />
    <mutant id="mutant_1359" viable="false" in="?" from="((long)(BasicFixedMonthChronology.MONTH_LENGTH)) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((long)(BasicFixedMonthChronology.MONTH_LENGTH)) * (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_1357" viable="false" in="?" from="((long)(365.25 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((365.25 * (DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_2688" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="!(((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0))" />
    <mutant id="mutant_1358" viable="false" in="?" from="((long)(365.25 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((365.25 * (DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_2689" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="(&quot;The calculation caused an overflow: &quot; + val1)" to="((&quot;The calculation caused an overflow: &quot; + val1) * -1)" />
    <mutant id="mutant_1344" viable="true" in="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)" from="(dayOfMonth - 1)" to="((dayOfMonth - 1) * -1)" />
    <mutant id="mutant_2675" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="0 + minValue" to="(0 + minValue) * -1" />
    <mutant id="mutant_1345" viable="true" in="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)" from="((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1)" />
    <mutant id="mutant_2676" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(wrapRange - remByRange)" to="((wrapRange - remByRange) * -1)" />
    <mutant id="mutant_1342" viable="true" in="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)" from="(dayOfMonth - 1)" to="((dayOfMonth - 1) + 1)" />
    <mutant id="mutant_2673" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="0 + minValue" to="(0 + minValue) - 1" />
    <mutant id="mutant_1343" viable="true" in="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)" from="(dayOfMonth - 1)" to="((dayOfMonth - 1) - 1)" />
    <mutant id="mutant_2674" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="0 + minValue" to="(0 + minValue) + 1" />
    <mutant id="mutant_1340" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="jan1millis - ((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(jan1millis - ((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_2671" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(-value) % wrapRange" to="((-value) % wrapRange) + 1" />
    <mutant id="mutant_1341" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="jan1millis - ((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(jan1millis - ((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_2672" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(-value) % wrapRange" to="((-value) % wrapRange) * -1" />
    <mutant id="mutant_2670" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(-value) % wrapRange" to="((-value) % wrapRange) - 1" />
    <mutant id="mutant_1348" viable="true" in="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)" from="millis + ((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(millis + ((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_2679" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(wrapRange - remByRange) + minValue" to="((wrapRange - remByRange) + minValue) - 1" />
    <mutant id="mutant_1349" viable="true" in="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)" from="millis + ((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(millis + ((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_1346" viable="true" in="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)" from="((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1)" />
    <mutant id="mutant_2677" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(wrapRange - remByRange)" to="((wrapRange - remByRange) + 1)" />
    <mutant id="mutant_1347" viable="true" in="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)" from="((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(((dayOfMonth - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1)" />
    <mutant id="mutant_2678" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(wrapRange - remByRange)" to="((wrapRange - remByRange) - 1)" />
    <mutant id="mutant_503" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.length()) - position" to="((text.length()) - position) * -1" />
    <mutant id="mutant_504" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.length()) - position" to="((text.length()) - position) + 1" />
    <mutant id="mutant_505" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.length()) - position" to="((text.length()) - position) - 1" />
    <mutant id="mutant_506" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="!((c == '-') || (c == '+'))" />
    <mutant id="mutant_500" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="(iMinFields) - 1" to="((iMinFields) - 1) - 1" />
    <mutant id="mutant_501" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="(iMinFields) - 1" to="((iMinFields) - 1) * -1" />
    <mutant id="mutant_502" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="((iZeroOffsetPrintText) != null) &amp;&amp; ((iZeroOffsetPrintText.length()) &gt; est)" to="!(((iZeroOffsetPrintText) != null) &amp;&amp; ((iZeroOffsetPrintText.length()) &gt; est))" />
    <mutant id="mutant_507" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (iZeroOffsetParseText.length())" to="(position + (iZeroOffsetParseText.length())) * -1" />
    <mutant id="mutant_508" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (iZeroOffsetParseText.length())" to="(position + (iZeroOffsetParseText.length())) + 1" />
    <mutant id="mutant_509" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (iZeroOffsetParseText.length())" to="(position + (iZeroOffsetParseText.length())) - 1" />
    <mutant id="mutant_1333" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="(jan1dayOfWeek - 1)" to="((jan1dayOfWeek - 1) * -1)" />
    <mutant id="mutant_2664" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(value % wrapRange)" to="((value % wrapRange) - 1)" />
    <mutant id="mutant_3996" viable="true" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="(convId.startsWith(&quot;GMT+&quot;)) || (convId.startsWith(&quot;GMT-&quot;))" to="!((convId.startsWith(&quot;GMT+&quot;)) || (convId.startsWith(&quot;GMT-&quot;)))" />
    <mutant id="mutant_1334" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="(jan1dayOfWeek - 1)" to="((jan1dayOfWeek - 1) + 1)" />
    <mutant id="mutant_2665" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(value % wrapRange)" to="((value % wrapRange) * -1)" />
    <mutant id="mutant_3995" viable="false" in="org.joda.time.DateTimeZone.forOffsetMillis(int)" from="(&quot;Millis out of range: &quot; + millisOffset)" to="((&quot;Millis out of range: &quot; + millisOffset) * -1)" />
    <mutant id="mutant_1331" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="jan1millis + ((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(jan1millis + ((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_2662" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(maxValue - minValue) + 1" to="((maxValue - minValue) + 1) + 1" />
    <mutant id="mutant_3994" viable="true" in="org.joda.time.DateTimeZone.forOffsetMillis(int)" from="(&quot;Millis out of range: &quot; + millisOffset)" to="((&quot;Millis out of range: &quot; + millisOffset) + 1)" />
    <mutant id="mutant_1332" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="jan1millis + ((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(jan1millis + ((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_2663" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(maxValue - minValue) + 1" to="((maxValue - minValue) + 1) * -1" />
    <mutant id="mutant_3993" viable="false" in="org.joda.time.DateTimeZone.forOffsetMillis(int)" from="(&quot;Millis out of range: &quot; + millisOffset)" to="((&quot;Millis out of range: &quot; + millisOffset) - 1)" />
    <mutant id="mutant_2660" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(maxValue - minValue)" to="((maxValue - minValue) + 1)" />
    <mutant id="mutant_3992" viable="true" in="org.joda.time.DateTimeZone.forOffsetMillis(int)" from="(millisOffset &lt; (-(DateTimeZone.MAX_MILLIS))) || (millisOffset &gt; (DateTimeZone.MAX_MILLIS))" to="!((millisOffset &lt; (-(DateTimeZone.MAX_MILLIS))) || (millisOffset &gt; (DateTimeZone.MAX_MILLIS)))" />
    <mutant id="mutant_1330" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="jan1millis + ((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(jan1millis + ((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_2661" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(maxValue - minValue) + 1" to="((maxValue - minValue) + 1) - 1" />
    <mutant id="mutant_3991" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="hoursInMinutes + minutesOffset" to="(hoursInMinutes + minutesOffset) - 1" />
    <mutant id="mutant_3990" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="hoursInMinutes + minutesOffset" to="(hoursInMinutes + minutesOffset) * -1" />
    <mutant id="mutant_1339" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="jan1millis - ((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(jan1millis - ((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_1337" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1)" />
    <mutant id="mutant_2668" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(value % wrapRange) + minValue" to="((value % wrapRange) + minValue) - 1" />
    <mutant id="mutant_1338" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1)" />
    <mutant id="mutant_2669" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(value % wrapRange) + minValue" to="((value % wrapRange) + minValue) + 1" />
    <mutant id="mutant_3999" viable="false" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="(&quot;The datetime zone id \'&quot; + id)" to="((&quot;The datetime zone id \'&quot; + id) * -1)" />
    <mutant id="mutant_1335" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="(jan1dayOfWeek - 1)" to="((jan1dayOfWeek - 1) - 1)" />
    <mutant id="mutant_2666" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(value % wrapRange)" to="((value % wrapRange) + 1)" />
    <mutant id="mutant_3998" viable="false" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="(&quot;The datetime zone id \'&quot; + id)" to="((&quot;The datetime zone id \'&quot; + id) - 1)" />
    <mutant id="mutant_1336" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(((jan1dayOfWeek - 1) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1)" />
    <mutant id="mutant_2667" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(value % wrapRange) + minValue" to="((value % wrapRange) + minValue) * -1" />
    <mutant id="mutant_3997" viable="true" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="(&quot;The datetime zone id \'&quot; + id)" to="((&quot;The datetime zone id \'&quot; + id) + 1)" />
    <mutant id="mutant_514" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="!((count == 0) &amp;&amp; (!expectSeparators))" />
    <mutant id="mutant_515" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="minutes * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_516" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="minutes * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_517" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="minutes * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_510" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="hours * (DateTimeConstants.MILLIS_PER_HOUR)" to="(hours * (DateTimeConstants.MILLIS_PER_HOUR)) - 1" />
    <mutant id="mutant_511" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="hours * (DateTimeConstants.MILLIS_PER_HOUR)" to="(hours * (DateTimeConstants.MILLIS_PER_HOUR)) + 1" />
    <mutant id="mutant_512" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="hours * (DateTimeConstants.MILLIS_PER_HOUR)" to="(hours * (DateTimeConstants.MILLIS_PER_HOUR)) * -1" />
    <mutant id="mutant_513" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="!((c &gt;= '0') &amp;&amp; (c &lt;= '9'))" />
    <mutant id="mutant_518" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="!((count == 0) &amp;&amp; (!expectSeparators))" />
    <mutant id="mutant_519" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="seconds * (DateTimeConstants.MILLIS_PER_SECOND)" to="(seconds * (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_1322" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="(8 - (iMinDaysInFirstWeek))" to="((8 - (iMinDaysInFirstWeek)) - 1)" />
    <mutant id="mutant_2653" viable="true" in="org.joda.time.field.DividedDateTimeField.set(long,int)" from="(value * (iDivisor))" to="((value * (iDivisor)) - 1)" />
    <mutant id="mutant_3985" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="hoursOffset * 60" to="(hoursOffset * 60) - 1" />
    <mutant id="mutant_1323" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="(8 - (iMinDaysInFirstWeek))" to="((8 - (iMinDaysInFirstWeek)) + 1)" />
    <mutant id="mutant_2654" viable="true" in="org.joda.time.field.DividedDateTimeField.set(long,int)" from="((value * (iDivisor)) + remainder)" to="(((value * (iDivisor)) + remainder) * -1)" />
    <mutant id="mutant_3984" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="hoursOffset * 60" to="(hoursOffset * 60) * -1" />
    <mutant id="mutant_1320" viable="true" in="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))) + millisOfSecond" to="(((((getDateMidnightMillis(year, monthOfYear, dayOfMonth)) + (hourOfDay * (DateTimeConstants.MILLIS_PER_HOUR))) + (minuteOfHour * (DateTimeConstants.MILLIS_PER_MINUTE))) + (secondOfMinute * (DateTimeConstants.MILLIS_PER_SECOND))) + millisOfSecond) * -1" />
    <mutant id="mutant_2651" viable="true" in="org.joda.time.field.DividedDateTimeField.set(long,int)" from="(value * (iDivisor))" to="((value * (iDivisor)) * -1)" />
    <mutant id="mutant_3983" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="hoursOffset * 60" to="(hoursOffset * 60) + 1" />
    <mutant id="mutant_1321" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="(8 - (iMinDaysInFirstWeek))" to="((8 - (iMinDaysInFirstWeek)) * -1)" />
    <mutant id="mutant_2652" viable="true" in="org.joda.time.field.DividedDateTimeField.set(long,int)" from="(value * (iDivisor))" to="((value * (iDivisor)) + 1)" />
    <mutant id="mutant_3982" viable="false" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(&quot;Positive hours must not have negative minutes: &quot; + minutesOffset)" to="((&quot;Positive hours must not have negative minutes: &quot; + minutesOffset) * -1)" />
    <mutant id="mutant_3981" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(&quot;Positive hours must not have negative minutes: &quot; + minutesOffset)" to="((&quot;Positive hours must not have negative minutes: &quot; + minutesOffset) + 1)" />
    <mutant id="mutant_2650" viable="true" in="org.joda.time.field.DividedDateTimeField.roundFloor(long)" from="((get(instant)) * (iDivisor))" to="(((get(instant)) * (iDivisor)) + 1)" />
    <mutant id="mutant_3980" viable="false" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(&quot;Positive hours must not have negative minutes: &quot; + minutesOffset)" to="((&quot;Positive hours must not have negative minutes: &quot; + minutesOffset) - 1)" />
    <mutant id="mutant_1328" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1)" />
    <mutant id="mutant_2659" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(maxValue - minValue)" to="((maxValue - minValue) * -1)" />
    <mutant id="mutant_1329" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1)" />
    <mutant id="mutant_1326" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="(8 - jan1dayOfWeek)" to="((8 - jan1dayOfWeek) * -1)" />
    <mutant id="mutant_2657" viable="true" in="org.joda.time.field.FieldUtils.equals(java.lang.Object,java.lang.Object)" from="(object1 == null) || (object2 == null)" to="!((object1 == null) || (object2 == null))" />
    <mutant id="mutant_3989" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="hoursInMinutes + minutesOffset" to="(hoursInMinutes + minutesOffset) + 1" />
    <mutant id="mutant_1327" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY)))" to="(((8 - jan1dayOfWeek) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1)" />
    <mutant id="mutant_2658" viable="true" in="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)" from="(maxValue - minValue)" to="((maxValue - minValue) - 1)" />
    <mutant id="mutant_3988" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="hoursInMinutes - (Math.abs(minutesOffset))" to="(hoursInMinutes - (Math.abs(minutesOffset))) * -1" />
    <mutant id="mutant_1324" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="(8 - jan1dayOfWeek)" to="((8 - jan1dayOfWeek) - 1)" />
    <mutant id="mutant_2655" viable="true" in="org.joda.time.field.DividedDateTimeField.set(long,int)" from="((value * (iDivisor)) + remainder)" to="(((value * (iDivisor)) + remainder) - 1)" />
    <mutant id="mutant_3987" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="hoursInMinutes - (Math.abs(minutesOffset))" to="(hoursInMinutes - (Math.abs(minutesOffset))) - 1" />
    <mutant id="mutant_1325" viable="true" in="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)" from="(8 - jan1dayOfWeek)" to="((8 - jan1dayOfWeek) + 1)" />
    <mutant id="mutant_2656" viable="true" in="org.joda.time.field.DividedDateTimeField.set(long,int)" from="((value * (iDivisor)) + remainder)" to="(((value * (iDivisor)) + remainder) + 1)" />
    <mutant id="mutant_3986" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="hoursInMinutes - (Math.abs(minutesOffset))" to="(hoursInMinutes - (Math.abs(minutesOffset))) + 1" />
    <mutant id="mutant_525" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0')" to="(((text.charAt(position++)) - '0') + 1)" />
    <mutant id="mutant_526" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0')" to="(((text.charAt(position++)) - '0') - 1)" />
    <mutant id="mutant_527" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0') * 100" to="(((text.charAt(position++)) - '0') * 100) + 1" />
    <mutant id="mutant_528" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0') * 100" to="(((text.charAt(position++)) - '0') * 100) * -1" />
    <mutant id="mutant_521" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="seconds * (DateTimeConstants.MILLIS_PER_SECOND)" to="(seconds * (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_522" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position)) != '.') &amp;&amp; ((text.charAt(position)) != ',')" to="!(((text.charAt(position)) != '.') &amp;&amp; ((text.charAt(position)) != ','))" />
    <mutant id="mutant_523" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="!((count == 0) &amp;&amp; (!expectSeparators))" />
    <mutant id="mutant_524" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0')" to="(((text.charAt(position++)) - '0') * -1)" />
    <mutant id="mutant_529" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0') * 100" to="(((text.charAt(position++)) - '0') * 100) - 1" />
    <mutant id="mutant_1399" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)" from="minuendInstant - (getYearMillis(minuendYear))" to="(minuendInstant - (getYearMillis(minuendYear))) - 1" />
    <mutant id="mutant_4425" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(((newTypes.length) - i) - 1)" to="((((newTypes.length) - i) - 1) - 1)" />
    <mutant id="mutant_4424" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(((newTypes.length) - i) - 1)" to="((((newTypes.length) - i) - 1) * -1)" />
    <mutant id="mutant_1397" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1) * (BasicFixedMonthChronology.MILLIS_PER_MONTH)" to="((month - 1) * (BasicFixedMonthChronology.MILLIS_PER_MONTH)) + 1" />
    <mutant id="mutant_4423" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="((newTypes.length) - i)" to="(((newTypes.length) - i) * -1)" />
    <mutant id="mutant_1398" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)" from="minuendInstant - (getYearMillis(minuendYear))" to="(minuendInstant - (getYearMillis(minuendYear))) * -1" />
    <mutant id="mutant_4422" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="((newTypes.length) - i)" to="(((newTypes.length) - i) - 1)" />
    <mutant id="mutant_1395" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1) * (BasicFixedMonthChronology.MILLIS_PER_MONTH)" to="((month - 1) * (BasicFixedMonthChronology.MILLIS_PER_MONTH)) * -1" />
    <mutant id="mutant_4421" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="((newTypes.length) - i)" to="(((newTypes.length) - i) + 1)" />
    <mutant id="mutant_1396" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1) * (BasicFixedMonthChronology.MILLIS_PER_MONTH)" to="((month - 1) * (BasicFixedMonthChronology.MILLIS_PER_MONTH)) - 1" />
    <mutant id="mutant_4420" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_1393" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1)" to="((month - 1) - 1)" />
    <mutant id="mutant_1394" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1)" to="((month - 1) + 1)" />
    <mutant id="mutant_520" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="seconds * (DateTimeConstants.MILLIS_PER_SECOND)" to="(seconds * (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_4429" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4428" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4427" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4426" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(((newTypes.length) - i) - 1)" to="((((newTypes.length) - i) - 1) + 1)" />
    <mutant id="mutant_536" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.charAt(position++)) - '0'" to="((text.charAt(position++)) - '0') * -1" />
    <mutant id="mutant_537" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.charAt(position++)) - '0'" to="((text.charAt(position++)) - '0') + 1" />
    <mutant id="mutant_538" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.charAt(position++)) - '0'" to="((text.charAt(position++)) - '0') - 1" />
    <mutant id="mutant_539" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iZeroOffsetPrintText) != null)" to="!((displayOffset == 0) &amp;&amp; ((iZeroOffsetPrintText) != null))" />
    <mutant id="mutant_532" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0')" to="(((text.charAt(position++)) - '0') - 1)" />
    <mutant id="mutant_533" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0') * 10" to="(((text.charAt(position++)) - '0') * 10) * -1" />
    <mutant id="mutant_534" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0') * 10" to="(((text.charAt(position++)) - '0') * 10) - 1" />
    <mutant id="mutant_535" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0') * 10" to="(((text.charAt(position++)) - '0') * 10) + 1" />
    <mutant id="mutant_1391" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getAverageMillisPerYearDividedByTwo()" from="(BasicFixedMonthChronology.MILLIS_PER_YEAR) / 2" to="((BasicFixedMonthChronology.MILLIS_PER_YEAR) / 2) - 1" />
    <mutant id="mutant_1392" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1)" to="((month - 1) * -1)" />
    <mutant id="mutant_1390" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getAverageMillisPerYearDividedByTwo()" from="(BasicFixedMonthChronology.MILLIS_PER_YEAR) / 2" to="((BasicFixedMonthChronology.MILLIS_PER_YEAR) / 2) + 1" />
    <mutant id="mutant_1388" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)" from="((int)(monthZeroBased)) + 1" to="(((int)(monthZeroBased)) + 1) - 1" />
    <mutant id="mutant_4414" viable="true" in="org.joda.time.Partial.toStringList()" from="(20 * size)" to="((20 * size) - 1)" />
    <mutant id="mutant_1389" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getAverageMillisPerYearDividedByTwo()" from="(BasicFixedMonthChronology.MILLIS_PER_YEAR) / 2" to="((BasicFixedMonthChronology.MILLIS_PER_YEAR) / 2) * -1" />
    <mutant id="mutant_4413" viable="true" in="org.joda.time.Partial.toStringList()" from="(20 * size)" to="((20 * size) + 1)" />
    <mutant id="mutant_1386" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)" from="((int)(monthZeroBased)) + 1" to="(((int)(monthZeroBased)) + 1) * -1" />
    <mutant id="mutant_4412" viable="true" in="org.joda.time.Partial.toStringList()" from="(20 * size)" to="((20 * size) * -1)" />
    <mutant id="mutant_1387" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)" from="((int)(monthZeroBased)) + 1" to="(((int)(monthZeroBased)) + 1) + 1" />
    <mutant id="mutant_4411" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="(((((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) + 1)" />
    <mutant id="mutant_1384" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year))) / (BasicFixedMonthChronology.MILLIS_PER_MONTH)" to="((millis - (getYearMillis(year))) / (BasicFixedMonthChronology.MILLIS_PER_MONTH)) + 1" />
    <mutant id="mutant_4410" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="(((((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) - 1)" />
    <mutant id="mutant_1385" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year))) / (BasicFixedMonthChronology.MILLIS_PER_MONTH)" to="((millis - (getYearMillis(year))) / (BasicFixedMonthChronology.MILLIS_PER_MONTH)) * -1" />
    <mutant id="mutant_1382" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year)))" to="((millis - (getYearMillis(year))) * -1)" />
    <mutant id="mutant_1383" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year))) / (BasicFixedMonthChronology.MILLIS_PER_MONTH)" to="((millis - (getYearMillis(year))) / (BasicFixedMonthChronology.MILLIS_PER_MONTH)) - 1" />
    <mutant id="mutant_530" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0')" to="(((text.charAt(position++)) - '0') * -1)" />
    <mutant id="mutant_531" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position++)) - '0')" to="(((text.charAt(position++)) - '0') + 1)" />
    <mutant id="mutant_4419" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4418" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4417" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(iTypes.length) + 1" to="((iTypes.length) + 1) + 1" />
    <mutant id="mutant_4416" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(iTypes.length) + 1" to="((iTypes.length) + 1) * -1" />
    <mutant id="mutant_4415" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(iTypes.length) + 1" to="((iTypes.length) + 1) - 1" />
    <mutant id="mutant_547" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="displayOffset / (DateTimeConstants.MILLIS_PER_MINUTE)" to="(displayOffset / (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_548" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="displayOffset / (DateTimeConstants.MILLIS_PER_MINUTE)" to="(displayOffset / (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_549" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="displayOffset / (DateTimeConstants.MILLIS_PER_MINUTE)" to="(displayOffset / (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_543" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))" to="(hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))) - 1" />
    <mutant id="mutant_544" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))" to="(hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))) + 1" />
    <mutant id="mutant_545" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))" to="(hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))) * -1" />
    <mutant id="mutant_546" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 1)" to="!((displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 1))" />
    <mutant id="mutant_1380" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year)))" to="((millis - (getYearMillis(year))) + 1)" />
    <mutant id="mutant_1381" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year)))" to="((millis - (getYearMillis(year))) - 1)" />
    <mutant id="mutant_1377" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)" from="(((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH)) + 1" to="((((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH)) + 1) - 1" />
    <mutant id="mutant_4403" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName()))" to="(((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) - 1)" />
    <mutant id="mutant_1378" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)" from="(((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH)) + 1" to="((((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH)) + 1) * -1" />
    <mutant id="mutant_4402" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_1375" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)" from="(((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH))" to="((((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH)) * -1)" />
    <mutant id="mutant_4401" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1376" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)" from="(((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH))" to="((((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH)) + 1)" />
    <mutant id="mutant_4400" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1373" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)" from="((getDayOfYear(millis)) - 1)" to="(((getDayOfYear(millis)) - 1) * -1)" />
    <mutant id="mutant_1374" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)" from="(((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH))" to="((((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH)) - 1)" />
    <mutant id="mutant_1371" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)" from="((getDayOfYear(millis)) - 1)" to="(((getDayOfYear(millis)) - 1) + 1)" />
    <mutant id="mutant_1372" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)" from="((getDayOfYear(millis)) - 1)" to="(((getDayOfYear(millis)) - 1) - 1)" />
    <mutant id="mutant_540" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="displayOffset / (DateTimeConstants.MILLIS_PER_HOUR)" to="(displayOffset / (DateTimeConstants.MILLIS_PER_HOUR)) + 1" />
    <mutant id="mutant_541" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="displayOffset / (DateTimeConstants.MILLIS_PER_HOUR)" to="(displayOffset / (DateTimeConstants.MILLIS_PER_HOUR)) * -1" />
    <mutant id="mutant_4409" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName()))" to="(((((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + (loopType.getName())) * -1)" />
    <mutant id="mutant_542" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="displayOffset / (DateTimeConstants.MILLIS_PER_HOUR)" to="(displayOffset / (DateTimeConstants.MILLIS_PER_HOUR)) - 1" />
    <mutant id="mutant_4408" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="((((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;) * -1)" />
    <mutant id="mutant_4407" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="((((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;) + 1)" />
    <mutant id="mutant_4406" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;)" to="((((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + &quot; &lt; &quot;) - 1)" />
    <mutant id="mutant_1379" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)" from="(((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH)) + 1" to="((((getDayOfYear(millis)) - 1) / (BasicFixedMonthChronology.MONTH_LENGTH)) + 1) + 1" />
    <mutant id="mutant_4405" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName()))" to="(((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) * -1)" />
    <mutant id="mutant_4404" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName()))" to="(((&quot;Types array must be in order largest-smallest,&quot; + &quot; for year-based fields, years is defined as being largest: &quot;) + (types[(i - 1)].getName())) + 1)" />
    <mutant id="mutant_558" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="seconds * (DateTimeConstants.MILLIS_PER_SECOND)" to="(seconds * (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_559" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="seconds * (DateTimeConstants.MILLIS_PER_SECOND)" to="(seconds * (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_554" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="displayOffset / (DateTimeConstants.MILLIS_PER_SECOND)" to="(displayOffset / (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_555" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="displayOffset / (DateTimeConstants.MILLIS_PER_SECOND)" to="(displayOffset / (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_556" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="displayOffset / (DateTimeConstants.MILLIS_PER_SECOND)" to="(displayOffset / (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_557" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="seconds * (DateTimeConstants.MILLIS_PER_SECOND)" to="(seconds * (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_1370" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)" from="(((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH)) + 1" to="((((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH)) + 1) + 1" />
    <mutant id="mutant_1366" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)" from="(((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH))" to="((((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH)) + 1)" />
    <mutant id="mutant_2697" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2)" to="((((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2) - 1)" />
    <mutant id="mutant_1367" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)" from="(((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH))" to="((((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH)) - 1)" />
    <mutant id="mutant_2698" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="((long)(val1)) * ((long)(val2))" to="(((long)(val1)) * ((long)(val2))) + 1" />
    <mutant id="mutant_1364" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)" from="((getDayOfYear(millis)) - 1)" to="(((getDayOfYear(millis)) - 1) * -1)" />
    <mutant id="mutant_2695" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2)" to="((((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2) * -1)" />
    <mutant id="mutant_1365" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)" from="(((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH))" to="((((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH)) * -1)" />
    <mutant id="mutant_2696" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2)" to="((((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2) + 1)" />
    <mutant id="mutant_1362" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)" from="((getDayOfYear(millis)) - 1)" to="(((getDayOfYear(millis)) - 1) + 1)" />
    <mutant id="mutant_2693" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;)" to="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) - 1)" />
    <mutant id="mutant_1363" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)" from="((getDayOfYear(millis)) - 1)" to="(((getDayOfYear(millis)) - 1) - 1)" />
    <mutant id="mutant_2694" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;)" to="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + 1)" />
    <mutant id="mutant_1360" viable="false" in="?" from="((long)(BasicFixedMonthChronology.MONTH_LENGTH)) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((long)(BasicFixedMonthChronology.MONTH_LENGTH)) * (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_2691" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="(&quot;The calculation caused an overflow: &quot; + val1)" to="((&quot;The calculation caused an overflow: &quot; + val1) - 1)" />
    <mutant id="mutant_1361" viable="false" in="?" from="((long)(BasicFixedMonthChronology.MONTH_LENGTH)) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((long)(BasicFixedMonthChronology.MONTH_LENGTH)) * (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_2692" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;)" to="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) * -1)" />
    <mutant id="mutant_550" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="minutes * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_551" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="minutes * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_552" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="minutes * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_553" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 2)" to="!((displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 2))" />
    <mutant id="mutant_1368" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)" from="(((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH)) + 1" to="((((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH)) + 1) * -1" />
    <mutant id="mutant_2699" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="((long)(val1)) * ((long)(val2))" to="(((long)(val1)) * ((long)(val2))) * -1" />
    <mutant id="mutant_1369" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)" from="(((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH)) + 1" to="((((getDayOfYear(millis)) - 1) % (BasicFixedMonthChronology.MONTH_LENGTH)) + 1) - 1" />
    <mutant id="mutant_448" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((position + length) + 1)" to="(((position + length) + 1) + 1)" />
    <mutant id="mutant_449" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((position + length) + 1)" to="(((position + length) + 1) - 1)" />
    <mutant id="mutant_444" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_445" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_446" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_447" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((position + length) + 1)" to="(((position + length) + 1) * -1)" />
    <mutant id="mutant_4230" viable="true" in="org.joda.time.LocalTime.fromDateFields(java.util.Date)" from="((((int)(((date.getTime()) % 1000))) + 1000) % 1000)" to="(((((int)(((date.getTime()) % 1000))) + 1000) % 1000) + 1)" />
    <mutant id="mutant_4227" viable="true" in="org.joda.time.LocalTime.fromDateFields(java.util.Date)" from="(((int)(((date.getTime()) % 1000))) + 1000)" to="((((int)(((date.getTime()) % 1000))) + 1000) + 1)" />
    <mutant id="mutant_4226" viable="true" in="org.joda.time.LocalTime.fromDateFields(java.util.Date)" from="((int)(((date.getTime()) % 1000)))" to="(((int)(((date.getTime()) % 1000))) + 1)" />
    <mutant id="mutant_1199" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="1 + ((int)(((daysSince19700101 + 3) % 7)))" to="(1 + ((int)(((daysSince19700101 + 3) % 7)))) * -1" />
    <mutant id="mutant_4225" viable="true" in="org.joda.time.LocalTime.fromDateFields(java.util.Date)" from="((int)(((date.getTime()) % 1000)))" to="(((int)(((date.getTime()) % 1000))) * -1)" />
    <mutant id="mutant_4224" viable="true" in="org.joda.time.LocalTime.fromDateFields(java.util.Date)" from="((int)(((date.getTime()) % 1000)))" to="(((int)(((date.getTime()) % 1000))) - 1)" />
    <mutant id="mutant_1197" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="((int)(((daysSince19700101 + 3) % 7)))" to="(((int)(((daysSince19700101 + 3) % 7))) - 1)" />
    <mutant id="mutant_4223" viable="true" in="org.joda.time.LocalTime.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_1198" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="1 + ((int)(((daysSince19700101 + 3) % 7)))" to="(1 + ((int)(((daysSince19700101 + 3) % 7)))) + 1" />
    <mutant id="mutant_4222" viable="false" in="org.joda.time.LocalTime.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_1195" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="((int)(((daysSince19700101 + 3) % 7)))" to="(((int)(((daysSince19700101 + 3) % 7))) + 1)" />
    <mutant id="mutant_4221" viable="false" in="org.joda.time.LocalTime.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_1196" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="((int)(((daysSince19700101 + 3) % 7)))" to="(((int)(((daysSince19700101 + 3) % 7))) * -1)" />
    <mutant id="mutant_4220" viable="true" in="org.joda.time.LocalTime.getValue(int)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_440" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (iSigned)" to="!(((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (iSigned))" />
    <mutant id="mutant_441" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(length + 1)" to="((length + 1) - 1)" />
    <mutant id="mutant_442" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(length + 1)" to="((length + 1) * -1)" />
    <mutant id="mutant_443" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(length + 1)" to="((length + 1) + 1)" />
    <mutant id="mutant_4229" viable="true" in="org.joda.time.LocalTime.fromDateFields(java.util.Date)" from="(((int)(((date.getTime()) % 1000))) + 1000)" to="((((int)(((date.getTime()) % 1000))) + 1000) - 1)" />
    <mutant id="mutant_4228" viable="true" in="org.joda.time.LocalTime.fromDateFields(java.util.Date)" from="(((int)(((date.getTime()) % 1000))) + 1000)" to="((((int)(((date.getTime()) % 1000))) + 1000) * -1)" />
    <mutant id="mutant_459" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.charAt(i++)) - '0'" to="((text.charAt(i++)) - '0') * -1" />
    <mutant id="mutant_455" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.length()) - position)" to="(((text.length()) - position) * -1)" />
    <mutant id="mutant_456" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.length()) - position)" to="(((text.length()) - position) + 1)" />
    <mutant id="mutant_457" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.length()) - position)" to="(((text.length()) - position) - 1)" />
    <mutant id="mutant_458" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="!((c &lt; '0') || (c &gt; '9'))" />
    <mutant id="mutant_1193" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(daysSince19700101 + 3)" to="((daysSince19700101 + 3) * -1)" />
    <mutant id="mutant_1194" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(daysSince19700101 + 3)" to="((daysSince19700101 + 3) + 1)" />
    <mutant id="mutant_1191" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="7 + ((int)(((daysSince19700101 + 4) % 7)))" to="(7 + ((int)(((daysSince19700101 + 4) % 7)))) - 1" />
    <mutant id="mutant_1192" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(daysSince19700101 + 3)" to="((daysSince19700101 + 3) - 1)" />
    <mutant id="mutant_1190" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="7 + ((int)(((daysSince19700101 + 4) % 7)))" to="(7 + ((int)(((daysSince19700101 + 4) % 7)))) * -1" />
    <mutant id="mutant_4216" viable="false" in="org.joda.time.LocalTime.get(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_4215" viable="false" in="org.joda.time.LocalTime.get(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_1188" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="((int)(((daysSince19700101 + 4) % 7)))" to="(((int)(((daysSince19700101 + 4) % 7))) + 1)" />
    <mutant id="mutant_4214" viable="true" in="org.joda.time.LocalTime.get(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) + 1)" />
    <mutant id="mutant_1189" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="7 + ((int)(((daysSince19700101 + 4) % 7)))" to="(7 + ((int)(((daysSince19700101 + 4) % 7)))) + 1" />
    <mutant id="mutant_4213" viable="false" in="org.joda.time.LocalTime.get(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) * -1)" />
    <mutant id="mutant_1186" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="((int)(((daysSince19700101 + 4) % 7)))" to="(((int)(((daysSince19700101 + 4) % 7))) * -1)" />
    <mutant id="mutant_4212" viable="false" in="org.joda.time.LocalTime.get(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) - 1)" />
    <mutant id="mutant_1187" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="((int)(((daysSince19700101 + 4) % 7)))" to="(((int)(((daysSince19700101 + 4) % 7))) - 1)" />
    <mutant id="mutant_4211" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DurationFieldType)" from="(LocalTime.TIME_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &lt; (getChronology().days().getUnitMillis()))" to="!((LocalTime.TIME_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &lt; (getChronology().days().getUnitMillis())))" />
    <mutant id="mutant_1184" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(daysSince19700101 + 4)" to="((daysSince19700101 + 4) - 1)" />
    <mutant id="mutant_4210" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DateTimeFieldType)" from="(isSupported(range)) || (range == (DurationFieldType.days()))" to="!((isSupported(range)) || (range == (DurationFieldType.days())))" />
    <mutant id="mutant_1185" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(daysSince19700101 + 4)" to="((daysSince19700101 + 4) * -1)" />
    <mutant id="mutant_451" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="!((((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9'))" />
    <mutant id="mutant_452" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(limit + 1)" to="((limit + 1) + 1)" />
    <mutant id="mutant_453" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(limit + 1)" to="((limit + 1) * -1)" />
    <mutant id="mutant_454" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(limit + 1)" to="((limit + 1) - 1)" />
    <mutant id="mutant_4219" viable="false" in="org.joda.time.LocalTime.getValue(int)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_4218" viable="false" in="org.joda.time.LocalTime.getValue(int)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_450" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="(!(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')))" />
    <mutant id="mutant_4217" viable="true" in="org.joda.time.LocalTime.get(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_466" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++)))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) + 1)" />
    <mutant id="mutant_467" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++)))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) * -1)" />
    <mutant id="mutant_468" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0') - 1" />
    <mutant id="mutant_469" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0') * -1" />
    <mutant id="mutant_1182" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1)) / (DateTimeConstants.MILLIS_PER_DAY)" to="((instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1)) / (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_1183" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(daysSince19700101 + 4)" to="((daysSince19700101 + 4) + 1)" />
    <mutant id="mutant_1180" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1)) / (DateTimeConstants.MILLIS_PER_DAY)" to="((instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1)) / (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_1181" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1)) / (DateTimeConstants.MILLIS_PER_DAY)" to="((instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1)) / (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_1179" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1))" to="((instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1)) * -1)" />
    <mutant id="mutant_4205" viable="false" in="org.joda.time.LocalDateTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) * -1)" />
    <mutant id="mutant_4204" viable="false" in="org.joda.time.LocalDateTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) - 1)" />
    <mutant id="mutant_1177" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1))" to="((instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1)) + 1)" />
    <mutant id="mutant_4203" viable="true" in="org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_1178" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="(instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1))" to="((instant - ((DateTimeConstants.MILLIS_PER_DAY) - 1)) - 1)" />
    <mutant id="mutant_4202" viable="true" in="org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="!((durationToAdd == null) || (scalar == 0))" />
    <mutant id="mutant_1175" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1)" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) - 1)" />
    <mutant id="mutant_4201" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((((int)(((date.getTime()) % 1000))) + 1000) % 1000)" to="(((((int)(((date.getTime()) % 1000))) + 1000) % 1000) * -1)" />
    <mutant id="mutant_1176" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1)" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) + 1)" />
    <mutant id="mutant_4200" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((((int)(((date.getTime()) % 1000))) + 1000) % 1000)" to="(((((int)(((date.getTime()) % 1000))) + 1000) % 1000) - 1)" />
    <mutant id="mutant_1173" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="instant / (DateTimeConstants.MILLIS_PER_DAY)" to="(instant / (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_1174" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1)" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) * -1)" />
    <mutant id="mutant_462" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) - 1)" />
    <mutant id="mutant_463" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + 1)" />
    <mutant id="mutant_464" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) * -1)" />
    <mutant id="mutant_465" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++)))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - 1)" />
    <mutant id="mutant_4209" viable="true" in="org.joda.time.LocalDateTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4208" viable="false" in="org.joda.time.LocalDateTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_460" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.charAt(i++)) - '0'" to="((text.charAt(i++)) - '0') + 1" />
    <mutant id="mutant_4207" viable="false" in="org.joda.time.LocalDateTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_461" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(text.charAt(i++)) - '0'" to="((text.charAt(i++)) - '0') - 1" />
    <mutant id="mutant_4206" viable="true" in="org.joda.time.LocalDateTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) + 1)" />
    <mutant id="mutant_477" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(&quot;en&quot;.equals(locale.getLanguage())) &amp;&amp; ((iFieldType) == (DateTimeFieldType.era()))" to="!((&quot;en&quot;.equals(locale.getLanguage())) &amp;&amp; ((iFieldType) == (DateTimeFieldType.era())))" />
    <mutant id="mutant_478" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + maxLength)" to="((position + maxLength) + 1)" />
    <mutant id="mutant_479" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + maxLength)" to="((position + maxLength) - 1)" />
    <mutant id="mutant_1171" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="instant / (DateTimeConstants.MILLIS_PER_DAY)" to="(instant / (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_1172" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="instant / (DateTimeConstants.MILLIS_PER_DAY)" to="(instant / (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_1170" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)" from="((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1" to="(((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1) * -1" />
    <mutant id="mutant_1168" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)" from="((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1" to="(((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1) + 1" />
    <mutant id="mutant_2499" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1)" to="((min - 1) - 1)" />
    <mutant id="mutant_1169" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)" from="((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1" to="(((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1) - 1" />
    <mutant id="mutant_1166" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)" from="((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY))))" to="(((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY)))) - 1)" />
    <mutant id="mutant_2497" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) - 1)" />
    <mutant id="mutant_1167" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)" from="((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY))))" to="(((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY)))) * -1)" />
    <mutant id="mutant_2498" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1)" to="((min - 1) + 1)" />
    <mutant id="mutant_1164" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)" from="(millis - dateMillis)" to="((millis - dateMillis) * -1)" />
    <mutant id="mutant_2495" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) + 1)" />
    <mutant id="mutant_1165" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)" from="((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY))))" to="(((int)(((millis - dateMillis) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1)" />
    <mutant id="mutant_2496" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) * -1)" />
    <mutant id="mutant_1162" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)" from="(millis - dateMillis)" to="((millis - dateMillis) + 1)" />
    <mutant id="mutant_2493" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1) - (values[fieldIndex])" to="((min - 1) - (values[fieldIndex])) * -1" />
    <mutant id="mutant_1163" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)" from="(millis - dateMillis)" to="((millis - dateMillis) - 1)" />
    <mutant id="mutant_2494" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1) - (values[fieldIndex])" to="((min - 1) - (values[fieldIndex])) + 1" />
    <mutant id="mutant_473" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (iValue.length())" to="(position + (iValue.length())) - 1" />
    <mutant id="mutant_474" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(max - min)" to="((max - min) + 1)" />
    <mutant id="mutant_475" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(max - min)" to="((max - min) * -1)" />
    <mutant id="mutant_476" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(max - min)" to="((max - min) - 1)" />
    <mutant id="mutant_470" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(i++))) - '0') + 1" />
    <mutant id="mutant_471" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (iValue.length())" to="(position + (iValue.length())) * -1" />
    <mutant id="mutant_472" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (iValue.length())" to="(position + (iValue.length())) + 1" />
    <mutant id="mutant_488" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)" from="(minFields &lt;= 0) || (maxFields &lt; minFields)" to="!((minFields &lt;= 0) || (maxFields &lt; minFields))" />
    <mutant id="mutant_489" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="((text.length()) - position)" to="(((text.length()) - position) * -1)" />
    <mutant id="mutant_4274" viable="false" in="org.joda.time.MonthDay.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_4273" viable="true" in="org.joda.time.Minutes.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.MINUTES_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.MINUTES_PER_WEEK)) * -1)" />
    <mutant id="mutant_4272" viable="true" in="org.joda.time.Minutes.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.MINUTES_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.MINUTES_PER_WEEK)) + 1)" />
    <mutant id="mutant_4271" viable="true" in="org.joda.time.Minutes.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.MINUTES_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.MINUTES_PER_WEEK)) - 1)" />
    <mutant id="mutant_4270" viable="true" in="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="!((start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime))" />
    <mutant id="mutant_4269" viable="true" in="org.joda.time.Minutes.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) + 1)" />
    <mutant id="mutant_4268" viable="true" in="org.joda.time.Minutes.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) * -1)" />
    <mutant id="mutant_4267" viable="true" in="org.joda.time.Minutes.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) - 1)" />
    <mutant id="mutant_4266" viable="true" in="org.joda.time.Minutes.toStandardHours()" from="((getValue()) / (DateTimeConstants.MINUTES_PER_HOUR))" to="(((getValue()) / (DateTimeConstants.MINUTES_PER_HOUR)) + 1)" />
    <mutant id="mutant_4265" viable="true" in="org.joda.time.Minutes.toStandardHours()" from="((getValue()) / (DateTimeConstants.MINUTES_PER_HOUR))" to="(((getValue()) / (DateTimeConstants.MINUTES_PER_HOUR)) - 1)" />
    <mutant id="mutant_4264" viable="true" in="org.joda.time.Minutes.toStandardHours()" from="((getValue()) / (DateTimeConstants.MINUTES_PER_HOUR))" to="(((getValue()) / (DateTimeConstants.MINUTES_PER_HOUR)) * -1)" />
    <mutant id="mutant_484" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (matched.length())" to="(position + (matched.length())) - 1" />
    <mutant id="mutant_485" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(instant - displayOffset)" to="((instant - displayOffset) - 1)" />
    <mutant id="mutant_486" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(instant - displayOffset)" to="((instant - displayOffset) * -1)" />
    <mutant id="mutant_487" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(instant - displayOffset)" to="((instant - displayOffset) + 1)" />
    <mutant id="mutant_480" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + maxLength)" to="((position + maxLength) * -1)" />
    <mutant id="mutant_481" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(matched == null) || ((name.length()) &gt; (matched.length()))" to="!((matched == null) || ((name.length()) &gt; (matched.length())))" />
    <mutant id="mutant_482" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (matched.length())" to="(position + (matched.length())) * -1" />
    <mutant id="mutant_483" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (matched.length())" to="(position + (matched.length())) + 1" />
    <mutant id="mutant_499" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="(iMinFields) - 1" to="((iMinFields) - 1) + 1" />
    <mutant id="mutant_4263" viable="true" in="org.joda.time.Minutes.toStandardDuration()" from="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE))" to="((minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) * -1)" />
    <mutant id="mutant_4262" viable="true" in="org.joda.time.Minutes.toStandardDuration()" from="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE))" to="((minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) + 1)" />
    <mutant id="mutant_4261" viable="true" in="org.joda.time.Minutes.toStandardDuration()" from="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE))" to="((minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) - 1)" />
    <mutant id="mutant_4260" viable="true" in="org.joda.time.Minutes.toStandardDays()" from="((getValue()) / (DateTimeConstants.MINUTES_PER_DAY))" to="(((getValue()) / (DateTimeConstants.MINUTES_PER_DAY)) + 1)" />
    <mutant id="mutant_4259" viable="true" in="org.joda.time.Minutes.toStandardDays()" from="((getValue()) / (DateTimeConstants.MINUTES_PER_DAY))" to="(((getValue()) / (DateTimeConstants.MINUTES_PER_DAY)) - 1)" />
    <mutant id="mutant_4258" viable="true" in="org.joda.time.Minutes.toStandardDays()" from="((getValue()) / (DateTimeConstants.MINUTES_PER_DAY))" to="(((getValue()) / (DateTimeConstants.MINUTES_PER_DAY)) * -1)" />
    <mutant id="mutant_490" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="((text.length()) - position)" to="(((text.length()) - position) + 1)" />
    <mutant id="mutant_4257" viable="false" in="org.joda.time.Minutes.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;M&quot;" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;M&quot;) * -1" />
    <mutant id="mutant_4256" viable="false" in="org.joda.time.Minutes.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;M&quot;" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;M&quot;) - 1" />
    <mutant id="mutant_4255" viable="true" in="org.joda.time.Minutes.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;M&quot;" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;M&quot;) + 1" />
    <mutant id="mutant_4254" viable="false" in="org.joda.time.Minutes.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue())))" to="((&quot;PT&quot; + (String.valueOf(getValue()))) * -1)" />
    <mutant id="mutant_4253" viable="true" in="org.joda.time.Minutes.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue())))" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + 1)" />
    <mutant id="mutant_495" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="(c &lt; '0') || (c &gt; '9')" to="!((c &lt; '0') || (c &gt; '9'))" />
    <mutant id="mutant_496" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="(1 + (iMinFields))" to="((1 + (iMinFields)) + 1)" />
    <mutant id="mutant_497" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="(1 + (iMinFields))" to="((1 + (iMinFields)) - 1)" />
    <mutant id="mutant_498" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="(1 + (iMinFields))" to="((1 + (iMinFields)) * -1)" />
    <mutant id="mutant_491" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="((text.length()) - position)" to="(((text.length()) - position) - 1)" />
    <mutant id="mutant_492" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="(position + amount)" to="((position + amount) - 1)" />
    <mutant id="mutant_493" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="(position + amount)" to="((position + amount) * -1)" />
    <mutant id="mutant_494" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="(position + amount)" to="((position + amount) + 1)" />
    <mutant id="mutant_4252" viable="false" in="org.joda.time.Minutes.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue())))" to="((&quot;PT&quot; + (String.valueOf(getValue()))) - 1)" />
    <mutant id="mutant_4251" viable="true" in="org.joda.time.LocalTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4250" viable="false" in="org.joda.time.LocalTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_4249" viable="false" in="org.joda.time.LocalTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_4248" viable="true" in="org.joda.time.LocalTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) + 1)" />
    <mutant id="mutant_4247" viable="false" in="org.joda.time.LocalTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) * -1)" />
    <mutant id="mutant_4246" viable="false" in="org.joda.time.LocalTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) - 1)" />
    <mutant id="mutant_4245" viable="true" in="org.joda.time.LocalTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_4244" viable="true" in="org.joda.time.LocalTime.withFieldAdded(org.joda.time.DurationFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4243" viable="false" in="org.joda.time.LocalTime.withFieldAdded(org.joda.time.DurationFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_4242" viable="false" in="org.joda.time.LocalTime.withFieldAdded(org.joda.time.DurationFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_4241" viable="false" in="org.joda.time.LocalTime.withFieldAdded(org.joda.time.DurationFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) * -1)" />
    <mutant id="mutant_4240" viable="false" in="org.joda.time.LocalTime.withFieldAdded(org.joda.time.DurationFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) - 1)" />
    <mutant id="mutant_4238" viable="true" in="org.joda.time.LocalTime.withField(org.joda.time.DateTimeFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4237" viable="false" in="org.joda.time.LocalTime.withField(org.joda.time.DateTimeFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_4236" viable="false" in="org.joda.time.LocalTime.withField(org.joda.time.DateTimeFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_4235" viable="true" in="org.joda.time.LocalTime.withField(org.joda.time.DateTimeFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) + 1)" />
    <mutant id="mutant_4234" viable="false" in="org.joda.time.LocalTime.withField(org.joda.time.DateTimeFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) * -1)" />
    <mutant id="mutant_4233" viable="false" in="org.joda.time.LocalTime.withField(org.joda.time.DateTimeFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) - 1)" />
    <mutant id="mutant_4232" viable="true" in="org.joda.time.LocalTime.fromDateFields(java.util.Date)" from="((((int)(((date.getTime()) % 1000))) + 1000) % 1000)" to="(((((int)(((date.getTime()) % 1000))) + 1000) % 1000) * -1)" />
    <mutant id="mutant_4231" viable="true" in="org.joda.time.LocalTime.fromDateFields(java.util.Date)" from="((((int)(((date.getTime()) % 1000))) + 1000) % 1000)" to="(((((int)(((date.getTime()) % 1000))) + 1000) % 1000) - 1)" />
    <mutant id="mutant_4239" viable="true" in="org.joda.time.LocalTime.withFieldAdded(org.joda.time.DurationFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) + 1)" />
    <mutant id="mutant_4299" viable="true" in="org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4298" viable="false" in="org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_4297" viable="false" in="org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_4296" viable="false" in="org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) - 1)" />
    <mutant id="mutant_4295" viable="true" in="org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) + 1)" />
    <mutant id="mutant_4294" viable="false" in="org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) * -1)" />
    <mutant id="mutant_4293" viable="true" in="org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="!((start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate))" />
    <mutant id="mutant_4292" viable="true" in="org.joda.time.Months.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) + 1)" />
    <mutant id="mutant_4291" viable="true" in="org.joda.time.Months.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) * -1)" />
    <mutant id="mutant_4290" viable="true" in="org.joda.time.Months.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) - 1)" />
    <mutant id="mutant_4289" viable="true" in="org.joda.time.Months.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;M&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;M&quot;) + 1" />
    <mutant id="mutant_4288" viable="false" in="org.joda.time.Months.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;M&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;M&quot;) * -1" />
    <mutant id="mutant_4287" viable="false" in="org.joda.time.Months.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;M&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;M&quot;) - 1" />
    <mutant id="mutant_4286" viable="false" in="org.joda.time.Months.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) * -1)" />
    <mutant id="mutant_4285" viable="false" in="org.joda.time.Months.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) - 1)" />
    <mutant id="mutant_4284" viable="true" in="org.joda.time.Months.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) + 1)" />
    <mutant id="mutant_4283" viable="true" in="org.joda.time.MonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_4282" viable="true" in="org.joda.time.MonthDay.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) + 1)" />
    <mutant id="mutant_4281" viable="true" in="org.joda.time.MonthDay.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) - 1)" />
    <mutant id="mutant_4280" viable="true" in="org.joda.time.MonthDay.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) * -1)" />
    <mutant id="mutant_4279" viable="true" in="org.joda.time.MonthDay.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) - 1)" />
    <mutant id="mutant_4278" viable="true" in="org.joda.time.MonthDay.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) * -1)" />
    <mutant id="mutant_4277" viable="true" in="org.joda.time.MonthDay.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) + 1)" />
    <mutant id="mutant_4276" viable="true" in="org.joda.time.MonthDay.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_4275" viable="false" in="org.joda.time.MonthDay.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_3819" viable="false" in="?" from="(DateTimeConstants.MINUTES_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)" to="((DateTimeConstants.MINUTES_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)) - 1" />
    <mutant id="mutant_3818" viable="false" in="?" from="(DateTimeConstants.MINUTES_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)" to="((DateTimeConstants.MINUTES_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)) * -1" />
    <mutant id="mutant_3817" viable="false" in="?" from="(DateTimeConstants.MINUTES_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)" to="((DateTimeConstants.MINUTES_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)) + 1" />
    <mutant id="mutant_3816" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)" to="((DateTimeConstants.MILLIS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)) - 1" />
    <mutant id="mutant_3815" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)" to="((DateTimeConstants.MILLIS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)) * -1" />
    <mutant id="mutant_3814" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)" to="((DateTimeConstants.MILLIS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)) + 1" />
    <mutant id="mutant_3813" viable="false" in="?" from="(DateTimeConstants.SECONDS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)" to="((DateTimeConstants.SECONDS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)) - 1" />
    <mutant id="mutant_3812" viable="false" in="?" from="(DateTimeConstants.SECONDS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)" to="((DateTimeConstants.SECONDS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)) * -1" />
    <mutant id="mutant_3811" viable="false" in="?" from="(DateTimeConstants.SECONDS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)" to="((DateTimeConstants.SECONDS_PER_MINUTE) * (DateTimeConstants.MINUTES_PER_HOUR)) + 1" />
    <mutant id="mutant_3810" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_SECOND) * (DateTimeConstants.SECONDS_PER_MINUTE)" to="((DateTimeConstants.MILLIS_PER_SECOND) * (DateTimeConstants.SECONDS_PER_MINUTE)) - 1" />
    <mutant id="mutant_3809" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_SECOND) * (DateTimeConstants.SECONDS_PER_MINUTE)" to="((DateTimeConstants.MILLIS_PER_SECOND) * (DateTimeConstants.SECONDS_PER_MINUTE)) + 1" />
    <mutant id="mutant_3808" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_SECOND) * (DateTimeConstants.SECONDS_PER_MINUTE)" to="((DateTimeConstants.MILLIS_PER_SECOND) * (DateTimeConstants.SECONDS_PER_MINUTE)) * -1" />
    <mutant id="mutant_3807" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == (DateTimeFieldType.dayOfYear()))" to="!((lowerLimit == null) &amp;&amp; (upperLimit == (DateTimeFieldType.dayOfYear())))" />
    <mutant id="mutant_3806" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == (DateTimeFieldType.dayOfYear())) &amp;&amp; (upperLimit == null)" to="!((lowerLimit == (DateTimeFieldType.dayOfYear())) &amp;&amp; (upperLimit == null))" />
    <mutant id="mutant_3805" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == null)" to="!((lowerLimit == null) &amp;&amp; (upperLimit == null))" />
    <mutant id="mutant_3804" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName())) + &quot;]&quot;" to="((((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName())) + &quot;]&quot;) - 1" />
    <mutant id="mutant_3803" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName())) + &quot;]&quot;" to="((((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName())) + &quot;]&quot;) * -1" />
    <mutant id="mutant_3802" viable="true" in="org.joda.time.DateTimeComparator.toString()" from="(((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName())) + &quot;]&quot;" to="((((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName())) + &quot;]&quot;) + 1" />
    <mutant id="mutant_3801" viable="true" in="org.joda.time.DateTimeComparator.toString()" from="(((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName()))" to="((((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName())) + 1)" />
    <mutant id="mutant_3800" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName()))" to="((((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName())) - 1)" />
    <mutant id="mutant_2521" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long)" from="instant - floor" to="(instant - floor) - 1" />
    <mutant id="mutant_3853" viable="true" in="org.joda.time.DateTimeUtils.fromJulianDay(double)" from="((long)(epochDay * 8.64E7))" to="((long)((epochDay * 8.64E7))) * -1" />
    <mutant id="mutant_2522" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long)" from="ceiling - instant" to="(ceiling - instant) - 1" />
    <mutant id="mutant_3852" viable="true" in="org.joda.time.DateTimeUtils.fromJulianDay(double)" from="((long)(epochDay * 8.64E7))" to="((long)((epochDay * 8.64E7))) - 1" />
    <mutant id="mutant_3851" viable="true" in="org.joda.time.DateTimeUtils.fromJulianDay(double)" from="((long)(epochDay * 8.64E7))" to="((long)((epochDay * 8.64E7))) + 1" />
    <mutant id="mutant_2520" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long)" from="instant - floor" to="(instant - floor) + 1" />
    <mutant id="mutant_3850" viable="true" in="org.joda.time.DateTimeUtils.fromJulianDay(double)" from="julianDay - 2440587.5" to="(julianDay - 2440587.5) * -1" />
    <mutant id="mutant_2529" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfEven(long)" from="ceiling - instant" to="(ceiling - instant) + 1" />
    <mutant id="mutant_2527" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfEven(long)" from="instant - floor" to="(instant - floor) - 1" />
    <mutant id="mutant_3859" viable="false" in="?" from="(86400 * 1000)" to="((86400 * 1000) + 1)" />
    <mutant id="mutant_2528" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfEven(long)" from="ceiling - instant" to="(ceiling - instant) - 1" />
    <mutant id="mutant_3858" viable="false" in="?" from="(86400 * 1000)" to="((86400 * 1000) - 1)" />
    <mutant id="mutant_2525" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfEven(long)" from="instant - floor" to="(instant - floor) * -1" />
    <mutant id="mutant_3857" viable="false" in="?" from="(86400 * 1000)" to="((86400 * 1000) * -1)" />
    <mutant id="mutant_2526" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfEven(long)" from="instant - floor" to="(instant - floor) + 1" />
    <mutant id="mutant_3856" viable="true" in="org.joda.time.DateTimeUtils.toJulianDayNumber(long)" from="((org.joda.time.DateTimeUtils.toJulianDay(epochMillis)) + 0.5)" to="(((org.joda.time.DateTimeUtils.toJulianDay(epochMillis)) + 0.5) + 1)" />
    <mutant id="mutant_2523" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long)" from="ceiling - instant" to="(ceiling - instant) + 1" />
    <mutant id="mutant_3855" viable="true" in="org.joda.time.DateTimeUtils.toJulianDayNumber(long)" from="((org.joda.time.DateTimeUtils.toJulianDay(epochMillis)) + 0.5)" to="(((org.joda.time.DateTimeUtils.toJulianDay(epochMillis)) + 0.5) - 1)" />
    <mutant id="mutant_2524" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long)" from="ceiling - instant" to="(ceiling - instant) * -1" />
    <mutant id="mutant_3854" viable="true" in="org.joda.time.DateTimeUtils.toJulianDayNumber(long)" from="((org.joda.time.DateTimeUtils.toJulianDay(epochMillis)) + 0.5)" to="(((org.joda.time.DateTimeUtils.toJulianDay(epochMillis)) + 0.5) * -1)" />
    <mutant id="mutant_2510" viable="false" in="org.joda.time.field.BaseDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName()))" to="((&quot;DateTimeField[&quot; + (getName())) - 1)" />
    <mutant id="mutant_3842" viable="true" in="org.joda.time.DateTimeUtils.toJulianDay(long)" from="epochMillis / 8.64E7" to="(epochMillis / 8.64E7) - 1" />
    <mutant id="mutant_2511" viable="true" in="org.joda.time.field.BaseDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName()))" to="((&quot;DateTimeField[&quot; + (getName())) + 1)" />
    <mutant id="mutant_3841" viable="true" in="org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial)" from="((loopField.getRangeDurationField()) == null) || ((loopField.getRangeDurationField().getType()) != lastType)" to="!(((loopField.getRangeDurationField()) == null) || ((loopField.getRangeDurationField().getType()) != lastType))" />
    <mutant id="mutant_3840" viable="true" in="org.joda.time.DateTimeUtils$OffsetMillisProvider.getMillis()" from="(System.currentTimeMillis()) + (iMillis)" to="((System.currentTimeMillis()) + (iMillis)) - 1" />
    <mutant id="mutant_2518" viable="true" in="org.joda.time.field.BaseDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) * -1" />
    <mutant id="mutant_2519" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long)" from="instant - floor" to="(instant - floor) * -1" />
    <mutant id="mutant_3849" viable="true" in="org.joda.time.DateTimeUtils.fromJulianDay(double)" from="julianDay - 2440587.5" to="(julianDay - 2440587.5) + 1" />
    <mutant id="mutant_2516" viable="true" in="org.joda.time.field.BaseDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) - 1" />
    <mutant id="mutant_3848" viable="true" in="org.joda.time.DateTimeUtils.fromJulianDay(double)" from="julianDay - 2440587.5" to="(julianDay - 2440587.5) - 1" />
    <mutant id="mutant_2517" viable="true" in="org.joda.time.field.BaseDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) + 1" />
    <mutant id="mutant_3847" viable="true" in="org.joda.time.DateTimeUtils.toJulianDay(long)" from="epochDay + 2440587.5" to="(epochDay + 2440587.5) + 1" />
    <mutant id="mutant_2514" viable="false" in="org.joda.time.field.BaseDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName())) + ']'" to="((&quot;DateTimeField[&quot; + (getName())) + ']') - 1" />
    <mutant id="mutant_3846" viable="true" in="org.joda.time.DateTimeUtils.toJulianDay(long)" from="epochDay + 2440587.5" to="(epochDay + 2440587.5) - 1" />
    <mutant id="mutant_2515" viable="false" in="org.joda.time.field.BaseDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName())) + ']'" to="((&quot;DateTimeField[&quot; + (getName())) + ']') * -1" />
    <mutant id="mutant_3845" viable="true" in="org.joda.time.DateTimeUtils.toJulianDay(long)" from="epochDay + 2440587.5" to="(epochDay + 2440587.5) * -1" />
    <mutant id="mutant_2512" viable="false" in="org.joda.time.field.BaseDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName()))" to="((&quot;DateTimeField[&quot; + (getName())) * -1)" />
    <mutant id="mutant_3844" viable="true" in="org.joda.time.DateTimeUtils.toJulianDay(long)" from="epochMillis / 8.64E7" to="(epochMillis / 8.64E7) + 1" />
    <mutant id="mutant_2513" viable="true" in="org.joda.time.field.BaseDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName())) + ']'" to="((&quot;DateTimeField[&quot; + (getName())) + ']') + 1" />
    <mutant id="mutant_3843" viable="true" in="org.joda.time.DateTimeUtils.toJulianDay(long)" from="epochMillis / 8.64E7" to="(epochMillis / 8.64E7) * -1" />
    <mutant id="mutant_2509" viable="true" in="org.joda.time.field.BaseDateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)" from="fieldIndex + 1" to="(fieldIndex + 1) + 1" />
    <mutant id="mutant_3831" viable="false" in="?" from="(DateTimeConstants.MINUTES_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.MINUTES_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) - 1" />
    <mutant id="mutant_2500" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1)" to="((min - 1) * -1)" />
    <mutant id="mutant_3830" viable="false" in="?" from="(DateTimeConstants.MINUTES_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.MINUTES_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) * -1" />
    <mutant id="mutant_2507" viable="true" in="org.joda.time.field.BaseDateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)" from="fieldIndex + 1" to="(fieldIndex + 1) - 1" />
    <mutant id="mutant_3839" viable="true" in="org.joda.time.DateTimeUtils$OffsetMillisProvider.getMillis()" from="(System.currentTimeMillis()) + (iMillis)" to="((System.currentTimeMillis()) + (iMillis)) + 1" />
    <mutant id="mutant_2508" viable="true" in="org.joda.time.field.BaseDateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)" from="fieldIndex + 1" to="(fieldIndex + 1) * -1" />
    <mutant id="mutant_3838" viable="true" in="org.joda.time.DateTimeUtils$OffsetMillisProvider.getMillis()" from="(System.currentTimeMillis()) + (iMillis)" to="((System.currentTimeMillis()) + (iMillis)) * -1" />
    <mutant id="mutant_2505" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) * -1)" />
    <mutant id="mutant_3837" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.MILLIS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) * -1" />
    <mutant id="mutant_2506" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) - 1)" />
    <mutant id="mutant_3836" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.MILLIS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) - 1" />
    <mutant id="mutant_2503" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1) - (values[fieldIndex])" to="((min - 1) - (values[fieldIndex])) + 1" />
    <mutant id="mutant_3835" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.MILLIS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) + 1" />
    <mutant id="mutant_2504" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) + 1)" />
    <mutant id="mutant_3834" viable="false" in="?" from="(DateTimeConstants.SECONDS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.SECONDS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) + 1" />
    <mutant id="mutant_2501" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1) - (values[fieldIndex])" to="((min - 1) - (values[fieldIndex])) - 1" />
    <mutant id="mutant_3833" viable="false" in="?" from="(DateTimeConstants.SECONDS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.SECONDS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) * -1" />
    <mutant id="mutant_2502" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1) - (values[fieldIndex])" to="((min - 1) - (values[fieldIndex])) * -1" />
    <mutant id="mutant_3832" viable="false" in="?" from="(DateTimeConstants.SECONDS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.SECONDS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) - 1" />
    <mutant id="mutant_3829" viable="false" in="?" from="(DateTimeConstants.MINUTES_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.MINUTES_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) + 1" />
    <mutant id="mutant_3820" viable="false" in="?" from="(DateTimeConstants.SECONDS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)" to="((DateTimeConstants.SECONDS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)) + 1" />
    <mutant id="mutant_3828" viable="false" in="?" from="(DateTimeConstants.HOURS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.HOURS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) + 1" />
    <mutant id="mutant_3827" viable="false" in="?" from="(DateTimeConstants.HOURS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.HOURS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) - 1" />
    <mutant id="mutant_3826" viable="false" in="?" from="(DateTimeConstants.HOURS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)" to="((DateTimeConstants.HOURS_PER_DAY) * (DateTimeConstants.DAYS_PER_WEEK)) * -1" />
    <mutant id="mutant_3825" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)" to="((DateTimeConstants.MILLIS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)) + 1" />
    <mutant id="mutant_3824" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)" to="((DateTimeConstants.MILLIS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)) - 1" />
    <mutant id="mutant_3823" viable="false" in="?" from="(DateTimeConstants.MILLIS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)" to="((DateTimeConstants.MILLIS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)) * -1" />
    <mutant id="mutant_3822" viable="false" in="?" from="(DateTimeConstants.SECONDS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)" to="((DateTimeConstants.SECONDS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)) * -1" />
    <mutant id="mutant_3821" viable="false" in="?" from="(DateTimeConstants.SECONDS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)" to="((DateTimeConstants.SECONDS_PER_HOUR) * (DateTimeConstants.HOURS_PER_DAY)) - 1" />
    <mutant id="mutant_1234" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK))))" to="(((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) + 1)" />
    <mutant id="mutant_2565" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_3897" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="minutes * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_1235" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK))))" to="(((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) - 1)" />
    <mutant id="mutant_2566" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_3896" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="minutes * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_1232" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="(instant - firstWeekMillis1)" to="((instant - firstWeekMillis1) * -1)" />
    <mutant id="mutant_2563" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="i / divisor" to="(i / divisor) * -1" />
    <mutant id="mutant_3895" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="offset / (DateTimeConstants.MILLIS_PER_MINUTE)" to="(offset / (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_1233" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="(instant - firstWeekMillis1)" to="((instant - firstWeekMillis1) + 1)" />
    <mutant id="mutant_2564" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_3894" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="offset / (DateTimeConstants.MILLIS_PER_MINUTE)" to="(offset / (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_1230" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="(year + 1)" to="((year + 1) * -1)" />
    <mutant id="mutant_2561" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="i / divisor" to="(i / divisor) - 1" />
    <mutant id="mutant_3893" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="offset / (DateTimeConstants.MILLIS_PER_MINUTE)" to="(offset / (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_1231" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="(instant - firstWeekMillis1)" to="((instant - firstWeekMillis1) - 1)" />
    <mutant id="mutant_2562" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="i / divisor" to="(i / divisor) + 1" />
    <mutant id="mutant_3892" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))" to="(hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))) * -1" />
    <mutant id="mutant_3891" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))" to="(hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))) + 1" />
    <mutant id="mutant_2560" viable="false" in="org.joda.time.field.DelegatedDurationField.toString()" from="(&quot;DurationField[&quot; + (iType)) + ']'" to="((&quot;DurationField[&quot; + (iType)) + ']') - 1" />
    <mutant id="mutant_3890" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))" to="(hours * ((int)(DateTimeConstants.MILLIS_PER_HOUR))) - 1" />
    <mutant id="mutant_1238" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) + 1" to="(((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) + 1) - 1" />
    <mutant id="mutant_2569" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((i + 1) / divisor)" to="(((i + 1) / divisor) * -1)" />
    <mutant id="mutant_1239" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) + 1" to="(((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) + 1) + 1" />
    <mutant id="mutant_1236" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK))))" to="(((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) * -1)" />
    <mutant id="mutant_2567" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((i + 1) / divisor)" to="(((i + 1) / divisor) + 1)" />
    <mutant id="mutant_3899" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="offset / (DateTimeConstants.MILLIS_PER_SECOND)" to="(offset / (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_1237" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) + 1" to="(((int)(((instant - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) + 1) * -1" />
    <mutant id="mutant_2568" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((i + 1) / divisor)" to="(((i + 1) / divisor) - 1)" />
    <mutant id="mutant_3898" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="minutes * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(minutes * (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_1223" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1) + ((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY))))" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) + ((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY))))) - 1" />
    <mutant id="mutant_2554" viable="false" in="org.joda.time.field.DelegatedDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName())) + ']'" to="((&quot;DateTimeField[&quot; + (getName())) + ']') * -1" />
    <mutant id="mutant_3886" viable="true" in="org.joda.time.DateTimeZone.hashCode()" from="57 + (getID().hashCode())" to="(57 + (getID().hashCode())) * -1" />
    <mutant id="mutant_1224" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1) + ((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY))))" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) + ((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY))))) * -1" />
    <mutant id="mutant_2555" viable="true" in="org.joda.time.field.DelegatedDurationField.toString()" from="(&quot;DurationField[&quot; + (iType))" to="((&quot;DurationField[&quot; + (iType)) + 1)" />
    <mutant id="mutant_3885" viable="true" in="org.joda.time.DateTimeZone.hashCode()" from="57 + (getID().hashCode())" to="(57 + (getID().hashCode())) + 1" />
    <mutant id="mutant_1221" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY))))" to="(((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY)))) - 1)" />
    <mutant id="mutant_2552" viable="false" in="org.joda.time.field.DelegatedDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName())) + ']'" to="((&quot;DateTimeField[&quot; + (getName())) + ']') - 1" />
    <mutant id="mutant_3884" viable="true" in="org.joda.time.DateTimeZone.hashCode()" from="57 + (getID().hashCode())" to="(57 + (getID().hashCode())) - 1" />
    <mutant id="mutant_1222" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1) + ((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY))))" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) + ((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY))))) + 1" />
    <mutant id="mutant_2553" viable="true" in="org.joda.time.field.DelegatedDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName())) + ']'" to="((&quot;DateTimeField[&quot; + (getName())) + ']') + 1" />
    <mutant id="mutant_3883" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantAdjusted - prev)" to="((instantAdjusted - prev) * -1)" />
    <mutant id="mutant_2550" viable="false" in="org.joda.time.field.DelegatedDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName()))" to="((&quot;DateTimeField[&quot; + (getName())) - 1)" />
    <mutant id="mutant_3882" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantAdjusted - prev)" to="((instantAdjusted - prev) + 1)" />
    <mutant id="mutant_1220" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY))))" to="(((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY)))) * -1)" />
    <mutant id="mutant_2551" viable="false" in="org.joda.time.field.DelegatedDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName()))" to="((&quot;DateTimeField[&quot; + (getName())) * -1)" />
    <mutant id="mutant_3881" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantAdjusted - prev)" to="((instantAdjusted - prev) - 1)" />
    <mutant id="mutant_3880" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="offsetPrev - offsetLocal" to="(offsetPrev - offsetLocal) + 1" />
    <mutant id="mutant_1229" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="(year + 1)" to="((year + 1) - 1)" />
    <mutant id="mutant_1227" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="(year - 1)" to="((year - 1) + 1)" />
    <mutant id="mutant_2558" viable="false" in="org.joda.time.field.DelegatedDurationField.toString()" from="(&quot;DurationField[&quot; + (iType)) + ']'" to="((&quot;DurationField[&quot; + (iType)) + ']') * -1" />
    <mutant id="mutant_1228" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="(year + 1)" to="((year + 1) + 1)" />
    <mutant id="mutant_2559" viable="true" in="org.joda.time.field.DelegatedDurationField.toString()" from="(&quot;DurationField[&quot; + (iType)) + ']'" to="((&quot;DurationField[&quot; + (iType)) + ']') + 1" />
    <mutant id="mutant_3889" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="offset / (DateTimeConstants.MILLIS_PER_HOUR)" to="(offset / (DateTimeConstants.MILLIS_PER_HOUR)) * -1" />
    <mutant id="mutant_1225" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="(year - 1)" to="((year - 1) - 1)" />
    <mutant id="mutant_2556" viable="false" in="org.joda.time.field.DelegatedDurationField.toString()" from="(&quot;DurationField[&quot; + (iType))" to="((&quot;DurationField[&quot; + (iType)) * -1)" />
    <mutant id="mutant_3888" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="offset / (DateTimeConstants.MILLIS_PER_HOUR)" to="(offset / (DateTimeConstants.MILLIS_PER_HOUR)) + 1" />
    <mutant id="mutant_1226" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)" from="(year - 1)" to="((year - 1) * -1)" />
    <mutant id="mutant_2557" viable="false" in="org.joda.time.field.DelegatedDurationField.toString()" from="(&quot;DurationField[&quot; + (iType))" to="((&quot;DurationField[&quot; + (iType)) - 1)" />
    <mutant id="mutant_3887" viable="true" in="org.joda.time.DateTimeZone.printOffset(int)" from="offset / (DateTimeConstants.MILLIS_PER_HOUR)" to="(offset / (DateTimeConstants.MILLIS_PER_HOUR)) - 1" />
    <mutant id="mutant_1212" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((int)(instant % (DateTimeConstants.MILLIS_PER_DAY)))" to="((int)((instant % (DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_2543" viable="true" in="org.joda.time.field.BaseDurationField.getMillis(int)" from="value * (getUnitMillis())" to="(value * (getUnitMillis())) * -1" />
    <mutant id="mutant_3875" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantLocal - offsetAdjusted)" to="((instantLocal - offsetAdjusted) - 1)" />
    <mutant id="mutant_1213" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1)" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) * -1)" />
    <mutant id="mutant_2544" viable="true" in="org.joda.time.field.BaseDurationField.getMillis(int)" from="value * (getUnitMillis())" to="(value * (getUnitMillis())) + 1" />
    <mutant id="mutant_3874" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantLocal - offsetAdjusted)" to="((instantLocal - offsetAdjusted) * -1)" />
    <mutant id="mutant_1210" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((int)(instant % (DateTimeConstants.MILLIS_PER_DAY)))" to="((int)((instant % (DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_2541" viable="true" in="org.joda.time.field.BaseDurationField.toString()" from="(&quot;DurationField[&quot; + (getName())) + ']'" to="((&quot;DurationField[&quot; + (getName())) + ']') + 1" />
    <mutant id="mutant_3873" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantLocal - offsetAdjusted)" to="((instantLocal - offsetAdjusted) + 1)" />
    <mutant id="mutant_1211" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((int)(instant % (DateTimeConstants.MILLIS_PER_DAY)))" to="((int)((instant % (DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_2542" viable="false" in="org.joda.time.field.BaseDurationField.toString()" from="(&quot;DurationField[&quot; + (getName())) + ']'" to="((&quot;DurationField[&quot; + (getName())) + ']') - 1" />
    <mutant id="mutant_3872" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantLocal - offsetAdjusted)" to="((instantLocal - offsetAdjusted) - 1)" />
    <mutant id="mutant_3871" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) * -1)" />
    <mutant id="mutant_2540" viable="false" in="org.joda.time.field.BaseDurationField.toString()" from="(&quot;DurationField[&quot; + (getName())) + ']'" to="((&quot;DurationField[&quot; + (getName())) + ']') * -1" />
    <mutant id="mutant_3870" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) - 1)" />
    <mutant id="mutant_1218" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="(instant + 1)" to="((instant + 1) - 1)" />
    <mutant id="mutant_2549" viable="true" in="org.joda.time.field.DelegatedDateTimeField.toString()" from="(&quot;DateTimeField[&quot; + (getName()))" to="((&quot;DateTimeField[&quot; + (getName())) + 1)" />
    <mutant id="mutant_1219" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY))))" to="(((int)(((instant + 1) % (DateTimeConstants.MILLIS_PER_DAY)))) + 1)" />
    <mutant id="mutant_1216" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="(instant + 1)" to="((instant + 1) + 1)" />
    <mutant id="mutant_2547" viable="true" in="org.joda.time.field.BaseDurationField.getValueAsLong(long)" from="duration / (getUnitMillis())" to="(duration / (getUnitMillis())) - 1" />
    <mutant id="mutant_3879" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="offsetPrev - offsetLocal" to="(offsetPrev - offsetLocal) - 1" />
    <mutant id="mutant_1217" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="(instant + 1)" to="((instant + 1) * -1)" />
    <mutant id="mutant_2548" viable="true" in="org.joda.time.field.BaseDurationField.getValueAsLong(long)" from="duration / (getUnitMillis())" to="(duration / (getUnitMillis())) * -1" />
    <mutant id="mutant_3878" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="offsetPrev - offsetLocal" to="(offsetPrev - offsetLocal) * -1" />
    <mutant id="mutant_1214" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1)" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) - 1)" />
    <mutant id="mutant_2545" viable="true" in="org.joda.time.field.BaseDurationField.getMillis(int)" from="value * (getUnitMillis())" to="(value * (getUnitMillis())) - 1" />
    <mutant id="mutant_3877" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantLocal - offsetAdjusted)" to="((instantLocal - offsetAdjusted) * -1)" />
    <mutant id="mutant_1215" viable="true" in="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)" from="((DateTimeConstants.MILLIS_PER_DAY) - 1)" to="(((DateTimeConstants.MILLIS_PER_DAY) - 1) + 1)" />
    <mutant id="mutant_2546" viable="true" in="org.joda.time.field.BaseDurationField.getValueAsLong(long)" from="duration / (getUnitMillis())" to="(duration / (getUnitMillis())) + 1" />
    <mutant id="mutant_3876" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantLocal - offsetAdjusted)" to="((instantLocal - offsetAdjusted) + 1)" />
    <mutant id="mutant_1201" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)" from="(instant - yearStart)" to="((instant - yearStart) - 1)" />
    <mutant id="mutant_2532" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfFloor(long)" from="instant - floor" to="(instant - floor) + 1" />
    <mutant id="mutant_3864" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="instantLocal - offsetLocal" to="(instantLocal - offsetLocal) - 1" />
    <mutant id="mutant_1202" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)" from="(instant - yearStart)" to="((instant - yearStart) + 1)" />
    <mutant id="mutant_2533" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfFloor(long)" from="instant - floor" to="(instant - floor) - 1" />
    <mutant id="mutant_3863" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="instantLocal - offsetLocal" to="(instantLocal - offsetLocal) + 1" />
    <mutant id="mutant_2530" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfEven(long)" from="ceiling - instant" to="(ceiling - instant) * -1" />
    <mutant id="mutant_3862" viable="false" in="?" from="(86400 * 1000) - 1" to="((86400 * 1000) - 1) - 1" />
    <mutant id="mutant_1200" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)" from="1 + ((int)(((daysSince19700101 + 3) % 7)))" to="(1 + ((int)(((daysSince19700101 + 3) % 7)))) - 1" />
    <mutant id="mutant_2531" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfFloor(long)" from="instant - floor" to="(instant - floor) * -1" />
    <mutant id="mutant_3861" viable="false" in="?" from="(86400 * 1000) - 1" to="((86400 * 1000) - 1) * -1" />
    <mutant id="mutant_3860" viable="false" in="?" from="(86400 * 1000) - 1" to="((86400 * 1000) - 1) + 1" />
    <mutant id="mutant_1209" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)" from="((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1" to="(((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1) * -1" />
    <mutant id="mutant_1207" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)" from="((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1" to="(((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1) + 1" />
    <mutant id="mutant_2538" viable="true" in="org.joda.time.field.BaseDurationField.toString()" from="(&quot;DurationField[&quot; + (getName()))" to="((&quot;DurationField[&quot; + (getName())) + 1)" />
    <mutant id="mutant_1208" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)" from="((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1" to="(((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1) - 1" />
    <mutant id="mutant_2539" viable="false" in="org.joda.time.field.BaseDurationField.toString()" from="(&quot;DurationField[&quot; + (getName()))" to="((&quot;DurationField[&quot; + (getName())) * -1)" />
    <mutant id="mutant_3869" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(instantLocal - offsetLocal)" to="((instantLocal - offsetLocal) + 1)" />
    <mutant id="mutant_1205" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)" from="((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY))))" to="(((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY)))) - 1)" />
    <mutant id="mutant_2536" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfFloor(long)" from="ceiling - instant" to="(ceiling - instant) * -1" />
    <mutant id="mutant_3868" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(offsetLocal - offsetAdjusted)" to="((offsetLocal - offsetAdjusted) * -1)" />
    <mutant id="mutant_1206" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)" from="((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY))))" to="(((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1)" />
    <mutant id="mutant_2537" viable="false" in="org.joda.time.field.BaseDurationField.toString()" from="(&quot;DurationField[&quot; + (getName()))" to="((&quot;DurationField[&quot; + (getName())) - 1)" />
    <mutant id="mutant_3867" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(offsetLocal - offsetAdjusted)" to="((offsetLocal - offsetAdjusted) + 1)" />
    <mutant id="mutant_1203" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)" from="(instant - yearStart)" to="((instant - yearStart) * -1)" />
    <mutant id="mutant_2534" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfFloor(long)" from="ceiling - instant" to="(ceiling - instant) - 1" />
    <mutant id="mutant_3866" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="(offsetLocal - offsetAdjusted)" to="((offsetLocal - offsetAdjusted) - 1)" />
    <mutant id="mutant_1204" viable="true" in="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)" from="((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY))))" to="(((int)(((instant - yearStart) / (DateTimeConstants.MILLIS_PER_DAY)))) * -1)" />
    <mutant id="mutant_2535" viable="true" in="org.joda.time.field.BaseDateTimeField.roundHalfFloor(long)" from="ceiling - instant" to="(ceiling - instant) + 1" />
    <mutant id="mutant_3865" viable="true" in="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" from="instantLocal - offsetLocal" to="(instantLocal - offsetLocal) * -1" />
    <mutant id="mutant_404" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + length" to="(position + length) - 1" />
    <mutant id="mutant_405" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + length" to="(position + length) + 1" />
    <mutant id="mutant_406" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="(rangeMillis * scalar)" to="((rangeMillis * scalar) + 1)" />
    <mutant id="mutant_407" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="(rangeMillis * scalar)" to="((rangeMillis * scalar) - 1)" />
    <mutant id="mutant_400" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c - '0') * nn" to="((c - '0') * nn) - 1" />
    <mutant id="mutant_401" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c - '0') * nn" to="((c - '0') * nn) * -1" />
    <mutant id="mutant_402" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c - '0') * nn" to="((c - '0') * nn) + 1" />
    <mutant id="mutant_403" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + length" to="(position + length) * -1" />
    <mutant id="mutant_1281" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(DateTimeConstants.MILLIS_PER_DAY) * 365L" to="((DateTimeConstants.MILLIS_PER_DAY) * 365L) + 1" />
    <mutant id="mutant_1282" viable="true" in="org.joda.time.chrono.BasicChronology.hashCode()" from="((getClass().getName().hashCode()) * 11)" to="(((getClass().getName().hashCode()) * 11) - 1)" />
    <mutant id="mutant_1280" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(DateTimeConstants.MILLIS_PER_DAY) * 365L" to="((DateTimeConstants.MILLIS_PER_DAY) * 365L) * -1" />
    <mutant id="mutant_408" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="(rangeMillis * scalar)" to="((rangeMillis * scalar) * -1)" />
    <mutant id="mutant_409" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="((rangeMillis * scalar) / scalar)" to="(((rangeMillis * scalar) / scalar) - 1)" />
    <mutant id="mutant_1278" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(DateTimeConstants.MILLIS_PER_DAY) * 366L" to="((DateTimeConstants.MILLIS_PER_DAY) * 366L) - 1" />
    <mutant id="mutant_4304" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="(&quot;Illegal rounding mode: &quot; + mode)" to="((&quot;Illegal rounding mode: &quot; + mode) + 1)" />
    <mutant id="mutant_1279" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(DateTimeConstants.MILLIS_PER_DAY) * 365L" to="((DateTimeConstants.MILLIS_PER_DAY) * 365L) - 1" />
    <mutant id="mutant_4303" viable="false" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="(&quot;Illegal rounding mode: &quot; + mode)" to="((&quot;Illegal rounding mode: &quot; + mode) * -1)" />
    <mutant id="mutant_1276" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(DateTimeConstants.MILLIS_PER_DAY) * 366L" to="((DateTimeConstants.MILLIS_PER_DAY) * 366L) + 1" />
    <mutant id="mutant_4302" viable="false" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="(&quot;Illegal rounding mode: &quot; + mode)" to="((&quot;Illegal rounding mode: &quot; + mode) - 1)" />
    <mutant id="mutant_1277" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(DateTimeConstants.MILLIS_PER_DAY) * 366L" to="((DateTimeConstants.MILLIS_PER_DAY) * 366L) * -1" />
    <mutant id="mutant_4301" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="(field != null) &amp;&amp; ((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="!((field != null) &amp;&amp; ((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN))))" />
    <mutant id="mutant_1274" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="((DateTimeConstants.MILLIS_PER_DAY) * 365L)" to="(((DateTimeConstants.MILLIS_PER_DAY) * 365L) * -1)" />
    <mutant id="mutant_4300" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="(!((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN))))" />
    <mutant id="mutant_1275" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="((DateTimeConstants.MILLIS_PER_DAY) * 365L)" to="(((DateTimeConstants.MILLIS_PER_DAY) * 365L) + 1)" />
    <mutant id="mutant_1272" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="instant - yearStart" to="(instant - yearStart) * -1" />
    <mutant id="mutant_1273" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="((DateTimeConstants.MILLIS_PER_DAY) * 365L)" to="(((DateTimeConstants.MILLIS_PER_DAY) * 365L) - 1)" />
    <mutant id="mutant_4309" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4308" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain null: index &quot; + i)" to="((&quot;Types array must not contain null: index &quot; + i) + 1)" />
    <mutant id="mutant_4307" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain null: index &quot; + i)" to="((&quot;Types array must not contain null: index &quot; + i) - 1)" />
    <mutant id="mutant_4306" viable="false" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(&quot;Types array must not contain null: index &quot; + i)" to="((&quot;Types array must not contain null: index &quot; + i) * -1)" />
    <mutant id="mutant_4305" viable="true" in="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="!((start == null) &amp;&amp; (end == null))" />
    <mutant id="mutant_415" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="(fraction * scalar) / rangeMillis" to="((fraction * scalar) / rangeMillis) + 1" />
    <mutant id="mutant_416" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="(fraction * scalar) / rangeMillis" to="((fraction * scalar) / rangeMillis) * -1" />
    <mutant id="mutant_417" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="(fraction * scalar) / rangeMillis" to="((fraction * scalar) / rangeMillis) - 1" />
    <mutant id="mutant_418" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="(length - 1)" to="((length - 1) - 1)" />
    <mutant id="mutant_411" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="((rangeMillis * scalar) / scalar)" to="(((rangeMillis * scalar) / scalar) * -1)" />
    <mutant id="mutant_412" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="(fraction * scalar)" to="((fraction * scalar) + 1)" />
    <mutant id="mutant_413" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="(fraction * scalar)" to="((fraction * scalar) - 1)" />
    <mutant id="mutant_414" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="(fraction * scalar)" to="((fraction * scalar) * -1)" />
    <mutant id="mutant_1270" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="instant - yearStart" to="(instant - yearStart) - 1" />
    <mutant id="mutant_1271" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="instant - yearStart" to="(instant - yearStart) + 1" />
    <mutant id="mutant_419" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="(length - 1)" to="((length - 1) * -1)" />
    <mutant id="mutant_1267" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="((int)(i2 / unitMillis))" to="((int)((i2 / unitMillis))) + 1" />
    <mutant id="mutant_2598" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="j / divisor" to="(j / divisor) * -1" />
    <mutant id="mutant_1268" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="((int)(i2 / unitMillis))" to="((int)((i2 / unitMillis))) - 1" />
    <mutant id="mutant_2599" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="j / divisor" to="(j / divisor) - 1" />
    <mutant id="mutant_1265" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(i2 - unitMillis) + 1" to="((i2 - unitMillis) + 1) * -1" />
    <mutant id="mutant_2596" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((i + 1) / divisor) - 1" to="(((i + 1) / divisor) - 1) - 1" />
    <mutant id="mutant_1266" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(i2 - unitMillis) + 1" to="((i2 - unitMillis) + 1) - 1" />
    <mutant id="mutant_2597" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="j / divisor" to="(j / divisor) + 1" />
    <mutant id="mutant_1263" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(i2 - unitMillis)" to="((i2 - unitMillis) + 1)" />
    <mutant id="mutant_2594" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((i + 1) / divisor) - 1" to="(((i + 1) / divisor) - 1) * -1" />
    <mutant id="mutant_1264" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(i2 - unitMillis) + 1" to="((i2 - unitMillis) + 1) + 1" />
    <mutant id="mutant_2595" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((i + 1) / divisor) - 1" to="(((i + 1) / divisor) - 1) + 1" />
    <mutant id="mutant_1261" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(i2 - unitMillis)" to="((i2 - unitMillis) * -1)" />
    <mutant id="mutant_2592" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((i + 1) / divisor)" to="(((i + 1) / divisor) - 1)" />
    <mutant id="mutant_1262" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(i2 - unitMillis)" to="((i2 - unitMillis) - 1)" />
    <mutant id="mutant_2593" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((i + 1) / divisor)" to="(((i + 1) / divisor) * -1)" />
    <mutant id="mutant_410" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)" from="((rangeMillis * scalar) / scalar)" to="(((rangeMillis * scalar) / scalar) + 1)" />
    <mutant id="mutant_1269" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="((int)(i2 / unitMillis))" to="((int)((i2 / unitMillis))) * -1" />
    <mutant id="mutant_426" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_427" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_428" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_429" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)) || ((parsers[(i + 1)]) == null)" to="!(((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)) || ((parsers[(i + 1)]) == null))" />
    <mutant id="mutant_422" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_423" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_424" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_425" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length))" to="(!((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)))" />
    <mutant id="mutant_2590" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_1260" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(instant &gt;&gt; 1) + (getApproxMillisAtEpochDividedByTwo())" to="((instant &gt;&gt; 1) + (getApproxMillisAtEpochDividedByTwo())) - 1" />
    <mutant id="mutant_2591" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="((i + 1) / divisor)" to="(((i + 1) / divisor) + 1)" />
    <mutant id="mutant_1256" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekyear(long)" from="(instant - (2 * (DateTimeConstants.MILLIS_PER_WEEK)))" to="((instant - (2 * (DateTimeConstants.MILLIS_PER_WEEK))) + 1)" />
    <mutant id="mutant_2587" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="i / divisor" to="(i / divisor) * -1" />
    <mutant id="mutant_1257" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekyear(long)" from="(instant - (2 * (DateTimeConstants.MILLIS_PER_WEEK)))" to="((instant - (2 * (DateTimeConstants.MILLIS_PER_WEEK))) * -1)" />
    <mutant id="mutant_2588" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_1254" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekyear(long)" from="(2 * (DateTimeConstants.MILLIS_PER_WEEK))" to="((2 * (DateTimeConstants.MILLIS_PER_WEEK)) * -1)" />
    <mutant id="mutant_2585" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="i / divisor" to="(i / divisor) - 1" />
    <mutant id="mutant_1255" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekyear(long)" from="(instant - (2 * (DateTimeConstants.MILLIS_PER_WEEK)))" to="((instant - (2 * (DateTimeConstants.MILLIS_PER_WEEK))) - 1)" />
    <mutant id="mutant_2586" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="i / divisor" to="(i / divisor) + 1" />
    <mutant id="mutant_1252" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekyear(long)" from="(2 * (DateTimeConstants.MILLIS_PER_WEEK))" to="((2 * (DateTimeConstants.MILLIS_PER_WEEK)) + 1)" />
    <mutant id="mutant_2583" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((j + 1) / divisor) - 1" to="(((j + 1) / divisor) - 1) - 1" />
    <mutant id="mutant_1253" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekyear(long)" from="(2 * (DateTimeConstants.MILLIS_PER_WEEK))" to="((2 * (DateTimeConstants.MILLIS_PER_WEEK)) - 1)" />
    <mutant id="mutant_2584" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((j + 1) / divisor) - 1" to="(((j + 1) / divisor) - 1) * -1" />
    <mutant id="mutant_1250" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekyear(long)" from="(instant + (DateTimeConstants.MILLIS_PER_WEEK))" to="((instant + (DateTimeConstants.MILLIS_PER_WEEK)) - 1)" />
    <mutant id="mutant_2581" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((j + 1) / divisor)" to="(((j + 1) / divisor) - 1)" />
    <mutant id="mutant_1251" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekyear(long)" from="(instant + (DateTimeConstants.MILLIS_PER_WEEK))" to="((instant + (DateTimeConstants.MILLIS_PER_WEEK)) * -1)" />
    <mutant id="mutant_2582" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((j + 1) / divisor) - 1" to="(((j + 1) / divisor) - 1) + 1" />
    <mutant id="mutant_420" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="(length - 1)" to="((length - 1) + 1)" />
    <mutant id="mutant_421" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="(length &lt;= 1) || ((str.charAt((length - 1))) != '0')" to="!((length &lt;= 1) || ((str.charAt((length - 1))) != '0'))" />
    <mutant id="mutant_1258" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(instant &gt;&gt; 1) + (getApproxMillisAtEpochDividedByTwo())" to="((instant &gt;&gt; 1) + (getApproxMillisAtEpochDividedByTwo())) * -1" />
    <mutant id="mutant_2589" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_1259" viable="true" in="org.joda.time.chrono.BasicChronology.getYear(long)" from="(instant &gt;&gt; 1) + (getApproxMillisAtEpochDividedByTwo())" to="((instant &gt;&gt; 1) + (getApproxMillisAtEpochDividedByTwo())) + 1" />
    <mutant id="mutant_437" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_438" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="(!((c == '-') || (c == '+')))" />
    <mutant id="mutant_439" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="(!((length == 0) &amp;&amp; ((c == '-') || (c == '+'))))" />
    <mutant id="mutant_433" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.length()) - position)" to="(((text.length()) - position) + 1)" />
    <mutant id="mutant_434" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.length()) - position)" to="(((text.length()) - position) - 1)" />
    <mutant id="mutant_435" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_436" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_2580" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((j + 1) / divisor)" to="(((j + 1) / divisor) * -1)" />
    <mutant id="mutant_1245" viable="true" in="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)" from="(firstWeekMillis2 - firstWeekMillis1)" to="((firstWeekMillis2 - firstWeekMillis1) - 1)" />
    <mutant id="mutant_2576" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="(j + 1)" to="((j + 1) - 1)" />
    <mutant id="mutant_1246" viable="true" in="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)" from="((int)((firstWeekMillis2 - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))" to="((int)(((firstWeekMillis2 - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) - 1" />
    <mutant id="mutant_2577" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="(j + 1)" to="((j + 1) * -1)" />
    <mutant id="mutant_1243" viable="true" in="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)" from="(firstWeekMillis2 - firstWeekMillis1)" to="((firstWeekMillis2 - firstWeekMillis1) * -1)" />
    <mutant id="mutant_2574" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="j / divisor" to="(j / divisor) * -1" />
    <mutant id="mutant_1244" viable="true" in="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)" from="(firstWeekMillis2 - firstWeekMillis1)" to="((firstWeekMillis2 - firstWeekMillis1) + 1)" />
    <mutant id="mutant_2575" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="j / divisor" to="(j / divisor) - 1" />
    <mutant id="mutant_1241" viable="true" in="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)" from="(year + 1)" to="((year + 1) - 1)" />
    <mutant id="mutant_2572" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((i + 1) / divisor) - 1" to="(((i + 1) / divisor) - 1) - 1" />
    <mutant id="mutant_1242" viable="true" in="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)" from="(year + 1)" to="((year + 1) * -1)" />
    <mutant id="mutant_2573" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="j / divisor" to="(j / divisor) + 1" />
    <mutant id="mutant_2570" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((i + 1) / divisor) - 1" to="(((i + 1) / divisor) - 1) * -1" />
    <mutant id="mutant_1240" viable="true" in="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)" from="(year + 1)" to="((year + 1) + 1)" />
    <mutant id="mutant_2571" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((i + 1) / divisor) - 1" to="(((i + 1) / divisor) - 1) + 1" />
    <mutant id="mutant_430" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((bestValidPos == position) &amp;&amp; isOptional)" to="(!((bestValidPos == position) &amp;&amp; isOptional))" />
    <mutant id="mutant_431" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(bestValidPos &gt; position) || ((bestValidPos == position) &amp;&amp; isOptional)" to="!((bestValidPos &gt; position) || ((bestValidPos == position) &amp;&amp; isOptional))" />
    <mutant id="mutant_432" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.length()) - position)" to="(((text.length()) - position) * -1)" />
    <mutant id="mutant_1249" viable="true" in="org.joda.time.chrono.BasicChronology.getWeekyear(long)" from="(instant + (DateTimeConstants.MILLIS_PER_WEEK))" to="((instant + (DateTimeConstants.MILLIS_PER_WEEK)) + 1)" />
    <mutant id="mutant_1247" viable="true" in="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)" from="((int)((firstWeekMillis2 - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))" to="((int)(((firstWeekMillis2 - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) * -1" />
    <mutant id="mutant_2578" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="(j + 1)" to="((j + 1) + 1)" />
    <mutant id="mutant_1248" viable="true" in="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)" from="((int)((firstWeekMillis2 - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))" to="((int)(((firstWeekMillis2 - firstWeekMillis1) / (DateTimeConstants.MILLIS_PER_WEEK)))) + 1" />
    <mutant id="mutant_2579" viable="true" in="org.joda.time.field.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)" from="((j + 1) / divisor)" to="(((j + 1) / divisor) + 1)" />
    <mutant id="mutant_1083" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.selectSuffixIndex(int)" from="(iPatterns.length) - 1" to="((iPatterns.length) - 1) * -1" />
    <mutant id="mutant_1084" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.selectSuffixIndex(int)" from="(iPatterns.length) - 1" to="((iPatterns.length) - 1) - 1" />
    <mutant id="mutant_1081" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.parse(java.lang.String,int)" from="position + (text.length())" to="(position + (text.length())) + 1" />
    <mutant id="mutant_1082" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.parse(java.lang.String,int)" from="position + (text.length())" to="(position + (text.length())) - 1" />
    <mutant id="mutant_1080" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.parse(java.lang.String,int)" from="position + (text.length())" to="(position + (text.length())) * -1" />
    <mutant id="mutant_4106" viable="true" in="org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)" from="(6L * (DateTimeConstants.MILLIS_PER_HOUR))" to="((6L * (DateTimeConstants.MILLIS_PER_HOUR)) - 1)" />
    <mutant id="mutant_4105" viable="true" in="org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)" from="(6L * (DateTimeConstants.MILLIS_PER_HOUR))" to="((6L * (DateTimeConstants.MILLIS_PER_HOUR)) * -1)" />
    <mutant id="mutant_1078" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(java.lang.String,java.lang.String)" from="(o2.length()) - (o1.length())" to="((o2.length()) - (o1.length())) + 1" />
    <mutant id="mutant_4104" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) - (TimeZone.getDefault().getDSTSavings()))" to="(((date.getTime()) - (TimeZone.getDefault().getDSTSavings())) + 1)" />
    <mutant id="mutant_1079" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(java.lang.String,java.lang.String)" from="(o2.length()) - (o1.length())" to="((o2.length()) - (o1.length())) - 1" />
    <mutant id="mutant_4103" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) - (TimeZone.getDefault().getDSTSavings()))" to="(((date.getTime()) - (TimeZone.getDefault().getDSTSavings())) - 1)" />
    <mutant id="mutant_1076" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(java.lang.String,int)" from="position + (text2.length())" to="(position + (text2.length())) - 1" />
    <mutant id="mutant_4102" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) - (TimeZone.getDefault().getDSTSavings()))" to="(((date.getTime()) - (TimeZone.getDefault().getDSTSavings())) * -1)" />
    <mutant id="mutant_1077" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(java.lang.String,java.lang.String)" from="(o2.length()) - (o1.length())" to="((o2.length()) - (o1.length())) * -1" />
    <mutant id="mutant_4101" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) + 1000)" to="(((date.getTime()) + 1000) + 1)" />
    <mutant id="mutant_1074" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(java.lang.String,int)" from="position + (text2.length())" to="(position + (text2.length())) * -1" />
    <mutant id="mutant_4100" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) + 1000)" to="(((date.getTime()) + 1000) - 1)" />
    <mutant id="mutant_1075" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(java.lang.String,int)" from="position + (text2.length())" to="(position + (text2.length())) + 1" />
    <mutant id="mutant_4109" viable="true" in="org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)" from="(getLocalMillis()) + (6L * (DateTimeConstants.MILLIS_PER_HOUR))" to="((getLocalMillis()) + (6L * (DateTimeConstants.MILLIS_PER_HOUR))) * -1" />
    <mutant id="mutant_4108" viable="true" in="org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)" from="(getLocalMillis()) + (6L * (DateTimeConstants.MILLIS_PER_HOUR))" to="((getLocalMillis()) + (6L * (DateTimeConstants.MILLIS_PER_HOUR))) + 1" />
    <mutant id="mutant_4107" viable="true" in="org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)" from="(6L * (DateTimeConstants.MILLIS_PER_HOUR))" to="((6L * (DateTimeConstants.MILLIS_PER_HOUR)) + 1)" />
    <mutant id="mutant_1072" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(java.lang.String,int)" from="position + (text1.length())" to="(position + (text1.length())) + 1" />
    <mutant id="mutant_1073" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(java.lang.String,int)" from="position + (text1.length())" to="(position + (text1.length())) - 1" />
    <mutant id="mutant_1070" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Literal.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="position + (iText.length())" to="(position + (iText.length())) - 1" />
    <mutant id="mutant_1071" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(java.lang.String,int)" from="position + (text1.length())" to="(position + (text1.length())) * -1" />
    <mutant id="mutant_1069" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Literal.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="position + (iText.length())" to="(position + (iText.length())) + 1" />
    <mutant id="mutant_1067" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.length()) &gt; shortestAffixLength) || ((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="!(((affixToIgnore.length()) &gt; shortestAffixLength) || ((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix)))))" />
    <mutant id="mutant_2398" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash)" to="((13 * hash) - 1)" />
    <mutant id="mutant_1068" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Literal.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="position + (iText.length())" to="(position + (iText.length())) * -1" />
    <mutant id="mutant_2399" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash)" to="((13 * hash) * -1)" />
    <mutant id="mutant_1065" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))) || ((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="!(((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))) || ((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength))))" />
    <mutant id="mutant_2396" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash) + (get())" to="((13 * hash) + (get())) * -1" />
    <mutant id="mutant_1066" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="(!((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix)))))" />
    <mutant id="mutant_2397" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash)" to="((13 * hash) + 1)" />
    <mutant id="mutant_1063" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength)))" to="(!((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))))" />
    <mutant id="mutant_2394" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash) + (get())" to="((13 * hash) + (get())) - 1" />
    <mutant id="mutant_1064" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="(!((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength))))" />
    <mutant id="mutant_2395" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash) + (get())" to="((13 * hash) + (get())) + 1" />
    <mutant id="mutant_1061" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="!(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0))" />
    <mutant id="mutant_2392" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash)" to="((13 * hash) - 1)" />
    <mutant id="mutant_1062" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(valueLong &lt; 0) &amp;&amp; (valueLong &gt; (-(DateTimeConstants.MILLIS_PER_SECOND)))" to="!((valueLong &lt; 0) &amp;&amp; (valueLong &gt; (-(DateTimeConstants.MILLIS_PER_SECOND))))" />
    <mutant id="mutant_2393" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash)" to="((13 * hash) * -1)" />
    <mutant id="mutant_2390" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()))" to="!((((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology())))" />
    <mutant id="mutant_1060" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)(((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))) + 1" />
    <mutant id="mutant_2391" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash)" to="((13 * hash) + 1)" />
    <mutant id="mutant_1058" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)(((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))) * -1" />
    <mutant id="mutant_2389" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType())))" to="(!(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))))" />
    <mutant id="mutant_1059" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)(((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))) - 1" />
    <mutant id="mutant_1056" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)(valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)((valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))) * -1" />
    <mutant id="mutant_2387" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="!((field == null) || (!(field.isSupported())))" />
    <mutant id="mutant_1057" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)(valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)((valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))) - 1" />
    <mutant id="mutant_2388" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="!((field == null) || (!(field.isSupported())))" />
    <mutant id="mutant_1054" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="!(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0))" />
    <mutant id="mutant_2385" viable="true" in="org.joda.time.chrono.ZonedChronology.localToUTC(long)" from="localInstant - offset" to="(localInstant - offset) - 1" />
    <mutant id="mutant_1055" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)(valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)((valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))) + 1" />
    <mutant id="mutant_2386" viable="true" in="org.joda.time.chrono.ZonedChronology.localToUTC(long)" from="localInstant - offset" to="(localInstant - offset) + 1" />
    <mutant id="mutant_1052" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)(((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))) - 1" />
    <mutant id="mutant_2383" viable="true" in="org.joda.time.chrono.ZonedChronology.getDateTimeMillis(long,int,int,int,int)" from="(instant + (getZone().getOffset(instant)))" to="((instant + (getZone().getOffset(instant))) * -1)" />
    <mutant id="mutant_1053" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)(((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))) + 1" />
    <mutant id="mutant_2384" viable="true" in="org.joda.time.chrono.ZonedChronology.localToUTC(long)" from="localInstant - offset" to="(localInstant - offset) * -1" />
    <mutant id="mutant_1050" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)(valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)((valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))) - 1" />
    <mutant id="mutant_2381" viable="true" in="org.joda.time.chrono.ZonedChronology.getDateTimeMillis(long,int,int,int,int)" from="(instant + (getZone().getOffset(instant)))" to="((instant + (getZone().getOffset(instant))) - 1)" />
    <mutant id="mutant_1051" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)(((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)))) * -1" />
    <mutant id="mutant_2382" viable="true" in="org.joda.time.chrono.ZonedChronology.getDateTimeMillis(long,int,int,int,int)" from="(instant + (getZone().getOffset(instant)))" to="((instant + (getZone().getOffset(instant))) + 1)" />
    <mutant id="mutant_2380" viable="false" in="org.joda.time.chrono.ZonedChronology.toString()" from="(((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID())) + ']'" to="((((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID())) + ']') - 1" />
    <mutant id="mutant_1047" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])" from="(fieldFormatter != null) &amp;&amp; (!(equals(fieldFormatter)))" to="!((fieldFormatter != null) &amp;&amp; (!(equals(fieldFormatter))))" />
    <mutant id="mutant_2378" viable="false" in="org.joda.time.chrono.ZonedChronology.toString()" from="(((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID())) + ']'" to="((((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID())) + ']') * -1" />
    <mutant id="mutant_1048" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)(valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)((valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))) + 1" />
    <mutant id="mutant_2379" viable="true" in="org.joda.time.chrono.ZonedChronology.toString()" from="(((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID())) + ']'" to="((((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID())) + ']') + 1" />
    <mutant id="mutant_1045" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(i &gt;= 0) &amp;&amp; (i &lt;= (PeriodFormatterBuilder.MAX_FIELD))" to="!((i &gt;= 0) &amp;&amp; (i &lt;= (PeriodFormatterBuilder.MAX_FIELD)))" />
    <mutant id="mutant_2376" viable="true" in="org.joda.time.chrono.ZonedChronology.toString()" from="(((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID()))" to="((((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID())) + 1)" />
    <mutant id="mutant_1046" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="!((isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null))" />
    <mutant id="mutant_2377" viable="false" in="org.joda.time.chrono.ZonedChronology.toString()" from="(((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID()))" to="((((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID())) - 1)" />
    <mutant id="mutant_1043" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="!((isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null))" />
    <mutant id="mutant_2374" viable="false" in="org.joda.time.chrono.ZonedChronology.toString()" from="((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;)" to="(((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) * -1)" />
    <mutant id="mutant_1044" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="!((isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this)))" />
    <mutant id="mutant_2375" viable="false" in="org.joda.time.chrono.ZonedChronology.toString()" from="(((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID()))" to="((((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + (getZone().getID())) * -1)" />
    <mutant id="mutant_1041" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(iFieldType) + 1" to="((iFieldType) + 1) - 1" />
    <mutant id="mutant_2372" viable="true" in="org.joda.time.chrono.ZonedChronology.toString()" from="((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;)" to="(((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) + 1)" />
    <mutant id="mutant_1042" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(iFieldType) + 1" to="((iFieldType) + 1) * -1" />
    <mutant id="mutant_2373" viable="false" in="org.joda.time.chrono.ZonedChronology.toString()" from="((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;)" to="(((&quot;ZonedChronology[&quot; + (getBase())) + &quot;, &quot;) - 1)" />
    <mutant id="mutant_1049" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((int)(valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))" to="((int)((valueLong / (DateTimeConstants.MILLIS_PER_SECOND)))) * -1" />
    <mutant id="mutant_4153" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) + 60000)" to="(((calendar.getTimeInMillis()) + 60000) - 1)" />
    <mutant id="mutant_4152" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) + 60000)" to="(((calendar.getTimeInMillis()) + 60000) * -1)" />
    <mutant id="mutant_4151" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) + 60000)" to="(((calendar.getTimeInMillis()) + 60000) + 1)" />
    <mutant id="mutant_4150" viable="true" in="org.joda.time.LocalDateTime.getValue(int)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_4149" viable="false" in="org.joda.time.LocalDateTime.getValue(int)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_4148" viable="false" in="org.joda.time.LocalDateTime.getValue(int)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_4147" viable="true" in="org.joda.time.LocalDate.toLocalDateTime(org.joda.time.LocalTime)" from="(getLocalMillis()) + (time.getLocalMillis())" to="((getLocalMillis()) + (time.getLocalMillis())) - 1" />
    <mutant id="mutant_4146" viable="true" in="org.joda.time.LocalDate.toLocalDateTime(org.joda.time.LocalTime)" from="(getLocalMillis()) + (time.getLocalMillis())" to="((getLocalMillis()) + (time.getLocalMillis())) + 1" />
    <mutant id="mutant_4145" viable="true" in="org.joda.time.LocalDate.toLocalDateTime(org.joda.time.LocalTime)" from="(getLocalMillis()) + (time.getLocalMillis())" to="((getLocalMillis()) + (time.getLocalMillis())) * -1" />
    <mutant id="mutant_4144" viable="true" in="org.joda.time.LocalDate.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4143" viable="false" in="org.joda.time.LocalDate.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_4142" viable="false" in="org.joda.time.LocalDate.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_4141" viable="true" in="org.joda.time.LocalDate.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) + 1)" />
    <mutant id="mutant_4140" viable="false" in="org.joda.time.LocalDate.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) * -1)" />
    <mutant id="mutant_4139" viable="false" in="org.joda.time.LocalDate.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) - 1)" />
    <mutant id="mutant_4138" viable="true" in="org.joda.time.LocalDate.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_4137" viable="true" in="org.joda.time.LocalDate.withFieldAdded(org.joda.time.DurationFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4136" viable="false" in="org.joda.time.LocalDate.withFieldAdded(org.joda.time.DurationFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_4135" viable="false" in="org.joda.time.LocalDate.withFieldAdded(org.joda.time.DurationFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_4134" viable="false" in="org.joda.time.LocalDate.withFieldAdded(org.joda.time.DurationFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) * -1)" />
    <mutant id="mutant_4133" viable="false" in="org.joda.time.LocalDate.withFieldAdded(org.joda.time.DurationFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) - 1)" />
    <mutant id="mutant_4132" viable="true" in="org.joda.time.LocalDate.withFieldAdded(org.joda.time.DurationFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) + 1)" />
    <mutant id="mutant_4131" viable="true" in="org.joda.time.LocalDate.withField(org.joda.time.DateTimeFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4130" viable="false" in="org.joda.time.LocalDate.withField(org.joda.time.DateTimeFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_4128" viable="true" in="org.joda.time.LocalDate.withField(org.joda.time.DateTimeFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) + 1)" />
    <mutant id="mutant_4127" viable="false" in="org.joda.time.LocalDate.withField(org.joda.time.DateTimeFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) * -1)" />
    <mutant id="mutant_4126" viable="false" in="org.joda.time.LocalDate.withField(org.joda.time.DateTimeFieldType,int)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) - 1)" />
    <mutant id="mutant_4125" viable="true" in="org.joda.time.LocalDate.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) + 1)" />
    <mutant id="mutant_1098" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found)) &amp;&amp; (!(iUseBefore))" to="!(((position &gt; oldPos) &amp;&amp; (!found)) &amp;&amp; (!(iUseBefore)))" />
    <mutant id="mutant_4124" viable="true" in="org.joda.time.LocalDate.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) - 1)" />
    <mutant id="mutant_1099" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="!((iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0))" />
    <mutant id="mutant_4123" viable="true" in="org.joda.time.LocalDate.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) * -1)" />
    <mutant id="mutant_1096" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos)) &amp;&amp; (parsedFormLength &gt; 0)" to="!((found &amp;&amp; (position == oldPos)) &amp;&amp; (parsedFormLength &gt; 0))" />
    <mutant id="mutant_4122" viable="true" in="org.joda.time.LocalDate.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) + 1)" />
    <mutant id="mutant_1097" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found))" to="(!((position &gt; oldPos) &amp;&amp; (!found)))" />
    <mutant id="mutant_4121" viable="true" in="org.joda.time.LocalDate.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) - 1)" />
    <mutant id="mutant_4129" viable="false" in="org.joda.time.LocalDate.withField(org.joda.time.DateTimeFieldType,int)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_1094" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0)) || (periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()))" to="!(((parsedForm == null) || ((parsedForm.length()) == 0)) || (periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())))" />
    <mutant id="mutant_4120" viable="true" in="org.joda.time.LocalDate.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) * -1)" />
    <mutant id="mutant_1095" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos))" to="(!(found &amp;&amp; (position == oldPos)))" />
    <mutant id="mutant_1092" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="!((iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0))" />
    <mutant id="mutant_1093" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0))" to="(!((parsedForm == null) || ((parsedForm.length()) == 0)))" />
    <mutant id="mutant_1090" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="(before.calculatePrintedLength(period, locale)) + (after.calculatePrintedLength(period, locale))" to="((before.calculatePrintedLength(period, locale)) + (after.calculatePrintedLength(period, locale))) * -1" />
    <mutant id="mutant_1091" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="(before.calculatePrintedLength(period, locale)) + (after.calculatePrintedLength(period, locale))" to="((before.calculatePrintedLength(period, locale)) + (after.calculatePrintedLength(period, locale))) - 1" />
    <mutant id="mutant_4117" viable="true" in="org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) + 1)" />
    <mutant id="mutant_4116" viable="true" in="org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)" from="1 - yearOfEra" to="(1 - yearOfEra) + 1" />
    <mutant id="mutant_1089" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="(before.calculatePrintedLength(period, locale)) + (after.calculatePrintedLength(period, locale))" to="((before.calculatePrintedLength(period, locale)) + (after.calculatePrintedLength(period, locale))) + 1" />
    <mutant id="mutant_4115" viable="true" in="org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)" from="1 - yearOfEra" to="(1 - yearOfEra) * -1" />
    <mutant id="mutant_4114" viable="true" in="org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)" from="1 - yearOfEra" to="(1 - yearOfEra) - 1" />
    <mutant id="mutant_1087" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((variants == null) || ((variants.length) == 0))" to="(!((variants == null) || ((variants.length) == 0)))" />
    <mutant id="mutant_4113" viable="true" in="org.joda.time.LocalDate.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_1088" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText))) &amp;&amp; ((variants == null) || ((variants.length) == 0))" to="!(((finalText == null) || (text.equals(finalText))) &amp;&amp; ((variants == null) || ((variants.length) == 0)))" />
    <mutant id="mutant_4112" viable="false" in="org.joda.time.LocalDate.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_1085" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.selectSuffixIndex(int)" from="(iPatterns.length) - 1" to="((iPatterns.length) - 1) + 1" />
    <mutant id="mutant_4111" viable="false" in="org.joda.time.LocalDate.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_1086" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText)))" to="(!((finalText == null) || (text.equals(finalText))))" />
    <mutant id="mutant_4110" viable="true" in="org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)" from="(getLocalMillis()) + (6L * (DateTimeConstants.MILLIS_PER_HOUR))" to="((getLocalMillis()) + (6L * (DateTimeConstants.MILLIS_PER_HOUR))) - 1" />
    <mutant id="mutant_4119" viable="true" in="org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) - 1)" />
    <mutant id="mutant_4118" viable="true" in="org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) * -1)" />
    <mutant id="mutant_1919" viable="false" in="?" from="(365.2425 * (DateTimeConstants.MILLIS_PER_DAY))" to="((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_1917" viable="false" in="?" from="((long)(365.2425 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_1918" viable="false" in="?" from="(365.2425 * (DateTimeConstants.MILLIS_PER_DAY))" to="((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_1915" viable="false" in="?" from="((long)(365.2425 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_1916" viable="false" in="?" from="((long)(365.2425 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_4197" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="(((int)(((date.getTime()) % 1000))) + 1000)" to="((((int)(((date.getTime()) % 1000))) + 1000) * -1)" />
    <mutant id="mutant_4196" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="(((int)(((date.getTime()) % 1000))) + 1000)" to="((((int)(((date.getTime()) % 1000))) + 1000) + 1)" />
    <mutant id="mutant_4195" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((int)(((date.getTime()) % 1000)))" to="(((int)(((date.getTime()) % 1000))) + 1)" />
    <mutant id="mutant_4194" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((int)(((date.getTime()) % 1000)))" to="(((int)(((date.getTime()) % 1000))) * -1)" />
    <mutant id="mutant_4193" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((int)(((date.getTime()) % 1000)))" to="(((int)(((date.getTime()) % 1000))) - 1)" />
    <mutant id="mutant_4192" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) + 1)" />
    <mutant id="mutant_4191" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) - 1)" />
    <mutant id="mutant_4190" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) * -1)" />
    <mutant id="mutant_4189" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) + 1)" />
    <mutant id="mutant_4188" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) - 1)" />
    <mutant id="mutant_4187" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) * -1)" />
    <mutant id="mutant_1913" viable="true" in="org.joda.time.chrono.GJYearOfEraDateTimeField.set(long,int)" from="1 - year" to="(1 - year) * -1" />
    <mutant id="mutant_1914" viable="true" in="org.joda.time.chrono.GJYearOfEraDateTimeField.set(long,int)" from="1 - year" to="(1 - year) + 1" />
    <mutant id="mutant_1911" viable="true" in="org.joda.time.chrono.GJYearOfEraDateTimeField.get(long)" from="1 - year" to="(1 - year) + 1" />
    <mutant id="mutant_1912" viable="true" in="org.joda.time.chrono.GJYearOfEraDateTimeField.set(long,int)" from="1 - year" to="(1 - year) - 1" />
    <mutant id="mutant_1910" viable="true" in="org.joda.time.chrono.GJYearOfEraDateTimeField.get(long)" from="1 - year" to="(1 - year) * -1" />
    <mutant id="mutant_1908" viable="true" in="org.joda.time.chrono.GJLocaleSymbols.realignMonths(java.lang.String[])" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_1909" viable="true" in="org.joda.time.chrono.GJYearOfEraDateTimeField.get(long)" from="1 - year" to="(1 - year) - 1" />
    <mutant id="mutant_1906" viable="true" in="org.joda.time.chrono.GJLocaleSymbols.realignMonths(java.lang.String[])" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1907" viable="true" in="org.joda.time.chrono.GJLocaleSymbols.realignMonths(java.lang.String[])" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1904" viable="true" in="org.joda.time.chrono.GJLocaleSymbols.realignDaysOfWeek(java.lang.String[])" from="i + 1" to="(i + 1) - 1" />
    <mutant id="mutant_1905" viable="true" in="org.joda.time.chrono.GJLocaleSymbols.realignDaysOfWeek(java.lang.String[])" from="i + 1" to="(i + 1) + 1" />
    <mutant id="mutant_4186" viable="true" in="org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) - 1)" />
    <mutant id="mutant_4185" viable="true" in="org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) * -1)" />
    <mutant id="mutant_4184" viable="true" in="org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) + 1)" />
    <mutant id="mutant_4183" viable="true" in="org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)" from="1 - yearOfEra" to="(1 - yearOfEra) + 1" />
    <mutant id="mutant_4182" viable="true" in="org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)" from="1 - yearOfEra" to="(1 - yearOfEra) * -1" />
    <mutant id="mutant_4181" viable="true" in="org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)" from="1 - yearOfEra" to="(1 - yearOfEra) - 1" />
    <mutant id="mutant_4180" viable="true" in="org.joda.time.LocalDateTime.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_4179" viable="false" in="org.joda.time.LocalDateTime.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_4178" viable="false" in="org.joda.time.LocalDateTime.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_4177" viable="true" in="org.joda.time.LocalDateTime.toDate(java.util.TimeZone)" from="((date.getTime()) + (getMillisOfSecond()))" to="(((date.getTime()) + (getMillisOfSecond())) * -1)" />
    <mutant id="mutant_4176" viable="true" in="org.joda.time.LocalDateTime.toDate(java.util.TimeZone)" from="((date.getTime()) + (getMillisOfSecond()))" to="(((date.getTime()) + (getMillisOfSecond())) - 1)" />
    <mutant id="mutant_1902" viable="true" in="org.joda.time.chrono.GJChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)" from="(iCutoverMillis) - (julianToGregorianByYear(iCutoverMillis))" to="((iCutoverMillis) - (julianToGregorianByYear(iCutoverMillis))) * -1" />
    <mutant id="mutant_1903" viable="true" in="org.joda.time.chrono.GJLocaleSymbols.realignDaysOfWeek(java.lang.String[])" from="i + 1" to="(i + 1) * -1" />
    <mutant id="mutant_1900" viable="true" in="org.joda.time.chrono.GJChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)" from="(iCutoverMillis) - (julianToGregorianByYear(iCutoverMillis))" to="((iCutoverMillis) - (julianToGregorianByYear(iCutoverMillis))) + 1" />
    <mutant id="mutant_1901" viable="true" in="org.joda.time.chrono.GJChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)" from="(iCutoverMillis) - (julianToGregorianByYear(iCutoverMillis))" to="((iCutoverMillis) - (julianToGregorianByYear(iCutoverMillis))) - 1" />
    <mutant id="mutant_4175" viable="true" in="org.joda.time.LocalDateTime.toDate(java.util.TimeZone)" from="((date.getTime()) + (getMillisOfSecond()))" to="(((date.getTime()) + (getMillisOfSecond())) + 1)" />
    <mutant id="mutant_4174" viable="true" in="org.joda.time.LocalDateTime.toDate(java.util.TimeZone)" from="((getMonthOfYear()) - 1)" to="(((getMonthOfYear()) - 1) * -1)" />
    <mutant id="mutant_4173" viable="true" in="org.joda.time.LocalDateTime.toDate(java.util.TimeZone)" from="((getMonthOfYear()) - 1)" to="(((getMonthOfYear()) - 1) + 1)" />
    <mutant id="mutant_4172" viable="true" in="org.joda.time.LocalDateTime.toDate(java.util.TimeZone)" from="((getMonthOfYear()) - 1)" to="(((getMonthOfYear()) - 1) - 1)" />
    <mutant id="mutant_4171" viable="true" in="org.joda.time.LocalDateTime.toDate()" from="((date.getTime()) + (getMillisOfSecond()))" to="(((date.getTime()) + (getMillisOfSecond())) * -1)" />
    <mutant id="mutant_4170" viable="true" in="org.joda.time.LocalDateTime.toDate()" from="((date.getTime()) + (getMillisOfSecond()))" to="(((date.getTime()) + (getMillisOfSecond())) - 1)" />
    <mutant id="mutant_4169" viable="true" in="org.joda.time.LocalDateTime.toDate()" from="((date.getTime()) + (getMillisOfSecond()))" to="(((date.getTime()) + (getMillisOfSecond())) + 1)" />
    <mutant id="mutant_4168" viable="true" in="org.joda.time.LocalDateTime.toDate()" from="((getMonthOfYear()) - 1)" to="(((getMonthOfYear()) - 1) * -1)" />
    <mutant id="mutant_4167" viable="true" in="org.joda.time.LocalDateTime.toDate()" from="((getMonthOfYear()) - 1)" to="(((getMonthOfYear()) - 1) + 1)" />
    <mutant id="mutant_4166" viable="true" in="org.joda.time.LocalDateTime.toDate()" from="((getMonthOfYear()) - 1)" to="(((getMonthOfYear()) - 1) - 1)" />
    <mutant id="mutant_4165" viable="true" in="org.joda.time.LocalDateTime.toDate()" from="((getYear()) - 1900)" to="(((getYear()) - 1900) * -1)" />
    <mutant id="mutant_4164" viable="true" in="org.joda.time.LocalDateTime.toDate()" from="((getYear()) - 1900)" to="(((getYear()) - 1900) - 1)" />
    <mutant id="mutant_4163" viable="true" in="org.joda.time.LocalDateTime.toDate()" from="((getYear()) - 1900)" to="(((getYear()) - 1900) + 1)" />
    <mutant id="mutant_4162" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) - (timeZone.getDSTSavings()))" to="(((calendar.getTimeInMillis()) - (timeZone.getDSTSavings())) + 1)" />
    <mutant id="mutant_4161" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) - (timeZone.getDSTSavings()))" to="(((calendar.getTimeInMillis()) - (timeZone.getDSTSavings())) - 1)" />
    <mutant id="mutant_4160" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) - (timeZone.getDSTSavings()))" to="(((calendar.getTimeInMillis()) - (timeZone.getDSTSavings())) * -1)" />
    <mutant id="mutant_4159" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) + 1000)" to="(((calendar.getTimeInMillis()) + 1000) - 1)" />
    <mutant id="mutant_4158" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) + 1000)" to="(((calendar.getTimeInMillis()) + 1000) + 1)" />
    <mutant id="mutant_4157" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) + 1000)" to="(((calendar.getTimeInMillis()) + 1000) * -1)" />
    <mutant id="mutant_4156" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) - 1000)" to="(((calendar.getTimeInMillis()) - 1000) + 1)" />
    <mutant id="mutant_4155" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) - 1000)" to="(((calendar.getTimeInMillis()) - 1000) - 1)" />
    <mutant id="mutant_4154" viable="true" in="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)" from="((calendar.getTimeInMillis()) - 1000)" to="(((calendar.getTimeInMillis()) - 1000) * -1)" />
    <mutant id="mutant_1959" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(leapYears - (GregorianChronology.DAYS_0000_TO_1970))" to="((leapYears - (GregorianChronology.DAYS_0000_TO_1970)) * -1)" />
    <mutant id="mutant_1950" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year &gt;&gt; 2) - leapYears)" to="(((year &gt;&gt; 2) - leapYears) + 1)" />
    <mutant id="mutant_1957" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(year * 365L)" to="((year * 365L) * -1)" />
    <mutant id="mutant_1958" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(year * 365L)" to="((year * 365L) - 1)" />
    <mutant id="mutant_1955" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year &gt;&gt; 2) - leapYears) + (leapYears &gt;&gt; 2)" to="(((year &gt;&gt; 2) - leapYears) + (leapYears &gt;&gt; 2)) * -1" />
    <mutant id="mutant_1956" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(year * 365L)" to="((year * 365L) + 1)" />
    <mutant id="mutant_1953" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year &gt;&gt; 2) - leapYears) + (leapYears &gt;&gt; 2)" to="(((year &gt;&gt; 2) - leapYears) + (leapYears &gt;&gt; 2)) - 1" />
    <mutant id="mutant_1954" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year &gt;&gt; 2) - leapYears) + (leapYears &gt;&gt; 2)" to="(((year &gt;&gt; 2) - leapYears) + (leapYears &gt;&gt; 2)) + 1" />
    <mutant id="mutant_1951" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year &gt;&gt; 2) - leapYears)" to="(((year &gt;&gt; 2) - leapYears) - 1)" />
    <mutant id="mutant_1952" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year &gt;&gt; 2) - leapYears)" to="(((year &gt;&gt; 2) - leapYears) * -1)" />
    <mutant id="mutant_1948" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2)) - 1" to="(((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2)) - 1) + 1" />
    <mutant id="mutant_1949" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2)) - 1" to="(((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2)) - 1) - 1" />
    <mutant id="mutant_1946" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2))" to="(((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2)) - 1)" />
    <mutant id="mutant_1947" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2)) - 1" to="(((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2)) - 1) * -1" />
    <mutant id="mutant_1944" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2))" to="(((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2)) + 1)" />
    <mutant id="mutant_1945" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2))" to="(((((year + 3) &gt;&gt; 2) - leapYears) + ((leapYears + 3) &gt;&gt; 2)) * -1)" />
    <mutant id="mutant_1942" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(leapYears + 3)" to="((leapYears + 3) * -1)" />
    <mutant id="mutant_1943" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(leapYears + 3)" to="((leapYears + 3) - 1)" />
    <mutant id="mutant_1940" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(((year + 3) &gt;&gt; 2) - leapYears)" to="((((year + 3) &gt;&gt; 2) - leapYears) * -1)" />
    <mutant id="mutant_1941" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(leapYears + 3)" to="((leapYears + 3) + 1)" />
    <mutant id="mutant_1939" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(((year + 3) &gt;&gt; 2) - leapYears)" to="((((year + 3) &gt;&gt; 2) - leapYears) - 1)" />
    <mutant id="mutant_1937" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(year + 3)" to="((year + 3) + 1)" />
    <mutant id="mutant_1938" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(((year + 3) &gt;&gt; 2) - leapYears)" to="((((year + 3) &gt;&gt; 2) - leapYears) + 1)" />
    <mutant id="mutant_1935" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(year + 3)" to="((year + 3) * -1)" />
    <mutant id="mutant_1936" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(year + 3)" to="((year + 3) - 1)" />
    <mutant id="mutant_1933" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="year / 100" to="(year / 100) + 1" />
    <mutant id="mutant_1934" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="year / 100" to="(year / 100) - 1" />
    <mutant id="mutant_1931" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="((year &amp; 3) == 0) &amp;&amp; (((year % 100) != 0) || ((year % 400) == 0))" to="!(((year &amp; 3) == 0) &amp;&amp; (((year % 100) != 0) || ((year % 400) == 0)))" />
    <mutant id="mutant_1932" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="year / 100" to="(year / 100) * -1" />
    <mutant id="mutant_1930" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(((year % 100) != 0) || ((year % 400) == 0))" to="(!(((year % 100) != 0) || ((year % 400) == 0)))" />
    <mutant id="mutant_1928" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(year % 400)" to="((year % 400) + 1)" />
    <mutant id="mutant_1929" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(year % 400)" to="((year % 400) - 1)" />
    <mutant id="mutant_1926" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(year % 100)" to="((year % 100) - 1)" />
    <mutant id="mutant_1927" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(year % 400)" to="((year % 400) * -1)" />
    <mutant id="mutant_4199" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="((((int)(((date.getTime()) % 1000))) + 1000) % 1000)" to="(((((int)(((date.getTime()) % 1000))) + 1000) % 1000) + 1)" />
    <mutant id="mutant_4198" viable="true" in="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)" from="(((int)(((date.getTime()) % 1000))) + 1000)" to="((((int)(((date.getTime()) % 1000))) + 1000) - 1)" />
    <mutant id="mutant_1924" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(year % 100)" to="((year % 100) * -1)" />
    <mutant id="mutant_1925" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(year % 100)" to="((year % 100) + 1)" />
    <mutant id="mutant_1922" viable="false" in="?" from="((long)((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))" to="((long)(((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))) * -1" />
    <mutant id="mutant_1923" viable="false" in="?" from="((long)((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))" to="((long)(((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))) - 1" />
    <mutant id="mutant_1920" viable="false" in="?" from="(365.2425 * (DateTimeConstants.MILLIS_PER_DAY))" to="((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_1921" viable="false" in="?" from="((long)((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))" to="((long)(((365.2425 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))) + 1" />
    <mutant id="mutant_1993" viable="true" in="org.joda.time.chrono.ISOChronology.hashCode()" from="((&quot;ISO&quot;.hashCode()) * 11) + (getZone().hashCode())" to="(((&quot;ISO&quot;.hashCode()) * 11) + (getZone().hashCode())) - 1" />
    <mutant id="mutant_1994" viable="true" in="org.joda.time.chrono.ISOChronology.hashCode()" from="((&quot;ISO&quot;.hashCode()) * 11) + (getZone().hashCode())" to="(((&quot;ISO&quot;.hashCode()) * 11) + (getZone().hashCode())) * -1" />
    <mutant id="mutant_1991" viable="true" in="org.joda.time.chrono.ISOChronology.hashCode()" from="((&quot;ISO&quot;.hashCode()) * 11)" to="(((&quot;ISO&quot;.hashCode()) * 11) * -1)" />
    <mutant id="mutant_1992" viable="true" in="org.joda.time.chrono.ISOChronology.hashCode()" from="((&quot;ISO&quot;.hashCode()) * 11) + (getZone().hashCode())" to="(((&quot;ISO&quot;.hashCode()) * 11) + (getZone().hashCode())) + 1" />
    <mutant id="mutant_1990" viable="true" in="org.joda.time.chrono.ISOChronology.hashCode()" from="((&quot;ISO&quot;.hashCode()) * 11)" to="(((&quot;ISO&quot;.hashCode()) * 11) + 1)" />
    <mutant id="mutant_1999" viable="false" in="org.joda.time.chrono.ISOChronology.toString()" from="((str + '[') + (zone.getID()))" to="(((str + '[') + (zone.getID())) * -1)" />
    <mutant id="mutant_1997" viable="false" in="org.joda.time.chrono.ISOChronology.toString()" from="(str + '[')" to="((str + '[') - 1)" />
    <mutant id="mutant_1998" viable="false" in="org.joda.time.chrono.ISOChronology.toString()" from="((str + '[') + (zone.getID()))" to="(((str + '[') + (zone.getID())) - 1)" />
    <mutant id="mutant_1995" viable="true" in="org.joda.time.chrono.ISOChronology.toString()" from="(str + '[')" to="((str + '[') + 1)" />
    <mutant id="mutant_1996" viable="false" in="org.joda.time.chrono.ISOChronology.toString()" from="(str + '[')" to="((str + '[') * -1)" />
    <mutant id="mutant_1982" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) + 1)" />
    <mutant id="mutant_1983" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_1980" viable="false" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) * -1)" />
    <mutant id="mutant_1981" viable="false" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) - 1)" />
    <mutant id="mutant_1988" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_1989" viable="true" in="org.joda.time.chrono.ISOChronology.hashCode()" from="((&quot;ISO&quot;.hashCode()) * 11)" to="(((&quot;ISO&quot;.hashCode()) * 11) - 1)" />
    <mutant id="mutant_1986" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_1987" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_1984" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_1985" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_1971" viable="true" in="org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()" from="(1970L * (GregorianChronology.MILLIS_PER_YEAR)) / 2" to="((1970L * (GregorianChronology.MILLIS_PER_YEAR)) / 2) + 1" />
    <mutant id="mutant_1972" viable="true" in="org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()" from="(1970L * (GregorianChronology.MILLIS_PER_YEAR)) / 2" to="((1970L * (GregorianChronology.MILLIS_PER_YEAR)) / 2) - 1" />
    <mutant id="mutant_1970" viable="true" in="org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()" from="(1970L * (GregorianChronology.MILLIS_PER_YEAR))" to="((1970L * (GregorianChronology.MILLIS_PER_YEAR)) + 1)" />
    <mutant id="mutant_1979" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_1977" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_1978" viable="true" in="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_1975" viable="true" in="org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()" from="(GregorianChronology.MILLIS_PER_YEAR) / 2" to="((GregorianChronology.MILLIS_PER_YEAR) / 2) + 1" />
    <mutant id="mutant_1976" viable="true" in="org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()" from="(GregorianChronology.MILLIS_PER_YEAR) / 2" to="((GregorianChronology.MILLIS_PER_YEAR) / 2) - 1" />
    <mutant id="mutant_1973" viable="true" in="org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()" from="(1970L * (GregorianChronology.MILLIS_PER_YEAR)) / 2" to="((1970L * (GregorianChronology.MILLIS_PER_YEAR)) / 2) * -1" />
    <mutant id="mutant_1974" viable="true" in="org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()" from="(GregorianChronology.MILLIS_PER_YEAR) / 2" to="((GregorianChronology.MILLIS_PER_YEAR) / 2) * -1" />
    <mutant id="mutant_1960" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(leapYears - (GregorianChronology.DAYS_0000_TO_1970))" to="((leapYears - (GregorianChronology.DAYS_0000_TO_1970)) - 1)" />
    <mutant id="mutant_1961" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="(leapYears - (GregorianChronology.DAYS_0000_TO_1970))" to="((leapYears - (GregorianChronology.DAYS_0000_TO_1970)) + 1)" />
    <mutant id="mutant_1968" viable="true" in="org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()" from="(1970L * (GregorianChronology.MILLIS_PER_YEAR))" to="((1970L * (GregorianChronology.MILLIS_PER_YEAR)) * -1)" />
    <mutant id="mutant_1969" viable="true" in="org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()" from="(1970L * (GregorianChronology.MILLIS_PER_YEAR))" to="((1970L * (GregorianChronology.MILLIS_PER_YEAR)) - 1)" />
    <mutant id="mutant_1966" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970))) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970))) * (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_1967" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970))) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970))) * (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_1964" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970)))" to="(((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970))) * -1)" />
    <mutant id="mutant_1965" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970))) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970))) * (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_1962" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970)))" to="(((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970))) + 1)" />
    <mutant id="mutant_1963" viable="true" in="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)" from="((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970)))" to="(((year * 365L) + (leapYears - (GregorianChronology.DAYS_0000_TO_1970))) - 1)" />
    <mutant id="mutant_2400" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash) + (getFieldType().hashCode())" to="((13 * hash) + (getFieldType().hashCode())) + 1" />
    <mutant id="mutant_3732" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))) || (alias.equals(&quot;GMT&quot;))" to="!(((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))) || (alias.equals(&quot;GMT&quot;)))" />
    <mutant id="mutant_2401" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash) + (getFieldType().hashCode())" to="((13 * hash) + (getFieldType().hashCode())) - 1" />
    <mutant id="mutant_3731" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;)))" to="(!((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))))" />
    <mutant id="mutant_3730" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(backward || (alias.equals(&quot;US/Pacific-New&quot;)))" to="(!(backward || (alias.equals(&quot;US/Pacific-New&quot;))))" />
    <mutant id="mutant_2408" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash) + (getReadablePartial().getChronology().hashCode())" to="((13 * hash) + (getReadablePartial().getChronology().hashCode())) * -1" />
    <mutant id="mutant_2409" viable="false" in="org.joda.time.field.AbstractPartialFieldProperty.toString()" from="(&quot;Property[&quot; + (getName()))" to="((&quot;Property[&quot; + (getName())) - 1)" />
    <mutant id="mutant_3739" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)" from="(&quot;*e* Error in &quot; + (tz.getID()))" to="((&quot;*e* Error in &quot; + (tz.getID())) + 1)" />
    <mutant id="mutant_2406" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash) + (getReadablePartial().getChronology().hashCode())" to="((13 * hash) + (getReadablePartial().getChronology().hashCode())) + 1" />
    <mutant id="mutant_3738" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)" from="(&quot;Writing &quot; + (tz.getID()))" to="((&quot;Writing &quot; + (tz.getID())) + 1)" />
    <mutant id="mutant_2407" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash) + (getReadablePartial().getChronology().hashCode())" to="((13 * hash) + (getReadablePartial().getChronology().hashCode())) - 1" />
    <mutant id="mutant_3737" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)" from="(&quot;Writing &quot; + (tz.getID()))" to="((&quot;Writing &quot; + (tz.getID())) - 1)" />
    <mutant id="mutant_2404" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash)" to="((13 * hash) - 1)" />
    <mutant id="mutant_3736" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)" from="(&quot;Writing &quot; + (tz.getID()))" to="((&quot;Writing &quot; + (tz.getID())) * -1)" />
    <mutant id="mutant_2405" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash)" to="((13 * hash) * -1)" />
    <mutant id="mutant_3735" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(&quot;Unknown line: &quot; + line)" to="((&quot;Unknown line: &quot; + line) - 1)" />
    <mutant id="mutant_2402" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash) + (getFieldType().hashCode())" to="((13 * hash) + (getFieldType().hashCode())) * -1" />
    <mutant id="mutant_3734" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(&quot;Unknown line: &quot; + line)" to="((&quot;Unknown line: &quot; + line) + 1)" />
    <mutant id="mutant_2403" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.hashCode()" from="(13 * hash)" to="((13 * hash) + 1)" />
    <mutant id="mutant_3733" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(&quot;Unknown line: &quot; + line)" to="((&quot;Unknown line: &quot; + line) * -1)" />
    <mutant id="mutant_3721" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;)" to="(((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;) + 1)" />
    <mutant id="mutant_3720" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;)" to="(((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;) - 1)" />
    <mutant id="mutant_3729" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(Character.isWhitespace(line.charAt(0))) &amp;&amp; (st.hasMoreTokens())" to="!((Character.isWhitespace(line.charAt(0))) &amp;&amp; (st.hasMoreTokens()))" />
    <mutant id="mutant_3728" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((trimmed.length()) == 0) || ((trimmed.charAt(0)) == '#')" to="!(((trimmed.length()) == 0) || ((trimmed.charAt(0)) == '#'))" />
    <mutant id="mutant_3727" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.main(java.lang.String[])" from="(args.length) - i" to="((args.length) - i) * -1" />
    <mutant id="mutant_3726" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.main(java.lang.String[])" from="(args.length) - i" to="((args.length) - i) - 1" />
    <mutant id="mutant_3725" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.main(java.lang.String[])" from="(args.length) - i" to="((args.length) - i) + 1" />
    <mutant id="mutant_3724" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;) + (tz.getID()))" to="((((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;) + (tz.getID())) + 1)" />
    <mutant id="mutant_3723" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;) + (tz.getID()))" to="((((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;) + (tz.getID())) - 1)" />
    <mutant id="mutant_3722" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;) + (tz.getID()))" to="((((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;) + (tz.getID())) * -1)" />
    <mutant id="mutant_701" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j - 1)" to="((j - 1) * -1)" />
    <mutant id="mutant_702" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j - 1)" to="((j - 1) - 1)" />
    <mutant id="mutant_703" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j - 1)" to="((j - 1) + 1)" />
    <mutant id="mutant_704" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j - 1)" to="((j - 1) * -1)" />
    <mutant id="mutant_700" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j &gt; 0) &amp;&amp; ((array[(j - 1)].compareTo(array[j])) &gt; 0)" to="!((j &gt; 0) &amp;&amp; ((array[(j - 1)].compareTo(array[j])) &gt; 0))" />
    <mutant id="mutant_3719" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;)" to="(((&quot;Back link: &quot; + alias) + &quot; -&gt; &quot;) * -1)" />
    <mutant id="mutant_709" viable="true" in="org.joda.time.format.FormatUtils.calculateDigitCount(long)" from="(org.joda.time.format.FormatUtils.calculateDigitCount(-value)) + 1" to="((org.joda.time.format.FormatUtils.calculateDigitCount(-value)) + 1) + 1" />
    <mutant id="mutant_705" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j - 1)" to="((j - 1) - 1)" />
    <mutant id="mutant_706" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j - 1)" to="((j - 1) + 1)" />
    <mutant id="mutant_707" viable="true" in="org.joda.time.format.FormatUtils.calculateDigitCount(long)" from="(org.joda.time.format.FormatUtils.calculateDigitCount(-value)) + 1" to="((org.joda.time.format.FormatUtils.calculateDigitCount(-value)) + 1) * -1" />
    <mutant id="mutant_708" viable="true" in="org.joda.time.format.FormatUtils.calculateDigitCount(long)" from="(org.joda.time.format.FormatUtils.calculateDigitCount(-value)) + 1" to="((org.joda.time.format.FormatUtils.calculateDigitCount(-value)) + 1) - 1" />
    <mutant id="mutant_3710" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias)" to="((((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias) + 1)" />
    <mutant id="mutant_3718" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Back link: &quot; + alias)" to="((&quot;Back link: &quot; + alias) * -1)" />
    <mutant id="mutant_3717" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Back link: &quot; + alias)" to="((&quot;Back link: &quot; + alias) + 1)" />
    <mutant id="mutant_3716" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Back link: &quot; + alias)" to="((&quot;Back link: &quot; + alias) - 1)" />
    <mutant id="mutant_3715" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;)" to="(((((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;) + 1)" />
    <mutant id="mutant_3714" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;)" to="(((((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;) - 1)" />
    <mutant id="mutant_3713" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;)" to="(((((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;) * -1)" />
    <mutant id="mutant_3712" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias)" to="((((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias) * -1)" />
    <mutant id="mutant_3711" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias)" to="((((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + alias) - 1)" />
    <mutant id="mutant_712" viable="true" in="org.joda.time.format.FormatUtils.calculateDigitCount(long)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) - 1)" />
    <mutant id="mutant_713" viable="true" in="org.joda.time.format.FormatUtils.calculateDigitCount(long)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) + 1" />
    <mutant id="mutant_714" viable="true" in="org.joda.time.format.FormatUtils.calculateDigitCount(long)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) * -1" />
    <mutant id="mutant_715" viable="true" in="org.joda.time.format.FormatUtils.calculateDigitCount(long)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) - 1" />
    <mutant id="mutant_710" viable="true" in="org.joda.time.format.FormatUtils.calculateDigitCount(long)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1)" />
    <mutant id="mutant_3709" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;)" to="(((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) + 1)" />
    <mutant id="mutant_711" viable="true" in="org.joda.time.format.FormatUtils.calculateDigitCount(long)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) * -1)" />
    <mutant id="mutant_3708" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;)" to="(((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) - 1)" />
    <mutant id="mutant_716" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(text.charAt(position)) - '0'" to="((text.charAt(position)) - '0') - 1" />
    <mutant id="mutant_717" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(text.charAt(position)) - '0'" to="((text.charAt(position)) - '0') + 1" />
    <mutant id="mutant_718" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(text.charAt(position)) - '0'" to="((text.charAt(position)) - '0') * -1" />
    <mutant id="mutant_719" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) - 1)" />
    <mutant id="mutant_3707" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;)" to="(((&quot;Cannot find time zone \'&quot; + id) + &quot;\' to link alias \'&quot;) * -1)" />
    <mutant id="mutant_3706" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Cannot find time zone \'&quot; + id)" to="((&quot;Cannot find time zone \'&quot; + id) * -1)" />
    <mutant id="mutant_3705" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Cannot find time zone \'&quot; + id)" to="((&quot;Cannot find time zone \'&quot; + id) + 1)" />
    <mutant id="mutant_3704" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Cannot find time zone \'&quot; + id)" to="((&quot;Cannot find time zone \'&quot; + id) - 1)" />
    <mutant id="mutant_3703" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_3702" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_3701" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_3700" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId) + &quot; revived&quot;)" to="(((((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId) + &quot; revived&quot;) * -1)" />
    <mutant id="mutant_723" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(position + 1)" to="((position + 1) * -1)" />
    <mutant id="mutant_724" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(position + 1)" to="((position + 1) + 1)" />
    <mutant id="mutant_725" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1))))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1)))) * -1)" />
    <mutant id="mutant_726" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1))))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1)))) + 1)" />
    <mutant id="mutant_720" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + 1)" />
    <mutant id="mutant_721" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) * -1)" />
    <mutant id="mutant_722" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(position + 1)" to="((position + 1) - 1)" />
    <mutant id="mutant_727" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1))))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1)))) - 1)" />
    <mutant id="mutant_728" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1)))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1)))) - '0') - 1" />
    <mutant id="mutant_729" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1)))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1)))) - '0') * -1" />
    <mutant id="mutant_1113" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="useAfter &amp;&amp; (useBefore == false)" to="!(useAfter &amp;&amp; (useBefore == false))" />
    <mutant id="mutant_2444" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1) - (values[fieldIndex])" to="((max + 1) - (values[fieldIndex])) - 1" />
    <mutant id="mutant_3776" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))" to="(!(((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit()))))" />
    <mutant id="mutant_1114" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_2445" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1) - (values[fieldIndex])" to="((max + 1) - (values[fieldIndex])) + 1" />
    <mutant id="mutant_3775" viable="true" in="org.joda.time.DateTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_1111" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (prefixes.length))" to="!((((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (prefixes.length)))" />
    <mutant id="mutant_2442" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1)" to="((max + 1) - 1)" />
    <mutant id="mutant_3774" viable="false" in="org.joda.time.DateTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_1112" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(text == null) || (finalText == null)" to="!((text == null) || (finalText == null))" />
    <mutant id="mutant_2443" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1)" to="((max + 1) * -1)" />
    <mutant id="mutant_3773" viable="false" in="org.joda.time.DateTime.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_2440" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) - 1)" />
    <mutant id="mutant_3772" viable="false" in="org.joda.time.DateTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) - 1)" />
    <mutant id="mutant_1110" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1))" to="(!(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)))" />
    <mutant id="mutant_2441" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1)" to="((max + 1) + 1)" />
    <mutant id="mutant_3771" viable="true" in="org.joda.time.DateTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) + 1)" />
    <mutant id="mutant_3770" viable="false" in="org.joda.time.DateTime.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) * -1)" />
    <mutant id="mutant_1119" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (suffixes == null))" to="(!((regularExpressions == null) || (suffixes == null)))" />
    <mutant id="mutant_1117" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(lastSeparator != null) &amp;&amp; ((pairs.size()) == 0)" to="!((lastSeparator != null) &amp;&amp; ((pairs.size()) == 0))" />
    <mutant id="mutant_2448" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) * -1)" />
    <mutant id="mutant_1118" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="!((singularText == null) || (pluralText == null))" />
    <mutant id="mutant_2449" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) - 1)" />
    <mutant id="mutant_3779" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="(!(((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))))" />
    <mutant id="mutant_1115" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_2446" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1) - (values[fieldIndex])" to="((max + 1) - (values[fieldIndex])) * -1" />
    <mutant id="mutant_3778" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))" to="(!(((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" />
    <mutant id="mutant_1116" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_2447" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) + 1)" />
    <mutant id="mutant_3777" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit()))))" to="(!(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))))" />
    <mutant id="mutant_734" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(sampleLen + 3)" to="((sampleLen + 3) * -1)" />
    <mutant id="mutant_735" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(sampleLen + 3)" to="((sampleLen + 3) - 1)" />
    <mutant id="mutant_736" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(sampleLen + 3)" to="((sampleLen + 3) + 1)" />
    <mutant id="mutant_737" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText)" to="((&quot;Invalid format: \&quot;&quot; + sampleText) * -1)" />
    <mutant id="mutant_730" viable="true" in="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1)))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt((position + 1)))) - '0') + 1" />
    <mutant id="mutant_731" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="errorPos + 32" to="(errorPos + 32) * -1" />
    <mutant id="mutant_732" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="errorPos + 32" to="(errorPos + 32) + 1" />
    <mutant id="mutant_733" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="errorPos + 32" to="(errorPos + 32) - 1" />
    <mutant id="mutant_738" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText)" to="((&quot;Invalid format: \&quot;&quot; + sampleText) + 1)" />
    <mutant id="mutant_739" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText)" to="((&quot;Invalid format: \&quot;&quot; + sampleText) - 1)" />
    <mutant id="mutant_1102" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(java.lang.String,int)" from="position + textLength" to="(position + textLength) - 1" />
    <mutant id="mutant_2433" viable="false" in="org.joda.time.field.AbstractReadableInstantFieldProperty.getChronology()" from="(&quot;The method getChronology() was added in v1.4 and needs &quot; + &quot;to be implemented by subclasses of AbstractReadableInstantFieldProperty&quot;)" to="((&quot;The method getChronology() was added in v1.4 and needs &quot; + &quot;to be implemented by subclasses of AbstractReadableInstantFieldProperty&quot;) - 1)" />
    <mutant id="mutant_3765" viable="true" in="org.joda.time.DateTime$Property.withMinimumValue()" from="((getMillis()) - (DateTimeConstants.MILLIS_PER_DAY))" to="(((getMillis()) - (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_1103" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(java.lang.String,int)" from="position + textLength" to="(position + textLength) * -1" />
    <mutant id="mutant_2434" viable="false" in="org.joda.time.field.AbstractReadableInstantFieldProperty.getChronology()" from="(&quot;The method getChronology() was added in v1.4 and needs &quot; + &quot;to be implemented by subclasses of AbstractReadableInstantFieldProperty&quot;)" to="((&quot;The method getChronology() was added in v1.4 and needs &quot; + &quot;to be implemented by subclasses of AbstractReadableInstantFieldProperty&quot;) * -1)" />
    <mutant id="mutant_3764" viable="true" in="org.joda.time.DateTime$Property.withMinimumValue()" from="((getMillis()) - (DateTimeConstants.MILLIS_PER_DAY))" to="(((getMillis()) - (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_1100" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="!((iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0))" />
    <mutant id="mutant_2431" viable="false" in="org.joda.time.field.AbstractReadableInstantFieldProperty.toString()" from="(&quot;Property[&quot; + (getName())) + &quot;]&quot;" to="((&quot;Property[&quot; + (getName())) + &quot;]&quot;) - 1" />
    <mutant id="mutant_3763" viable="true" in="org.joda.time.DateTime$Property.withMaximumValue()" from="((getMillis()) + (DateTimeConstants.MILLIS_PER_DAY))" to="(((getMillis()) + (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_1101" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(java.lang.String,int)" from="position + textLength" to="(position + textLength) + 1" />
    <mutant id="mutant_2432" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.getChronology()" from="(&quot;The method getChronology() was added in v1.4 and needs &quot; + &quot;to be implemented by subclasses of AbstractReadableInstantFieldProperty&quot;)" to="((&quot;The method getChronology() was added in v1.4 and needs &quot; + &quot;to be implemented by subclasses of AbstractReadableInstantFieldProperty&quot;) + 1)" />
    <mutant id="mutant_3762" viable="true" in="org.joda.time.DateTime$Property.withMaximumValue()" from="((getMillis()) + (DateTimeConstants.MILLIS_PER_DAY))" to="(((getMillis()) + (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_3761" viable="true" in="org.joda.time.DateTime$Property.withMaximumValue()" from="((getMillis()) + (DateTimeConstants.MILLIS_PER_DAY))" to="(((getMillis()) + (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_2430" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.toString()" from="(&quot;Property[&quot; + (getName())) + &quot;]&quot;" to="((&quot;Property[&quot; + (getName())) + &quot;]&quot;) + 1" />
    <mutant id="mutant_3760" viable="true" in="org.joda.time.DateMidnight.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_1108" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="!((singularText == null) || (pluralText == null))" />
    <mutant id="mutant_2439" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) * -1)" />
    <mutant id="mutant_1109" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (prefixes == null))" to="(!((regularExpressions == null) || (prefixes == null)))" />
    <mutant id="mutant_1106" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="((sep.iAfterParser) == null) &amp;&amp; ((sep.iAfterPrinter) == null)" to="!(((sep.iAfterParser) == null) &amp;&amp; ((sep.iAfterPrinter) == null))" />
    <mutant id="mutant_2437" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) * -1" />
    <mutant id="mutant_3769" viable="true" in="org.joda.time.DateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_1107" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" from="(printer == null) &amp;&amp; (parser == null)" to="!((printer == null) &amp;&amp; (parser == null))" />
    <mutant id="mutant_2438" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) + 1)" />
    <mutant id="mutant_3768" viable="true" in="org.joda.time.DateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="!((durationToAdd == null) || (scalar == 0))" />
    <mutant id="mutant_1104" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="notPrinter &amp;&amp; notParser" to="!(notPrinter &amp;&amp; notParser)" />
    <mutant id="mutant_2435" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) + 1" />
    <mutant id="mutant_3767" viable="true" in="org.joda.time.DateTime.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="!((durationToAdd == 0) || (scalar == 0))" />
    <mutant id="mutant_1105" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="(size &gt;= 2) &amp;&amp; ((elementPairs.get(0)) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator)" to="!((size &gt;= 2) &amp;&amp; ((elementPairs.get(0)) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator))" />
    <mutant id="mutant_2436" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) - 1" />
    <mutant id="mutant_3766" viable="true" in="org.joda.time.DateTime$Property.withMinimumValue()" from="((getMillis()) - (DateTimeConstants.MILLIS_PER_DAY))" to="(((getMillis()) - (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_745" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText)" to="((&quot;Invalid format: \&quot;&quot; + sampleText) - 1)" />
    <mutant id="mutant_746" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is too short&quot;" to="((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is too short&quot;) - 1" />
    <mutant id="mutant_747" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is too short&quot;" to="((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is too short&quot;) * -1" />
    <mutant id="mutant_748" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is too short&quot;" to="((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is too short&quot;) + 1" />
    <mutant id="mutant_741" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText) + '\&quot;'" to="((&quot;Invalid format: \&quot;&quot; + sampleText) + '\&quot;') - 1" />
    <mutant id="mutant_742" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText) + '\&quot;'" to="((&quot;Invalid format: \&quot;&quot; + sampleText) + '\&quot;') * -1" />
    <mutant id="mutant_743" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText)" to="((&quot;Invalid format: \&quot;&quot; + sampleText) * -1)" />
    <mutant id="mutant_744" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText)" to="((&quot;Invalid format: \&quot;&quot; + sampleText) + 1)" />
    <mutant id="mutant_749" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText)" to="((&quot;Invalid format: \&quot;&quot; + sampleText) * -1)" />
    <mutant id="mutant_2422" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()" from="(((get()) * 17) + (getFieldType().hashCode()))" to="((((get()) * 17) + (getFieldType().hashCode())) * -1)" />
    <mutant id="mutant_3754" viable="true" in="org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_2423" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()" from="(((get()) * 17) + (getFieldType().hashCode())) + (getChronology().hashCode())" to="((((get()) * 17) + (getFieldType().hashCode())) + (getChronology().hashCode())) + 1" />
    <mutant id="mutant_3753" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="!((durationToAdd == null) || (scalar == 0))" />
    <mutant id="mutant_2420" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()" from="(((get()) * 17) + (getFieldType().hashCode()))" to="((((get()) * 17) + (getFieldType().hashCode())) + 1)" />
    <mutant id="mutant_3752" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="!((durationToAdd == 0) || (scalar == 0))" />
    <mutant id="mutant_2421" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()" from="(((get()) * 17) + (getFieldType().hashCode()))" to="((((get()) * 17) + (getFieldType().hashCode())) - 1)" />
    <mutant id="mutant_3751" viable="true" in="org.joda.time.tz.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader,boolean)" from="(loader == null) &amp;&amp; (!favorSystemLoader)" to="!((loader == null) &amp;&amp; (!favorSystemLoader))" />
    <mutant id="mutant_3750" viable="true" in="org.joda.time.tz.ZoneInfoProvider(java.io.File)" from="(&quot;File doesn\'t refer to a directory: &quot; + fileDir)" to="((&quot;File doesn\'t refer to a directory: &quot; + fileDir) + 1)" />
    <mutant id="mutant_2428" viable="false" in="org.joda.time.field.AbstractReadableInstantFieldProperty.toString()" from="(&quot;Property[&quot; + (getName()))" to="((&quot;Property[&quot; + (getName())) - 1)" />
    <mutant id="mutant_740" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText) + '\&quot;'" to="((&quot;Invalid format: \&quot;&quot; + sampleText) + '\&quot;') + 1" />
    <mutant id="mutant_2429" viable="false" in="org.joda.time.field.AbstractReadableInstantFieldProperty.toString()" from="(&quot;Property[&quot; + (getName())) + &quot;]&quot;" to="((&quot;Property[&quot; + (getName())) + &quot;]&quot;) * -1" />
    <mutant id="mutant_3759" viable="false" in="org.joda.time.DateMidnight.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_2426" viable="false" in="org.joda.time.field.AbstractReadableInstantFieldProperty.toString()" from="(&quot;Property[&quot; + (getName()))" to="((&quot;Property[&quot; + (getName())) * -1)" />
    <mutant id="mutant_3758" viable="false" in="org.joda.time.DateMidnight.property(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_2427" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.toString()" from="(&quot;Property[&quot; + (getName()))" to="((&quot;Property[&quot; + (getName())) + 1)" />
    <mutant id="mutant_3757" viable="false" in="org.joda.time.DateMidnight.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) - 1)" />
    <mutant id="mutant_2424" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()" from="(((get()) * 17) + (getFieldType().hashCode())) + (getChronology().hashCode())" to="((((get()) * 17) + (getFieldType().hashCode())) + (getChronology().hashCode())) - 1" />
    <mutant id="mutant_3756" viable="true" in="org.joda.time.DateMidnight.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) + 1)" />
    <mutant id="mutant_2425" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()" from="(((get()) * 17) + (getFieldType().hashCode())) + (getChronology().hashCode())" to="((((get()) * 17) + (getFieldType().hashCode())) + (getChronology().hashCode())) * -1" />
    <mutant id="mutant_3755" viable="false" in="org.joda.time.DateMidnight.property(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) * -1)" />
    <mutant id="mutant_756" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos)))" to="((((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos))) + 1)" />
    <mutant id="mutant_757" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos)))" to="((((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos))) - 1)" />
    <mutant id="mutant_758" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos))) + '\&quot;'" to="((((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos))) + '\&quot;') + 1" />
    <mutant id="mutant_759" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos))) + '\&quot;'" to="((((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos))) + '\&quot;') - 1" />
    <mutant id="mutant_752" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;)" to="(((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + 1)" />
    <mutant id="mutant_753" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;)" to="(((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) - 1)" />
    <mutant id="mutant_754" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;)" to="(((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) * -1)" />
    <mutant id="mutant_755" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos)))" to="((((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos))) * -1)" />
    <mutant id="mutant_2411" viable="false" in="org.joda.time.field.AbstractPartialFieldProperty.toString()" from="(&quot;Property[&quot; + (getName()))" to="((&quot;Property[&quot; + (getName())) * -1)" />
    <mutant id="mutant_3743" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)" from="((&quot;*e* Error in &quot; + (tz.getID())) + &quot;: Didn\'t read properly from file&quot;)" to="(((&quot;*e* Error in &quot; + (tz.getID())) + &quot;: Didn\'t read properly from file&quot;) - 1)" />
    <mutant id="mutant_2412" viable="false" in="org.joda.time.field.AbstractPartialFieldProperty.toString()" from="(&quot;Property[&quot; + (getName())) + &quot;]&quot;" to="((&quot;Property[&quot; + (getName())) + &quot;]&quot;) * -1" />
    <mutant id="mutant_3742" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)" from="((&quot;*e* Error in &quot; + (tz.getID())) + &quot;: Didn\'t read properly from file&quot;)" to="(((&quot;*e* Error in &quot; + (tz.getID())) + &quot;: Didn\'t read properly from file&quot;) * -1)" />
    <mutant id="mutant_3741" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)" from="(&quot;*e* Error in &quot; + (tz.getID()))" to="((&quot;*e* Error in &quot; + (tz.getID())) * -1)" />
    <mutant id="mutant_2410" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.toString()" from="(&quot;Property[&quot; + (getName()))" to="((&quot;Property[&quot; + (getName())) + 1)" />
    <mutant id="mutant_3740" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)" from="(&quot;*e* Error in &quot; + (tz.getID()))" to="((&quot;*e* Error in &quot; + (tz.getID())) - 1)" />
    <mutant id="mutant_2419" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()" from="((get()) * 17)" to="(((get()) * 17) * -1)" />
    <mutant id="mutant_750" viable="true" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText)" to="((&quot;Invalid format: \&quot;&quot; + sampleText) + 1)" />
    <mutant id="mutant_2417" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()" from="((get()) * 17)" to="(((get()) * 17) + 1)" />
    <mutant id="mutant_3749" viable="false" in="org.joda.time.tz.ZoneInfoProvider(java.io.File)" from="(&quot;File doesn\'t refer to a directory: &quot; + fileDir)" to="((&quot;File doesn\'t refer to a directory: &quot; + fileDir) * -1)" />
    <mutant id="mutant_751" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(&quot;Invalid format: \&quot;&quot; + sampleText)" to="((&quot;Invalid format: \&quot;&quot; + sampleText) - 1)" />
    <mutant id="mutant_2418" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()" from="((get()) * 17)" to="(((get()) * 17) - 1)" />
    <mutant id="mutant_3748" viable="false" in="org.joda.time.tz.ZoneInfoProvider(java.io.File)" from="(&quot;File doesn\'t refer to a directory: &quot; + fileDir)" to="((&quot;File doesn\'t refer to a directory: &quot; + fileDir) - 1)" />
    <mutant id="mutant_2415" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType())))" to="(!(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))))" />
    <mutant id="mutant_3747" viable="true" in="org.joda.time.tz.ZoneInfoProvider(java.io.File)" from="(&quot;File directory doesn\'t exist: &quot; + fileDir)" to="((&quot;File directory doesn\'t exist: &quot; + fileDir) + 1)" />
    <mutant id="mutant_2416" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="!((((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology())))" />
    <mutant id="mutant_3746" viable="false" in="org.joda.time.tz.ZoneInfoProvider(java.io.File)" from="(&quot;File directory doesn\'t exist: &quot; + fileDir)" to="((&quot;File directory doesn\'t exist: &quot; + fileDir) * -1)" />
    <mutant id="mutant_2413" viable="false" in="org.joda.time.field.AbstractPartialFieldProperty.toString()" from="(&quot;Property[&quot; + (getName())) + &quot;]&quot;" to="((&quot;Property[&quot; + (getName())) + &quot;]&quot;) - 1" />
    <mutant id="mutant_3745" viable="false" in="org.joda.time.tz.ZoneInfoProvider(java.io.File)" from="(&quot;File directory doesn\'t exist: &quot; + fileDir)" to="((&quot;File directory doesn\'t exist: &quot; + fileDir) - 1)" />
    <mutant id="mutant_2414" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.toString()" from="(&quot;Property[&quot; + (getName())) + &quot;]&quot;" to="((&quot;Property[&quot; + (getName())) + &quot;]&quot;) + 1" />
    <mutant id="mutant_3744" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)" from="((&quot;*e* Error in &quot; + (tz.getID())) + &quot;: Didn\'t read properly from file&quot;)" to="(((&quot;*e* Error in &quot; + (tz.getID())) + &quot;: Didn\'t read properly from file&quot;) + 1)" />
    <mutant id="mutant_767" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="(value + 1)" to="((value + 1) * -1)" />
    <mutant id="mutant_768" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="(value + 1)" to="((value + 1) + 1)" />
    <mutant id="mutant_769" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="(value + 1)" to="((value + 1) - 1)" />
    <mutant id="mutant_763" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) - 1)" />
    <mutant id="mutant_764" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) - 1)" />
    <mutant id="mutant_765" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) + 1)" />
    <mutant id="mutant_766" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) * -1)" />
    <mutant id="mutant_1160" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="(obj != null) &amp;&amp; ((getClass()) == (obj.getClass()))" to="!((obj != null) &amp;&amp; ((getClass()) == (obj.getClass())))" />
    <mutant id="mutant_2491" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1)" to="((min - 1) * -1)" />
    <mutant id="mutant_1161" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="!(((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())) &amp;&amp; (getZone().equals(chrono.getZone())))" />
    <mutant id="mutant_2492" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1) - (values[fieldIndex])" to="((min - 1) - (values[fieldIndex])) - 1" />
    <mutant id="mutant_2490" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1)" to="((min - 1) - 1)" />
    <mutant id="mutant_1157" viable="false" in="org.joda.time.chrono.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) * -1)" />
    <mutant id="mutant_2488" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) * -1" />
    <mutant id="mutant_1158" viable="false" in="org.joda.time.chrono.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) - 1)" />
    <mutant id="mutant_2489" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1)" to="((min - 1) + 1)" />
    <mutant id="mutant_1155" viable="false" in="?" from="(BasicChronology.CACHE_SIZE) - 1" to="((BasicChronology.CACHE_SIZE) - 1) * -1" />
    <mutant id="mutant_2486" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) + 1" />
    <mutant id="mutant_1156" viable="true" in="org.joda.time.chrono.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)" from="(minDaysInFirstWeek &lt; 1) || (minDaysInFirstWeek &gt; 7)" to="!((minDaysInFirstWeek &lt; 1) || (minDaysInFirstWeek &gt; 7))" />
    <mutant id="mutant_2487" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) - 1" />
    <mutant id="mutant_1153" viable="false" in="?" from="(BasicChronology.CACHE_SIZE) - 1" to="((BasicChronology.CACHE_SIZE) - 1) - 1" />
    <mutant id="mutant_2484" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) * -1)" />
    <mutant id="mutant_1154" viable="false" in="?" from="(BasicChronology.CACHE_SIZE) - 1" to="((BasicChronology.CACHE_SIZE) - 1) + 1" />
    <mutant id="mutant_2485" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) - 1)" />
    <mutant id="mutant_1151" viable="false" in="?" from="((DateTimeConstants.MILLIS_PER_DAY) / 2)" to="(((DateTimeConstants.MILLIS_PER_DAY) / 2) * -1)" />
    <mutant id="mutant_2482" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1) - (values[fieldIndex])" to="((max + 1) - (values[fieldIndex])) * -1" />
    <mutant id="mutant_1152" viable="false" in="?" from="((DateTimeConstants.MILLIS_PER_DAY) / 2)" to="(((DateTimeConstants.MILLIS_PER_DAY) / 2) + 1)" />
    <mutant id="mutant_2483" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) + 1)" />
    <mutant id="mutant_760" viable="false" in="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" from="(((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos))) + '\&quot;'" to="((((&quot;Invalid format: \&quot;&quot; + sampleText) + &quot;\&quot; is malformed at \&quot;&quot;) + (sampleText.substring(errorPos))) + '\&quot;') * -1" />
    <mutant id="mutant_761" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) * -1)" />
    <mutant id="mutant_762" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) + 1)" />
    <mutant id="mutant_1159" viable="true" in="org.joda.time.chrono.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) + 1)" />
    <mutant id="mutant_778" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) * -1)" />
    <mutant id="mutant_779" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) * -1)" />
    <mutant id="mutant_774" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((char)(d + '0'))" to="(((char)((d + '0'))) * -1)" />
    <mutant id="mutant_775" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((char)(d + '0'))" to="(((char)((d + '0'))) + 1)" />
    <mutant id="mutant_776" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) + 1)" />
    <mutant id="mutant_777" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) - 1)" />
    <mutant id="mutant_2480" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1) - (values[fieldIndex])" to="((max + 1) - (values[fieldIndex])) - 1" />
    <mutant id="mutant_1150" viable="false" in="?" from="((DateTimeConstants.MILLIS_PER_DAY) / 2)" to="(((DateTimeConstants.MILLIS_PER_DAY) / 2) - 1)" />
    <mutant id="mutant_2481" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1) - (values[fieldIndex])" to="((max + 1) - (values[fieldIndex])) + 1" />
    <mutant id="mutant_1146" viable="true" in="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)" from="(scalar != 0) &amp;&amp; (period != null)" to="!((scalar != 0) &amp;&amp; (period != null))" />
    <mutant id="mutant_2477" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1)" to="((max + 1) + 1)" />
    <mutant id="mutant_1147" viable="true" in="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)" from="(value * scalar)" to="((value * scalar) * -1)" />
    <mutant id="mutant_2478" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1)" to="((max + 1) - 1)" />
    <mutant id="mutant_1144" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))) &amp;&amp; ((iDayOfMonth) == (iBase.dayOfMonth()))" to="!((((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))) &amp;&amp; ((iDayOfMonth) == (iBase.dayOfMonth())))" />
    <mutant id="mutant_2475" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) * -1)" />
    <mutant id="mutant_1145" viable="true" in="org.joda.time.chrono.BaseChronology.add(long,long,int)" from="(duration == 0) || (scalar == 0)" to="!((duration == 0) || (scalar == 0))" />
    <mutant id="mutant_2476" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) - 1)" />
    <mutant id="mutant_1142" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))) &amp;&amp; ((iMillisOfSecond) == (iBase.millisOfSecond()))" to="!(((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))) &amp;&amp; ((iMillisOfSecond) == (iBase.millisOfSecond())))" />
    <mutant id="mutant_2473" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1) - (values[fieldIndex])" to="((max + 1) - (values[fieldIndex])) * -1" />
    <mutant id="mutant_1143" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear())))" to="(!(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))))" />
    <mutant id="mutant_2474" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) + 1)" />
    <mutant id="mutant_1140" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour())))" to="(!(((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))))" />
    <mutant id="mutant_2471" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1) - (values[fieldIndex])" to="((max + 1) - (values[fieldIndex])) - 1" />
    <mutant id="mutant_1141" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute())))" to="(!((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))))" />
    <mutant id="mutant_2472" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1) - (values[fieldIndex])" to="((max + 1) - (values[fieldIndex])) + 1" />
    <mutant id="mutant_770" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) * -1)" />
    <mutant id="mutant_771" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) - 1)" />
    <mutant id="mutant_772" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) + 1)" />
    <mutant id="mutant_773" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((char)(d + '0'))" to="(((char)((d + '0'))) - 1)" />
    <mutant id="mutant_1148" viable="true" in="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)" from="(value * scalar)" to="((value * scalar) - 1)" />
    <mutant id="mutant_2479" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1)" to="((max + 1) * -1)" />
    <mutant id="mutant_1149" viable="true" in="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)" from="(value * scalar)" to="((value * scalar) + 1)" />
    <mutant id="mutant_789" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) - 1" />
    <mutant id="mutant_785" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) - 1)" />
    <mutant id="mutant_786" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) * -1)" />
    <mutant id="mutant_787" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1)" />
    <mutant id="mutant_788" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) * -1" />
    <mutant id="mutant_2470" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1)" to="((max + 1) * -1)" />
    <mutant id="mutant_1135" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 1)" to="(((iElementPairs.size()) - 1) - 1)" />
    <mutant id="mutant_2466" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) - 1" />
    <mutant id="mutant_3798" viable="true" in="org.joda.time.DateTimeComparator.toString()" from="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;)" to="(((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + 1)" />
    <mutant id="mutant_1136" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 1)" to="(((iElementPairs.size()) - 1) + 1)" />
    <mutant id="mutant_2467" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) * -1" />
    <mutant id="mutant_3797" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;)" to="(((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) - 1)" />
    <mutant id="mutant_1133" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 2)" to="(((iElementPairs.size()) - 2) + 1)" />
    <mutant id="mutant_2464" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) - 1)" />
    <mutant id="mutant_3796" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;)" to="(((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) * -1)" />
    <mutant id="mutant_1134" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 1)" to="(((iElementPairs.size()) - 1) * -1)" />
    <mutant id="mutant_2465" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) + 1" />
    <mutant id="mutant_3795" viable="true" in="org.joda.time.DateTimeComparator.toString()" from="(&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName()))" to="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + 1)" />
    <mutant id="mutant_1131" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 2)" to="(((iElementPairs.size()) - 2) * -1)" />
    <mutant id="mutant_2462" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) + 1)" />
    <mutant id="mutant_3794" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName()))" to="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) - 1)" />
    <mutant id="mutant_1132" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 2)" to="(((iElementPairs.size()) - 2) - 1)" />
    <mutant id="mutant_2463" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) * -1)" />
    <mutant id="mutant_3793" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName()))" to="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) * -1)" />
    <mutant id="mutant_2460" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1) - (values[fieldIndex])" to="((min - 1) - (values[fieldIndex])) * -1" />
    <mutant id="mutant_3792" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;]&quot;" to="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;]&quot;) - 1" />
    <mutant id="mutant_1130" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)) || (!(originalPrinter instanceof org.joda.time.format.PeriodFormatterBuilder.FieldFormatter))" to="!((((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)) || (!(originalPrinter instanceof org.joda.time.format.PeriodFormatterBuilder.FieldFormatter)))" />
    <mutant id="mutant_2461" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1) - (values[fieldIndex])" to="((min - 1) - (values[fieldIndex])) + 1" />
    <mutant id="mutant_3791" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;]&quot;" to="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;]&quot;) * -1" />
    <mutant id="mutant_781" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + 1)" />
    <mutant id="mutant_782" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((char)(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))" to="(((char)((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))) + 1)" />
    <mutant id="mutant_783" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((char)(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))" to="(((char)((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))) - 1)" />
    <mutant id="mutant_784" viable="false" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((char)(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))" to="(((char)((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))) * -1)" />
    <mutant id="mutant_1139" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 1) == 1)" to="!(((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 1) == 1))" />
    <mutant id="mutant_1137" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 6) == 6)" to="!(((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 6) == 6))" />
    <mutant id="mutant_2468" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1)" to="((max + 1) + 1)" />
    <mutant id="mutant_780" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) - 1)" />
    <mutant id="mutant_1138" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 5) == 5)" to="!(((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 5) == 5))" />
    <mutant id="mutant_2469" viable="true" in="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)" from="(max + 1)" to="((max + 1) - 1)" />
    <mutant id="mutant_3799" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName()))" to="((((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;-&quot;) + ((iUpperLimit) == null ? &quot;&quot; : iUpperLimit.getName())) * -1)" />
    <mutant id="mutant_796" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) - 1" />
    <mutant id="mutant_797" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) * -1)" />
    <mutant id="mutant_798" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) + 1)" />
    <mutant id="mutant_799" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) - 1)" />
    <mutant id="mutant_3790" viable="true" in="org.joda.time.DateTimeComparator.toString()" from="(&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;]&quot;" to="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + &quot;]&quot;) + 1" />
    <mutant id="mutant_1124" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 2)" to="(((iElementPairs.size()) - 2) + 1)" />
    <mutant id="mutant_2455" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) - 1)" />
    <mutant id="mutant_3787" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName()))" to="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) * -1)" />
    <mutant id="mutant_1125" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 1)" to="(((iElementPairs.size()) - 1) * -1)" />
    <mutant id="mutant_2456" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1)" to="((min - 1) + 1)" />
    <mutant id="mutant_3786" viable="true" in="org.joda.time.DateTimeComparator.hashCode()" from="((iLowerLimit) == null ? 0 : iLowerLimit.hashCode()) + (123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode()))" to="(((iLowerLimit) == null ? 0 : iLowerLimit.hashCode()) + (123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode()))) * -1" />
    <mutant id="mutant_1122" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 2)" to="(((iElementPairs.size()) - 2) * -1)" />
    <mutant id="mutant_2453" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) + 1)" />
    <mutant id="mutant_3785" viable="true" in="org.joda.time.DateTimeComparator.hashCode()" from="((iLowerLimit) == null ? 0 : iLowerLimit.hashCode()) + (123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode()))" to="(((iLowerLimit) == null ? 0 : iLowerLimit.hashCode()) + (123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode()))) + 1" />
    <mutant id="mutant_1123" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 2)" to="(((iElementPairs.size()) - 2) - 1)" />
    <mutant id="mutant_2454" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(fieldIndex - 1)" to="((fieldIndex - 1) * -1)" />
    <mutant id="mutant_3784" viable="true" in="org.joda.time.DateTimeComparator.hashCode()" from="((iLowerLimit) == null ? 0 : iLowerLimit.hashCode()) + (123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode()))" to="(((iLowerLimit) == null ? 0 : iLowerLimit.hashCode()) + (123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode()))) - 1" />
    <mutant id="mutant_1120" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1))" to="(!(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)))" />
    <mutant id="mutant_2451" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) - 1" />
    <mutant id="mutant_3783" viable="true" in="org.joda.time.DateTimeComparator.hashCode()" from="(123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode()))" to="((123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode())) - 1)" />
    <mutant id="mutant_1121" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (suffixes.length))" to="!((((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (suffixes.length)))" />
    <mutant id="mutant_2452" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) * -1" />
    <mutant id="mutant_3782" viable="true" in="org.joda.time.DateTimeComparator.hashCode()" from="(123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode()))" to="((123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode())) * -1)" />
    <mutant id="mutant_3781" viable="true" in="org.joda.time.DateTimeComparator.hashCode()" from="(123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode()))" to="((123 * ((iUpperLimit) == null ? 0 : iUpperLimit.hashCode())) + 1)" />
    <mutant id="mutant_2450" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(values[fieldIndex]) + valueToAdd" to="((values[fieldIndex]) + valueToAdd) + 1" />
    <mutant id="mutant_3780" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))) &amp;&amp; (((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="!((((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))) &amp;&amp; (((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))))" />
    <mutant id="mutant_792" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) * -1)" />
    <mutant id="mutant_793" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) - 1)" />
    <mutant id="mutant_794" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) + 1" />
    <mutant id="mutant_795" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) * -1" />
    <mutant id="mutant_1128" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((originalPrinter == null) || (originalParser == null))" to="(!((originalPrinter == null) || (originalParser == null)))" />
    <mutant id="mutant_2459" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1) - (values[fieldIndex])" to="((min - 1) - (values[fieldIndex])) - 1" />
    <mutant id="mutant_1129" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser))" to="(!(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)))" />
    <mutant id="mutant_790" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) + 1" />
    <mutant id="mutant_1126" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 1)" to="(((iElementPairs.size()) - 1) - 1)" />
    <mutant id="mutant_2457" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1)" to="((min - 1) - 1)" />
    <mutant id="mutant_3789" viable="true" in="org.joda.time.DateTimeComparator.toString()" from="(&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName()))" to="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) + 1)" />
    <mutant id="mutant_791" viable="true" in="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1)" />
    <mutant id="mutant_1127" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((iElementPairs.size()) - 1)" to="(((iElementPairs.size()) - 1) + 1)" />
    <mutant id="mutant_2458" viable="true" in="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(min - 1)" to="((min - 1) * -1)" />
    <mutant id="mutant_3788" viable="false" in="org.joda.time.DateTimeComparator.toString()" from="(&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName()))" to="((&quot;DateTimeComparator[&quot; + ((iLowerLimit) == null ? &quot;&quot; : iLowerLimit.getName())) - 1)" />
    <mutant id="mutant_9" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="((buf.length()) - 3)" to="(((buf.length()) - 3) + 1)" />
    <mutant id="mutant_8" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="((buf.length()) - 3)" to="(((buf.length()) - 3) * -1)" />
    <mutant id="mutant_5" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="((millis / 1000) * 1000)" to="(((millis / 1000) * 1000) + 1)" />
    <mutant id="mutant_686" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;)" to="(((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;) - 1)" />
    <mutant id="mutant_4" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="((millis / 1000) * 1000)" to="(((millis / 1000) * 1000) - 1)" />
    <mutant id="mutant_687" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;) + message" to="(((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;) + message) + 1" />
    <mutant id="mutant_7" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="((buf.length()) - 3)" to="(((buf.length()) - 3) - 1)" />
    <mutant id="mutant_688" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;) + message" to="(((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;) + message) * -1" />
    <mutant id="mutant_6" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="((buf.length()) - 3)" to="(((buf.length()) - 3) + 1)" />
    <mutant id="mutant_689" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;) + message" to="(((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;) + message) - 1" />
    <mutant id="mutant_85" viable="false" in="org.joda.time.base.BasePeriod.addPeriodInto(int[],org.joda.time.ReadablePeriod)" from="(&quot;Period does not support field \'&quot; + (type.getName()))" to="((&quot;Period does not support field \'&quot; + (type.getName())) - 1)" />
    <mutant id="mutant_2293" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)" from="localInstant - offset" to="(localInstant - offset) + 1" />
    <mutant id="mutant_84" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)) &amp;&amp; ((start.getClass()) == (end.getClass()))" to="!(((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)) &amp;&amp; ((start.getClass()) == (end.getClass())))" />
    <mutant id="mutant_2294" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long,int)" from="(instant + offset)" to="((instant + offset) + 1)" />
    <mutant id="mutant_87" viable="true" in="org.joda.time.base.BasePeriod.addPeriodInto(int[],org.joda.time.ReadablePeriod)" from="(&quot;Period does not support field \'&quot; + (type.getName()))" to="((&quot;Period does not support field \'&quot; + (type.getName())) + 1)" />
    <mutant id="mutant_2291" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)" from="localInstant - offset" to="(localInstant - offset) * -1" />
    <mutant id="mutant_86" viable="false" in="org.joda.time.base.BasePeriod.addPeriodInto(int[],org.joda.time.ReadablePeriod)" from="(&quot;Period does not support field \'&quot; + (type.getName()))" to="((&quot;Period does not support field \'&quot; + (type.getName())) * -1)" />
    <mutant id="mutant_2292" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)" from="localInstant - offset" to="(localInstant - offset) - 1" />
    <mutant id="mutant_89" viable="true" in="org.joda.time.base.BasePeriod.addPeriodInto(int[],org.joda.time.ReadablePeriod)" from="((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;) + 1)" />
    <mutant id="mutant_88" viable="false" in="org.joda.time.base.BasePeriod.addPeriodInto(int[],org.joda.time.ReadablePeriod)" from="((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;) * -1)" />
    <mutant id="mutant_2290" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)" from="(instant + offset)" to="((instant + offset) * -1)" />
    <mutant id="mutant_90" viable="false" in="org.joda.time.base.BasePeriod.addPeriodInto(int[],org.joda.time.ReadablePeriod)" from="((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;) - 1)" />
    <mutant id="mutant_2288" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)" from="(instant + offset)" to="((instant + offset) + 1)" />
    <mutant id="mutant_2289" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)" from="(instant + offset)" to="((instant + offset) - 1)" />
    <mutant id="mutant_92" viable="false" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(&quot;Period does not support field \'&quot; + field)" to="((&quot;Period does not support field \'&quot; + field) - 1)" />
    <mutant id="mutant_2286" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)" from="localInstant - offset" to="(localInstant - offset) - 1" />
    <mutant id="mutant_91" viable="true" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="!((value != 0) || (field == null))" />
    <mutant id="mutant_2287" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)" from="localInstant - offset" to="(localInstant - offset) + 1" />
    <mutant id="mutant_94" viable="true" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(&quot;Period does not support field \'&quot; + field)" to="((&quot;Period does not support field \'&quot; + field) + 1)" />
    <mutant id="mutant_2284" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)" from="(instant + offset)" to="((instant + offset) * -1)" />
    <mutant id="mutant_93" viable="false" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(&quot;Period does not support field \'&quot; + field)" to="((&quot;Period does not support field \'&quot; + field) * -1)" />
    <mutant id="mutant_2285" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)" from="localInstant - offset" to="(localInstant - offset) * -1" />
    <mutant id="mutant_1" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="(millis / 1000)" to="((millis / 1000) + 1)" />
    <mutant id="mutant_682" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Cannot parse \&quot;&quot; + text)" to="((&quot;Cannot parse \&quot;&quot; + text) - 1)" />
    <mutant id="mutant_0" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="(millis / 1000)" to="((millis / 1000) * -1)" />
    <mutant id="mutant_683" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Cannot parse \&quot;&quot; + text)" to="((&quot;Cannot parse \&quot;&quot; + text) * -1)" />
    <mutant id="mutant_3" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="((millis / 1000) * 1000)" to="(((millis / 1000) * 1000) * -1)" />
    <mutant id="mutant_684" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;)" to="(((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;) * -1)" />
    <mutant id="mutant_2" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="(millis / 1000)" to="((millis / 1000) - 1)" />
    <mutant id="mutant_685" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;)" to="(((&quot;Cannot parse \&quot;&quot; + text) + &quot;\&quot;: &quot;) + 1)" />
    <mutant id="mutant_680" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Illegal instant due to time zone offset transition (&quot; + (iZone)) + ')'" to="((&quot;Illegal instant due to time zone offset transition (&quot; + (iZone)) + ')') + 1" />
    <mutant id="mutant_681" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Cannot parse \&quot;&quot; + text)" to="((&quot;Cannot parse \&quot;&quot; + text) + 1)" />
    <mutant id="mutant_697" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j - 1)" to="((j - 1) * -1)" />
    <mutant id="mutant_698" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j - 1)" to="((j - 1) - 1)" />
    <mutant id="mutant_699" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j - 1)" to="((j - 1) + 1)" />
    <mutant id="mutant_74" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total)" to="((27 * total) + 1)" />
    <mutant id="mutant_2282" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)" from="(instant + offset)" to="((instant + offset) + 1)" />
    <mutant id="mutant_73" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total) + (getValue(i))" to="((27 * total) + (getValue(i))) - 1" />
    <mutant id="mutant_2283" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)" from="(instant + offset)" to="((instant + offset) - 1)" />
    <mutant id="mutant_76" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total)" to="((27 * total) * -1)" />
    <mutant id="mutant_2280" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)" from="instant + offset" to="(instant + offset) * -1" />
    <mutant id="mutant_75" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total)" to="((27 * total) - 1)" />
    <mutant id="mutant_2281" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="!(((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0))" />
    <mutant id="mutant_78" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total) + (getFieldType(i).hashCode())" to="((27 * total) + (getFieldType(i).hashCode())) - 1" />
    <mutant id="mutant_77" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total) + (getFieldType(i).hashCode())" to="((27 * total) + (getFieldType(i).hashCode())) * -1" />
    <mutant id="mutant_79" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total) + (getFieldType(i).hashCode())" to="((27 * total) + (getFieldType(i).hashCode())) + 1" />
    <mutant id="mutant_2279" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)" from="instant + offset" to="(instant + offset) - 1" />
    <mutant id="mutant_2277" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) + 1)" />
    <mutant id="mutant_2278" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)" from="instant + offset" to="(instant + offset) + 1" />
    <mutant id="mutant_81" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" from="(startInstant == null) &amp;&amp; (endInstant == null)" to="!((startInstant == null) &amp;&amp; (endInstant == null))" />
    <mutant id="mutant_2275" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) - 1)" />
    <mutant id="mutant_80" viable="true" in="org.joda.time.base.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="!((start == null) &amp;&amp; (end == null))" />
    <mutant id="mutant_2276" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) * -1)" />
    <mutant id="mutant_83" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal))" to="(!((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)))" />
    <mutant id="mutant_2273" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) * -1)" />
    <mutant id="mutant_82" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="(start == null) || (end == null)" to="!((start == null) || (end == null))" />
    <mutant id="mutant_2274" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) + 1)" />
    <mutant id="mutant_693" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="savedFieldsCount * 2" to="(savedFieldsCount * 2) + 1" />
    <mutant id="mutant_694" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="savedFieldsCount + 1" to="(savedFieldsCount + 1) + 1" />
    <mutant id="mutant_695" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="savedFieldsCount + 1" to="(savedFieldsCount + 1) - 1" />
    <mutant id="mutant_696" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="savedFieldsCount + 1" to="(savedFieldsCount + 1) * -1" />
    <mutant id="mutant_690" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="(savedFieldsCount == (savedFields.length)) || (iSavedFieldsShared)" to="!((savedFieldsCount == (savedFields.length)) || (iSavedFieldsShared))" />
    <mutant id="mutant_691" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="savedFieldsCount * 2" to="(savedFieldsCount * 2) - 1" />
    <mutant id="mutant_692" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="savedFieldsCount * 2" to="(savedFieldsCount * 2) * -1" />
    <mutant id="mutant_2271" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))) &amp;&amp; (iRangeDurationField.equals(other.iRangeDurationField))" to="!((((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))) &amp;&amp; (iRangeDurationField.equals(other.iRangeDurationField)))" />
    <mutant id="mutant_2272" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) - 1)" />
    <mutant id="mutant_2270" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField)))" to="(!(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))))" />
    <mutant id="mutant_2268" viable="false" in="org.joda.time.chrono.StrictChronology.toString()" from="(&quot;StrictChronology[&quot; + (getBase().toString())) + ']'" to="((&quot;StrictChronology[&quot; + (getBase().toString())) + ']') - 1" />
    <mutant id="mutant_2269" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone)))" to="(!((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))))" />
    <mutant id="mutant_3599" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear))" to="(((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) * -1)" />
    <mutant id="mutant_2266" viable="false" in="org.joda.time.chrono.StrictChronology.toString()" from="(&quot;StrictChronology[&quot; + (getBase().toString())) + ']'" to="((&quot;StrictChronology[&quot; + (getBase().toString())) + ']') * -1" />
    <mutant id="mutant_3598" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear))" to="(((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) - 1)" />
    <mutant id="mutant_2267" viable="true" in="org.joda.time.chrono.StrictChronology.toString()" from="(&quot;StrictChronology[&quot; + (getBase().toString())) + ']'" to="((&quot;StrictChronology[&quot; + (getBase().toString())) + ']') + 1" />
    <mutant id="mutant_3597" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;)" to="((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + 1)" />
    <mutant id="mutant_2264" viable="false" in="org.joda.time.chrono.StrictChronology.toString()" from="(&quot;StrictChronology[&quot; + (getBase().toString()))" to="((&quot;StrictChronology[&quot; + (getBase().toString())) * -1)" />
    <mutant id="mutant_3596" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;)" to="((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) - 1)" />
    <mutant id="mutant_2265" viable="false" in="org.joda.time.chrono.StrictChronology.toString()" from="(&quot;StrictChronology[&quot; + (getBase().toString()))" to="((&quot;StrictChronology[&quot; + (getBase().toString())) - 1)" />
    <mutant id="mutant_3595" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;)" to="((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) * -1)" />
    <mutant id="mutant_2262" viable="true" in="org.joda.time.chrono.StrictChronology.hashCode()" from="352831696 + ((getBase().hashCode()) * 7)" to="(352831696 + ((getBase().hashCode()) * 7)) * -1" />
    <mutant id="mutant_3594" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;)" to="(((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2263" viable="true" in="org.joda.time.chrono.StrictChronology.toString()" from="(&quot;StrictChronology[&quot; + (getBase().toString()))" to="((&quot;StrictChronology[&quot; + (getBase().toString())) + 1)" />
    <mutant id="mutant_3593" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;)" to="(((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_96" viable="true" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;) + 1)" />
    <mutant id="mutant_2260" viable="true" in="org.joda.time.chrono.StrictChronology.hashCode()" from="352831696 + ((getBase().hashCode()) * 7)" to="(352831696 + ((getBase().hashCode()) * 7)) + 1" />
    <mutant id="mutant_3592" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;)" to="(((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_95" viable="false" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;) - 1)" />
    <mutant id="mutant_2261" viable="true" in="org.joda.time.chrono.StrictChronology.hashCode()" from="352831696 + ((getBase().hashCode()) * 7)" to="(352831696 + ((getBase().hashCode()) * 7)) - 1" />
    <mutant id="mutant_3591" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat))" to="((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) * -1)" />
    <mutant id="mutant_98" viable="false" in="org.joda.time.base.BasePeriod.checkAndUpdate(org.joda.time.DurationFieldType,int[],int)" from="(&quot;Period does not support field \'&quot; + (type.getName()))" to="((&quot;Period does not support field \'&quot; + (type.getName())) - 1)" />
    <mutant id="mutant_3590" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat))" to="((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) - 1)" />
    <mutant id="mutant_97" viable="false" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;) * -1)" />
    <mutant id="mutant_99" viable="false" in="org.joda.time.base.BasePeriod.checkAndUpdate(org.joda.time.DurationFieldType,int[],int)" from="(&quot;Period does not support field \'&quot; + (type.getName()))" to="((&quot;Period does not support field \'&quot; + (type.getName())) * -1)" />
    <mutant id="mutant_2257" viable="true" in="org.joda.time.chrono.StrictChronology.hashCode()" from="((getBase().hashCode()) * 7)" to="(((getBase().hashCode()) * 7) - 1)" />
    <mutant id="mutant_3589" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat))" to="((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + 1)" />
    <mutant id="mutant_2258" viable="true" in="org.joda.time.chrono.StrictChronology.hashCode()" from="((getBase().hashCode()) * 7)" to="(((getBase().hashCode()) * 7) * -1)" />
    <mutant id="mutant_3588" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;)" to="(((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) * -1)" />
    <mutant id="mutant_2255" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iLowerLimit) != null) &amp;&amp; (instant &lt; (limit.getMillis()))" to="!(((limit = iLowerLimit) != null) &amp;&amp; (instant &lt; (limit.getMillis())))" />
    <mutant id="mutant_3587" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;)" to="(((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + 1)" />
    <mutant id="mutant_2256" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iUpperLimit) != null) &amp;&amp; (instant &gt;= (limit.getMillis()))" to="!(((limit = iUpperLimit) != null) &amp;&amp; (instant &gt;= (limit.getMillis())))" />
    <mutant id="mutant_3586" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;)" to="(((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) - 1)" />
    <mutant id="mutant_2253" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="!((field == null) || (!(field.isSupported())))" />
    <mutant id="mutant_3585" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;)" to="((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2254" viable="true" in="org.joda.time.chrono.LimitChronology.getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)" from="(lowerLimit != null) &amp;&amp; (upperLimit != null)" to="!((lowerLimit != null) &amp;&amp; (upperLimit != null))" />
    <mutant id="mutant_3584" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;)" to="((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_2251" viable="true" in="org.joda.time.chrono.LimitChronology.withZone(org.joda.time.DateTimeZone)" from="(zone == (DateTimeZone.UTC)) &amp;&amp; ((iWithUTC) != null)" to="!((zone == (DateTimeZone.UTC)) &amp;&amp; ((iWithUTC) != null))" />
    <mutant id="mutant_3583" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;)" to="((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_2252" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="!((field == null) || (!(field.isSupported())))" />
    <mutant id="mutant_3582" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules))" to="(((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) - 1)" />
    <mutant id="mutant_2259" viable="true" in="org.joda.time.chrono.StrictChronology.hashCode()" from="((getBase().hashCode()) * 7)" to="(((getBase().hashCode()) * 7) + 1)" />
    <mutant id="mutant_4032" viable="true" in="org.joda.time.Duration.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="!((durationToAdd == 0) || (scalar == 0))" />
    <mutant id="mutant_4031" viable="true" in="org.joda.time.Duration.getStandardSeconds()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_4030" viable="true" in="org.joda.time.Duration.getStandardSeconds()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_4029" viable="true" in="org.joda.time.Duration.getStandardSeconds()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_4028" viable="true" in="org.joda.time.Duration.getStandardMinutes()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_MINUTE)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_4027" viable="true" in="org.joda.time.Duration.getStandardMinutes()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_MINUTE)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_4026" viable="true" in="org.joda.time.Duration.getStandardMinutes()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_MINUTE)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_4025" viable="true" in="org.joda.time.Duration.getStandardHours()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_HOUR)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_HOUR)) * -1" />
    <mutant id="mutant_4024" viable="true" in="org.joda.time.Duration.getStandardHours()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_HOUR)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_HOUR)) - 1" />
    <mutant id="mutant_4023" viable="true" in="org.joda.time.Duration.getStandardHours()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_HOUR)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_HOUR)) + 1" />
    <mutant id="mutant_4022" viable="true" in="org.joda.time.Duration.getStandardDays()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_DAY)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_4021" viable="true" in="org.joda.time.Duration.getStandardDays()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_DAY)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_4020" viable="true" in="org.joda.time.Duration.getStandardDays()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_DAY)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_4018" viable="true" in="org.joda.time.Days.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.DAYS_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.DAYS_PER_WEEK)) - 1)" />
    <mutant id="mutant_4017" viable="true" in="org.joda.time.Days.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.DAYS_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.DAYS_PER_WEEK)) * -1)" />
    <mutant id="mutant_4016" viable="true" in="org.joda.time.Days.toStandardDuration()" from="(days * (DateTimeConstants.MILLIS_PER_DAY))" to="((days * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_4015" viable="true" in="org.joda.time.Days.toStandardDuration()" from="(days * (DateTimeConstants.MILLIS_PER_DAY))" to="((days * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_4014" viable="true" in="org.joda.time.Days.toStandardDuration()" from="(days * (DateTimeConstants.MILLIS_PER_DAY))" to="((days * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_4013" viable="true" in="org.joda.time.Days.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) + 1)" />
    <mutant id="mutant_4012" viable="true" in="org.joda.time.Days.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) * -1)" />
    <mutant id="mutant_4011" viable="true" in="org.joda.time.Days.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) - 1)" />
    <mutant id="mutant_4019" viable="true" in="org.joda.time.Days.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.DAYS_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.DAYS_PER_WEEK)) + 1)" />
    <mutant id="mutant_4010" viable="true" in="org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="!((start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate))" />
    <mutant id="mutant_4007" viable="false" in="org.joda.time.Days.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;D&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;D&quot;) * -1" />
    <mutant id="mutant_4006" viable="false" in="org.joda.time.Days.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) * -1)" />
    <mutant id="mutant_4005" viable="false" in="org.joda.time.Days.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) - 1)" />
    <mutant id="mutant_4004" viable="true" in="org.joda.time.Days.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) + 1)" />
    <mutant id="mutant_4003" viable="true" in="org.joda.time.DateTimeZone.validateProvider(org.joda.time.tz.Provider)" from="(ids == null) || ((ids.size()) == 0)" to="!((ids == null) || ((ids.size()) == 0))" />
    <mutant id="mutant_4002" viable="true" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;)" to="(((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;) + 1)" />
    <mutant id="mutant_4001" viable="false" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;)" to="(((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;) * -1)" />
    <mutant id="mutant_4000" viable="false" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;)" to="(((&quot;The datetime zone id \'&quot; + id) + &quot;\' is not recognised&quot;) - 1)" />
    <mutant id="mutant_4009" viable="false" in="org.joda.time.Days.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;D&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;D&quot;) - 1" />
    <mutant id="mutant_4008" viable="true" in="org.joda.time.Days.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;D&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;D&quot;) + 1" />
    <mutant id="mutant_2299" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long,int)" from="localInstant - offset" to="(localInstant - offset) + 1" />
    <mutant id="mutant_2297" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long,int)" from="localInstant - offset" to="(localInstant - offset) * -1" />
    <mutant id="mutant_2298" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long,int)" from="localInstant - offset" to="(localInstant - offset) - 1" />
    <mutant id="mutant_2295" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long,int)" from="(instant + offset)" to="((instant + offset) - 1)" />
    <mutant id="mutant_2296" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long,int)" from="(instant + offset)" to="((instant + offset) * -1)" />
    <mutant id="mutant_4076" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DateTimeFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(durType)) || ((durType.getField(getChronology()).getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="!((LocalDate.DATE_DURATION_TYPES.contains(durType)) || ((durType.getField(getChronology()).getUnitMillis()) &gt;= (getChronology().days().getUnitMillis())))" />
    <mutant id="mutant_4075" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((interval.getEndMillis()) == (getStartMillis())) || ((getEndMillis()) == (interval.getStartMillis()))" to="!(((interval.getEndMillis()) == (getStartMillis())) || ((getEndMillis()) == (interval.getStartMillis())))" />
    <mutant id="mutant_4074" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((getStartMillis()) == now) || ((getEndMillis()) == now)" to="!(((getStartMillis()) == now) || ((getEndMillis()) == now))" />
    <mutant id="mutant_4073" viable="true" in="org.joda.time.Instant.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="!((durationToAdd == null) || (scalar == 0))" />
    <mutant id="mutant_4072" viable="true" in="org.joda.time.Instant.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="!((durationToAdd == 0) || (scalar == 0))" />
    <mutant id="mutant_4071" viable="false" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime) + zone" to="((&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime) + zone) - 1" />
    <mutant id="mutant_4070" viable="false" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime) + zone" to="((&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime) + zone) * -1" />
    <mutant id="mutant_4069" viable="true" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime) + zone" to="((&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime) + zone) + 1" />
    <mutant id="mutant_4068" viable="false" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime)" to="((&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime) * -1)" />
    <mutant id="mutant_4067" viable="false" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime)" to="((&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime) - 1)" />
    <mutant id="mutant_4066" viable="true" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime)" to="((&quot;Illegal instant due to time zone offset transition (daylight savings time \'gap\'): &quot; + localDateTime) + 1)" />
    <mutant id="mutant_4065" viable="false" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot; (&quot; + zoneId) + &quot;)&quot;" to="((&quot; (&quot; + zoneId) + &quot;)&quot;) * -1" />
    <mutant id="mutant_4064" viable="true" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot; (&quot; + zoneId) + &quot;)&quot;" to="((&quot; (&quot; + zoneId) + &quot;)&quot;) + 1" />
    <mutant id="mutant_4063" viable="false" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot; (&quot; + zoneId) + &quot;)&quot;" to="((&quot; (&quot; + zoneId) + &quot;)&quot;) - 1" />
    <mutant id="mutant_4062" viable="false" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot; (&quot; + zoneId)" to="((&quot; (&quot; + zoneId) - 1)" />
    <mutant id="mutant_4061" viable="false" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot; (&quot; + zoneId)" to="((&quot; (&quot; + zoneId) * -1)" />
    <mutant id="mutant_4060" viable="true" in="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)" from="(&quot; (&quot; + zoneId)" to="((&quot; (&quot; + zoneId) + 1)" />
    <mutant id="mutant_4059" viable="true" in="org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable)" from="((ex.getCause()) != null) &amp;&amp; ((ex.getCause()) != ex)" to="!(((ex.getCause()) != null) &amp;&amp; ((ex.getCause()) != ex))" />
    <mutant id="mutant_4058" viable="true" in="org.joda.time.IllegalFieldValueException.prependMessage(java.lang.String)" from="(message + &quot;: &quot;) + (iMessage)" to="((message + &quot;: &quot;) + (iMessage)) + 1" />
    <mutant id="mutant_4057" viable="false" in="org.joda.time.IllegalFieldValueException.prependMessage(java.lang.String)" from="(message + &quot;: &quot;) + (iMessage)" to="((message + &quot;: &quot;) + (iMessage)) * -1" />
    <mutant id="mutant_4056" viable="false" in="org.joda.time.IllegalFieldValueException.prependMessage(java.lang.String)" from="(message + &quot;: &quot;) + (iMessage)" to="((message + &quot;: &quot;) + (iMessage)) - 1" />
    <mutant id="mutant_4055" viable="false" in="org.joda.time.IllegalFieldValueException.prependMessage(java.lang.String)" from="(message + &quot;: &quot;)" to="((message + &quot;: &quot;) * -1)" />
    <mutant id="mutant_27" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result) + ((int)((start ^ (start &gt;&gt;&gt; 32))))" to="((31 * result) + ((int)((start ^ (start &gt;&gt;&gt; 32))))) * -1" />
    <mutant id="mutant_26" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result)" to="((31 * result) * -1)" />
    <mutant id="mutant_29" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result) + ((int)((start ^ (start &gt;&gt;&gt; 32))))" to="((31 * result) + ((int)((start ^ (start &gt;&gt;&gt; 32))))) - 1" />
    <mutant id="mutant_28" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result) + ((int)((start ^ (start &gt;&gt;&gt; 32))))" to="((31 * result) + ((int)((start ^ (start &gt;&gt;&gt; 32))))) + 1" />
    <mutant id="mutant_4054" viable="false" in="org.joda.time.IllegalFieldValueException.prependMessage(java.lang.String)" from="(message + &quot;: &quot;)" to="((message + &quot;: &quot;) - 1)" />
    <mutant id="mutant_4053" viable="true" in="org.joda.time.IllegalFieldValueException.prependMessage(java.lang.String)" from="(message + &quot;: &quot;)" to="((message + &quot;: &quot;) + 1)" />
    <mutant id="mutant_21" viable="true" in="org.joda.time.base.AbstractInterval.isEqual(org.joda.time.ReadableInterval)" from="((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))" to="!(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis())))" />
    <mutant id="mutant_4052" viable="true" in="org.joda.time.Hours.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.HOURS_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.HOURS_PER_WEEK)) + 1)" />
    <mutant id="mutant_20" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="!((((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology())))" />
    <mutant id="mutant_4051" viable="true" in="org.joda.time.Hours.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.HOURS_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.HOURS_PER_WEEK)) - 1)" />
    <mutant id="mutant_23" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; otherEnd) &amp;&amp; (otherStart &lt; thisEnd)" to="!((thisStart &lt; otherEnd) &amp;&amp; (otherStart &lt; thisEnd))" />
    <mutant id="mutant_4050" viable="true" in="org.joda.time.Hours.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.HOURS_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.HOURS_PER_WEEK)) * -1)" />
    <mutant id="mutant_22" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; now) &amp;&amp; (now &lt; thisEnd)" to="!((thisStart &lt; now) &amp;&amp; (now &lt; thisEnd))" />
    <mutant id="mutant_25" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result)" to="((31 * result) + 1)" />
    <mutant id="mutant_24" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result)" to="((31 * result) - 1)" />
    <mutant id="mutant_4049" viable="true" in="org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="!((start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime))" />
    <mutant id="mutant_4048" viable="true" in="org.joda.time.Hours.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) + 1)" />
    <mutant id="mutant_4047" viable="true" in="org.joda.time.Hours.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) * -1)" />
    <mutant id="mutant_4046" viable="true" in="org.joda.time.Hours.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) - 1)" />
    <mutant id="mutant_4045" viable="true" in="org.joda.time.Hours.toStandardDuration()" from="(hours * (DateTimeConstants.MILLIS_PER_HOUR))" to="((hours * (DateTimeConstants.MILLIS_PER_HOUR)) + 1)" />
    <mutant id="mutant_4044" viable="true" in="org.joda.time.Hours.toStandardDuration()" from="(hours * (DateTimeConstants.MILLIS_PER_HOUR))" to="((hours * (DateTimeConstants.MILLIS_PER_HOUR)) - 1)" />
    <mutant id="mutant_16" viable="true" in="org.joda.time.base.AbstractInterval.contains(long)" from="(millisInstant &gt;= thisStart) &amp;&amp; (millisInstant &lt; thisEnd)" to="!((millisInstant &gt;= thisStart) &amp;&amp; (millisInstant &lt; thisEnd))" />
    <mutant id="mutant_15" viable="true" in="org.joda.time.base.AbstractInstant.hashCode()" from="((int)(((getMillis()) ^ ((getMillis()) &gt;&gt;&gt; 32)))) + (getChronology().hashCode())" to="(((int)(((getMillis()) ^ ((getMillis()) &gt;&gt;&gt; 32)))) + (getChronology().hashCode())) + 1" />
    <mutant id="mutant_18" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)) &amp;&amp; (otherEnd &lt;= thisEnd)" to="!(((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)) &amp;&amp; (otherEnd &lt;= thisEnd))" />
    <mutant id="mutant_17" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd))" to="(!((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)))" />
    <mutant id="mutant_19" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis())))" to="(!(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))))" />
    <mutant id="mutant_4043" viable="true" in="org.joda.time.Hours.toStandardDuration()" from="(hours * (DateTimeConstants.MILLIS_PER_HOUR))" to="((hours * (DateTimeConstants.MILLIS_PER_HOUR)) * -1)" />
    <mutant id="mutant_4042" viable="true" in="org.joda.time.Hours.toStandardDays()" from="((getValue()) / (DateTimeConstants.HOURS_PER_DAY))" to="(((getValue()) / (DateTimeConstants.HOURS_PER_DAY)) * -1)" />
    <mutant id="mutant_10" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="((buf.length()) - 3)" to="(((buf.length()) - 3) - 1)" />
    <mutant id="mutant_4041" viable="true" in="org.joda.time.Hours.toStandardDays()" from="((getValue()) / (DateTimeConstants.HOURS_PER_DAY))" to="(((getValue()) / (DateTimeConstants.HOURS_PER_DAY)) - 1)" />
    <mutant id="mutant_4040" viable="true" in="org.joda.time.Hours.toStandardDays()" from="((getValue()) / (DateTimeConstants.HOURS_PER_DAY))" to="(((getValue()) / (DateTimeConstants.HOURS_PER_DAY)) + 1)" />
    <mutant id="mutant_12" viable="true" in="org.joda.time.base.AbstractInstant.equals(java.lang.Object)" from="((getMillis()) == (otherInstant.getMillis())) &amp;&amp; (FieldUtils.equals(getChronology(), otherInstant.getChronology()))" to="!(((getMillis()) == (otherInstant.getMillis())) &amp;&amp; (FieldUtils.equals(getChronology(), otherInstant.getChronology())))" />
    <mutant id="mutant_11" viable="true" in="org.joda.time.base.AbstractDuration.toString()" from="((buf.length()) - 3)" to="(((buf.length()) - 3) * -1)" />
    <mutant id="mutant_14" viable="true" in="org.joda.time.base.AbstractInstant.hashCode()" from="((int)(((getMillis()) ^ ((getMillis()) &gt;&gt;&gt; 32)))) + (getChronology().hashCode())" to="(((int)(((getMillis()) ^ ((getMillis()) &gt;&gt;&gt; 32)))) + (getChronology().hashCode())) - 1" />
    <mutant id="mutant_13" viable="true" in="org.joda.time.base.AbstractInstant.hashCode()" from="((int)(((getMillis()) ^ ((getMillis()) &gt;&gt;&gt; 32)))) + (getChronology().hashCode())" to="(((int)(((getMillis()) ^ ((getMillis()) &gt;&gt;&gt; 32)))) + (getChronology().hashCode())) * -1" />
    <mutant id="mutant_4039" viable="false" in="org.joda.time.Hours.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;H&quot;" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;H&quot;) - 1" />
    <mutant id="mutant_4038" viable="true" in="org.joda.time.Hours.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;H&quot;" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;H&quot;) + 1" />
    <mutant id="mutant_4037" viable="false" in="org.joda.time.Hours.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;H&quot;" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;H&quot;) * -1" />
    <mutant id="mutant_4036" viable="false" in="org.joda.time.Hours.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue())))" to="((&quot;PT&quot; + (String.valueOf(getValue()))) * -1)" />
    <mutant id="mutant_4035" viable="true" in="org.joda.time.Hours.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue())))" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + 1)" />
    <mutant id="mutant_4034" viable="false" in="org.joda.time.Hours.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue())))" to="((&quot;PT&quot; + (String.valueOf(getValue()))) - 1)" />
    <mutant id="mutant_4033" viable="true" in="org.joda.time.Duration.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="!((durationToAdd == null) || (scalar == 0))" />
    <mutant id="mutant_49" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total)" to="((23 * total) * -1)" />
    <mutant id="mutant_48" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total) + (getValue(i))" to="((23 * total) + (getValue(i))) * -1" />
    <mutant id="mutant_1838" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result)" to="((prime * result) + 1)" />
    <mutant id="mutant_1839" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result)" to="((prime * result) * -1)" />
    <mutant id="mutant_41" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result) + (getChronology().hashCode())" to="((31 * result) + (getChronology().hashCode())) - 1" />
    <mutant id="mutant_40" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result) + (getChronology().hashCode())" to="((31 * result) + (getChronology().hashCode())) + 1" />
    <mutant id="mutant_43" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total)" to="((23 * total) * -1)" />
    <mutant id="mutant_42" viable="true" in="org.joda.time.base.AbstractPartial.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="!(((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i))))" />
    <mutant id="mutant_45" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total)" to="((23 * total) - 1)" />
    <mutant id="mutant_44" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total)" to="((23 * total) + 1)" />
    <mutant id="mutant_47" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total) + (getValue(i))" to="((23 * total) + (getValue(i))) - 1" />
    <mutant id="mutant_46" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total) + (getValue(i))" to="((23 * total) + (getValue(i))) + 1" />
    <mutant id="mutant_50" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total)" to="((23 * total) + 1)" />
    <mutant id="mutant_1836" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_1837" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result)" to="((prime * result) - 1)" />
    <mutant id="mutant_1834" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_1835" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_1832" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_1833" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_1830" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) + 1)" />
    <mutant id="mutant_1831" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_38" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result)" to="((31 * result) * -1)" />
    <mutant id="mutant_37" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result)" to="((31 * result) + 1)" />
    <mutant id="mutant_39" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result) + (getChronology().hashCode())" to="((31 * result) + (getChronology().hashCode())) * -1" />
    <mutant id="mutant_1829" viable="false" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) - 1)" />
    <mutant id="mutant_1827" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_1828" viable="false" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) * -1)" />
    <mutant id="mutant_30" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result)" to="((31 * result) - 1)" />
    <mutant id="mutant_32" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result)" to="((31 * result) * -1)" />
    <mutant id="mutant_31" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result)" to="((31 * result) + 1)" />
    <mutant id="mutant_34" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result) + ((int)((end ^ (end &gt;&gt;&gt; 32))))" to="((31 * result) + ((int)((end ^ (end &gt;&gt;&gt; 32))))) * -1" />
    <mutant id="mutant_33" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result) + ((int)((end ^ (end &gt;&gt;&gt; 32))))" to="((31 * result) + ((int)((end ^ (end &gt;&gt;&gt; 32))))) + 1" />
    <mutant id="mutant_36" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result)" to="((31 * result) - 1)" />
    <mutant id="mutant_35" viable="true" in="org.joda.time.base.AbstractInterval.hashCode()" from="(31 * result) + ((int)((end ^ (end &gt;&gt;&gt; 32))))" to="((31 * result) + ((int)((end ^ (end &gt;&gt;&gt; 32))))) - 1" />
    <mutant id="mutant_4099" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) + 1000)" to="(((date.getTime()) + 1000) * -1)" />
    <mutant id="mutant_1825" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_1826" viable="true" in="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_1823" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2" to="(((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2) * -1" />
    <mutant id="mutant_1824" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2" to="(((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2) - 1" />
    <mutant id="mutant_1821" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY)))" to="(((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) - 1)" />
    <mutant id="mutant_1822" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2" to="(((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2) + 1" />
    <mutant id="mutant_1820" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY)))" to="(((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) * -1)" />
    <mutant id="mutant_4090" viable="true" in="org.joda.time.LocalDate.toDate()" from="((getMonthOfYear()) - 1)" to="(((getMonthOfYear()) - 1) + 1)" />
    <mutant id="mutant_1818" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="(112L * (DateTimeConstants.MILLIS_PER_DAY))" to="((112L * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_1819" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY)))" to="(((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) + 1)" />
    <mutant id="mutant_1816" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="(112L * (DateTimeConstants.MILLIS_PER_DAY))" to="((112L * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_1817" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="(112L * (DateTimeConstants.MILLIS_PER_DAY))" to="((112L * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_63" viable="true" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DurationFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) + 1)" />
    <mutant id="mutant_4098" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) - 1000)" to="(((date.getTime()) - 1000) * -1)" />
    <mutant id="mutant_62" viable="false" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DurationFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) - 1)" />
    <mutant id="mutant_4097" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) - 1000)" to="(((date.getTime()) - 1000) + 1)" />
    <mutant id="mutant_65" viable="true" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DurationFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4096" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) - 1000)" to="(((date.getTime()) - 1000) - 1)" />
    <mutant id="mutant_64" viable="false" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DurationFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_4095" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) + 3600000)" to="(((date.getTime()) + 3600000) * -1)" />
    <mutant id="mutant_67" viable="true" in="org.joda.time.base.AbstractPeriod.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="!(((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i))))" />
    <mutant id="mutant_4094" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) + 3600000)" to="(((date.getTime()) + 3600000) - 1)" />
    <mutant id="mutant_66" viable="false" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DurationFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_4093" viable="true" in="org.joda.time.LocalDate.toDate()" from="((date.getTime()) + 3600000)" to="(((date.getTime()) + 3600000) + 1)" />
    <mutant id="mutant_69" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total)" to="((27 * total) - 1)" />
    <mutant id="mutant_4092" viable="true" in="org.joda.time.LocalDate.toDate()" from="((getMonthOfYear()) - 1)" to="(((getMonthOfYear()) - 1) - 1)" />
    <mutant id="mutant_68" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total)" to="((27 * total) + 1)" />
    <mutant id="mutant_4091" viable="true" in="org.joda.time.LocalDate.toDate()" from="((getMonthOfYear()) - 1)" to="(((getMonthOfYear()) - 1) * -1)" />
    <mutant id="mutant_70" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total)" to="((27 * total) * -1)" />
    <mutant id="mutant_72" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total) + (getValue(i))" to="((27 * total) + (getValue(i))) + 1" />
    <mutant id="mutant_4089" viable="true" in="org.joda.time.LocalDate.toDate()" from="((getYear()) - 1900)" to="(((getYear()) - 1900) + 1)" />
    <mutant id="mutant_71" viable="true" in="org.joda.time.base.AbstractPeriod.hashCode()" from="(27 * total) + (getValue(i))" to="((27 * total) + (getValue(i))) * -1" />
    <mutant id="mutant_4088" viable="true" in="org.joda.time.LocalDate.toDate()" from="((getYear()) - 1900)" to="(((getYear()) - 1900) - 1)" />
    <mutant id="mutant_1814" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="(1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR))" to="((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + 1)" />
    <mutant id="mutant_1815" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="(1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR))" to="((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) - 1)" />
    <mutant id="mutant_1812" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_1813" viable="true" in="org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo()" from="(1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR))" to="((1962L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) * -1)" />
    <mutant id="mutant_1810" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_1811" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_59" viable="false" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_1809" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_1807" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_1808" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_1805" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="(365L - 112)" to="((365L - 112) * -1)" />
    <mutant id="mutant_1806" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="(365L - 112)" to="((365L - 112) - 1)" />
    <mutant id="mutant_52" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total) + (getFieldType(i).hashCode())" to="((23 * total) + (getFieldType(i).hashCode())) * -1" />
    <mutant id="mutant_4087" viable="true" in="org.joda.time.LocalDate.toDate()" from="((getYear()) - 1900)" to="(((getYear()) - 1900) * -1)" />
    <mutant id="mutant_51" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total)" to="((23 * total) - 1)" />
    <mutant id="mutant_4086" viable="true" in="org.joda.time.LocalDate.getValue(int)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_54" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total) + (getFieldType(i).hashCode())" to="((23 * total) + (getFieldType(i).hashCode())) + 1" />
    <mutant id="mutant_4085" viable="false" in="org.joda.time.LocalDate.getValue(int)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_53" viable="true" in="org.joda.time.base.AbstractPartial.hashCode()" from="(23 * total) + (getFieldType(i).hashCode())" to="((23 * total) + (getFieldType(i).hashCode())) - 1" />
    <mutant id="mutant_4084" viable="false" in="org.joda.time.LocalDate.getValue(int)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_56" viable="true" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) + 1)" />
    <mutant id="mutant_4083" viable="true" in="org.joda.time.LocalDate.get(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_55" viable="false" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) * -1)" />
    <mutant id="mutant_4082" viable="false" in="org.joda.time.LocalDate.get(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) - 1)" />
    <mutant id="mutant_58" viable="false" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_4081" viable="false" in="org.joda.time.LocalDate.get(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + fieldType) + &quot;\' is not supported&quot;) * -1)" />
    <mutant id="mutant_57" viable="false" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) - 1)" />
    <mutant id="mutant_4080" viable="true" in="org.joda.time.LocalDate.get(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) + 1)" />
    <mutant id="mutant_4079" viable="false" in="org.joda.time.LocalDate.get(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) * -1)" />
    <mutant id="mutant_61" viable="false" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DurationFieldType)" from="(&quot;Field \'&quot; + type)" to="((&quot;Field \'&quot; + type) * -1)" />
    <mutant id="mutant_4078" viable="false" in="org.joda.time.LocalDate.get(org.joda.time.DateTimeFieldType)" from="(&quot;Field \'&quot; + fieldType)" to="((&quot;Field \'&quot; + fieldType) - 1)" />
    <mutant id="mutant_60" viable="true" in="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DateTimeFieldType)" from="((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;)" to="(((&quot;Field \'&quot; + type) + &quot;\' is not supported&quot;) + 1)" />
    <mutant id="mutant_4077" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DurationFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="!((LocalDate.DATE_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &gt;= (getChronology().days().getUnitMillis())))" />
    <mutant id="mutant_1803" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_1804" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="(365L - 112)" to="((365L - 112) + 1)" />
    <mutant id="mutant_1801" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_1802" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_1800" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears)" to="(((relativeYear * 365L) + leapYears) + 1)" />
    <mutant id="mutant_1872" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,java.lang.String,java.util.Locale)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) - 1)" />
    <mutant id="mutant_1873" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,int)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) - 1)" />
    <mutant id="mutant_1870" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,java.lang.String,java.util.Locale)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) + 1)" />
    <mutant id="mutant_1871" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,java.lang.String,java.util.Locale)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) * -1)" />
    <mutant id="mutant_1878" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,int)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) - 1)" />
    <mutant id="mutant_1879" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) - 1)" />
    <mutant id="mutant_1876" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,int)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) + 1)" />
    <mutant id="mutant_1877" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,int)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) * -1)" />
    <mutant id="mutant_1874" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,int)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) + 1)" />
    <mutant id="mutant_1875" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,int)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) * -1)" />
    <mutant id="mutant_1861" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,int)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) - 1)" />
    <mutant id="mutant_1862" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,int)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) + 1)" />
    <mutant id="mutant_1860" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.roundFloor(long)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) * -1)" />
    <mutant id="mutant_1869" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,java.lang.String,java.util.Locale)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) * -1)" />
    <mutant id="mutant_1867" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,java.lang.String,java.util.Locale)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) - 1)" />
    <mutant id="mutant_1868" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,java.lang.String,java.util.Locale)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) + 1)" />
    <mutant id="mutant_1865" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,int)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) * -1)" />
    <mutant id="mutant_1866" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,int)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) - 1)" />
    <mutant id="mutant_1863" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,int)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) * -1)" />
    <mutant id="mutant_1864" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.set(long,int)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) + 1)" />
    <mutant id="mutant_1850" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result)" to="((prime * result) + 1)" />
    <mutant id="mutant_1851" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result)" to="((prime * result) * -1)" />
    <mutant id="mutant_1858" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.roundFloor(long)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) - 1)" />
    <mutant id="mutant_1859" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.roundFloor(long)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) + 1)" />
    <mutant id="mutant_1856" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.roundCeiling(long)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) * -1)" />
    <mutant id="mutant_1857" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.roundCeiling(long)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) - 1)" />
    <mutant id="mutant_1854" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result) + ((zone) == null ? 0 : zone.hashCode())" to="((prime * result) + ((zone) == null ? 0 : zone.hashCode())) - 1" />
    <mutant id="mutant_1855" viable="true" in="org.joda.time.chrono.GJChronology$CutoverField.roundCeiling(long)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) + 1)" />
    <mutant id="mutant_1852" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result) + ((zone) == null ? 0 : zone.hashCode())" to="((prime * result) + ((zone) == null ? 0 : zone.hashCode())) + 1" />
    <mutant id="mutant_1853" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result) + ((zone) == null ? 0 : zone.hashCode())" to="((prime * result) + ((zone) == null ? 0 : zone.hashCode())) * -1" />
    <mutant id="mutant_1849" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result)" to="((prime * result) - 1)" />
    <mutant id="mutant_1840" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result) + ((cutoverInstant) == null ? 0 : cutoverInstant.hashCode())" to="((prime * result) + ((cutoverInstant) == null ? 0 : cutoverInstant.hashCode())) + 1" />
    <mutant id="mutant_1847" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result) + (minDaysInFirstWeek)" to="((prime * result) + (minDaysInFirstWeek)) + 1" />
    <mutant id="mutant_1848" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result) + (minDaysInFirstWeek)" to="((prime * result) + (minDaysInFirstWeek)) - 1" />
    <mutant id="mutant_1845" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result)" to="((prime * result) * -1)" />
    <mutant id="mutant_1846" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result) + (minDaysInFirstWeek)" to="((prime * result) + (minDaysInFirstWeek)) * -1" />
    <mutant id="mutant_1843" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result)" to="((prime * result) - 1)" />
    <mutant id="mutant_1844" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result)" to="((prime * result) + 1)" />
    <mutant id="mutant_1841" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result) + ((cutoverInstant) == null ? 0 : cutoverInstant.hashCode())" to="((prime * result) + ((cutoverInstant) == null ? 0 : cutoverInstant.hashCode())) * -1" />
    <mutant id="mutant_1842" viable="true" in="org.joda.time.chrono.GJCacheKey.hashCode()" from="(prime * result) + ((cutoverInstant) == null ? 0 : cutoverInstant.hashCode())" to="((prime * result) + ((cutoverInstant) == null ? 0 : cutoverInstant.hashCode())) - 1" />
    <mutant id="mutant_3611" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(str + &quot;...\n&quot;) + (iNext.toString())" to="((str + &quot;...\n&quot;) + (iNext.toString())) + 1" />
    <mutant id="mutant_3610" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(str + &quot;...\n&quot;) + (iNext.toString())" to="((str + &quot;...\n&quot;) + (iNext.toString())) * -1" />
    <mutant id="mutant_3619" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(&quot;*d* Error in &quot; + (tz.getID()))" to="((&quot;*d* Error in &quot; + (tz.getID())) * -1)" />
    <mutant id="mutant_3618" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(&quot;*d* Error in &quot; + (tz.getID()))" to="((&quot;*d* Error in &quot; + (tz.getID())) + 1)" />
    <mutant id="mutant_3617" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(offset == nextOffset) &amp;&amp; (key.equals(nextKey))" to="!((offset == nextOffset) &amp;&amp; (key.equals(nextKey)))" />
    <mutant id="mutant_3616" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(next == millis) || (next &gt; end)" to="!((next == millis) || (next &gt; end))" />
    <mutant id="mutant_3615" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.addToBuilder(org.joda.time.tz.ZoneInfoCompiler$Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)" from="(&quot;Rules not found: &quot; + (zone.iRules))" to="((&quot;Rules not found: &quot; + (zone.iRules)) - 1)" />
    <mutant id="mutant_3614" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.addToBuilder(org.joda.time.tz.ZoneInfoCompiler$Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)" from="(&quot;Rules not found: &quot; + (zone.iRules))" to="((&quot;Rules not found: &quot; + (zone.iRules)) + 1)" />
    <mutant id="mutant_3613" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.addToBuilder(org.joda.time.tz.ZoneInfoCompiler$Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)" from="(&quot;Rules not found: &quot; + (zone.iRules))" to="((&quot;Rules not found: &quot; + (zone.iRules)) * -1)" />
    <mutant id="mutant_3612" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(str + &quot;...\n&quot;) + (iNext.toString())" to="((str + &quot;...\n&quot;) + (iNext.toString())) - 1" />
    <mutant id="mutant_3609" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(str + &quot;...\n&quot;)" to="((str + &quot;...\n&quot;) * -1)" />
    <mutant id="mutant_3600" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear))" to="(((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + 1)" />
    <mutant id="mutant_3608" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(str + &quot;...\n&quot;)" to="((str + &quot;...\n&quot;) - 1)" />
    <mutant id="mutant_3607" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(str + &quot;...\n&quot;)" to="((str + &quot;...\n&quot;) + 1)" />
    <mutant id="mutant_3606" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;) + (iUntilDateTimeOfYear)" to="((((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;) + (iUntilDateTimeOfYear)) * -1" />
    <mutant id="mutant_3605" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;) + (iUntilDateTimeOfYear)" to="((((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;) + (iUntilDateTimeOfYear)) - 1" />
    <mutant id="mutant_3604" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;) + (iUntilDateTimeOfYear)" to="((((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;) + (iUntilDateTimeOfYear)) + 1" />
    <mutant id="mutant_3603" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;)" to="((((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_3602" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;)" to="((((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_3601" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;)" to="((((((((((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + &quot;\n&quot;) + &quot;Format: &quot;) + (iFormat)) + &quot;\n&quot;) + &quot;UntilYear: &quot;) + (iUntilYear)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_1894" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek()))" to="(((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) - 1)" />
    <mutant id="mutant_1895" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek()))" to="(((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) + 1)" />
    <mutant id="mutant_1892" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="(((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode()))" to="((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) * -1)" />
    <mutant id="mutant_1893" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek()))" to="(((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) * -1)" />
    <mutant id="mutant_1890" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="(((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode()))" to="((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + 1)" />
    <mutant id="mutant_1891" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="(((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode()))" to="((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) - 1)" />
    <mutant id="mutant_1898" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) + (iCutoverInstant.hashCode())" to="(((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) + (iCutoverInstant.hashCode())) * -1" />
    <mutant id="mutant_1899" viable="true" in="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(monthOfYear != 2) || (dayOfMonth != 29)" to="!((monthOfYear != 2) || (dayOfMonth != 29))" />
    <mutant id="mutant_1896" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) + (iCutoverInstant.hashCode())" to="(((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) + (iCutoverInstant.hashCode())) + 1" />
    <mutant id="mutant_1897" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) + (iCutoverInstant.hashCode())" to="(((((&quot;GJ&quot;.hashCode()) * 11) + (getZone().hashCode())) + (getMinimumDaysInFirstWeek())) + (iCutoverInstant.hashCode())) - 1" />
    <mutant id="mutant_1883" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) * -1)" />
    <mutant id="mutant_1884" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) - 1)" />
    <mutant id="mutant_1881" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) * -1)" />
    <mutant id="mutant_1882" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)" from="(instant - (iGapDuration))" to="((instant - (iGapDuration)) + 1)" />
    <mutant id="mutant_1880" viable="true" in="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)" from="(instant + (iGapDuration))" to="((instant + (iGapDuration)) + 1)" />
    <mutant id="mutant_1889" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="((&quot;GJ&quot;.hashCode()) * 11)" to="(((&quot;GJ&quot;.hashCode()) * 11) * -1)" />
    <mutant id="mutant_1887" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="((&quot;GJ&quot;.hashCode()) * 11)" to="(((&quot;GJ&quot;.hashCode()) * 11) - 1)" />
    <mutant id="mutant_1888" viable="true" in="org.joda.time.chrono.GJChronology.hashCode()" from="((&quot;GJ&quot;.hashCode()) * 11)" to="(((&quot;GJ&quot;.hashCode()) * 11) + 1)" />
    <mutant id="mutant_1885" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())))" to="(!(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))))" />
    <mutant id="mutant_1886" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))) &amp;&amp; (getZone().equals(chrono.getZone()))" to="!((((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))) &amp;&amp; (getZone().equals(chrono.getZone())))" />
    <mutant id="mutant_602" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c)" to="((((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c) - 1)" />
    <mutant id="mutant_603" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c) - '0'" to="((((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c) - '0') + 1" />
    <mutant id="mutant_604" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c) - '0'" to="((((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c) - '0') - 1" />
    <mutant id="mutant_605" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c) - '0'" to="((((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c) - '0') * -1" />
    <mutant id="mutant_600" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c)" to="((((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c) + 1)" />
    <mutant id="mutant_601" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c)" to="((((year &lt;&lt; 3) + (year &lt;&lt; 1)) + c) * -1)" />
    <mutant id="mutant_606" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="pivot - 50" to="(pivot - 50) - 1" />
    <mutant id="mutant_607" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="pivot - 50" to="(pivot - 50) + 1" />
    <mutant id="mutant_608" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="pivot - 50" to="(pivot - 50) * -1" />
    <mutant id="mutant_609" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="low % 100" to="(low % 100) + 1" />
    <mutant id="mutant_2323" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) - 1)" />
    <mutant id="mutant_3655" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC())))" to="((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + 1)" />
    <mutant id="mutant_2324" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) * -1)" />
    <mutant id="mutant_3654" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC())))" to="((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) * -1)" />
    <mutant id="mutant_2321" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) * -1)" />
    <mutant id="mutant_3653" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;)" to="(((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) - 1)" />
    <mutant id="mutant_2322" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) - 1)" />
    <mutant id="mutant_3652" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;)" to="(((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) * -1)" />
    <mutant id="mutant_3651" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;)" to="(((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + 1)" />
    <mutant id="mutant_2320" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) + 1)" />
    <mutant id="mutant_3650" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(&quot;*r* Error in &quot; + (tz.getID()))" to="((&quot;*r* Error in &quot; + (tz.getID())) - 1)" />
    <mutant id="mutant_2329" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)" from="((instant ^ diff) &lt; 0) &amp;&amp; ((instant ^ offset) &lt; 0)" to="!(((instant ^ diff) &lt; 0) &amp;&amp; ((instant ^ offset) &lt; 0))" />
    <mutant id="mutant_2327" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)" from="instant - offset" to="(instant - offset) - 1" />
    <mutant id="mutant_3659" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;)" to="(((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;) * -1)" />
    <mutant id="mutant_2328" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)" from="instant - offset" to="(instant - offset) + 1" />
    <mutant id="mutant_3658" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;)" to="(((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;) + 1)" />
    <mutant id="mutant_2325" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) + 1)" />
    <mutant id="mutant_3657" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;)" to="(((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;) - 1)" />
    <mutant id="mutant_2326" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)" from="instant - offset" to="(instant - offset) * -1" />
    <mutant id="mutant_3656" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC())))" to="((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) - 1)" />
    <mutant id="mutant_613" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(low + 1)" to="((low + 1) - 1)" />
    <mutant id="mutant_614" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(low + 1)" to="((low + 1) * -1)" />
    <mutant id="mutant_615" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((low + 1) % 100)" to="(((low + 1) % 100) + 1)" />
    <mutant id="mutant_616" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((low + 1) % 100)" to="(((low + 1) % 100) * -1)" />
    <mutant id="mutant_610" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="low % 100" to="(low % 100) * -1" />
    <mutant id="mutant_611" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="low % 100" to="(low % 100) - 1" />
    <mutant id="mutant_612" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(low + 1)" to="((low + 1) + 1)" />
    <mutant id="mutant_617" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((low + 1) % 100)" to="(((low + 1) % 100) - 1)" />
    <mutant id="mutant_618" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="99 + ((low + 1) % 100)" to="(99 + ((low + 1) % 100)) - 1" />
    <mutant id="mutant_619" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="99 + ((low + 1) % 100)" to="(99 + ((low + 1) % 100)) + 1" />
    <mutant id="mutant_2312" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long)" from="(instant + offset)" to="((instant + offset) + 1)" />
    <mutant id="mutant_3644" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(prev == millis) || (prev &lt; end)" to="!((prev == millis) || (prev &lt; end))" />
    <mutant id="mutant_2313" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long)" from="(instant + offset)" to="((instant + offset) - 1)" />
    <mutant id="mutant_3643" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;) + nextKey)" to="((((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;) + nextKey) + 1)" />
    <mutant id="mutant_2310" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long)" from="instant - offset" to="(instant - offset) - 1" />
    <mutant id="mutant_3642" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;) + nextKey)" to="((((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;) + nextKey) * -1)" />
    <mutant id="mutant_2311" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long)" from="instant - offset" to="(instant - offset) + 1" />
    <mutant id="mutant_3641" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;) + nextKey)" to="((((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;) + nextKey) - 1)" />
    <mutant id="mutant_3640" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;)" to="(((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;) * -1)" />
    <mutant id="mutant_2318" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(java.lang.Object)" from="(iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))" to="!((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone)))" />
    <mutant id="mutant_2319" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise()" from="(iField.isPrecise()) &amp;&amp; (this.iZone.isFixed())" to="!((iField.isPrecise()) &amp;&amp; (this.iZone.isFixed()))" />
    <mutant id="mutant_3649" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(&quot;*r* Error in &quot; + (tz.getID()))" to="((&quot;*r* Error in &quot; + (tz.getID())) + 1)" />
    <mutant id="mutant_2316" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long)" from="instant - offset" to="(instant - offset) - 1" />
    <mutant id="mutant_3648" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(&quot;*r* Error in &quot; + (tz.getID()))" to="((&quot;*r* Error in &quot; + (tz.getID())) * -1)" />
    <mutant id="mutant_2317" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long)" from="instant - offset" to="(instant - offset) + 1" />
    <mutant id="mutant_3647" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(trans - 1)" to="((trans - 1) + 1)" />
    <mutant id="mutant_2314" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long)" from="(instant + offset)" to="((instant + offset) * -1)" />
    <mutant id="mutant_3646" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(trans - 1)" to="((trans - 1) - 1)" />
    <mutant id="mutant_2315" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long)" from="instant - offset" to="(instant - offset) * -1" />
    <mutant id="mutant_3645" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(trans - 1)" to="((trans - 1) * -1)" />
    <mutant id="mutant_624" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(low + (year &lt; t ? 100 : 0)) - t" to="((low + (year &lt; t ? 100 : 0)) - t) + 1" />
    <mutant id="mutant_625" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(low + (year &lt; t ? 100 : 0)) - t" to="((low + (year &lt; t ? 100 : 0)) - t) - 1" />
    <mutant id="mutant_626" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(low + (year &lt; t ? 100 : 0)) - t" to="((low + (year &lt; t ? 100 : 0)) - t) * -1" />
    <mutant id="mutant_627" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + 2" to="(position + 2) * -1" />
    <mutant id="mutant_620" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="99 + ((low + 1) % 100)" to="(99 + ((low + 1) % 100)) * -1" />
    <mutant id="mutant_621" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(low + (year &lt; t ? 100 : 0))" to="((low + (year &lt; t ? 100 : 0)) - 1)" />
    <mutant id="mutant_622" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(low + (year &lt; t ? 100 : 0))" to="((low + (year &lt; t ? 100 : 0)) + 1)" />
    <mutant id="mutant_623" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(low + (year &lt; t ? 100 : 0))" to="((low + (year &lt; t ? 100 : 0)) * -1)" />
    <mutant id="mutant_628" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + 2" to="(position + 2) - 1" />
    <mutant id="mutant_629" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + 2" to="(position + 2) + 1" />
    <mutant id="mutant_2301" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) * -1)" />
    <mutant id="mutant_3633" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;)" to="(((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + 1)" />
    <mutant id="mutant_2302" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) + 1)" />
    <mutant id="mutant_3632" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;)" to="(((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) * -1)" />
    <mutant id="mutant_3631" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(&quot;*s* Error in &quot; + (tz.getID()))" to="((&quot;*s* Error in &quot; + (tz.getID())) + 1)" />
    <mutant id="mutant_2300" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) - 1)" />
    <mutant id="mutant_3630" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(&quot;*s* Error in &quot; + (tz.getID()))" to="((&quot;*s* Error in &quot; + (tz.getID())) - 1)" />
    <mutant id="mutant_2309" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long)" from="instant - offset" to="(instant - offset) * -1" />
    <mutant id="mutant_2307" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long)" from="(instant + offset)" to="((instant + offset) - 1)" />
    <mutant id="mutant_3639" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;)" to="(((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;) - 1)" />
    <mutant id="mutant_2308" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long)" from="(instant + offset)" to="((instant + offset) * -1)" />
    <mutant id="mutant_3638" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;)" to="(((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot;, nameKey=&quot;) + 1)" />
    <mutant id="mutant_2305" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) + 1)" />
    <mutant id="mutant_3637" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC())))" to="((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) - 1)" />
    <mutant id="mutant_2306" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long)" from="(instant + offset)" to="((instant + offset) + 1)" />
    <mutant id="mutant_3636" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC())))" to="((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + 1)" />
    <mutant id="mutant_2303" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) - 1)" />
    <mutant id="mutant_3635" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC())))" to="((((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) * -1)" />
    <mutant id="mutant_2304" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) * -1)" />
    <mutant id="mutant_3634" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;)" to="(((&quot;*s* Error in &quot; + (tz.getID())) + &quot; &quot;) - 1)" />
    <mutant id="mutant_635" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(java.lang.CharSequence,int,java.lang.String)" from="((text.length()) - position)" to="(((text.length()) - position) + 1)" />
    <mutant id="mutant_636" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(java.lang.CharSequence,int,java.lang.String)" from="((text.length()) - position)" to="(((text.length()) - position) - 1)" />
    <mutant id="mutant_637" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(java.lang.CharSequence,int,java.lang.String)" from="(position + i)" to="((position + i) * -1)" />
    <mutant id="mutant_638" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(java.lang.CharSequence,int,java.lang.String)" from="(position + i)" to="((position + i) + 1)" />
    <mutant id="mutant_631" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (best.length())" to="(position + (best.length())) * -1" />
    <mutant id="mutant_632" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (best.length())" to="(position + (best.length())) + 1" />
    <mutant id="mutant_633" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (best.length())" to="(position + (best.length())) - 1" />
    <mutant id="mutant_634" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(java.lang.CharSequence,int,java.lang.String)" from="((text.length()) - position)" to="(((text.length()) - position) * -1)" />
    <mutant id="mutant_639" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(java.lang.CharSequence,int,java.lang.String)" from="(position + i)" to="((position + i) - 1)" />
    <mutant id="mutant_3622" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;)" to="(((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;) + 1)" />
    <mutant id="mutant_3621" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;)" to="(((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;) - 1)" />
    <mutant id="mutant_3620" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(&quot;*d* Error in &quot; + (tz.getID()))" to="((&quot;*d* Error in &quot; + (tz.getID())) - 1)" />
    <mutant id="mutant_3629" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(&quot;*s* Error in &quot; + (tz.getID()))" to="((&quot;*s* Error in &quot; + (tz.getID())) * -1)" />
    <mutant id="mutant_3628" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(nextKey == null) || (((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="!((nextKey == null) || (((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey)))))" />
    <mutant id="mutant_630" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(best == null) || ((id.length()) &gt; (best.length()))" to="!((best == null) || ((id.length()) &gt; (best.length())))" />
    <mutant id="mutant_3627" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="(!(((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey)))))" />
    <mutant id="mutant_3626" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC())))" to="((((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + 1)" />
    <mutant id="mutant_3625" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC())))" to="((((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) * -1)" />
    <mutant id="mutant_3624" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC())))" to="((((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) - 1)" />
    <mutant id="mutant_3623" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;)" to="(((&quot;*d* Error in &quot; + (tz.getID())) + &quot; &quot;) * -1)" />
    <mutant id="mutant_646" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="(u1 != u2) &amp;&amp; ((Character.toLowerCase(u1)) != (Character.toLowerCase(u2)))" to="!((u1 != u2) &amp;&amp; ((Character.toLowerCase(u1)) != (Character.toLowerCase(u2))))" />
    <mutant id="mutant_647" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.isFormatter(java.lang.Object)" from="(isPrinter(f)) || (isParser(f))" to="!((isPrinter(f)) || (isParser(f)))" />
    <mutant id="mutant_648" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.getFormatter()" from="(printer == parser) || (parser == null)" to="!((printer == parser) || (parser == null))" />
    <mutant id="mutant_649" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.toFormatter()" from="(printer != null) || (parser != null)" to="!((printer != null) || (parser != null))" />
    <mutant id="mutant_642" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="((text.length()) - position)" to="(((text.length()) - position) - 1)" />
    <mutant id="mutant_643" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="(position + i)" to="((position + i) * -1)" />
    <mutant id="mutant_644" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="(position + i)" to="((position + i) + 1)" />
    <mutant id="mutant_645" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="(position + i)" to="((position + i) - 1)" />
    <mutant id="mutant_2370" viable="false" in="org.joda.time.chrono.ZonedChronology.toString()" from="(&quot;ZonedChronology[&quot; + (getBase()))" to="((&quot;ZonedChronology[&quot; + (getBase())) - 1)" />
    <mutant id="mutant_1040" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(iFieldType) + 1" to="((iFieldType) + 1) + 1" />
    <mutant id="mutant_2371" viable="false" in="org.joda.time.chrono.ZonedChronology.toString()" from="(&quot;ZonedChronology[&quot; + (getBase()))" to="((&quot;ZonedChronology[&quot; + (getBase())) * -1)" />
    <mutant id="mutant_1036" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) + millis" to="((seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) + millis) + 1" />
    <mutant id="mutant_2367" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="(326565 + ((getZone().hashCode()) * 11)) + ((getBase().hashCode()) * 7)" to="((326565 + ((getZone().hashCode()) * 11)) + ((getBase().hashCode()) * 7)) - 1" />
    <mutant id="mutant_3699" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId) + &quot; revived&quot;)" to="(((((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId) + &quot; revived&quot;) - 1)" />
    <mutant id="mutant_1037" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) + millis" to="((seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) + millis) - 1" />
    <mutant id="mutant_2368" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="(326565 + ((getZone().hashCode()) * 11)) + ((getBase().hashCode()) * 7)" to="((326565 + ((getZone().hashCode()) * 11)) + ((getBase().hashCode()) * 7)) * -1" />
    <mutant id="mutant_3698" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId) + &quot; revived&quot;)" to="(((((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId) + &quot; revived&quot;) + 1)" />
    <mutant id="mutant_1034" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND)))" to="((seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) - 1)" />
    <mutant id="mutant_2365" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="((getBase().hashCode()) * 7)" to="(((getBase().hashCode()) * 7) + 1)" />
    <mutant id="mutant_3697" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId)" to="((((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId) * -1)" />
    <mutant id="mutant_1035" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND)))" to="((seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) * -1)" />
    <mutant id="mutant_2366" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="(326565 + ((getZone().hashCode()) * 11)) + ((getBase().hashCode()) * 7)" to="((326565 + ((getZone().hashCode()) * 11)) + ((getBase().hashCode()) * 7)) + 1" />
    <mutant id="mutant_3696" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId)" to="((((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId) - 1)" />
    <mutant id="mutant_1032" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(type != null) &amp;&amp; ((isSupported(type, iFieldType)) == false)" to="!((type != null) &amp;&amp; ((isSupported(type, iFieldType)) == false))" />
    <mutant id="mutant_2363" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="((getBase().hashCode()) * 7)" to="(((getBase().hashCode()) * 7) - 1)" />
    <mutant id="mutant_3695" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId)" to="((((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + baseId) + 1)" />
    <mutant id="mutant_1033" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND)))" to="((seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) + 1)" />
    <mutant id="mutant_2364" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="((getBase().hashCode()) * 7)" to="(((getBase().hashCode()) * 7) * -1)" />
    <mutant id="mutant_3694" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;)" to="(((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) * -1)" />
    <mutant id="mutant_1030" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="negative || (wholeValue &lt; 0)" to="!(negative || (wholeValue &lt; 0))" />
    <mutant id="mutant_2361" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="(326565 + ((getZone().hashCode()) * 11))" to="((326565 + ((getZone().hashCode()) * 11)) + 1)" />
    <mutant id="mutant_3693" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;)" to="(((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) - 1)" />
    <mutant id="mutant_1031" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position &gt;= 0) &amp;&amp; ((iSuffix) != null)" to="!((position &gt;= 0) &amp;&amp; ((iSuffix) != null))" />
    <mutant id="mutant_2362" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="(326565 + ((getZone().hashCode()) * 11))" to="((326565 + ((getZone().hashCode()) * 11)) - 1)" />
    <mutant id="mutant_3692" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;)" to="(((&quot;Good link: &quot; + alias) + &quot; -&gt; &quot;) + 1)" />
    <mutant id="mutant_640" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="((text.length()) - position)" to="(((text.length()) - position) * -1)" />
    <mutant id="mutant_641" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="((text.length()) - position)" to="(((text.length()) - position) + 1)" />
    <mutant id="mutant_1038" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) + millis" to="((seconds * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) + millis) * -1" />
    <mutant id="mutant_2369" viable="true" in="org.joda.time.chrono.ZonedChronology.toString()" from="(&quot;ZonedChronology[&quot; + (getBase()))" to="((&quot;ZonedChronology[&quot; + (getBase())) + 1)" />
    <mutant id="mutant_1039" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="!((isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this)))" />
    <mutant id="mutant_657" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int)" from="(&quot;Illegal number of digits: &quot; + numDigits)" to="((&quot;Illegal number of digits: &quot; + numDigits) + 1)" />
    <mutant id="mutant_658" viable="false" in="org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int)" from="(&quot;Illegal number of digits: &quot; + numDigits)" to="((&quot;Illegal number of digits: &quot; + numDigits) - 1)" />
    <mutant id="mutant_659" viable="false" in="org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int)" from="(&quot;Illegal number of digits: &quot; + numDigits)" to="((&quot;Illegal number of digits: &quot; + numDigits) * -1)" />
    <mutant id="mutant_653" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="!((minDigits &lt; 0) || (maxDigits &lt;= 0))" />
    <mutant id="mutant_654" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.DateTimeFieldType,int)" from="(&quot;Illegal number of digits: &quot; + numDigits)" to="((&quot;Illegal number of digits: &quot; + numDigits) + 1)" />
    <mutant id="mutant_655" viable="false" in="org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.DateTimeFieldType,int)" from="(&quot;Illegal number of digits: &quot; + numDigits)" to="((&quot;Illegal number of digits: &quot; + numDigits) - 1)" />
    <mutant id="mutant_656" viable="false" in="org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.DateTimeFieldType,int)" from="(&quot;Illegal number of digits: &quot; + numDigits)" to="((&quot;Illegal number of digits: &quot; + numDigits) * -1)" />
    <mutant id="mutant_3691" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Good link: &quot; + alias)" to="((&quot;Good link: &quot; + alias) - 1)" />
    <mutant id="mutant_2360" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="(326565 + ((getZone().hashCode()) * 11))" to="((326565 + ((getZone().hashCode()) * 11)) * -1)" />
    <mutant id="mutant_3690" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Good link: &quot; + alias)" to="((&quot;Good link: &quot; + alias) * -1)" />
    <mutant id="mutant_1025" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_2356" viable="true" in="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getUnitMillis()) &lt; ((DateTimeConstants.MILLIS_PER_HOUR) * 12))" to="!((field != null) &amp;&amp; ((field.getUnitMillis()) &lt; ((DateTimeConstants.MILLIS_PER_HOUR) * 12)))" />
    <mutant id="mutant_3688" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;)" to="(((((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;) - 1)" />
    <mutant id="mutant_1026" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_2357" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="((getZone().hashCode()) * 11)" to="(((getZone().hashCode()) * 11) * -1)" />
    <mutant id="mutant_3687" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;)" to="(((((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;) * -1)" />
    <mutant id="mutant_1023" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((fractPos - position) - 1)" to="(((fractPos - position) - 1) * -1)" />
    <mutant id="mutant_2354" viable="true" in="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)" from="((DateTimeConstants.MILLIS_PER_HOUR) * 12)" to="(((DateTimeConstants.MILLIS_PER_HOUR) * 12) + 1)" />
    <mutant id="mutant_3686" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;)" to="(((((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias) + &quot;\' to&quot;) + 1)" />
    <mutant id="mutant_1024" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_2355" viable="true" in="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)" from="((DateTimeConstants.MILLIS_PER_HOUR) * 12)" to="(((DateTimeConstants.MILLIS_PER_HOUR) * 12) - 1)" />
    <mutant id="mutant_3685" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias)" to="((((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias) - 1)" />
    <mutant id="mutant_1021" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((fractPos - position) - 1)" to="(((fractPos - position) - 1) + 1)" />
    <mutant id="mutant_2352" viable="true" in="org.joda.time.chrono.ZonedChronology.equals(java.lang.Object)" from="(getBase().equals(chrono.getBase())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="!((getBase().equals(chrono.getBase())) &amp;&amp; (getZone().equals(chrono.getZone())))" />
    <mutant id="mutant_3684" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias)" to="((((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias) + 1)" />
    <mutant id="mutant_1022" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((fractPos - position) - 1)" to="(((fractPos - position) - 1) - 1)" />
    <mutant id="mutant_2353" viable="true" in="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)" from="((DateTimeConstants.MILLIS_PER_HOUR) * 12)" to="(((DateTimeConstants.MILLIS_PER_HOUR) * 12) * -1)" />
    <mutant id="mutant_3683" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias)" to="((((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + alias) * -1)" />
    <mutant id="mutant_2350" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) * -1)" />
    <mutant id="mutant_3682" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;)" to="(((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) + 1)" />
    <mutant id="mutant_1020" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(fractPos - position)" to="((fractPos - position) - 1)" />
    <mutant id="mutant_2351" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) + 1)" />
    <mutant id="mutant_3681" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;)" to="(((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) * -1)" />
    <mutant id="mutant_650" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])" from="(length - 1)" to="((length - 1) - 1)" />
    <mutant id="mutant_651" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])" from="(length - 1)" to="((length - 1) * -1)" />
    <mutant id="mutant_652" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])" from="(length - 1)" to="((length - 1) + 1)" />
    <mutant id="mutant_1029" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length) - fractPos" to="((position + length) - fractPos) * -1" />
    <mutant id="mutant_1027" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length) - fractPos" to="((position + length) - fractPos) - 1" />
    <mutant id="mutant_2358" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="((getZone().hashCode()) * 11)" to="(((getZone().hashCode()) * 11) - 1)" />
    <mutant id="mutant_1028" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length) - fractPos" to="((position + length) - fractPos) + 1" />
    <mutant id="mutant_2359" viable="true" in="org.joda.time.chrono.ZonedChronology.hashCode()" from="((getZone().hashCode()) * 11)" to="(((getZone().hashCode()) * 11) + 1)" />
    <mutant id="mutant_3689" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Good link: &quot; + alias)" to="((&quot;Good link: &quot; + alias) + 1)" />
    <mutant id="mutant_668" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(count - 1)" to="((count - 1) - 1)" />
    <mutant id="mutant_669" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Cannot parse \&quot;&quot; + text)" to="((&quot;Cannot parse \&quot;&quot; + text) + 1)" />
    <mutant id="mutant_664" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="!((b == null) || (!(b.isSupported())))" />
    <mutant id="mutant_665" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((org.joda.time.format.DateTimeParserBucket.compareReverse(first, months)) &gt;= 0) &amp;&amp; ((org.joda.time.format.DateTimeParserBucket.compareReverse(first, days)) &lt;= 0)" to="!(((org.joda.time.format.DateTimeParserBucket.compareReverse(first, months)) &gt;= 0) &amp;&amp; ((org.joda.time.format.DateTimeParserBucket.compareReverse(first, days)) &lt;= 0))" />
    <mutant id="mutant_666" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(count - 1)" to="((count - 1) + 1)" />
    <mutant id="mutant_667" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(count - 1)" to="((count - 1) * -1)" />
    <mutant id="mutant_3680" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;)" to="(((&quot;Cannot find source zone \'&quot; + baseId) + &quot;\' to link alias \'&quot;) - 1)" />
    <mutant id="mutant_1014" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_2345" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,long)" from="instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))" to="(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))) + 1" />
    <mutant id="mutant_3677" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Cannot find source zone \'&quot; + baseId)" to="((&quot;Cannot find source zone \'&quot; + baseId) + 1)" />
    <mutant id="mutant_1015" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_2346" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) + 1)" />
    <mutant id="mutant_3676" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_1012" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((text.length()) - position)" to="(((text.length()) - position) + 1)" />
    <mutant id="mutant_2343" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,long)" from="instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))" to="(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))) * -1" />
    <mutant id="mutant_3675" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_1013" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_2344" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,long)" from="instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))" to="(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))) - 1" />
    <mutant id="mutant_3674" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_1010" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((text.length()) - position)" to="(((text.length()) - position) * -1)" />
    <mutant id="mutant_2341" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,long)" from="(instant + offset)" to="((instant + offset) - 1)" />
    <mutant id="mutant_3673" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Destination is not a directory: &quot; + outputDir)" to="((&quot;Destination is not a directory: &quot; + outputDir) * -1)" />
    <mutant id="mutant_1011" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((text.length()) - position)" to="(((text.length()) - position) - 1)" />
    <mutant id="mutant_2342" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,long)" from="(instant + offset)" to="((instant + offset) * -1)" />
    <mutant id="mutant_3672" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Destination is not a directory: &quot; + outputDir)" to="((&quot;Destination is not a directory: &quot; + outputDir) - 1)" />
    <mutant id="mutant_3671" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Destination is not a directory: &quot; + outputDir)" to="((&quot;Destination is not a directory: &quot; + outputDir) + 1)" />
    <mutant id="mutant_2340" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,long)" from="(instant + offset)" to="((instant + offset) + 1)" />
    <mutant id="mutant_3670" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Destination directory doesn\'t exist and cannot be created: &quot; + outputDir)" to="((&quot;Destination directory doesn\'t exist and cannot be created: &quot; + outputDir) + 1)" />
    <mutant id="mutant_660" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendFraction(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="!((minDigits &lt; 0) || (maxDigits &lt;= 0))" />
    <mutant id="mutant_661" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="!((minDigits &lt; 0) || (maxDigits &lt;= 0))" />
    <mutant id="mutant_662" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(a == null) || (!(a.isSupported()))" to="!((a == null) || (!(a.isSupported())))" />
    <mutant id="mutant_663" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="!((b == null) || (!(b.isSupported())))" />
    <mutant id="mutant_1018" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(fractPos - position)" to="((fractPos - position) + 1)" />
    <mutant id="mutant_2349" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(long,long)" from="(subtrahendInstant + offset)" to="((subtrahendInstant + offset) - 1)" />
    <mutant id="mutant_1019" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(fractPos - position)" to="((fractPos - position) * -1)" />
    <mutant id="mutant_1016" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(suffixPos &gt;= 0) &amp;&amp; ((position + length) != suffixPos)" to="!((suffixPos &gt;= 0) &amp;&amp; ((position + length) != suffixPos))" />
    <mutant id="mutant_2347" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) * -1)" />
    <mutant id="mutant_3679" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Cannot find source zone \'&quot; + baseId)" to="((&quot;Cannot find source zone \'&quot; + baseId) - 1)" />
    <mutant id="mutant_1017" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iFieldType) != (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; ((iFieldType) != (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))" to="!(((iFieldType) != (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; ((iFieldType) != (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" />
    <mutant id="mutant_2348" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(long,long)" from="(minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)))" to="((minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant))) - 1)" />
    <mutant id="mutant_3678" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Cannot find source zone \'&quot; + baseId)" to="((&quot;Cannot find source zone \'&quot; + baseId) * -1)" />
    <mutant id="mutant_679" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Illegal instant due to time zone offset transition (&quot; + (iZone)) + ')'" to="((&quot;Illegal instant due to time zone offset transition (&quot; + (iZone)) + ')') - 1" />
    <mutant id="mutant_675" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Illegal instant due to time zone offset transition (&quot; + (iZone))" to="((&quot;Illegal instant due to time zone offset transition (&quot; + (iZone)) + 1)" />
    <mutant id="mutant_676" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Illegal instant due to time zone offset transition (&quot; + (iZone))" to="((&quot;Illegal instant due to time zone offset transition (&quot; + (iZone)) - 1)" />
    <mutant id="mutant_677" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Illegal instant due to time zone offset transition (&quot; + (iZone))" to="((&quot;Illegal instant due to time zone offset transition (&quot; + (iZone)) * -1)" />
    <mutant id="mutant_678" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Illegal instant due to time zone offset transition (&quot; + (iZone)) + ')'" to="((&quot;Illegal instant due to time zone offset transition (&quot; + (iZone)) + ')') * -1" />
    <mutant id="mutant_1003" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_2334" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,int)" from="(instant + offset)" to="((instant + offset) + 1)" />
    <mutant id="mutant_3666" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;minimum&quot;)) || (str.equals(&quot;min&quot;))" to="!((str.equals(&quot;minimum&quot;)) || (str.equals(&quot;min&quot;)))" />
    <mutant id="mutant_1004" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length) + 1" to="((position + length) + 1) * -1" />
    <mutant id="mutant_2335" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,int)" from="(instant + offset)" to="((instant + offset) - 1)" />
    <mutant id="mutant_3665" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;) + (new DateTime((trans - 1) , ISOChronology.getInstanceUTC())))" to="((((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;) + (new DateTime((trans - 1) , ISOChronology.getInstanceUTC()))) + 1)" />
    <mutant id="mutant_1001" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_2332" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)" from="instant + offset" to="(instant + offset) * -1" />
    <mutant id="mutant_3664" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;) + (new DateTime((trans - 1) , ISOChronology.getInstanceUTC())))" to="((((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;) + (new DateTime((trans - 1) , ISOChronology.getInstanceUTC()))) * -1)" />
    <mutant id="mutant_1002" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_2333" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="!(((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0))" />
    <mutant id="mutant_3663" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;) + (new DateTime((trans - 1) , ISOChronology.getInstanceUTC())))" to="((((((&quot;*r* Error in &quot; + (tz.getID())) + &quot; &quot;) + (new DateTime(millis , ISOChronology.getInstanceUTC()))) + &quot; != &quot;) + (new DateTime((trans - 1) , ISOChronology.getInstanceUTC()))) - 1)" />
    <mutant id="mutant_2330" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)" from="instant + offset" to="(instant + offset) + 1" />
    <mutant id="mutant_3662" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(trans - 1)" to="((trans - 1) + 1)" />
    <mutant id="mutant_1000" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ',')) &amp;&amp; (((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="!(((c == '.') || (c == ',')) &amp;&amp; (((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))))" />
    <mutant id="mutant_2331" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)" from="instant + offset" to="(instant + offset) - 1" />
    <mutant id="mutant_3661" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(trans - 1)" to="((trans - 1) - 1)" />
    <mutant id="mutant_3660" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(trans - 1)" to="((trans - 1) * -1)" />
    <mutant id="mutant_671" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Cannot parse \&quot;&quot; + text)" to="((&quot;Cannot parse \&quot;&quot; + text) * -1)" />
    <mutant id="mutant_672" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((&quot;Cannot parse \&quot;&quot; + text) + '\&quot;')" to="(((&quot;Cannot parse \&quot;&quot; + text) + '\&quot;') + 1)" />
    <mutant id="mutant_673" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((&quot;Cannot parse \&quot;&quot; + text) + '\&quot;')" to="(((&quot;Cannot parse \&quot;&quot; + text) + '\&quot;') * -1)" />
    <mutant id="mutant_1009" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(limit + 1)" to="((limit + 1) - 1)" />
    <mutant id="mutant_674" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((&quot;Cannot parse \&quot;&quot; + text) + '\&quot;')" to="(((&quot;Cannot parse \&quot;&quot; + text) + '\&quot;') - 1)" />
    <mutant id="mutant_1007" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(limit + 1)" to="((limit + 1) + 1)" />
    <mutant id="mutant_2338" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,int)" from="instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))" to="(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))) - 1" />
    <mutant id="mutant_1008" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(limit + 1)" to="((limit + 1) * -1)" />
    <mutant id="mutant_2339" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,int)" from="instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))" to="(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))) + 1" />
    <mutant id="mutant_3669" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Destination directory doesn\'t exist and cannot be created: &quot; + outputDir)" to="((&quot;Destination directory doesn\'t exist and cannot be created: &quot; + outputDir) - 1)" />
    <mutant id="mutant_1005" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length) + 1" to="((position + length) + 1) + 1" />
    <mutant id="mutant_2336" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,int)" from="(instant + offset)" to="((instant + offset) * -1)" />
    <mutant id="mutant_3668" viable="false" in="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])" from="(&quot;Destination directory doesn\'t exist and cannot be created: &quot; + outputDir)" to="((&quot;Destination directory doesn\'t exist and cannot be created: &quot; + outputDir) * -1)" />
    <mutant id="mutant_670" viable="false" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="(&quot;Cannot parse \&quot;&quot; + text)" to="((&quot;Cannot parse \&quot;&quot; + text) - 1)" />
    <mutant id="mutant_1006" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length) + 1" to="((position + length) + 1) - 1" />
    <mutant id="mutant_2337" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,int)" from="instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))" to="(instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))) * -1" />
    <mutant id="mutant_3667" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;maximum&quot;)) || (str.equals(&quot;max&quot;))" to="!((str.equals(&quot;maximum&quot;)) || (str.equals(&quot;max&quot;)))" />
    <mutant id="mutant_2172" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears)" to="(((relativeYear * 365L) + leapYears) * -1)" />
    <mutant id="mutant_2173" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears)" to="(((relativeYear * 365L) + leapYears) + 1)" />
    <mutant id="mutant_2170" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear * 365L)" to="((relativeYear * 365L) + 1)" />
    <mutant id="mutant_2171" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears)" to="(((relativeYear * 365L) + leapYears) - 1)" />
    <mutant id="mutant_2169" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear * 365L)" to="((relativeYear * 365L) - 1)" />
    <mutant id="mutant_2167" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear + 3)" to="((relativeYear + 3) + 1)" />
    <mutant id="mutant_3499" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(left + (iLetterS)) + right" to="((left + (iLetterS)) + right) * -1" />
    <mutant id="mutant_2168" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear * 365L)" to="((relativeYear * 365L) * -1)" />
    <mutant id="mutant_3498" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(left + (iLetterS))" to="((left + (iLetterS)) - 1)" />
    <mutant id="mutant_2165" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear + 3)" to="((relativeYear + 3) * -1)" />
    <mutant id="mutant_3497" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(left + (iLetterS))" to="((left + (iLetterS)) * -1)" />
    <mutant id="mutant_2166" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear + 3)" to="((relativeYear + 3) - 1)" />
    <mutant id="mutant_3496" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(left + (iLetterS))" to="((left + (iLetterS)) + 1)" />
    <mutant id="mutant_2163" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="year - 1968" to="(year - 1968) + 1" />
    <mutant id="mutant_3495" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_2164" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="year - 1968" to="(year - 1968) - 1" />
    <mutant id="mutant_3494" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_2161" viable="false" in="?" from="((long)((365.25 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))" to="((long)(((365.25 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))) - 1" />
    <mutant id="mutant_3493" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_2162" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="year - 1968" to="(year - 1968) * -1" />
    <mutant id="mutant_3492" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_3491" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_2160" viable="false" in="?" from="((long)((365.25 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))" to="((long)(((365.25 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))) + 1" />
    <mutant id="mutant_3490" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_2158" viable="false" in="?" from="(365.25 * (DateTimeConstants.MILLIS_PER_DAY))" to="((365.25 * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_2159" viable="false" in="?" from="((long)((365.25 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))" to="((long)(((365.25 * (DateTimeConstants.MILLIS_PER_DAY)) / 12))) * -1" />
    <mutant id="mutant_3489" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar)) + &quot;\n&quot;" to="(((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar)) + &quot;\n&quot;) - 1" />
    <mutant id="mutant_2156" viable="false" in="?" from="(365.25 * (DateTimeConstants.MILLIS_PER_DAY))" to="((365.25 * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_3488" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar)) + &quot;\n&quot;" to="(((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar)) + &quot;\n&quot;) + 1" />
    <mutant id="mutant_2157" viable="false" in="?" from="(365.25 * (DateTimeConstants.MILLIS_PER_DAY))" to="((365.25 * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_3487" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar)) + &quot;\n&quot;" to="(((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar)) + &quot;\n&quot;) * -1" />
    <mutant id="mutant_2154" viable="false" in="?" from="((long)(365.25 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((365.25 * (DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_3486" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar))" to="(((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar)) + 1)" />
    <mutant id="mutant_2155" viable="false" in="?" from="((long)(365.25 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((365.25 * (DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_3485" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar))" to="(((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar)) - 1)" />
    <mutant id="mutant_2152" viable="true" in="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)" from="minuendYear - subtrahendYear" to="(minuendYear - subtrahendYear) - 1" />
    <mutant id="mutant_3484" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar))" to="(((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + (iZoneChar)) * -1)" />
    <mutant id="mutant_2153" viable="false" in="?" from="((long)(365.25 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((365.25 * (DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_3483" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;)" to="((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) - 1)" />
    <mutant id="mutant_107" viable="true" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(&quot;Period does not support field \'&quot; + field)" to="((&quot;Period does not support field \'&quot; + field) + 1)" />
    <mutant id="mutant_108" viable="false" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;) - 1)" />
    <mutant id="mutant_109" viable="true" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;) + 1)" />
    <mutant id="mutant_103" viable="false" in="org.joda.time.base.BasePeriod.checkAndUpdate(org.joda.time.DurationFieldType,int[],int)" from="((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;) - 1)" />
    <mutant id="mutant_104" viable="true" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="!((value != 0) || (field == null))" />
    <mutant id="mutant_105" viable="false" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(&quot;Period does not support field \'&quot; + field)" to="((&quot;Period does not support field \'&quot; + field) - 1)" />
    <mutant id="mutant_106" viable="false" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(&quot;Period does not support field \'&quot; + field)" to="((&quot;Period does not support field \'&quot; + field) * -1)" />
    <mutant id="mutant_2150" viable="true" in="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)" from="minuendYear - subtrahendYear" to="(minuendYear - subtrahendYear) * -1" />
    <mutant id="mutant_3482" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;)" to="((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) * -1)" />
    <mutant id="mutant_2151" viable="true" in="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)" from="minuendYear - subtrahendYear" to="(minuendYear - subtrahendYear) + 1" />
    <mutant id="mutant_3481" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;)" to="((((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + &quot;ZoneChar: &quot;) + 1)" />
    <mutant id="mutant_3480" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;)" to="(((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_2147" viable="true" in="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)" from="subtrahendInstant - (getYearMillis(subtrahendYear))" to="(subtrahendInstant - (getYearMillis(subtrahendYear))) + 1" />
    <mutant id="mutant_3479" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;)" to="(((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_2148" viable="true" in="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)" from="subtrahendInstant - (getYearMillis(subtrahendYear))" to="(subtrahendInstant - (getYearMillis(subtrahendYear))) - 1" />
    <mutant id="mutant_3478" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;)" to="(((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2145" viable="true" in="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)" from="minuendInstant - (getYearMillis(minuendYear))" to="(minuendInstant - (getYearMillis(minuendYear))) - 1" />
    <mutant id="mutant_3477" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay))" to="((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) * -1)" />
    <mutant id="mutant_2146" viable="true" in="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)" from="minuendInstant - (getYearMillis(minuendYear))" to="(minuendInstant - (getYearMillis(minuendYear))) + 1" />
    <mutant id="mutant_3476" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay))" to="((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) + 1)" />
    <mutant id="mutant_2143" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)" to="(month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) - 1" />
    <mutant id="mutant_3475" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay))" to="((((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + (iMillisOfDay)) - 1)" />
    <mutant id="mutant_2144" viable="true" in="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)" from="minuendInstant - (getYearMillis(minuendYear))" to="(minuendInstant - (getYearMillis(minuendYear))) * -1" />
    <mutant id="mutant_3474" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;)" to="(((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) + 1)" />
    <mutant id="mutant_2141" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)" to="(month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) * -1" />
    <mutant id="mutant_3473" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;)" to="(((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) - 1)" />
    <mutant id="mutant_2142" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)" to="(month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) + 1" />
    <mutant id="mutant_3472" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;)" to="(((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + &quot;MillisOfDay: &quot;) * -1)" />
    <mutant id="mutant_100" viable="true" in="org.joda.time.base.BasePeriod.checkAndUpdate(org.joda.time.DurationFieldType,int[],int)" from="(&quot;Period does not support field \'&quot; + (type.getName()))" to="((&quot;Period does not support field \'&quot; + (type.getName())) + 1)" />
    <mutant id="mutant_101" viable="false" in="org.joda.time.base.BasePeriod.checkAndUpdate(org.joda.time.DurationFieldType,int[],int)" from="((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;) * -1)" />
    <mutant id="mutant_102" viable="true" in="org.joda.time.base.BasePeriod.checkAndUpdate(org.joda.time.DurationFieldType,int[],int)" from="((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + (type.getName())) + &quot;\'&quot;) + 1)" />
    <mutant id="mutant_2149" viable="true" in="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)" from="subtrahendInstant - (getYearMillis(subtrahendYear))" to="(subtrahendInstant - (getYearMillis(subtrahendYear))) * -1" />
    <mutant id="mutant_118" viable="false" in="?" from="((2L * 365L) * 86400L) * 1000L" to="(((2L * 365L) * 86400L) * 1000L) * -1" />
    <mutant id="mutant_119" viable="false" in="?" from="((2L * 365L) * 86400L) * 1000L" to="(((2L * 365L) * 86400L) * 1000L) + 1" />
    <mutant id="mutant_114" viable="false" in="?" from="((2L * 365L) * 86400L)" to="(((2L * 365L) * 86400L) + 1)" />
    <mutant id="mutant_115" viable="false" in="?" from="((2L * 365L) * 86400L)" to="(((2L * 365L) * 86400L) * -1)" />
    <mutant id="mutant_116" viable="false" in="?" from="((2L * 365L) * 86400L)" to="(((2L * 365L) * 86400L) - 1)" />
    <mutant id="mutant_117" viable="false" in="?" from="((2L * 365L) * 86400L) * 1000L" to="(((2L * 365L) * 86400L) * 1000L) - 1" />
    <mutant id="mutant_3471" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;)" to="((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_2140" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="(month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) + (IslamicChronology.MILLIS_PER_LONG_MONTH)" to="((month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) + (IslamicChronology.MILLIS_PER_LONG_MONTH)) * -1" />
    <mutant id="mutant_3470" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;)" to="((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2136" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="(month * (IslamicChronology.MILLIS_PER_MONTH_PAIR))" to="((month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) + 1)" />
    <mutant id="mutant_3468" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek))" to="(((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) * -1)" />
    <mutant id="mutant_2137" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="(month * (IslamicChronology.MILLIS_PER_MONTH_PAIR))" to="((month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) - 1)" />
    <mutant id="mutant_3467" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek))" to="(((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) - 1)" />
    <mutant id="mutant_2134" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="((--month) % 2)" to="(((--month) % 2) * -1)" />
    <mutant id="mutant_3466" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek))" to="(((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + 1)" />
    <mutant id="mutant_2135" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="(month * (IslamicChronology.MILLIS_PER_MONTH_PAIR))" to="((month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) * -1)" />
    <mutant id="mutant_3465" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;)" to="((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + 1)" />
    <mutant id="mutant_2132" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="((--month) % 2)" to="(((--month) % 2) + 1)" />
    <mutant id="mutant_3464" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;)" to="((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) * -1)" />
    <mutant id="mutant_2133" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="((--month) % 2)" to="(((--month) % 2) - 1)" />
    <mutant id="mutant_3463" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;)" to="((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) - 1)" />
    <mutant id="mutant_2130" viable="true" in="org.joda.time.chrono.IslamicChronology.getAverageMillisPerYearDividedByTwo()" from="(IslamicChronology.MILLIS_PER_YEAR) / 2" to="((IslamicChronology.MILLIS_PER_YEAR) / 2) - 1" />
    <mutant id="mutant_3462" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;)" to="(((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_2131" viable="true" in="org.joda.time.chrono.IslamicChronology.getAverageMillisPerYearDividedByTwo()" from="(IslamicChronology.MILLIS_PER_YEAR) / 2" to="((IslamicChronology.MILLIS_PER_YEAR) / 2) + 1" />
    <mutant id="mutant_3461" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;)" to="(((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_110" viable="false" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;)" to="(((&quot;Period does not support field \'&quot; + field) + &quot;\'&quot;) * -1)" />
    <mutant id="mutant_111" viable="false" in="?" from="(2L * 365L)" to="((2L * 365L) - 1)" />
    <mutant id="mutant_112" viable="false" in="?" from="(2L * 365L)" to="((2L * 365L) * -1)" />
    <mutant id="mutant_113" viable="false" in="?" from="(2L * 365L)" to="((2L * 365L) + 1)" />
    <mutant id="mutant_2138" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="(month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) + (IslamicChronology.MILLIS_PER_LONG_MONTH)" to="((month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) + (IslamicChronology.MILLIS_PER_LONG_MONTH)) - 1" />
    <mutant id="mutant_2139" viable="true" in="org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)" from="(month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) + (IslamicChronology.MILLIS_PER_LONG_MONTH)" to="((month * (IslamicChronology.MILLIS_PER_MONTH_PAIR)) + (IslamicChronology.MILLIS_PER_LONG_MONTH)) + 1" />
    <mutant id="mutant_3469" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;)" to="((((((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) + &quot;AdvanceDayOfWeek: &quot;) + (iAdvanceDayOfWeek)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_129" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total)" to="((27 * total) + 1)" />
    <mutant id="mutant_125" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.compareTo(org.joda.time.base.BaseSingleFieldPeriod)" from="((getClass()) + &quot; cannot be compared to &quot;)" to="(((getClass()) + &quot; cannot be compared to &quot;) + 1)" />
    <mutant id="mutant_126" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.compareTo(org.joda.time.base.BaseSingleFieldPeriod)" from="(((getClass()) + &quot; cannot be compared to &quot;) + (other.getClass()))" to="((((getClass()) + &quot; cannot be compared to &quot;) + (other.getClass())) * -1)" />
    <mutant id="mutant_127" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.compareTo(org.joda.time.base.BaseSingleFieldPeriod)" from="(((getClass()) + &quot; cannot be compared to &quot;) + (other.getClass()))" to="((((getClass()) + &quot; cannot be compared to &quot;) + (other.getClass())) - 1)" />
    <mutant id="mutant_128" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.compareTo(org.joda.time.base.BaseSingleFieldPeriod)" from="(((getClass()) + &quot; cannot be compared to &quot;) + (other.getClass()))" to="((((getClass()) + &quot; cannot be compared to &quot;) + (other.getClass())) + 1)" />
    <mutant id="mutant_121" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)" from="(start == null) || (end == null)" to="!((start == null) || (end == null))" />
    <mutant id="mutant_122" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)" from="(start == null) || (end == null)" to="!((start == null) || (end == null))" />
    <mutant id="mutant_123" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.compareTo(org.joda.time.base.BaseSingleFieldPeriod)" from="((getClass()) + &quot; cannot be compared to &quot;)" to="(((getClass()) + &quot; cannot be compared to &quot;) * -1)" />
    <mutant id="mutant_124" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.compareTo(org.joda.time.base.BaseSingleFieldPeriod)" from="((getClass()) + &quot; cannot be compared to &quot;)" to="(((getClass()) + &quot; cannot be compared to &quot;) - 1)" />
    <mutant id="mutant_120" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.equals(java.lang.Object)" from="((other.getPeriodType()) == (getPeriodType())) &amp;&amp; ((other.getValue(0)) == (getValue()))" to="!(((other.getPeriodType()) == (getPeriodType())) &amp;&amp; ((other.getValue(0)) == (getValue())))" />
    <mutant id="mutant_136" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total)" to="((27 * total) - 1)" />
    <mutant id="mutant_137" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total)" to="((27 * total) * -1)" />
    <mutant id="mutant_138" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total) + (getFieldType().hashCode())" to="((27 * total) + (getFieldType().hashCode())) * -1" />
    <mutant id="mutant_139" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total) + (getFieldType().hashCode())" to="((27 * total) + (getFieldType().hashCode())) - 1" />
    <mutant id="mutant_2198" viable="true" in="org.joda.time.chrono.JulianChronology.getAverageMillisPerYearDividedByTwo()" from="(JulianChronology.MILLIS_PER_YEAR) / 2" to="((JulianChronology.MILLIS_PER_YEAR) / 2) + 1" />
    <mutant id="mutant_2199" viable="true" in="org.joda.time.chrono.JulianChronology.getAverageMillisPerYearDividedByTwo()" from="(JulianChronology.MILLIS_PER_YEAR) / 2" to="((JulianChronology.MILLIS_PER_YEAR) / 2) * -1" />
    <mutant id="mutant_2196" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY))) / 2" to="(((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY))) / 2) + 1" />
    <mutant id="mutant_2197" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY))) / 2" to="(((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY))) / 2) * -1" />
    <mutant id="mutant_132" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total) + (getValue())" to="((27 * total) + (getValue())) - 1" />
    <mutant id="mutant_133" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total) + (getValue())" to="((27 * total) + (getValue())) * -1" />
    <mutant id="mutant_134" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total) + (getValue())" to="((27 * total) + (getValue())) + 1" />
    <mutant id="mutant_135" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total)" to="((27 * total) + 1)" />
    <mutant id="mutant_130" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total)" to="((27 * total) - 1)" />
    <mutant id="mutant_131" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total)" to="((27 * total) * -1)" />
    <mutant id="mutant_147" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="(((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;) + period)" to="((((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;) + period) + 1)" />
    <mutant id="mutant_148" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="(((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;) + period)" to="((((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;) + period) * -1)" />
    <mutant id="mutant_149" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="(((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;) + period)" to="((((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;) + period) - 1)" />
    <mutant id="mutant_2194" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY)))" to="(((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY))) - 1)" />
    <mutant id="mutant_2195" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY))) / 2" to="(((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY))) / 2) - 1" />
    <mutant id="mutant_2192" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY)))" to="(((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY))) + 1)" />
    <mutant id="mutant_2193" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY)))" to="(((1969L * (JulianChronology.MILLIS_PER_YEAR)) + (352L * (DateTimeConstants.MILLIS_PER_DAY))) * -1)" />
    <mutant id="mutant_2190" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="(352L * (DateTimeConstants.MILLIS_PER_DAY))" to="((352L * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_2191" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="(352L * (DateTimeConstants.MILLIS_PER_DAY))" to="((352L * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_2189" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="(352L * (DateTimeConstants.MILLIS_PER_DAY))" to="((352L * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_2187" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="(1969L * (JulianChronology.MILLIS_PER_YEAR))" to="((1969L * (JulianChronology.MILLIS_PER_YEAR)) * -1)" />
    <mutant id="mutant_2188" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="(1969L * (JulianChronology.MILLIS_PER_YEAR))" to="((1969L * (JulianChronology.MILLIS_PER_YEAR)) + 1)" />
    <mutant id="mutant_2185" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="millis - ((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY))" to="(millis - ((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_2186" viable="true" in="org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo()" from="(1969L * (JulianChronology.MILLIS_PER_YEAR))" to="((1969L * (JulianChronology.MILLIS_PER_YEAR)) - 1)" />
    <mutant id="mutant_143" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="(&quot;Cannot convert period to duration as &quot; + (field.getName()))" to="((&quot;Cannot convert period to duration as &quot; + (field.getName())) * -1)" />
    <mutant id="mutant_144" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;)" to="(((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;) * -1)" />
    <mutant id="mutant_145" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;)" to="(((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;) - 1)" />
    <mutant id="mutant_146" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;)" to="(((&quot;Cannot convert period to duration as &quot; + (field.getName())) + &quot; is not precise in the period &quot;) + 1)" />
    <mutant id="mutant_140" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.hashCode()" from="(27 * total) + (getFieldType().hashCode())" to="((27 * total) + (getFieldType().hashCode())) + 1" />
    <mutant id="mutant_141" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="(&quot;Cannot convert period to duration as &quot; + (field.getName()))" to="((&quot;Cannot convert period to duration as &quot; + (field.getName())) + 1)" />
    <mutant id="mutant_142" viable="false" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="(&quot;Cannot convert period to duration as &quot; + (field.getName()))" to="((&quot;Cannot convert period to duration as &quot; + (field.getName())) - 1)" />
    <mutant id="mutant_158" viable="false" in="org.joda.time.convert.AbstractConverter.toString()" from="(&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName())) + &quot;]&quot;" to="((&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName())) + &quot;]&quot;) * -1" />
    <mutant id="mutant_159" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(&quot;ConverterManager[&quot; + (iInstantConverters.size()))" to="((&quot;ConverterManager[&quot; + (iInstantConverters.size())) * -1)" />
    <mutant id="mutant_2183" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="millis - ((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY))" to="(millis - ((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_2184" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="millis - ((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY))" to="(millis - ((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_2181" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY))" to="(((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_2182" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY))" to="(((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_2180" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY))" to="(((366L + 352) * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_2178" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="(366L + 352)" to="((366L + 352) + 1)" />
    <mutant id="mutant_2179" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="(366L + 352)" to="((366L + 352) - 1)" />
    <mutant id="mutant_2176" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_2177" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="(366L + 352)" to="((366L + 352) * -1)" />
    <mutant id="mutant_2174" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_2175" viable="true" in="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_154" viable="false" in="org.joda.time.convert.AbstractConverter.toString()" from="(&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName()))" to="((&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName())) * -1)" />
    <mutant id="mutant_155" viable="false" in="org.joda.time.convert.AbstractConverter.toString()" from="(&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName()))" to="((&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName())) - 1)" />
    <mutant id="mutant_156" viable="true" in="org.joda.time.convert.AbstractConverter.toString()" from="(&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName())) + &quot;]&quot;" to="((&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName())) + &quot;]&quot;) + 1" />
    <mutant id="mutant_157" viable="false" in="org.joda.time.convert.AbstractConverter.toString()" from="(&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName())) + &quot;]&quot;" to="((&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName())) + &quot;]&quot;) - 1" />
    <mutant id="mutant_150" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="(duration / millisPerUnit)" to="((duration / millisPerUnit) - 1)" />
    <mutant id="mutant_151" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="(duration / millisPerUnit)" to="((duration / millisPerUnit) + 1)" />
    <mutant id="mutant_152" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)" from="(duration / millisPerUnit)" to="((duration / millisPerUnit) * -1)" />
    <mutant id="mutant_153" viable="true" in="org.joda.time.convert.AbstractConverter.toString()" from="(&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName()))" to="((&quot;Converter[&quot; + ((getSupportedType()) == null ? &quot;null&quot; : getSupportedType().getName())) + 1)" />
    <mutant id="mutant_169" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;)" to="(((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + 1)" />
    <mutant id="mutant_160" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(&quot;ConverterManager[&quot; + (iInstantConverters.size()))" to="((&quot;ConverterManager[&quot; + (iInstantConverters.size())) - 1)" />
    <mutant id="mutant_165" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="(((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size()))" to="((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + 1)" />
    <mutant id="mutant_166" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size()))" to="((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) - 1)" />
    <mutant id="mutant_167" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size()))" to="((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) * -1)" />
    <mutant id="mutant_168" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;)" to="(((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) - 1)" />
    <mutant id="mutant_161" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="(&quot;ConverterManager[&quot; + (iInstantConverters.size()))" to="((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + 1)" />
    <mutant id="mutant_162" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;)" to="(((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) - 1)" />
    <mutant id="mutant_163" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;)" to="(((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + 1)" />
    <mutant id="mutant_164" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;)" to="(((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) * -1)" />
    <mutant id="mutant_170" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;)" to="(((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) * -1)" />
    <mutant id="mutant_171" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size()))" to="((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) * -1)" />
    <mutant id="mutant_176" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;)" to="(((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + 1)" />
    <mutant id="mutant_177" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size()))" to="((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) * -1)" />
    <mutant id="mutant_178" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size()))" to="((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) - 1)" />
    <mutant id="mutant_179" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="(((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size()))" to="((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + 1)" />
    <mutant id="mutant_172" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="(((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size()))" to="((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + 1)" />
    <mutant id="mutant_173" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size()))" to="((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) - 1)" />
    <mutant id="mutant_174" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;)" to="(((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) - 1)" />
    <mutant id="mutant_175" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;)" to="(((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) * -1)" />
    <mutant id="mutant_180" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;)" to="(((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + 1)" />
    <mutant id="mutant_181" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;)" to="(((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) - 1)" />
    <mutant id="mutant_182" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;)" to="(((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) * -1)" />
    <mutant id="mutant_187" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="(((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size())) + &quot; interval]&quot;" to="((((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size())) + &quot; interval]&quot;) + 1" />
    <mutant id="mutant_188" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size())) + &quot; interval]&quot;" to="((((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size())) + &quot; interval]&quot;) - 1" />
    <mutant id="mutant_189" viable="false" in="org.joda.time.convert.ConverterManager.getDurationConverter(java.lang.Object)" from="(&quot;No duration converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No duration converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) - 1)" />
    <mutant id="mutant_183" viable="true" in="org.joda.time.convert.ConverterManager.toString()" from="(((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size()))" to="((((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size())) + 1)" />
    <mutant id="mutant_184" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size()))" to="((((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size())) * -1)" />
    <mutant id="mutant_185" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size()))" to="((((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size())) - 1)" />
    <mutant id="mutant_186" viable="false" in="org.joda.time.convert.ConverterManager.toString()" from="(((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size())) + &quot; interval]&quot;" to="((((((((((&quot;ConverterManager[&quot; + (iInstantConverters.size())) + &quot; instant,&quot;) + (iPartialConverters.size())) + &quot; partial,&quot;) + (iDurationConverters.size())) + &quot; duration,&quot;) + (iPeriodConverters.size())) + &quot; period,&quot;) + (iIntervalConverters.size())) + &quot; interval]&quot;) * -1" />
    <mutant id="mutant_190" viable="true" in="org.joda.time.convert.ConverterManager.getDurationConverter(java.lang.Object)" from="(&quot;No duration converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No duration converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) + 1)" />
    <mutant id="mutant_191" viable="false" in="org.joda.time.convert.ConverterManager.getDurationConverter(java.lang.Object)" from="(&quot;No duration converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No duration converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) * -1)" />
    <mutant id="mutant_192" viable="true" in="org.joda.time.convert.ConverterManager.getInstantConverter(java.lang.Object)" from="(&quot;No instant converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No instant converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) + 1)" />
    <mutant id="mutant_193" viable="false" in="org.joda.time.convert.ConverterManager.getInstantConverter(java.lang.Object)" from="(&quot;No instant converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No instant converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) - 1)" />
    <mutant id="mutant_198" viable="false" in="org.joda.time.convert.ConverterManager.getPartialConverter(java.lang.Object)" from="(&quot;No partial converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No partial converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) * -1)" />
    <mutant id="mutant_199" viable="false" in="org.joda.time.convert.ConverterManager.getPartialConverter(java.lang.Object)" from="(&quot;No partial converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No partial converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) - 1)" />
    <mutant id="mutant_194" viable="false" in="org.joda.time.convert.ConverterManager.getInstantConverter(java.lang.Object)" from="(&quot;No instant converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No instant converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) * -1)" />
    <mutant id="mutant_195" viable="false" in="org.joda.time.convert.ConverterManager.getIntervalConverter(java.lang.Object)" from="(&quot;No interval converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No interval converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) * -1)" />
    <mutant id="mutant_196" viable="true" in="org.joda.time.convert.ConverterManager.getIntervalConverter(java.lang.Object)" from="(&quot;No interval converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No interval converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) + 1)" />
    <mutant id="mutant_197" viable="false" in="org.joda.time.convert.ConverterManager.getIntervalConverter(java.lang.Object)" from="(&quot;No interval converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No interval converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) - 1)" />
    <mutant id="mutant_1719" viable="true" in="org.joda.time.chrono.BasicYearDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) - 1" />
    <mutant id="mutant_1717" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)" from="workInstant + ((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK)))" to="(workInstant + ((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK)))) + 1" />
    <mutant id="mutant_1718" viable="true" in="org.joda.time.chrono.BasicYearDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) * -1" />
    <mutant id="mutant_1715" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)" from="workInstant + ((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK)))" to="(workInstant + ((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK)))) * -1" />
    <mutant id="mutant_1716" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)" from="workInstant + ((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK)))" to="(workInstant + ((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK)))) - 1" />
    <mutant id="mutant_1713" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)" from="((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK)))" to="(((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))) - 1)" />
    <mutant id="mutant_1714" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)" from="((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK)))" to="(((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))) * -1)" />
    <mutant id="mutant_1711" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)" from="(setToWeek - currentWoyWeek)" to="((setToWeek - currentWoyWeek) - 1)" />
    <mutant id="mutant_1712" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)" from="((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK)))" to="(((setToWeek - currentWoyWeek) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))) + 1)" />
    <mutant id="mutant_1710" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)" from="(setToWeek - currentWoyWeek)" to="((setToWeek - currentWoyWeek) + 1)" />
    <mutant id="mutant_1708" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)" from="((long)(DateTimeConstants.MILLIS_PER_WEEK)) * (wow - 1)" to="(((long)(DateTimeConstants.MILLIS_PER_WEEK)) * (wow - 1)) - 1" />
    <mutant id="mutant_1709" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)" from="(setToWeek - currentWoyWeek)" to="((setToWeek - currentWoyWeek) * -1)" />
    <mutant id="mutant_1706" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)" from="((long)(DateTimeConstants.MILLIS_PER_WEEK)) * (wow - 1)" to="(((long)(DateTimeConstants.MILLIS_PER_WEEK)) * (wow - 1)) + 1" />
    <mutant id="mutant_1707" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)" from="((long)(DateTimeConstants.MILLIS_PER_WEEK)) * (wow - 1)" to="(((long)(DateTimeConstants.MILLIS_PER_WEEK)) * (wow - 1)) * -1" />
    <mutant id="mutant_1704" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)" from="(wow - 1)" to="((wow - 1) - 1)" />
    <mutant id="mutant_1705" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)" from="(wow - 1)" to="((wow - 1) * -1)" />
    <mutant id="mutant_1702" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) + 1" />
    <mutant id="mutant_1703" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)" from="(wow - 1)" to="((wow - 1) + 1)" />
    <mutant id="mutant_1700" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) * -1" />
    <mutant id="mutant_1701" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) - 1" />
    <mutant id="mutant_1751" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears)" to="(((relativeYear * 365L) + leapYears) + 1)" />
    <mutant id="mutant_1752" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_1750" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears)" to="(((relativeYear * 365L) + leapYears) * -1)" />
    <mutant id="mutant_1759" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_1757" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="(365L - 112)" to="((365L - 112) - 1)" />
    <mutant id="mutant_1758" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_1755" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="(365L - 112)" to="((365L - 112) + 1)" />
    <mutant id="mutant_1756" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="(365L - 112)" to="((365L - 112) * -1)" />
    <mutant id="mutant_1753" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_1754" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((relativeYear * 365L) + leapYears) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_1740" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="year - 1687" to="(year - 1687) + 1" />
    <mutant id="mutant_1741" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="year - 1687" to="(year - 1687) - 1" />
    <mutant id="mutant_1748" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear * 365L)" to="((relativeYear * 365L) + 1)" />
    <mutant id="mutant_1749" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears)" to="(((relativeYear * 365L) + leapYears) - 1)" />
    <mutant id="mutant_1746" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear * 365L)" to="((relativeYear * 365L) * -1)" />
    <mutant id="mutant_1747" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear * 365L)" to="((relativeYear * 365L) - 1)" />
    <mutant id="mutant_1744" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear + 3)" to="((relativeYear + 3) - 1)" />
    <mutant id="mutant_1745" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear + 3)" to="((relativeYear + 3) + 1)" />
    <mutant id="mutant_1742" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="year - 1687" to="(year - 1687) * -1" />
    <mutant id="mutant_1743" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear + 3)" to="((relativeYear + 3) * -1)" />
    <mutant id="mutant_900" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; (!second))" to="(!(hour &amp;&amp; (!second)))" />
    <mutant id="mutant_901" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="(!((hour &amp;&amp; (!second)) &amp;&amp; (!milli)))" />
    <mutant id="mutant_902" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second) || ((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="!(((hour &amp;&amp; minute) &amp;&amp; second) || ((hour &amp;&amp; (!second)) &amp;&amp; (!milli)))" />
    <mutant id="mutant_1739" viable="true" in="org.joda.time.chrono.CopticChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="!(((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant)))" />
    <mutant id="mutant_907" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; second)" to="(!(minute &amp;&amp; second))" />
    <mutant id="mutant_908" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; (!milli))" to="(!(minute &amp;&amp; (!milli)))" />
    <mutant id="mutant_909" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((minute &amp;&amp; second) || (minute &amp;&amp; (!milli)))" to="(!((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))))" />
    <mutant id="mutant_903" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; datePresent" to="!(strictISO &amp;&amp; datePresent)" />
    <mutant id="mutant_904" viable="false" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(&quot;No valid ISO8601 format for fields because Time was truncated: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields because Time was truncated: &quot; + fields) * -1)" />
    <mutant id="mutant_905" viable="false" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(&quot;No valid ISO8601 format for fields because Time was truncated: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields because Time was truncated: &quot; + fields) - 1)" />
    <mutant id="mutant_906" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(&quot;No valid ISO8601 format for fields because Time was truncated: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields because Time was truncated: &quot; + fields) + 1)" />
    <mutant id="mutant_1730" viable="true" in="org.joda.time.chrono.BuddhistChronology.toString()" from="(str + '[')" to="((str + '[') + 1)" />
    <mutant id="mutant_1737" viable="true" in="org.joda.time.chrono.BuddhistChronology.toString()" from="((str + '[') + (zone.getID())) + ']'" to="(((str + '[') + (zone.getID())) + ']') + 1" />
    <mutant id="mutant_1738" viable="false" in="org.joda.time.chrono.BuddhistChronology.toString()" from="((str + '[') + (zone.getID())) + ']'" to="(((str + '[') + (zone.getID())) + ']') - 1" />
    <mutant id="mutant_1735" viable="true" in="org.joda.time.chrono.BuddhistChronology.toString()" from="((str + '[') + (zone.getID()))" to="(((str + '[') + (zone.getID())) + 1)" />
    <mutant id="mutant_1736" viable="false" in="org.joda.time.chrono.BuddhistChronology.toString()" from="((str + '[') + (zone.getID())) + ']'" to="(((str + '[') + (zone.getID())) + ']') * -1" />
    <mutant id="mutant_1733" viable="false" in="org.joda.time.chrono.BuddhistChronology.toString()" from="((str + '[') + (zone.getID()))" to="(((str + '[') + (zone.getID())) - 1)" />
    <mutant id="mutant_1734" viable="false" in="org.joda.time.chrono.BuddhistChronology.toString()" from="((str + '[') + (zone.getID()))" to="(((str + '[') + (zone.getID())) * -1)" />
    <mutant id="mutant_1731" viable="false" in="org.joda.time.chrono.BuddhistChronology.toString()" from="(str + '[')" to="((str + '[') * -1)" />
    <mutant id="mutant_1732" viable="false" in="org.joda.time.chrono.BuddhistChronology.toString()" from="(str + '[')" to="((str + '[') - 1)" />
    <mutant id="mutant_910" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="(!(((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second))" />
    <mutant id="mutant_911" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(!hour) &amp;&amp; (((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="!((!hour) &amp;&amp; (((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second))" />
    <mutant id="mutant_912" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(&quot;No valid ISO8601 format for fields: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields: &quot; + fields) + 1)" />
    <mutant id="mutant_913" viable="false" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(&quot;No valid ISO8601 format for fields: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields: &quot; + fields) - 1)" />
    <mutant id="mutant_1728" viable="true" in="org.joda.time.chrono.BuddhistChronology.hashCode()" from="((&quot;Buddhist&quot;.hashCode()) * 11) + (getZone().hashCode())" to="(((&quot;Buddhist&quot;.hashCode()) * 11) + (getZone().hashCode())) - 1" />
    <mutant id="mutant_1729" viable="true" in="org.joda.time.chrono.BuddhistChronology.hashCode()" from="((&quot;Buddhist&quot;.hashCode()) * 11) + (getZone().hashCode())" to="(((&quot;Buddhist&quot;.hashCode()) * 11) + (getZone().hashCode())) * -1" />
    <mutant id="mutant_918" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour) &amp;&amp; minute" to="!((extended &amp;&amp; hour) &amp;&amp; minute)" />
    <mutant id="mutant_919" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="second || milli" to="!(second || milli)" />
    <mutant id="mutant_914" viable="false" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(&quot;No valid ISO8601 format for fields: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields: &quot; + fields) * -1)" />
    <mutant id="mutant_915" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second)" to="(!(minute || second))" />
    <mutant id="mutant_916" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second) || milli" to="!((minute || second) || milli)" />
    <mutant id="mutant_917" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour)" to="(!(extended &amp;&amp; hour))" />
    <mutant id="mutant_1726" viable="true" in="org.joda.time.chrono.BuddhistChronology.hashCode()" from="((&quot;Buddhist&quot;.hashCode()) * 11)" to="(((&quot;Buddhist&quot;.hashCode()) * 11) * -1)" />
    <mutant id="mutant_1727" viable="true" in="org.joda.time.chrono.BuddhistChronology.hashCode()" from="((&quot;Buddhist&quot;.hashCode()) * 11) + (getZone().hashCode())" to="(((&quot;Buddhist&quot;.hashCode()) * 11) + (getZone().hashCode())) + 1" />
    <mutant id="mutant_1724" viable="true" in="org.joda.time.chrono.BuddhistChronology.hashCode()" from="((&quot;Buddhist&quot;.hashCode()) * 11)" to="(((&quot;Buddhist&quot;.hashCode()) * 11) - 1)" />
    <mutant id="mutant_1725" viable="true" in="org.joda.time.chrono.BuddhistChronology.hashCode()" from="((&quot;Buddhist&quot;.hashCode()) * 11)" to="(((&quot;Buddhist&quot;.hashCode()) * 11) + 1)" />
    <mutant id="mutant_1722" viable="true" in="org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(long)" from="(year + 1)" to="((year + 1) - 1)" />
    <mutant id="mutant_1723" viable="true" in="org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(long)" from="(year + 1)" to="((year + 1) * -1)" />
    <mutant id="mutant_1720" viable="true" in="org.joda.time.chrono.BasicYearDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) + 1" />
    <mutant id="mutant_1721" viable="true" in="org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(long)" from="(year + 1)" to="((year + 1) + 1)" />
    <mutant id="mutant_921" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute) &amp;&amp; second" to="!((extended &amp;&amp; minute) &amp;&amp; second)" />
    <mutant id="mutant_922" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getParser(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="!((locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale()))))" />
    <mutant id="mutant_923" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getPrinter(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="!((locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale()))))" />
    <mutant id="mutant_924" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(!((locale != null) &amp;&amp; (locale.equals(getLocale()))))" />
    <mutant id="mutant_920" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute)" to="(!(extended &amp;&amp; minute))" />
    <mutant id="mutant_929" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_925" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="!((locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale()))))" />
    <mutant id="mutant_926" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="(sum &lt; stopAt) &amp;&amp; ((--i) &gt;= 0)" to="!((sum &lt; stopAt) &amp;&amp; ((--i) &gt;= 0))" />
    <mutant id="mutant_927" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="!((i &lt; len) &amp;&amp; (position &gt;= 0))" />
    <mutant id="mutant_928" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_1795" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear * 365L)" to="((relativeYear * 365L) * -1)" />
    <mutant id="mutant_1796" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear * 365L)" to="((relativeYear * 365L) - 1)" />
    <mutant id="mutant_1793" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear + 3)" to="((relativeYear + 3) - 1)" />
    <mutant id="mutant_1794" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear + 3)" to="((relativeYear + 3) + 1)" />
    <mutant id="mutant_1791" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="year - 1963" to="(year - 1963) - 1" />
    <mutant id="mutant_1792" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear + 3)" to="((relativeYear + 3) * -1)" />
    <mutant id="mutant_1790" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="year - 1963" to="(year - 1963) + 1" />
    <mutant id="mutant_1799" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears)" to="(((relativeYear * 365L) + leapYears) * -1)" />
    <mutant id="mutant_1797" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="(relativeYear * 365L)" to="((relativeYear * 365L) + 1)" />
    <mutant id="mutant_1798" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="((relativeYear * 365L) + leapYears)" to="(((relativeYear * 365L) + leapYears) - 1)" />
    <mutant id="mutant_932" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(leftText + rightText)" to="((leftText + rightText) + 1)" />
    <mutant id="mutant_933" viable="false" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(leftText + rightText)" to="((leftText + rightText) - 1)" />
    <mutant id="mutant_934" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.calculatePrintedLength(int)" from="(iLeft.calculatePrintedLength(value)) + (iRight.calculatePrintedLength(value))" to="((iLeft.calculatePrintedLength(value)) + (iRight.calculatePrintedLength(value))) * -1" />
    <mutant id="mutant_935" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.calculatePrintedLength(int)" from="(iLeft.calculatePrintedLength(value)) + (iRight.calculatePrintedLength(value))" to="((iLeft.calculatePrintedLength(value)) + (iRight.calculatePrintedLength(value))) + 1" />
    <mutant id="mutant_930" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_931" viable="false" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(leftText + rightText)" to="((leftText + rightText) * -1)" />
    <mutant id="mutant_936" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.calculatePrintedLength(int)" from="(iLeft.calculatePrintedLength(value)) + (iRight.calculatePrintedLength(value))" to="((iLeft.calculatePrintedLength(value)) + (iRight.calculatePrintedLength(value))) - 1" />
    <mutant id="mutant_937" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)" from="((parse(periodStr, pos)) - pos)" to="(((parse(periodStr, pos)) - pos) - 1)" />
    <mutant id="mutant_938" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)" from="((parse(periodStr, pos)) - pos)" to="(((parse(periodStr, pos)) - pos) + 1)" />
    <mutant id="mutant_939" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)" from="((parse(periodStr, pos)) - pos)" to="(((parse(periodStr, pos)) - pos) * -1)" />
    <mutant id="mutant_1784" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_1785" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_1782" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_1783" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_1780" viable="false" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) - 1)" />
    <mutant id="mutant_1781" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) + 1)" />
    <mutant id="mutant_1788" viable="true" in="org.joda.time.chrono.EthiopicChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="!(((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant)))" />
    <mutant id="mutant_1789" viable="true" in="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)" from="year - 1963" to="(year - 1963) * -1" />
    <mutant id="mutant_1786" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_1787" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_943" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)" from="((iRight.parse(periodStr, rightPosition)) - leftPosition)" to="(((iRight.parse(periodStr, rightPosition)) - leftPosition) - 1)" />
    <mutant id="mutant_944" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)" from="((rightPosition &gt;= 0) &amp;&amp; (matchesOtherAffix(((iRight.parse(periodStr, rightPosition)) - leftPosition), periodStr, position)))" to="(!((rightPosition &gt;= 0) &amp;&amp; (matchesOtherAffix(((iRight.parse(periodStr, rightPosition)) - leftPosition), periodStr, position))))" />
    <mutant id="mutant_945" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported(org.joda.time.PeriodType,int)" from="(type.isSupported(org.joda.time.DurationFieldType.seconds())) || (type.isSupported(org.joda.time.DurationFieldType.millis()))" to="!((type.isSupported(org.joda.time.DurationFieldType.seconds())) || (type.isSupported(org.joda.time.DurationFieldType.millis())))" />
    <mutant id="mutant_946" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND))" to="(((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) * -1)" />
    <mutant id="mutant_940" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)" from="(pos &gt;= 0) &amp;&amp; (matchesOtherAffix(((parse(periodStr, pos)) - pos), periodStr, position))" to="!((pos &gt;= 0) &amp;&amp; (matchesOtherAffix(((parse(periodStr, pos)) - pos), periodStr, position)))" />
    <mutant id="mutant_941" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)" from="((iRight.parse(periodStr, rightPosition)) - leftPosition)" to="(((iRight.parse(periodStr, rightPosition)) - leftPosition) * -1)" />
    <mutant id="mutant_942" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)" from="((iRight.parse(periodStr, rightPosition)) - leftPosition)" to="(((iRight.parse(periodStr, rightPosition)) - leftPosition) + 1)" />
    <mutant id="mutant_947" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND))" to="(((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) - 1)" />
    <mutant id="mutant_948" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND))" to="(((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) + 1)" />
    <mutant id="mutant_949" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)) &amp;&amp; (((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) == 0)" to="!(((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)) &amp;&amp; (((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) == 0))" />
    <mutant id="mutant_1773" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2" to="(((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2) + 1" />
    <mutant id="mutant_1774" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2" to="(((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2) - 1" />
    <mutant id="mutant_1771" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY)))" to="(((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) - 1)" />
    <mutant id="mutant_1772" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY)))" to="(((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) + 1)" />
    <mutant id="mutant_1770" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY)))" to="(((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) * -1)" />
    <mutant id="mutant_1779" viable="false" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) * -1)" />
    <mutant id="mutant_1777" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_1778" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_1775" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2" to="(((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + (112L * (DateTimeConstants.MILLIS_PER_DAY))) / 2) * -1" />
    <mutant id="mutant_1776" viable="true" in="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_954" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_955" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_956" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_957" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) - 1)" />
    <mutant id="mutant_950" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="valueLong / (DateTimeConstants.MILLIS_PER_SECOND)" to="(valueLong / (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_951" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="valueLong / (DateTimeConstants.MILLIS_PER_SECOND)" to="(valueLong / (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_952" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="valueLong / (DateTimeConstants.MILLIS_PER_SECOND)" to="(valueLong / (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_953" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="((iPrintZeroSetting) == (PeriodFormatterBuilder.PRINT_ZERO_ALWAYS)) || ((getFieldValue(period)) != (Long.MAX_VALUE))" to="!(((iPrintZeroSetting) == (PeriodFormatterBuilder.PRINT_ZERO_ALWAYS)) || ((getFieldValue(period)) != (Long.MAX_VALUE)))" />
    <mutant id="mutant_958" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + 1)" />
    <mutant id="mutant_959" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="((value &lt;&lt; 3) + (value &lt;&lt; 1))" to="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) * -1)" />
    <mutant id="mutant_1762" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_1763" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_1760" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_1761" viable="true" in="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)" from="millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))" to="(millis + ((365L - 112) * (DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_1768" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="(112L * (DateTimeConstants.MILLIS_PER_DAY))" to="((112L * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_1769" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="(112L * (DateTimeConstants.MILLIS_PER_DAY))" to="((112L * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_1766" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="(1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR))" to="((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) + 1)" />
    <mutant id="mutant_1767" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="(112L * (DateTimeConstants.MILLIS_PER_DAY))" to="((112L * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_1764" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="(1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR))" to="((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) * -1)" />
    <mutant id="mutant_1765" viable="true" in="org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo()" from="(1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR))" to="((1686L * (BasicFixedMonthChronology.MILLIS_PER_YEAR)) - 1)" />
    <mutant id="mutant_965" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++))) - '0') + 1" />
    <mutant id="mutant_966" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iSuffix) != null) &amp;&amp; (!mustParse)" to="!(((iSuffix) != null) &amp;&amp; (!mustParse))" />
    <mutant id="mutant_967" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(!mustParse) &amp;&amp; (!(isSupported(period.getPeriodType(), iFieldType)))" to="!((!mustParse) &amp;&amp; (!(isSupported(period.getPeriodType(), iFieldType))))" />
    <mutant id="mutant_968" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(suffixPos - position)" to="((suffixPos - position) * -1)" />
    <mutant id="mutant_961" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++)))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++))) + 1)" />
    <mutant id="mutant_962" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++)))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++))) * -1)" />
    <mutant id="mutant_963" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++))) - '0') - 1" />
    <mutant id="mutant_964" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++))) - '0'" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++))) - '0') * -1" />
    <mutant id="mutant_969" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(suffixPos - position)" to="((suffixPos - position) - 1)" />
    <mutant id="mutant_2202" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_3534" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType))" to="((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + 1)" />
    <mutant id="mutant_2203" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_3533" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType))" to="((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) * -1)" />
    <mutant id="mutant_2200" viable="true" in="org.joda.time.chrono.JulianChronology.getAverageMillisPerYearDividedByTwo()" from="(JulianChronology.MILLIS_PER_YEAR) / 2" to="((JulianChronology.MILLIS_PER_YEAR) / 2) - 1" />
    <mutant id="mutant_3532" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType))" to="((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) - 1)" />
    <mutant id="mutant_2201" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_3531" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;)" to="(((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + 1)" />
    <mutant id="mutant_3530" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;)" to="(((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) - 1)" />
    <mutant id="mutant_2208" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_960" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)" from="(((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++)))" to="((((value &lt;&lt; 3) + (value &lt;&lt; 1)) + (text.charAt(position++))) - 1)" />
    <mutant id="mutant_2209" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_3539" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear))" to="((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) * -1)" />
    <mutant id="mutant_2206" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) + 1)" />
    <mutant id="mutant_3538" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear))" to="((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + 1)" />
    <mutant id="mutant_2207" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_3537" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;)" to="(((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2204" viable="false" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) * -1)" />
    <mutant id="mutant_3536" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;)" to="(((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_2205" viable="false" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek)" to="((&quot;Invalid min days in first week: &quot; + minDaysInFirstWeek) - 1)" />
    <mutant id="mutant_3535" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;)" to="(((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_976" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_977" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '-') || (c == '+'))" to="(!((c == '-') || (c == '+')))" />
    <mutant id="mutant_978" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="(!((length == 0) &amp;&amp; ((c == '-') || (c == '+'))))" />
    <mutant id="mutant_979" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (!(iRejectSignedValues))" to="!(((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (!(iRejectSignedValues)))" />
    <mutant id="mutant_972" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((text.length()) - position)" to="(((text.length()) - position) - 1)" />
    <mutant id="mutant_973" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((text.length()) - position)" to="(((text.length()) - position) + 1)" />
    <mutant id="mutant_974" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_975" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_3523" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear))" to="(((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) * -1)" />
    <mutant id="mutant_3522" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;)" to="((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + 1)" />
    <mutant id="mutant_3521" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;)" to="((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) * -1)" />
    <mutant id="mutant_3520" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;)" to="((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) - 1)" />
    <mutant id="mutant_970" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(suffixPos - position)" to="((suffixPos - position) + 1)" />
    <mutant id="mutant_3529" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;)" to="(((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) * -1)" />
    <mutant id="mutant_971" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((text.length()) - position)" to="(((text.length()) - position) * -1)" />
    <mutant id="mutant_3528" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;)" to="((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_3527" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;)" to="((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_3526" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;)" to="((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_3525" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear))" to="(((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + 1)" />
    <mutant id="mutant_3524" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear))" to="(((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) - 1)" />
    <mutant id="mutant_987" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position + length) + 1)" to="(((position + length) + 1) + 1)" />
    <mutant id="mutant_988" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position + length) + 1)" to="(((position + length) + 1) - 1)" />
    <mutant id="mutant_989" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="(!(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')))" />
    <mutant id="mutant_983" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_984" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_985" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_986" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position + length) + 1)" to="(((position + length) + 1) * -1)" />
    <mutant id="mutant_3512" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;)" to="(((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) - 1)" />
    <mutant id="mutant_3511" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;)" to="(((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) * -1)" />
    <mutant id="mutant_3510" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;)" to="((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_980" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(length + 1)" to="((length + 1) - 1)" />
    <mutant id="mutant_3519" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;)" to="(((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_981" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(length + 1)" to="((length + 1) * -1)" />
    <mutant id="mutant_3518" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;)" to="(((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_982" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(length + 1)" to="((length + 1) + 1)" />
    <mutant id="mutant_3517" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;)" to="(((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_3516" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear))" to="((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) * -1)" />
    <mutant id="mutant_3515" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear))" to="((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + 1)" />
    <mutant id="mutant_3514" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear))" to="((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) - 1)" />
    <mutant id="mutant_3513" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;)" to="(((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + 1)" />
    <mutant id="mutant_998" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ','))" to="(!((c == '.') || (c == ',')))" />
    <mutant id="mutant_999" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="(!(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))))" />
    <mutant id="mutant_994" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((text.length()) - position)" to="(((text.length()) - position) * -1)" />
    <mutant id="mutant_995" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((text.length()) - position)" to="(((text.length()) - position) - 1)" />
    <mutant id="mutant_996" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((text.length()) - position)" to="(((text.length()) - position) + 1)" />
    <mutant id="mutant_997" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="!((c &gt;= '0') &amp;&amp; (c &lt;= '9'))" />
    <mutant id="mutant_3501" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(left + (iLetterS)) + right" to="((left + (iLetterS)) + right) + 1" />
    <mutant id="mutant_3500" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)" from="(left + (iLetterS)) + right" to="((left + (iLetterS)) + right) - 1" />
    <mutant id="mutant_990" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="!((((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9'))" />
    <mutant id="mutant_3509" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;)" to="((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_991" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(limit + 1)" to="((limit + 1) + 1)" />
    <mutant id="mutant_3508" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;)" to="((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_992" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(limit + 1)" to="((limit + 1) * -1)" />
    <mutant id="mutant_3507" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName))" to="(((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) * -1)" />
    <mutant id="mutant_993" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(limit + 1)" to="((limit + 1) - 1)" />
    <mutant id="mutant_3506" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName))" to="(((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) - 1)" />
    <mutant id="mutant_3505" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName))" to="(((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + 1)" />
    <mutant id="mutant_3504" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(&quot;[Rule]\n&quot; + &quot;Name: &quot;)" to="((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + 1)" />
    <mutant id="mutant_3503" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(&quot;[Rule]\n&quot; + &quot;Name: &quot;)" to="((&quot;[Rule]\n&quot; + &quot;Name: &quot;) - 1)" />
    <mutant id="mutant_3502" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(&quot;[Rule]\n&quot; + &quot;Name: &quot;)" to="((&quot;[Rule]\n&quot; + &quot;Name: &quot;) * -1)" />
    <mutant id="mutant_3581" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules))" to="(((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) * -1)" />
    <mutant id="mutant_2250" viable="true" in="org.joda.time.chrono.LimitChronology.toString()" from="(((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString())) + ']'" to="((((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString())) + ']') + 1" />
    <mutant id="mutant_3580" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules))" to="(((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + (iRules)) + 1)" />
    <mutant id="mutant_2246" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="(((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString()))" to="((((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString())) * -1)" />
    <mutant id="mutant_3578" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;)" to="((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) - 1)" />
    <mutant id="mutant_2247" viable="true" in="org.joda.time.chrono.LimitChronology.toString()" from="(((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString()))" to="((((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString())) + 1)" />
    <mutant id="mutant_3577" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;)" to="((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) + 1)" />
    <mutant id="mutant_2244" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;)" to="(((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) * -1)" />
    <mutant id="mutant_3576" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;)" to="(((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_2245" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="(((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString()))" to="((((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString())) - 1)" />
    <mutant id="mutant_3575" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;)" to="(((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2242" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;)" to="(((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) - 1)" />
    <mutant id="mutant_3574" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;)" to="(((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_2243" viable="true" in="org.joda.time.chrono.LimitChronology.toString()" from="((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;)" to="(((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + 1)" />
    <mutant id="mutant_3573" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis))" to="((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) - 1)" />
    <mutant id="mutant_2240" viable="true" in="org.joda.time.chrono.LimitChronology.toString()" from="(((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString()))" to="((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + 1)" />
    <mutant id="mutant_3572" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis))" to="((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) * -1)" />
    <mutant id="mutant_2241" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="(((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString()))" to="((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) - 1)" />
    <mutant id="mutant_3571" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis))" to="((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + 1)" />
    <mutant id="mutant_2248" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="(((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString())) + ']'" to="((((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString())) + ']') - 1" />
    <mutant id="mutant_2249" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="(((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString())) + ']'" to="((((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) + &quot;, &quot;) + ((getUpperLimit()) == null ? &quot;NoLimit&quot; : getUpperLimit().toString())) + ']') * -1" />
    <mutant id="mutant_3579" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;)" to="((((((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + (iOffsetMillis)) + &quot;\n&quot;) + &quot;Rules: &quot;) * -1)" />
    <mutant id="mutant_3570" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;)" to="(((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) * -1)" />
    <mutant id="mutant_2235" viable="true" in="org.joda.time.chrono.LimitChronology.toString()" from="(&quot;LimitChronology[&quot; + (getBase().toString()))" to="((&quot;LimitChronology[&quot; + (getBase().toString())) + 1)" />
    <mutant id="mutant_3567" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;)" to="((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_2236" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;)" to="(((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) * -1)" />
    <mutant id="mutant_3566" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;)" to="((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_2233" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="(&quot;LimitChronology[&quot; + (getBase().toString()))" to="((&quot;LimitChronology[&quot; + (getBase().toString())) * -1)" />
    <mutant id="mutant_3565" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;)" to="((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2234" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="(&quot;LimitChronology[&quot; + (getBase().toString()))" to="((&quot;LimitChronology[&quot; + (getBase().toString())) - 1)" />
    <mutant id="mutant_3564" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName))" to="(((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + 1)" />
    <mutant id="mutant_2231" viable="true" in="org.joda.time.chrono.LimitChronology.hashCode()" from="(getBase().hashCode()) * 7" to="((getBase().hashCode()) * 7) * -1" />
    <mutant id="mutant_3563" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName))" to="(((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) * -1)" />
    <mutant id="mutant_2232" viable="true" in="org.joda.time.chrono.LimitChronology.hashCode()" from="(getBase().hashCode()) * 7" to="((getBase().hashCode()) * 7) + 1" />
    <mutant id="mutant_3562" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName))" to="(((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) - 1)" />
    <mutant id="mutant_3561" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(&quot;[Zone]\n&quot; + &quot;Name: &quot;)" to="((&quot;[Zone]\n&quot; + &quot;Name: &quot;) - 1)" />
    <mutant id="mutant_2230" viable="true" in="org.joda.time.chrono.LimitChronology.hashCode()" from="(getBase().hashCode()) * 7" to="((getBase().hashCode()) * 7) - 1" />
    <mutant id="mutant_3560" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(&quot;[Zone]\n&quot; + &quot;Name: &quot;)" to="((&quot;[Zone]\n&quot; + &quot;Name: &quot;) * -1)" />
    <mutant id="mutant_2239" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="(((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString()))" to="((((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + ((getLowerLimit()) == null ? &quot;NoLimit&quot; : getLowerLimit().toString())) * -1)" />
    <mutant id="mutant_2237" viable="true" in="org.joda.time.chrono.LimitChronology.toString()" from="((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;)" to="(((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) + 1)" />
    <mutant id="mutant_3569" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;)" to="(((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) + 1)" />
    <mutant id="mutant_2238" viable="false" in="org.joda.time.chrono.LimitChronology.toString()" from="((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;)" to="(((&quot;LimitChronology[&quot; + (getBase().toString())) + &quot;, &quot;) - 1)" />
    <mutant id="mutant_3568" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;)" to="(((((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;OffsetMillis: &quot;) - 1)" />
    <mutant id="mutant_2224" viable="false" in="org.joda.time.chrono.LenientChronology.toString()" from="(&quot;LenientChronology[&quot; + (getBase().toString())) + ']'" to="((&quot;LenientChronology[&quot; + (getBase().toString())) + ']') - 1" />
    <mutant id="mutant_3556" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS)) + &quot;\n&quot;" to="(((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS)) + &quot;\n&quot;) + 1" />
    <mutant id="mutant_2225" viable="false" in="org.joda.time.chrono.LimitChronology$LimitException.toString()" from="&quot;IllegalArgumentException: &quot; + (getMessage())" to="(&quot;IllegalArgumentException: &quot; + (getMessage())) - 1" />
    <mutant id="mutant_3555" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS))" to="(((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS)) * -1)" />
    <mutant id="mutant_2222" viable="false" in="org.joda.time.chrono.LenientChronology.toString()" from="(&quot;LenientChronology[&quot; + (getBase().toString())) + ']'" to="((&quot;LenientChronology[&quot; + (getBase().toString())) + ']') * -1" />
    <mutant id="mutant_3554" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS))" to="(((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS)) - 1)" />
    <mutant id="mutant_2223" viable="true" in="org.joda.time.chrono.LenientChronology.toString()" from="(&quot;LenientChronology[&quot; + (getBase().toString())) + ']'" to="((&quot;LenientChronology[&quot; + (getBase().toString())) + ']') + 1" />
    <mutant id="mutant_3553" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS))" to="(((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS)) + 1)" />
    <mutant id="mutant_2220" viable="true" in="org.joda.time.chrono.LenientChronology.toString()" from="(&quot;LenientChronology[&quot; + (getBase().toString()))" to="((&quot;LenientChronology[&quot; + (getBase().toString())) + 1)" />
    <mutant id="mutant_3552" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;)" to="((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + 1)" />
    <mutant id="mutant_2221" viable="false" in="org.joda.time.chrono.LenientChronology.toString()" from="(&quot;LenientChronology[&quot; + (getBase().toString()))" to="((&quot;LenientChronology[&quot; + (getBase().toString())) - 1)" />
    <mutant id="mutant_3551" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;)" to="((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) * -1)" />
    <mutant id="mutant_3550" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;)" to="((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) - 1)" />
    <mutant id="mutant_2228" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())))" to="(!((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))))" />
    <mutant id="mutant_2229" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))) &amp;&amp; (FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()))" to="!(((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))) &amp;&amp; (FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit())))" />
    <mutant id="mutant_3559" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()" from="(&quot;[Zone]\n&quot; + &quot;Name: &quot;)" to="((&quot;[Zone]\n&quot; + &quot;Name: &quot;) + 1)" />
    <mutant id="mutant_2226" viable="true" in="org.joda.time.chrono.LimitChronology$LimitException.toString()" from="&quot;IllegalArgumentException: &quot; + (getMessage())" to="(&quot;IllegalArgumentException: &quot; + (getMessage())) + 1" />
    <mutant id="mutant_3558" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS)) + &quot;\n&quot;" to="(((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS)) + &quot;\n&quot;) * -1" />
    <mutant id="mutant_2227" viable="false" in="org.joda.time.chrono.LimitChronology$LimitException.toString()" from="&quot;IllegalArgumentException: &quot; + (getMessage())" to="(&quot;IllegalArgumentException: &quot; + (getMessage())) * -1" />
    <mutant id="mutant_3557" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS)) + &quot;\n&quot;" to="(((((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + &quot;LetterS: &quot;) + (iLetterS)) + &quot;\n&quot;) - 1" />
    <mutant id="mutant_2213" viable="true" in="org.joda.time.chrono.LenientChronology.hashCode()" from="((getBase().hashCode()) * 7)" to="(((getBase().hashCode()) * 7) - 1)" />
    <mutant id="mutant_3545" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis))" to="((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) - 1)" />
    <mutant id="mutant_2214" viable="true" in="org.joda.time.chrono.LenientChronology.hashCode()" from="((getBase().hashCode()) * 7)" to="(((getBase().hashCode()) * 7) * -1)" />
    <mutant id="mutant_3544" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis))" to="((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) * -1)" />
    <mutant id="mutant_2211" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) - 1)" />
    <mutant id="mutant_3543" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;)" to="(((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + 1)" />
    <mutant id="mutant_2212" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) * -1)" />
    <mutant id="mutant_3542" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;)" to="(((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) - 1)" />
    <mutant id="mutant_3541" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;)" to="(((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) * -1)" />
    <mutant id="mutant_2210" viable="true" in="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)" from="(minDaysInFirstWeek - 1)" to="((minDaysInFirstWeek - 1) + 1)" />
    <mutant id="mutant_3540" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear))" to="((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) - 1)" />
    <mutant id="mutant_2219" viable="false" in="org.joda.time.chrono.LenientChronology.toString()" from="(&quot;LenientChronology[&quot; + (getBase().toString()))" to="((&quot;LenientChronology[&quot; + (getBase().toString())) * -1)" />
    <mutant id="mutant_2217" viable="true" in="org.joda.time.chrono.LenientChronology.hashCode()" from="236548278 + ((getBase().hashCode()) * 7)" to="(236548278 + ((getBase().hashCode()) * 7)) - 1" />
    <mutant id="mutant_3549" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;)" to="(((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_2218" viable="true" in="org.joda.time.chrono.LenientChronology.hashCode()" from="236548278 + ((getBase().hashCode()) * 7)" to="(236548278 + ((getBase().hashCode()) * 7)) + 1" />
    <mutant id="mutant_3548" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;)" to="(((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2215" viable="true" in="org.joda.time.chrono.LenientChronology.hashCode()" from="((getBase().hashCode()) * 7)" to="(((getBase().hashCode()) * 7) + 1)" />
    <mutant id="mutant_3547" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;)" to="(((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_2216" viable="true" in="org.joda.time.chrono.LenientChronology.hashCode()" from="236548278 + ((getBase().hashCode()) * 7)" to="(236548278 + ((getBase().hashCode()) * 7)) * -1" />
    <mutant id="mutant_3546" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$Rule.toString()" from="(((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis))" to="((((((((((((((((&quot;[Rule]\n&quot; + &quot;Name: &quot;) + (iName)) + &quot;\n&quot;) + &quot;FromYear: &quot;) + (iFromYear)) + &quot;\n&quot;) + &quot;ToYear: &quot;) + (iToYear)) + &quot;\n&quot;) + &quot;Type: &quot;) + (iType)) + &quot;\n&quot;) + (iDateTimeOfYear)) + &quot;SaveMillis: &quot;) + (iSaveMillis)) + 1)" />
    <mutant id="mutant_2051" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInMonthMax(int)" from="((--month) % 2)" to="(((--month) % 2) - 1)" />
    <mutant id="mutant_3383" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="!(((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0])))" />
    <mutant id="mutant_2052" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInMonthMax(int)" from="((--month) % 2)" to="(((--month) % 2) * -1)" />
    <mutant id="mutant_3382" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="(!((strings != null) &amp;&amp; ((strings.length) &gt;= 5)))" />
    <mutant id="mutant_3381" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null)) || (nameKey == null)" to="!(((locale == null) || (id == null)) || (nameKey == null))" />
    <mutant id="mutant_2050" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInMonthMax(int)" from="((--month) % 2)" to="(((--month) % 2) + 1)" />
    <mutant id="mutant_3380" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null))" to="(!((locale == null) || (id == null)))" />
    <mutant id="mutant_2048" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH)) + 1" to="(((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH)) + 1) * -1" />
    <mutant id="mutant_2049" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH)) + 1" to="(((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH)) + 1) + 1" />
    <mutant id="mutant_3379" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 38)" to="((64 - 38) + 1)" />
    <mutant id="mutant_2046" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH))" to="(((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH)) - 1)" />
    <mutant id="mutant_3378" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 38)" to="((64 - 38) * -1)" />
    <mutant id="mutant_2047" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH)) + 1" to="(((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH)) + 1) - 1" />
    <mutant id="mutant_3377" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 38)" to="((64 - 38) - 1)" />
    <mutant id="mutant_2044" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH))" to="(((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH)) * -1)" />
    <mutant id="mutant_3376" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 38)" to="((64 - 38) + 1)" />
    <mutant id="mutant_2045" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH))" to="(((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) % (IslamicChronology.LONG_MONTH_LENGTH)) + 1)" />
    <mutant id="mutant_3375" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 38)" to="((64 - 38) * -1)" />
    <mutant id="mutant_2042" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="(doy % (IslamicChronology.MONTH_PAIR_LENGTH))" to="((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) * -1)" />
    <mutant id="mutant_3374" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 38)" to="((64 - 38) - 1)" />
    <mutant id="mutant_2043" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="(doy % (IslamicChronology.MONTH_PAIR_LENGTH))" to="((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) - 1)" />
    <mutant id="mutant_3373" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="millis / 1000L" to="(millis / 1000L) + 1" />
    <mutant id="mutant_2040" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="(getDayOfYear(millis)) - 1" to="((getDayOfYear(millis)) - 1) * -1" />
    <mutant id="mutant_3372" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="millis / 1000L" to="(millis / 1000L) - 1" />
    <mutant id="mutant_2041" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="(doy % (IslamicChronology.MONTH_PAIR_LENGTH))" to="((doy % (IslamicChronology.MONTH_PAIR_LENGTH)) + 1)" />
    <mutant id="mutant_3371" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="millis / 1000L" to="(millis / 1000L) * -1" />
    <mutant id="mutant_3370" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(millis % 1000L)" to="((millis % 1000L) - 1)" />
    <mutant id="mutant_2037" viable="true" in="org.joda.time.chrono.IslamicChronology.equals(java.lang.Object)" from="((getLeapYearPatternType().index) == (chrono.getLeapYearPatternType().index)) &amp;&amp; (super.equals(obj))" to="!(((getLeapYearPatternType().index) == (chrono.getLeapYearPatternType().index)) &amp;&amp; (super.equals(obj)))" />
    <mutant id="mutant_3369" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(millis % 1000L)" to="((millis % 1000L) + 1)" />
    <mutant id="mutant_2038" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="(getDayOfYear(millis)) - 1" to="((getDayOfYear(millis)) - 1) + 1" />
    <mutant id="mutant_3368" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(millis % 1000L)" to="((millis % 1000L) * -1)" />
    <mutant id="mutant_4699" viable="true" in="org.joda.time.YearMonthDay.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) * -1)" />
    <mutant id="mutant_2035" viable="false" in="?" from="((19L * 354L) + (11L * 355L)) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((19L * 354L) + (11L * 355L)) * (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_3367" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 30)" to="((64 - 30) - 1)" />
    <mutant id="mutant_4698" viable="true" in="org.joda.time.YearMonthDay.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) + 1)" />
    <mutant id="mutant_2036" viable="false" in="?" from="((19L * 354L) + (11L * 355L)) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((19L * 354L) + (11L * 355L)) * (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_3366" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 30)" to="((64 - 30) * -1)" />
    <mutant id="mutant_4697" viable="true" in="org.joda.time.YearMonthDay.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_2033" viable="false" in="?" from="((19L * 354L) + (11L * 355L))" to="(((19L * 354L) + (11L * 355L)) + 1)" />
    <mutant id="mutant_3365" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 30)" to="((64 - 30) + 1)" />
    <mutant id="mutant_4696" viable="false" in="org.joda.time.YearMonthDay.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_2034" viable="false" in="?" from="((19L * 354L) + (11L * 355L)) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((19L * 354L) + (11L * 355L)) * (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_3364" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 30)" to="((64 - 30) - 1)" />
    <mutant id="mutant_4695" viable="false" in="org.joda.time.YearMonthDay.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_2031" viable="false" in="?" from="((19L * 354L) + (11L * 355L))" to="(((19L * 354L) + (11L * 355L)) * -1)" />
    <mutant id="mutant_3363" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 30)" to="((64 - 30) * -1)" />
    <mutant id="mutant_4694" viable="true" in="org.joda.time.YearMonth.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_2032" viable="false" in="?" from="((19L * 354L) + (11L * 355L))" to="(((19L * 354L) + (11L * 355L)) - 1)" />
    <mutant id="mutant_3362" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 30)" to="((64 - 30) + 1)" />
    <mutant id="mutant_4693" viable="true" in="org.joda.time.YearMonth.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) + 1)" />
    <mutant id="mutant_2039" viable="true" in="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)" from="(getDayOfYear(millis)) - 1" to="((getDayOfYear(millis)) - 1) - 1" />
    <mutant id="mutant_3361" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="millis / 60000L" to="(millis / 60000L) * -1" />
    <mutant id="mutant_4692" viable="true" in="org.joda.time.YearMonth.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) - 1)" />
    <mutant id="mutant_2030" viable="false" in="?" from="(11L * 355L)" to="((11L * 355L) - 1)" />
    <mutant id="mutant_3360" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="millis / 60000L" to="(millis / 60000L) - 1" />
    <mutant id="mutant_4691" viable="true" in="org.joda.time.YearMonth.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) * -1)" />
    <mutant id="mutant_4690" viable="true" in="org.joda.time.YearMonth.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) + 1)" />
    <mutant id="mutant_2026" viable="false" in="?" from="(19L * 354L)" to="((19L * 354L) - 1)" />
    <mutant id="mutant_3358" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(millis % 60000L)" to="((millis % 60000L) * -1)" />
    <mutant id="mutant_4689" viable="true" in="org.joda.time.YearMonth.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) - 1)" />
    <mutant id="mutant_2027" viable="false" in="?" from="(19L * 354L)" to="((19L * 354L) + 1)" />
    <mutant id="mutant_3357" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(millis % 60000L)" to="((millis % 60000L) - 1)" />
    <mutant id="mutant_4688" viable="true" in="org.joda.time.YearMonth.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) * -1)" />
    <mutant id="mutant_2024" viable="false" in="?" from="355L * (DateTimeConstants.MILLIS_PER_DAY)" to="(355L * (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_3356" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(millis % 60000L)" to="((millis % 60000L) + 1)" />
    <mutant id="mutant_4687" viable="true" in="org.joda.time.YearMonth.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) - 1)" />
    <mutant id="mutant_2025" viable="false" in="?" from="(19L * 354L)" to="((19L * 354L) * -1)" />
    <mutant id="mutant_3355" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 6)" to="((64 - 6) * -1)" />
    <mutant id="mutant_4686" viable="true" in="org.joda.time.YearMonth.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) * -1)" />
    <mutant id="mutant_2022" viable="false" in="?" from="355L * (DateTimeConstants.MILLIS_PER_DAY)" to="(355L * (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_3354" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 6)" to="((64 - 6) + 1)" />
    <mutant id="mutant_4685" viable="true" in="org.joda.time.YearMonth.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) + 1)" />
    <mutant id="mutant_2023" viable="false" in="?" from="355L * (DateTimeConstants.MILLIS_PER_DAY)" to="(355L * (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_3353" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 6)" to="((64 - 6) - 1)" />
    <mutant id="mutant_4684" viable="true" in="org.joda.time.YearMonth.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_2020" viable="false" in="?" from="354L * (DateTimeConstants.MILLIS_PER_DAY)" to="(354L * (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_3352" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 6)" to="((64 - 6) * -1)" />
    <mutant id="mutant_4683" viable="false" in="org.joda.time.YearMonth.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_2021" viable="false" in="?" from="354L * (DateTimeConstants.MILLIS_PER_DAY)" to="(354L * (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_3351" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 6)" to="((64 - 6) + 1)" />
    <mutant id="mutant_4682" viable="false" in="org.joda.time.YearMonth.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_2028" viable="false" in="?" from="(11L * 355L)" to="((11L * 355L) * -1)" />
    <mutant id="mutant_2029" viable="false" in="?" from="(11L * 355L)" to="((11L * 355L) + 1)" />
    <mutant id="mutant_3359" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="millis / 60000L" to="(millis / 60000L) + 1" />
    <mutant id="mutant_3350" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(64 - 6)" to="((64 - 6) - 1)" />
    <mutant id="mutant_4681" viable="true" in="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="!((start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate))" />
    <mutant id="mutant_4680" viable="true" in="org.joda.time.Weeks.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) + 1)" />
    <mutant id="mutant_2015" viable="false" in="?" from="30L * (DateTimeConstants.MILLIS_PER_DAY)" to="(30L * (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_3347" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="millis / (30 * 60000L)" to="(millis / (30 * 60000L)) - 1" />
    <mutant id="mutant_4678" viable="true" in="org.joda.time.Weeks.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) - 1)" />
    <mutant id="mutant_2016" viable="false" in="?" from="((long)(354.36667 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((354.36667 * (DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_3346" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(30 * 60000L)" to="((30 * 60000L) * -1)" />
    <mutant id="mutant_4677" viable="true" in="org.joda.time.Weeks.toStandardDuration()" from="(weeks * (DateTimeConstants.MILLIS_PER_WEEK))" to="((weeks * (DateTimeConstants.MILLIS_PER_WEEK)) - 1)" />
    <mutant id="mutant_2013" viable="false" in="?" from="30L * (DateTimeConstants.MILLIS_PER_DAY)" to="(30L * (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_3345" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(30 * 60000L)" to="((30 * 60000L) + 1)" />
    <mutant id="mutant_4676" viable="true" in="org.joda.time.Weeks.toStandardDuration()" from="(weeks * (DateTimeConstants.MILLIS_PER_WEEK))" to="((weeks * (DateTimeConstants.MILLIS_PER_WEEK)) * -1)" />
    <mutant id="mutant_2014" viable="false" in="?" from="30L * (DateTimeConstants.MILLIS_PER_DAY)" to="(30L * (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_3344" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(30 * 60000L)" to="((30 * 60000L) - 1)" />
    <mutant id="mutant_4675" viable="true" in="org.joda.time.Weeks.toStandardDuration()" from="(weeks * (DateTimeConstants.MILLIS_PER_WEEK))" to="((weeks * (DateTimeConstants.MILLIS_PER_WEEK)) + 1)" />
    <mutant id="mutant_2011" viable="false" in="?" from="((long)(29.53056 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((29.53056 * (DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_3343" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(millis % (30 * 60000L))" to="((millis % (30 * 60000L)) * -1)" />
    <mutant id="mutant_4674" viable="false" in="org.joda.time.Weeks.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;W&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;W&quot;) * -1" />
    <mutant id="mutant_2012" viable="false" in="?" from="((long)(29.53056 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((29.53056 * (DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_3342" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(millis % (30 * 60000L))" to="((millis % (30 * 60000L)) - 1)" />
    <mutant id="mutant_4673" viable="false" in="org.joda.time.Weeks.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;W&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;W&quot;) - 1" />
    <mutant id="mutant_3341" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(millis % (30 * 60000L))" to="((millis % (30 * 60000L)) + 1)" />
    <mutant id="mutant_4672" viable="true" in="org.joda.time.Weeks.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;W&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;W&quot;) + 1" />
    <mutant id="mutant_2010" viable="false" in="?" from="((long)(29.53056 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((29.53056 * (DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_3340" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(30 * 60000L)" to="((30 * 60000L) * -1)" />
    <mutant id="mutant_4671" viable="false" in="org.joda.time.Weeks.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) * -1)" />
    <mutant id="mutant_2019" viable="false" in="?" from="354L * (DateTimeConstants.MILLIS_PER_DAY)" to="(354L * (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_2017" viable="false" in="?" from="((long)(354.36667 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((354.36667 * (DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_3349" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="millis / (30 * 60000L)" to="(millis / (30 * 60000L)) + 1" />
    <mutant id="mutant_2018" viable="false" in="?" from="((long)(354.36667 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((long)((354.36667 * (DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_3348" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="millis / (30 * 60000L)" to="(millis / (30 * 60000L)) * -1" />
    <mutant id="mutant_4679" viable="true" in="org.joda.time.Weeks.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) * -1)" />
    <mutant id="mutant_2095" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(&quot;Year is too large: &quot; + year)" to="((&quot;Year is too large: &quot; + year) - 1)" />
    <mutant id="mutant_2096" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;)" to="(((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;) + 1)" />
    <mutant id="mutant_2093" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(&quot;Year is too large: &quot; + year)" to="((&quot;Year is too large: &quot; + year) + 1)" />
    <mutant id="mutant_2094" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(&quot;Year is too large: &quot; + year)" to="((&quot;Year is too large: &quot; + year) * -1)" />
    <mutant id="mutant_2091" viable="true" in="org.joda.time.chrono.IslamicChronology.hashCode()" from="((super.hashCode()) * 13) + (getLeapYearPatternType().hashCode())" to="(((super.hashCode()) * 13) + (getLeapYearPatternType().hashCode())) - 1" />
    <mutant id="mutant_2092" viable="true" in="org.joda.time.chrono.IslamicChronology.hashCode()" from="((super.hashCode()) * 13) + (getLeapYearPatternType().hashCode())" to="(((super.hashCode()) * 13) + (getLeapYearPatternType().hashCode())) * -1" />
    <mutant id="mutant_2090" viable="true" in="org.joda.time.chrono.IslamicChronology.hashCode()" from="((super.hashCode()) * 13) + (getLeapYearPatternType().hashCode())" to="(((super.hashCode()) * 13) + (getLeapYearPatternType().hashCode())) + 1" />
    <mutant id="mutant_2088" viable="true" in="org.joda.time.chrono.IslamicChronology.hashCode()" from="((super.hashCode()) * 13)" to="(((super.hashCode()) * 13) - 1)" />
    <mutant id="mutant_2089" viable="true" in="org.joda.time.chrono.IslamicChronology.hashCode()" from="((super.hashCode()) * 13)" to="(((super.hashCode()) * 13) + 1)" />
    <mutant id="mutant_2086" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="((int)((cycles * (IslamicChronology.CYCLE)) + 1L))" to="((int)(((cycles * (IslamicChronology.CYCLE)) + 1L))) * -1" />
    <mutant id="mutant_2087" viable="true" in="org.joda.time.chrono.IslamicChronology.hashCode()" from="((super.hashCode()) * 13)" to="(((super.hashCode()) * 13) * -1)" />
    <mutant id="mutant_2084" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="((int)((cycles * (IslamicChronology.CYCLE)) + 1L))" to="((int)(((cycles * (IslamicChronology.CYCLE)) + 1L))) + 1" />
    <mutant id="mutant_2085" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="((int)((cycles * (IslamicChronology.CYCLE)) + 1L))" to="((int)(((cycles * (IslamicChronology.CYCLE)) + 1L))) - 1" />
    <mutant id="mutant_2082" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="(cycles * (IslamicChronology.CYCLE))" to="((cycles * (IslamicChronology.CYCLE)) * -1)" />
    <mutant id="mutant_2083" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="(cycles * (IslamicChronology.CYCLE))" to="((cycles * (IslamicChronology.CYCLE)) - 1)" />
    <mutant id="mutant_2080" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="millisIslamic % (IslamicChronology.MILLIS_PER_CYCLE)" to="(millisIslamic % (IslamicChronology.MILLIS_PER_CYCLE)) + 1" />
    <mutant id="mutant_2081" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="(cycles * (IslamicChronology.CYCLE))" to="((cycles * (IslamicChronology.CYCLE)) + 1)" />
    <mutant id="mutant_2079" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="millisIslamic % (IslamicChronology.MILLIS_PER_CYCLE)" to="(millisIslamic % (IslamicChronology.MILLIS_PER_CYCLE)) - 1" />
    <mutant id="mutant_2077" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="millisIslamic / (IslamicChronology.MILLIS_PER_CYCLE)" to="(millisIslamic / (IslamicChronology.MILLIS_PER_CYCLE)) + 1" />
    <mutant id="mutant_2078" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="millisIslamic % (IslamicChronology.MILLIS_PER_CYCLE)" to="(millisIslamic % (IslamicChronology.MILLIS_PER_CYCLE)) * -1" />
    <mutant id="mutant_2075" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="millisIslamic / (IslamicChronology.MILLIS_PER_CYCLE)" to="(millisIslamic / (IslamicChronology.MILLIS_PER_CYCLE)) - 1" />
    <mutant id="mutant_2076" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="millisIslamic / (IslamicChronology.MILLIS_PER_CYCLE)" to="(millisIslamic / (IslamicChronology.MILLIS_PER_CYCLE)) * -1" />
    <mutant id="mutant_2073" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="instant - (IslamicChronology.MILLIS_YEAR_1)" to="(instant - (IslamicChronology.MILLIS_YEAR_1)) - 1" />
    <mutant id="mutant_2074" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="instant - (IslamicChronology.MILLIS_YEAR_1)" to="(instant - (IslamicChronology.MILLIS_YEAR_1)) + 1" />
    <mutant id="mutant_2071" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH)) + 1" to="(((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH)) + 1) * -1" />
    <mutant id="mutant_2072" viable="true" in="org.joda.time.chrono.IslamicChronology.getYear(long)" from="instant - (IslamicChronology.MILLIS_YEAR_1)" to="(instant - (IslamicChronology.MILLIS_YEAR_1)) * -1" />
    <mutant id="mutant_2070" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH)) + 1" to="(((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH)) + 1) - 1" />
    <mutant id="mutant_2068" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH))" to="(((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH)) * -1)" />
    <mutant id="mutant_2069" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH)) + 1" to="(((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH)) + 1) + 1" />
    <mutant id="mutant_3399" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="(37 * (iStandardOffset))" to="((37 * (iStandardOffset)) + 1)" />
    <mutant id="mutant_2066" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH))" to="(((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH)) - 1)" />
    <mutant id="mutant_3398" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; ((iWallOffset) == (other.iWallOffset))" to="!(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; ((iWallOffset) == (other.iWallOffset)))" />
    <mutant id="mutant_2067" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH))" to="(((doyZeroBased * 2) / (IslamicChronology.MONTH_PAIR_LENGTH)) + 1)" />
    <mutant id="mutant_3397" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="(!((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))))" />
    <mutant id="mutant_2064" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="(doyZeroBased * 2)" to="((doyZeroBased * 2) - 1)" />
    <mutant id="mutant_3396" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="!((setEn != null) &amp;&amp; (setLoc != null))" />
    <mutant id="mutant_2065" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="(doyZeroBased * 2)" to="((doyZeroBased * 2) + 1)" />
    <mutant id="mutant_3395" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="!(((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0])))" />
    <mutant id="mutant_2062" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="((int)((millis - (getYearMillis(year))) / (DateTimeConstants.MILLIS_PER_DAY)))" to="((int)(((millis - (getYearMillis(year))) / (DateTimeConstants.MILLIS_PER_DAY)))) * -1" />
    <mutant id="mutant_3394" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="(!((strings != null) &amp;&amp; ((strings.length) &gt;= 5)))" />
    <mutant id="mutant_2063" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="(doyZeroBased * 2)" to="((doyZeroBased * 2) * -1)" />
    <mutant id="mutant_3393" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="!(((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0])))" />
    <mutant id="mutant_2060" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="((int)((millis - (getYearMillis(year))) / (DateTimeConstants.MILLIS_PER_DAY)))" to="((int)(((millis - (getYearMillis(year))) / (DateTimeConstants.MILLIS_PER_DAY)))) + 1" />
    <mutant id="mutant_3392" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="(!((strings != null) &amp;&amp; ((strings.length) &gt;= 5)))" />
    <mutant id="mutant_2061" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="((int)((millis - (getYearMillis(year))) / (DateTimeConstants.MILLIS_PER_DAY)))" to="((int)(((millis - (getYearMillis(year))) / (DateTimeConstants.MILLIS_PER_DAY)))) - 1" />
    <mutant id="mutant_3391" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null)) || (nameKey == null)" to="!(((locale == null) || (id == null)) || (nameKey == null))" />
    <mutant id="mutant_3390" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null))" to="(!((locale == null) || (id == null)))" />
    <mutant id="mutant_2059" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year)))" to="((millis - (getYearMillis(year))) * -1)" />
    <mutant id="mutant_2057" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year)))" to="((millis - (getYearMillis(year))) + 1)" />
    <mutant id="mutant_3389" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((setEn[4]) + &quot;-Summer&quot;)" to="(((setEn[4]) + &quot;-Summer&quot;) + 1)" />
    <mutant id="mutant_2058" viable="true" in="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year)))" to="((millis - (getYearMillis(year))) - 1)" />
    <mutant id="mutant_3388" viable="false" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((setEn[4]) + &quot;-Summer&quot;)" to="(((setEn[4]) + &quot;-Summer&quot;) - 1)" />
    <mutant id="mutant_2055" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)" from="((--month) % 2)" to="(((--month) % 2) - 1)" />
    <mutant id="mutant_3387" viable="false" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((setEn[4]) + &quot;-Summer&quot;)" to="(((setEn[4]) + &quot;-Summer&quot;) * -1)" />
    <mutant id="mutant_2056" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)" from="((--month) % 2)" to="(((--month) % 2) * -1)" />
    <mutant id="mutant_3386" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="!((setEn != null) &amp;&amp; (setLoc != null))" />
    <mutant id="mutant_2053" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)" from="(month == 12) &amp;&amp; (isLeapYear(year))" to="!((month == 12) &amp;&amp; (isLeapYear(year)))" />
    <mutant id="mutant_3385" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="!(((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0])))" />
    <mutant id="mutant_2054" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)" from="((--month) % 2)" to="(((--month) % 2) + 1)" />
    <mutant id="mutant_3384" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="(!((strings != null) &amp;&amp; ((strings.length) &gt;= 5)))" />
    <mutant id="mutant_2099" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;) + (IslamicChronology.MAX_YEAR))" to="((((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;) + (IslamicChronology.MAX_YEAR)) * -1)" />
    <mutant id="mutant_2097" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;)" to="(((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;) - 1)" />
    <mutant id="mutant_2098" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;)" to="(((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;) * -1)" />
    <mutant id="mutant_2929" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)" from="(value - (get(instant)))" to="((value - (get(instant))) + 1)" />
    <mutant id="mutant_2928" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)" from="(value - (get(instant)))" to="((value - (get(instant))) - 1)" />
    <mutant id="mutant_2927" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)" from="(value - (get(instant)))" to="((value - (get(instant))) * -1)" />
    <mutant id="mutant_2926" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant - (instant % (iUnitMillis))) - (iUnitMillis)" to="((instant - (instant % (iUnitMillis))) - (iUnitMillis)) - 1" />
    <mutant id="mutant_2925" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant - (instant % (iUnitMillis))) - (iUnitMillis)" to="((instant - (instant % (iUnitMillis))) - (iUnitMillis)) * -1" />
    <mutant id="mutant_2924" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant - (instant % (iUnitMillis))) - (iUnitMillis)" to="((instant - (instant % (iUnitMillis))) - (iUnitMillis)) + 1" />
    <mutant id="mutant_2923" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant - (instant % (iUnitMillis)))" to="((instant - (instant % (iUnitMillis))) + 1)" />
    <mutant id="mutant_2922" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant - (instant % (iUnitMillis)))" to="((instant - (instant % (iUnitMillis))) * -1)" />
    <mutant id="mutant_2921" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant - (instant % (iUnitMillis)))" to="((instant - (instant % (iUnitMillis))) - 1)" />
    <mutant id="mutant_2920" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) * -1)" />
    <mutant id="mutant_2919" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) - 1)" />
    <mutant id="mutant_2918" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) + 1)" />
    <mutant id="mutant_2917" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="instant - (instant % (iUnitMillis))" to="(instant - (instant % (iUnitMillis))) + 1" />
    <mutant id="mutant_2916" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="instant - (instant % (iUnitMillis))" to="(instant - (instant % (iUnitMillis))) * -1" />
    <mutant id="mutant_2915" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="instant - (instant % (iUnitMillis))" to="(instant - (instant % (iUnitMillis))) - 1" />
    <mutant id="mutant_2914" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) * -1)" />
    <mutant id="mutant_2913" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) - 1)" />
    <mutant id="mutant_2912" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) + 1)" />
    <mutant id="mutant_2911" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="instant - (instant % (iUnitMillis))" to="(instant - (instant % (iUnitMillis))) + 1" />
    <mutant id="mutant_2910" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="instant - (instant % (iUnitMillis))" to="(instant - (instant % (iUnitMillis))) * -1" />
    <mutant id="mutant_2909" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="instant - (instant % (iUnitMillis))" to="(instant - (instant % (iUnitMillis))) - 1" />
    <mutant id="mutant_2908" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) * -1)" />
    <mutant id="mutant_2907" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) - 1)" />
    <mutant id="mutant_2906" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) + 1)" />
    <mutant id="mutant_2905" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant - (instant % (iUnitMillis))) + (iUnitMillis)" to="((instant - (instant % (iUnitMillis))) + (iUnitMillis)) - 1" />
    <mutant id="mutant_2904" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant - (instant % (iUnitMillis))) + (iUnitMillis)" to="((instant - (instant % (iUnitMillis))) + (iUnitMillis)) * -1" />
    <mutant id="mutant_2903" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant - (instant % (iUnitMillis))) + (iUnitMillis)" to="((instant - (instant % (iUnitMillis))) + (iUnitMillis)) + 1" />
    <mutant id="mutant_2902" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant - (instant % (iUnitMillis)))" to="((instant - (instant % (iUnitMillis))) + 1)" />
    <mutant id="mutant_2901" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant - (instant % (iUnitMillis)))" to="((instant - (instant % (iUnitMillis))) * -1)" />
    <mutant id="mutant_2900" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant - (instant % (iUnitMillis)))" to="((instant - (instant % (iUnitMillis))) - 1)" />
    <mutant id="mutant_1630" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="(minuendYear - subtrahendYear)" to="((minuendYear - subtrahendYear) + 1)" />
    <mutant id="mutant_2962" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="((iDivisor) - 1) + ((value + 1) % (iDivisor))" to="(((iDivisor) - 1) + ((value + 1) % (iDivisor))) - 1" />
    <mutant id="mutant_1631" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="(minuendYear - subtrahendYear)" to="((minuendYear - subtrahendYear) - 1)" />
    <mutant id="mutant_2961" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="((iDivisor) - 1) + ((value + 1) % (iDivisor))" to="(((iDivisor) - 1) + ((value + 1) % (iDivisor))) * -1" />
    <mutant id="mutant_2960" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="((value + 1) % (iDivisor))" to="(((value + 1) % (iDivisor)) * -1)" />
    <mutant id="mutant_1638" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="(((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth) - subtrahendMonth" to="((((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth) - subtrahendMonth) - 1" />
    <mutant id="mutant_1639" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="(((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth) - subtrahendMonth" to="((((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth) - subtrahendMonth) * -1" />
    <mutant id="mutant_2969" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="(value + 1)" to="((value + 1) - 1)" />
    <mutant id="mutant_1636" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="(((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth)" to="((((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth) + 1)" />
    <mutant id="mutant_2968" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="(value + 1)" to="((value + 1) + 1)" />
    <mutant id="mutant_1637" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="(((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth)" to="((((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth) - 1)" />
    <mutant id="mutant_2967" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="(value + 1)" to="((value + 1) * -1)" />
    <mutant id="mutant_1634" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="((minuendYear - subtrahendYear) * ((long)(iMax)))" to="(((minuendYear - subtrahendYear) * ((long)(iMax))) - 1)" />
    <mutant id="mutant_2966" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="value / (iDivisor)" to="(value / (iDivisor)) * -1" />
    <mutant id="mutant_1635" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="(((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth)" to="((((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth) * -1)" />
    <mutant id="mutant_2965" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="value / (iDivisor)" to="(value / (iDivisor)) - 1" />
    <mutant id="mutant_1632" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="((minuendYear - subtrahendYear) * ((long)(iMax)))" to="(((minuendYear - subtrahendYear) * ((long)(iMax))) + 1)" />
    <mutant id="mutant_2964" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="value / (iDivisor)" to="(value / (iDivisor)) + 1" />
    <mutant id="mutant_1633" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="((minuendYear - subtrahendYear) * ((long)(iMax)))" to="(((minuendYear - subtrahendYear) * ((long)(iMax))) * -1)" />
    <mutant id="mutant_2963" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="((iDivisor) - 1) + ((value + 1) % (iDivisor))" to="(((iDivisor) - 1) + ((value + 1) % (iDivisor))) + 1" />
    <mutant id="mutant_1629" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="(minuendYear - subtrahendYear)" to="((minuendYear - subtrahendYear) * -1)" />
    <mutant id="mutant_2951" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="value % (iDivisor)" to="(value % (iDivisor)) * -1" />
    <mutant id="mutant_1620" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="((iMax) - remMonthToUse) + 1" to="(((iMax) - remMonthToUse) + 1) - 1" />
    <mutant id="mutant_2950" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="value % (iDivisor)" to="(value % (iDivisor)) + 1" />
    <mutant id="mutant_1627" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="datePart + timePart" to="(datePart + timePart) - 1" />
    <mutant id="mutant_2959" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="((value + 1) % (iDivisor))" to="(((value + 1) % (iDivisor)) - 1)" />
    <mutant id="mutant_1628" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="datePart + timePart" to="(datePart + timePart) * -1" />
    <mutant id="mutant_2958" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="((value + 1) % (iDivisor))" to="(((value + 1) % (iDivisor)) + 1)" />
    <mutant id="mutant_1625" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(&quot;Magnitude of add amount is too large: &quot; + months)" to="((&quot;Magnitude of add amount is too large: &quot; + months) + 1)" />
    <mutant id="mutant_2957" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="(value + 1)" to="((value + 1) - 1)" />
    <mutant id="mutant_1626" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="datePart + timePart" to="(datePart + timePart) + 1" />
    <mutant id="mutant_2956" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="(value + 1)" to="((value + 1) + 1)" />
    <mutant id="mutant_1623" viable="false" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(&quot;Magnitude of add amount is too large: &quot; + months)" to="((&quot;Magnitude of add amount is too large: &quot; + months) - 1)" />
    <mutant id="mutant_2955" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="(value + 1)" to="((value + 1) * -1)" />
    <mutant id="mutant_1624" viable="false" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(&quot;Magnitude of add amount is too large: &quot; + months)" to="((&quot;Magnitude of add amount is too large: &quot; + months) * -1)" />
    <mutant id="mutant_2954" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) + 1)" />
    <mutant id="mutant_1621" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="((iMax) - remMonthToUse) + 1" to="(((iMax) - remMonthToUse) + 1) + 1" />
    <mutant id="mutant_2953" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) - 1)" />
    <mutant id="mutant_1622" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(yearToUse &lt; (iChronology.getMinYear())) || (yearToUse &gt; (iChronology.getMaxYear()))" to="!((yearToUse &lt; (iChronology.getMinYear())) || (yearToUse &gt; (iChronology.getMaxYear())))" />
    <mutant id="mutant_2952" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) * -1)" />
    <mutant id="mutant_1618" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="((iMax) - remMonthToUse)" to="(((iMax) - remMonthToUse) * -1)" />
    <mutant id="mutant_1619" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="((iMax) - remMonthToUse) + 1" to="(((iMax) - remMonthToUse) + 1) * -1" />
    <mutant id="mutant_2949" viable="true" in="org.joda.time.field.RemainderDateTimeField.get(long)" from="value % (iDivisor)" to="(value % (iDivisor)) - 1" />
    <mutant id="mutant_2940" viable="true" in="org.joda.time.field.PreciseDurationField.getDifferenceAsLong(long,long)" from="difference / (iUnitMillis)" to="(difference / (iUnitMillis)) - 1" />
    <mutant id="mutant_1616" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="((iMax) - remMonthToUse)" to="(((iMax) - remMonthToUse) - 1)" />
    <mutant id="mutant_2948" viable="true" in="org.joda.time.field.PreciseDurationField.getValueAsLong(long,long)" from="duration / (iUnitMillis)" to="(duration / (iUnitMillis)) - 1" />
    <mutant id="mutant_1617" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="((iMax) - remMonthToUse)" to="(((iMax) - remMonthToUse) + 1)" />
    <mutant id="mutant_2947" viable="true" in="org.joda.time.field.PreciseDurationField.getValueAsLong(long,long)" from="duration / (iUnitMillis)" to="(duration / (iUnitMillis)) * -1" />
    <mutant id="mutant_1614" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="((int)(monthToUse % (iMax)))" to="((int)((monthToUse % (iMax)))) * -1" />
    <mutant id="mutant_2946" viable="true" in="org.joda.time.field.PreciseDurationField.getValueAsLong(long,long)" from="duration / (iUnitMillis)" to="(duration / (iUnitMillis)) + 1" />
    <mutant id="mutant_1615" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="((int)(monthToUse % (iMax)))" to="((int)((monthToUse % (iMax)))) + 1" />
    <mutant id="mutant_2945" viable="true" in="org.joda.time.field.PreciseDurationField.getMillis(int,long)" from="value * (iUnitMillis)" to="(value * (iUnitMillis)) - 1" />
    <mutant id="mutant_1612" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisYear + (monthToUse / (iMax))) - 1" to="((thisYear + (monthToUse / (iMax))) - 1) * -1" />
    <mutant id="mutant_2944" viable="true" in="org.joda.time.field.PreciseDurationField.getMillis(int,long)" from="value * (iUnitMillis)" to="(value * (iUnitMillis)) + 1" />
    <mutant id="mutant_1613" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="((int)(monthToUse % (iMax)))" to="((int)((monthToUse % (iMax)))) - 1" />
    <mutant id="mutant_2943" viable="true" in="org.joda.time.field.PreciseDurationField.getMillis(int,long)" from="value * (iUnitMillis)" to="(value * (iUnitMillis)) * -1" />
    <mutant id="mutant_1610" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisYear + (monthToUse / (iMax))) - 1" to="((thisYear + (monthToUse / (iMax))) - 1) - 1" />
    <mutant id="mutant_2942" viable="true" in="org.joda.time.field.PreciseDurationField.getDifferenceAsLong(long,long)" from="difference / (iUnitMillis)" to="(difference / (iUnitMillis)) + 1" />
    <mutant id="mutant_1611" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisYear + (monthToUse / (iMax))) - 1" to="((thisYear + (monthToUse / (iMax))) - 1) + 1" />
    <mutant id="mutant_2941" viable="true" in="org.joda.time.field.PreciseDurationField.getDifferenceAsLong(long,long)" from="difference / (iUnitMillis)" to="(difference / (iUnitMillis)) * -1" />
    <mutant id="mutant_1609" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisYear + (monthToUse / (iMax)))" to="((thisYear + (monthToUse / (iMax))) * -1)" />
    <mutant id="mutant_1607" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisYear + (monthToUse / (iMax)))" to="((thisYear + (monthToUse / (iMax))) + 1)" />
    <mutant id="mutant_2939" viable="true" in="org.joda.time.field.PreciseDurationField.add(long,int)" from="value * (iUnitMillis)" to="(value * (iUnitMillis)) - 1" />
    <mutant id="mutant_1608" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisYear + (monthToUse / (iMax)))" to="((thisYear + (monthToUse / (iMax))) - 1)" />
    <mutant id="mutant_2938" viable="true" in="org.joda.time.field.PreciseDurationField.add(long,int)" from="value * (iUnitMillis)" to="(value * (iUnitMillis)) + 1" />
    <mutant id="mutant_1605" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) - 1)" />
    <mutant id="mutant_2937" viable="true" in="org.joda.time.field.PreciseDurationField.add(long,int)" from="value * (iUnitMillis)" to="(value * (iUnitMillis)) * -1" />
    <mutant id="mutant_1606" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) + 1)" />
    <mutant id="mutant_2936" viable="true" in="org.joda.time.field.PreciseDurationField.equals(java.lang.Object)" from="((getType()) == (other.getType())) &amp;&amp; ((iUnitMillis) == (other.iUnitMillis))" to="!(((getType()) == (other.getType())) &amp;&amp; ((iUnitMillis) == (other.iUnitMillis)))" />
    <mutant id="mutant_1603" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse % (iMax)) + 1" to="((monthToUse % (iMax)) + 1) + 1" />
    <mutant id="mutant_2935" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)" from="instant + ((value - (get(instant))) * (iUnitMillis))" to="(instant + ((value - (get(instant))) * (iUnitMillis))) * -1" />
    <mutant id="mutant_1604" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) * -1)" />
    <mutant id="mutant_2934" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)" from="instant + ((value - (get(instant))) * (iUnitMillis))" to="(instant + ((value - (get(instant))) * (iUnitMillis))) + 1" />
    <mutant id="mutant_1601" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse % (iMax)) + 1" to="((monthToUse % (iMax)) + 1) * -1" />
    <mutant id="mutant_2933" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)" from="instant + ((value - (get(instant))) * (iUnitMillis))" to="(instant + ((value - (get(instant))) * (iUnitMillis))) - 1" />
    <mutant id="mutant_1602" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse % (iMax)) + 1" to="((monthToUse % (iMax)) + 1) - 1" />
    <mutant id="mutant_2932" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)" from="((value - (get(instant))) * (iUnitMillis))" to="(((value - (get(instant))) * (iUnitMillis)) - 1)" />
    <mutant id="mutant_2931" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)" from="((value - (get(instant))) * (iUnitMillis))" to="(((value - (get(instant))) * (iUnitMillis)) * -1)" />
    <mutant id="mutant_1600" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse % (iMax))" to="((monthToUse % (iMax)) + 1)" />
    <mutant id="mutant_2930" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)" from="((value - (get(instant))) * (iUnitMillis))" to="(((value - (get(instant))) * (iUnitMillis)) + 1)" />
    <mutant id="mutant_800" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) - 1)" />
    <mutant id="mutant_801" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) + 1)" />
    <mutant id="mutant_802" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((char)(value + '0'))" to="(((char)((value + '0'))) * -1)" />
    <mutant id="mutant_803" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="(value + 1)" to="((value + 1) * -1)" />
    <mutant id="mutant_4709" viable="false" in="org.joda.time.Years.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) - 1)" />
    <mutant id="mutant_808" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) + 1)" />
    <mutant id="mutant_809" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((char)(d + '0'))" to="(((char)((d + '0'))) - 1)" />
    <mutant id="mutant_804" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="(value + 1)" to="((value + 1) + 1)" />
    <mutant id="mutant_805" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="(value + 1)" to="((value + 1) - 1)" />
    <mutant id="mutant_806" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) * -1)" />
    <mutant id="mutant_807" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) - 1)" />
    <mutant id="mutant_1674" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_4700" viable="true" in="org.joda.time.YearMonthDay.fromCalendarFields(java.util.Calendar)" from="((calendar.get(Calendar.MONTH)) + 1)" to="(((calendar.get(Calendar.MONTH)) + 1) - 1)" />
    <mutant id="mutant_1675" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(instant + (3 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))) - 1)" />
    <mutant id="mutant_1672" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_1673" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_1670" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(super.roundCeiling((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((super.roundCeiling((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_1671" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(super.roundCeiling((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((super.roundCeiling((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_4708" viable="true" in="org.joda.time.Years.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) + 1)" />
    <mutant id="mutant_4707" viable="true" in="org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_4706" viable="true" in="org.joda.time.YearMonthDay.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) + 1)" />
    <mutant id="mutant_4705" viable="true" in="org.joda.time.YearMonthDay.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) - 1)" />
    <mutant id="mutant_1678" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_4704" viable="true" in="org.joda.time.YearMonthDay.fromDateFields(java.util.Date)" from="((date.getMonth()) + 1)" to="(((date.getMonth()) + 1) * -1)" />
    <mutant id="mutant_1679" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_4703" viable="true" in="org.joda.time.YearMonthDay.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) + 1)" />
    <mutant id="mutant_1676" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(instant + (3 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))) + 1)" />
    <mutant id="mutant_4702" viable="true" in="org.joda.time.YearMonthDay.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) - 1)" />
    <mutant id="mutant_1677" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(instant + (3 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))) * -1)" />
    <mutant id="mutant_4701" viable="true" in="org.joda.time.YearMonthDay.fromDateFields(java.util.Date)" from="((date.getYear()) + 1900)" to="(((date.getYear()) + 1900) * -1)" />
    <mutant id="mutant_811" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((char)(d + '0'))" to="(((char)((d + '0'))) + 1)" />
    <mutant id="mutant_812" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) + 1)" />
    <mutant id="mutant_813" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) - 1)" />
    <mutant id="mutant_814" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) * -1)" />
    <mutant id="mutant_810" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((char)(d + '0'))" to="(((char)((d + '0'))) * -1)" />
    <mutant id="mutant_819" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((char)(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))" to="(((char)((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))) - 1)" />
    <mutant id="mutant_815" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) * -1)" />
    <mutant id="mutant_816" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) - 1)" />
    <mutant id="mutant_817" viable="true" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + 1)" />
    <mutant id="mutant_818" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((char)(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))" to="(((char)((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))) + 1)" />
    <mutant id="mutant_1663" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(instant + (3 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))) - 1)" />
    <mutant id="mutant_2995" viable="true" in="org.joda.time.field.ScaledDurationField.getDifference(long,long)" from="(getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iScalar)" to="((getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iScalar)) - 1" />
    <mutant id="mutant_1664" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(instant + (3 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))) + 1)" />
    <mutant id="mutant_2994" viable="true" in="org.joda.time.field.ScaledDurationField.getDifference(long,long)" from="(getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iScalar)" to="((getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iScalar)) * -1" />
    <mutant id="mutant_1661" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_2993" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))) &amp;&amp; ((iScalar) == (other.iScalar))" to="!(((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))) &amp;&amp; ((iScalar) == (other.iScalar)))" />
    <mutant id="mutant_1662" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_2992" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType())))" to="(!((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))))" />
    <mutant id="mutant_2991" viable="true" in="org.joda.time.field.ScaledDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)" from="(scalar == 0) || (scalar == 1)" to="!((scalar == 0) || (scalar == 1))" />
    <mutant id="mutant_1660" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_2990" viable="true" in="org.joda.time.field.RemainderDateTimeField.set(long,int)" from="((divided * (iDivisor)) + value)" to="(((divided * (iDivisor)) + value) - 1)" />
    <mutant id="mutant_1669" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(super.roundCeiling((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((super.roundCeiling((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_1667" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_2999" viable="true" in="org.joda.time.field.ScaledDurationField.getValue(long)" from="(getWrappedField().getValue(duration)) / (iScalar)" to="((getWrappedField().getValue(duration)) / (iScalar)) - 1" />
    <mutant id="mutant_1668" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_2998" viable="true" in="org.joda.time.field.ScaledDurationField.getValue(long)" from="(getWrappedField().getValue(duration)) / (iScalar)" to="((getWrappedField().getValue(duration)) / (iScalar)) * -1" />
    <mutant id="mutant_1665" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(instant + (3 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))) * -1)" />
    <mutant id="mutant_2997" viable="true" in="org.joda.time.field.ScaledDurationField.getValue(long)" from="(getWrappedField().getValue(duration)) / (iScalar)" to="((getWrappedField().getValue(duration)) / (iScalar)) + 1" />
    <mutant id="mutant_1666" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_2996" viable="true" in="org.joda.time.field.ScaledDurationField.getDifference(long,long)" from="(getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iScalar)" to="((getWrappedField().getDifference(minuendInstant, subtrahendInstant)) / (iScalar)) + 1" />
    <mutant id="mutant_822" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) + 1)" />
    <mutant id="mutant_823" viable="false" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) - 1)" />
    <mutant id="mutant_824" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(value + '0')" to="((value + '0') - 1)" />
    <mutant id="mutant_825" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(value + '0')" to="((value + '0') + 1)" />
    <mutant id="mutant_820" viable="false" in="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)" from="((char)(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))" to="(((char)((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0'))) * -1)" />
    <mutant id="mutant_821" viable="false" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) * -1)" />
    <mutant id="mutant_826" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(value + '0')" to="((value + '0') * -1)" />
    <mutant id="mutant_827" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(value + 1)" to="((value + 1) * -1)" />
    <mutant id="mutant_828" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(value + 1)" to="((value + 1) + 1)" />
    <mutant id="mutant_829" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(value + 1)" to="((value + 1) - 1)" />
    <mutant id="mutant_1652" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(long,int)" from="(iChronology.getYearMonthDayMillis(thisYear, month, thisDom)) + (iChronology.getMillisOfDay(instant))" to="((iChronology.getYearMonthDayMillis(thisYear, month, thisDom)) + (iChronology.getMillisOfDay(instant))) - 1" />
    <mutant id="mutant_2984" viable="true" in="org.joda.time.field.RemainderDateTimeField.set(long,int)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) + 1)" />
    <mutant id="mutant_1653" viable="true" in="org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,java.lang.String,java.util.Locale)" from="((iEraText.equals(text)) == false) &amp;&amp; ((&quot;1&quot;.equals(text)) == false)" to="!(((iEraText.equals(text)) == false) &amp;&amp; ((&quot;1&quot;.equals(text)) == false))" />
    <mutant id="mutant_2983" viable="true" in="org.joda.time.field.RemainderDateTimeField.set(long,int)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) - 1)" />
    <mutant id="mutant_1650" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(long,int)" from="(iChronology.getYearMonthDayMillis(thisYear, month, thisDom)) + (iChronology.getMillisOfDay(instant))" to="((iChronology.getYearMonthDayMillis(thisYear, month, thisDom)) + (iChronology.getMillisOfDay(instant))) * -1" />
    <mutant id="mutant_2982" viable="true" in="org.joda.time.field.RemainderDateTimeField.set(long,int)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) * -1)" />
    <mutant id="mutant_1651" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(long,int)" from="(iChronology.getYearMonthDayMillis(thisYear, month, thisDom)) + (iChronology.getMillisOfDay(instant))" to="((iChronology.getYearMonthDayMillis(thisYear, month, thisDom)) + (iChronology.getMillisOfDay(instant))) + 1" />
    <mutant id="mutant_2981" viable="true" in="org.joda.time.field.RemainderDateTimeField.addWrapField(long,int)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) + 1)" />
    <mutant id="mutant_2980" viable="true" in="org.joda.time.field.RemainderDateTimeField.addWrapField(long,int)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) - 1)" />
    <mutant id="mutant_1658" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)" from="(instant + (3 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))) + 1)" />
    <mutant id="mutant_1659" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)" from="(instant + (3 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))) * -1)" />
    <mutant id="mutant_2989" viable="true" in="org.joda.time.field.RemainderDateTimeField.set(long,int)" from="((divided * (iDivisor)) + value)" to="(((divided * (iDivisor)) + value) + 1)" />
    <mutant id="mutant_1656" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_2988" viable="true" in="org.joda.time.field.RemainderDateTimeField.set(long,int)" from="((divided * (iDivisor)) + value)" to="(((divided * (iDivisor)) + value) * -1)" />
    <mutant id="mutant_1657" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)" from="(instant + (3 * (DateTimeConstants.MILLIS_PER_DAY)))" to="((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))) - 1)" />
    <mutant id="mutant_2987" viable="true" in="org.joda.time.field.RemainderDateTimeField.set(long,int)" from="(divided * (iDivisor))" to="((divided * (iDivisor)) * -1)" />
    <mutant id="mutant_1654" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) * -1)" />
    <mutant id="mutant_2986" viable="true" in="org.joda.time.field.RemainderDateTimeField.set(long,int)" from="(divided * (iDivisor))" to="((divided * (iDivisor)) + 1)" />
    <mutant id="mutant_1655" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) - 1)" />
    <mutant id="mutant_2985" viable="true" in="org.joda.time.field.RemainderDateTimeField.set(long,int)" from="(divided * (iDivisor))" to="((divided * (iDivisor)) - 1)" />
    <mutant id="mutant_833" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(d + '0')" to="((d + '0') - 1)" />
    <mutant id="mutant_834" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(d + '0')" to="((d + '0') * -1)" />
    <mutant id="mutant_835" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(d + '0')" to="((d + '0') + 1)" />
    <mutant id="mutant_836" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) + 1)" />
    <mutant id="mutant_830" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) * -1)" />
    <mutant id="mutant_831" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) - 1)" />
    <mutant id="mutant_832" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) + 1)" />
    <mutant id="mutant_837" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) - 1)" />
    <mutant id="mutant_838" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) * -1)" />
    <mutant id="mutant_839" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) * -1)" />
    <mutant id="mutant_1641" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="minuendInstant - (iChronology.getYearMonthMillis(minuendYear, minuendMonth))" to="(minuendInstant - (iChronology.getYearMonthMillis(minuendYear, minuendMonth))) * -1" />
    <mutant id="mutant_2973" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="((value + 1) / (iDivisor)) - 1" to="(((value + 1) / (iDivisor)) - 1) - 1" />
    <mutant id="mutant_1642" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="minuendInstant - (iChronology.getYearMonthMillis(minuendYear, minuendMonth))" to="(minuendInstant - (iChronology.getYearMonthMillis(minuendYear, minuendMonth))) - 1" />
    <mutant id="mutant_2972" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="((value + 1) / (iDivisor))" to="(((value + 1) / (iDivisor)) - 1)" />
    <mutant id="mutant_2971" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="((value + 1) / (iDivisor))" to="(((value + 1) / (iDivisor)) * -1)" />
    <mutant id="mutant_1640" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="(((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth) - subtrahendMonth" to="((((minuendYear - subtrahendYear) * ((long)(iMax))) + minuendMonth) - subtrahendMonth) + 1" />
    <mutant id="mutant_2970" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="((value + 1) / (iDivisor))" to="(((value + 1) / (iDivisor)) + 1)" />
    <mutant id="mutant_1649" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) + 1" />
    <mutant id="mutant_1647" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) - 1" />
    <mutant id="mutant_2979" viable="true" in="org.joda.time.field.RemainderDateTimeField.addWrapField(long,int)" from="((iDivisor) - 1)" to="(((iDivisor) - 1) * -1)" />
    <mutant id="mutant_1648" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(long)" from="instant - (roundFloor(instant))" to="(instant - (roundFloor(instant))) * -1" />
    <mutant id="mutant_2978" viable="true" in="org.joda.time.field.RemainderDateTimeField.getMaximumValue()" from="(iDivisor) - 1" to="((iDivisor) - 1) + 1" />
    <mutant id="mutant_1645" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="subtrahendInstant - (iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth))" to="(subtrahendInstant - (iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth))) - 1" />
    <mutant id="mutant_2977" viable="true" in="org.joda.time.field.RemainderDateTimeField.getMaximumValue()" from="(iDivisor) - 1" to="((iDivisor) - 1) - 1" />
    <mutant id="mutant_1646" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="subtrahendInstant - (iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth))" to="(subtrahendInstant - (iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth))) * -1" />
    <mutant id="mutant_2976" viable="true" in="org.joda.time.field.RemainderDateTimeField.getMaximumValue()" from="(iDivisor) - 1" to="((iDivisor) - 1) * -1" />
    <mutant id="mutant_1643" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="minuendInstant - (iChronology.getYearMonthMillis(minuendYear, minuendMonth))" to="(minuendInstant - (iChronology.getYearMonthMillis(minuendYear, minuendMonth))) + 1" />
    <mutant id="mutant_2975" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="((value + 1) / (iDivisor)) - 1" to="(((value + 1) / (iDivisor)) - 1) * -1" />
    <mutant id="mutant_1644" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)" from="subtrahendInstant - (iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth))" to="(subtrahendInstant - (iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth))) + 1" />
    <mutant id="mutant_2974" viable="true" in="org.joda.time.field.RemainderDateTimeField.getDivided(int)" from="((value + 1) / (iDivisor)) - 1" to="(((value + 1) / (iDivisor)) - 1) + 1" />
    <mutant id="mutant_844" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0')" to="((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0') * -1)" />
    <mutant id="mutant_845" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) - 1)" />
    <mutant id="mutant_846" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) * -1)" />
    <mutant id="mutant_847" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1)" />
    <mutant id="mutant_840" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) - 1)" />
    <mutant id="mutant_841" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + 1)" />
    <mutant id="mutant_842" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0')" to="((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0') + 1)" />
    <mutant id="mutant_843" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0')" to="((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0') - 1)" />
    <mutant id="mutant_848" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) * -1" />
    <mutant id="mutant_849" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) - 1" />
    <mutant id="mutant_3413" viable="false" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="(&quot;GMT&quot; + (getID()))" to="((&quot;GMT&quot; + (getID())) * -1)" />
    <mutant id="mutant_3412" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.length()) == 6) &amp;&amp; ((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="!(((id.length()) == 6) &amp;&amp; ((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;))))" />
    <mutant id="mutant_3411" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="(!((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;))))" />
    <mutant id="mutant_3410" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="((getID().hashCode()) + (37 * (iStandardOffset))) + (31 * (iWallOffset))" to="(((getID().hashCode()) + (37 * (iStandardOffset))) + (31 * (iWallOffset))) * -1" />
    <mutant id="mutant_3419" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_3418" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_3417" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_3416" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_3415" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="(&quot;GMT&quot; + (getID()))" to="((&quot;GMT&quot; + (getID())) + 1)" />
    <mutant id="mutant_3414" viable="false" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="(&quot;GMT&quot; + (getID()))" to="((&quot;GMT&quot; + (getID())) - 1)" />
    <mutant id="mutant_855" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) * -1" />
    <mutant id="mutant_856" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) - 1" />
    <mutant id="mutant_857" viable="false" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) * -1)" />
    <mutant id="mutant_858" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) + 1)" />
    <mutant id="mutant_851" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1)" />
    <mutant id="mutant_852" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) * -1)" />
    <mutant id="mutant_853" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10))))" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) - 1)" />
    <mutant id="mutant_854" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,long,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) + 1" />
    <mutant id="mutant_859" viable="false" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(&quot;&quot; + (-((long)(Integer.MIN_VALUE))))" to="((&quot;&quot; + (-((long)(Integer.MIN_VALUE)))) - 1)" />
    <mutant id="mutant_3402" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="((getID().hashCode()) + (37 * (iStandardOffset)))" to="(((getID().hashCode()) + (37 * (iStandardOffset))) * -1)" />
    <mutant id="mutant_3401" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="(37 * (iStandardOffset))" to="((37 * (iStandardOffset)) - 1)" />
    <mutant id="mutant_3400" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="(37 * (iStandardOffset))" to="((37 * (iStandardOffset)) * -1)" />
    <mutant id="mutant_3409" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="((getID().hashCode()) + (37 * (iStandardOffset))) + (31 * (iWallOffset))" to="(((getID().hashCode()) + (37 * (iStandardOffset))) + (31 * (iWallOffset))) + 1" />
    <mutant id="mutant_3408" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="((getID().hashCode()) + (37 * (iStandardOffset))) + (31 * (iWallOffset))" to="(((getID().hashCode()) + (37 * (iStandardOffset))) + (31 * (iWallOffset))) - 1" />
    <mutant id="mutant_850" viable="true" in="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" from="((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1" to="(((int)(((Math.log(value)) / (FormatUtils.LOG_10)))) + 1) + 1" />
    <mutant id="mutant_3407" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="(31 * (iWallOffset))" to="((31 * (iWallOffset)) - 1)" />
    <mutant id="mutant_3406" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="(31 * (iWallOffset))" to="((31 * (iWallOffset)) + 1)" />
    <mutant id="mutant_3405" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="(31 * (iWallOffset))" to="((31 * (iWallOffset)) * -1)" />
    <mutant id="mutant_3404" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="((getID().hashCode()) + (37 * (iStandardOffset)))" to="(((getID().hashCode()) + (37 * (iStandardOffset))) + 1)" />
    <mutant id="mutant_3403" viable="true" in="org.joda.time.tz.FixedDateTimeZone.hashCode()" from="((getID().hashCode()) + (37 * (iStandardOffset)))" to="(((getID().hashCode()) + (37 * (iStandardOffset))) - 1)" />
    <mutant id="mutant_866" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) * -1)" />
    <mutant id="mutant_867" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) - 1)" />
    <mutant id="mutant_868" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="((value + 1) * 13421772)" to="(((value + 1) * 13421772) + 1)" />
    <mutant id="mutant_869" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(d + '0')" to="((d + '0') - 1)" />
    <mutant id="mutant_862" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(value + '0')" to="((value + '0') * -1)" />
    <mutant id="mutant_863" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(value + 1)" to="((value + 1) * -1)" />
    <mutant id="mutant_864" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(value + 1)" to="((value + 1) + 1)" />
    <mutant id="mutant_865" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(value + 1)" to="((value + 1) - 1)" />
    <mutant id="mutant_1696" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)" from="(subtrahendRem &gt;= (BasicWeekyearDateTimeField.WEEK_53)) &amp;&amp; ((iChronology.getWeeksInYear(minuendWeekyear)) &lt;= 52)" to="!((subtrahendRem &gt;= (BasicWeekyearDateTimeField.WEEK_53)) &amp;&amp; ((iChronology.getWeeksInYear(minuendWeekyear)) &lt;= 52))" />
    <mutant id="mutant_1697" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)" from="minuendWeekyear - subtrahendWeekyear" to="(minuendWeekyear - subtrahendWeekyear) - 1" />
    <mutant id="mutant_1694" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,int)" from="((get(instant)) + years)" to="(((get(instant)) + years) + 1)" />
    <mutant id="mutant_1695" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,int)" from="((get(instant)) + years)" to="(((get(instant)) + years) * -1)" />
    <mutant id="mutant_1692" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapAmount(long)" from="(iChronology.getWeeksInYear(iChronology.getWeekyear(instant))) - 52" to="((iChronology.getWeeksInYear(iChronology.getWeekyear(instant))) - 52) * -1" />
    <mutant id="mutant_1693" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,int)" from="((get(instant)) + years)" to="(((get(instant)) + years) - 1)" />
    <mutant id="mutant_1690" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapAmount(long)" from="(iChronology.getWeeksInYear(iChronology.getWeekyear(instant))) - 52" to="((iChronology.getWeeksInYear(iChronology.getWeekyear(instant))) - 52) + 1" />
    <mutant id="mutant_1691" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapAmount(long)" from="(iChronology.getWeeksInYear(iChronology.getWeekyear(instant))) - 52" to="((iChronology.getWeeksInYear(iChronology.getWeekyear(instant))) - 52) - 1" />
    <mutant id="mutant_860" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(value + '0')" to="((value + '0') - 1)" />
    <mutant id="mutant_861" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(value + '0')" to="((value + '0') + 1)" />
    <mutant id="mutant_1698" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)" from="minuendWeekyear - subtrahendWeekyear" to="(minuendWeekyear - subtrahendWeekyear) + 1" />
    <mutant id="mutant_1699" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)" from="minuendWeekyear - subtrahendWeekyear" to="(minuendWeekyear - subtrahendWeekyear) * -1" />
    <mutant id="mutant_877" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + 1)" />
    <mutant id="mutant_878" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0')" to="((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0') + 1)" />
    <mutant id="mutant_879" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0')" to="((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0') - 1)" />
    <mutant id="mutant_873" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) - 1)" />
    <mutant id="mutant_874" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) * -1)" />
    <mutant id="mutant_875" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) * -1)" />
    <mutant id="mutant_876" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1))" to="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) - 1)" />
    <mutant id="mutant_1685" viable="false" in="?" from="(53L - 1)" to="((53L - 1) - 1)" />
    <mutant id="mutant_4711" viable="true" in="org.joda.time.Years.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;Y&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;Y&quot;) + 1" />
    <mutant id="mutant_1686" viable="false" in="?" from="(53L - 1)" to="((53L - 1) * -1)" />
    <mutant id="mutant_4710" viable="false" in="org.joda.time.Years.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) * -1)" />
    <mutant id="mutant_1683" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(super.roundFloor((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((super.roundFloor((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_1684" viable="false" in="?" from="(53L - 1)" to="((53L - 1) + 1)" />
    <mutant id="mutant_1681" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(super.roundFloor((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((super.roundFloor((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_1682" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(super.roundFloor((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((super.roundFloor((instant + (3 * (DateTimeConstants.MILLIS_PER_DAY))))) - (3 * (DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_1680" viable="true" in="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)" from="(3 * (DateTimeConstants.MILLIS_PER_DAY))" to="((3 * (DateTimeConstants.MILLIS_PER_DAY)) + 1)" />
    <mutant id="mutant_870" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(d + '0')" to="((d + '0') * -1)" />
    <mutant id="mutant_871" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(d + '0')" to="((d + '0') + 1)" />
    <mutant id="mutant_4717" viable="true" in="org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="!((start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate))" />
    <mutant id="mutant_872" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(value - (d &lt;&lt; 3))" to="((value - (d &lt;&lt; 3)) + 1)" />
    <mutant id="mutant_4716" viable="true" in="org.joda.time.Years.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) + 1)" />
    <mutant id="mutant_1689" viable="false" in="?" from="(53L - 1) * (DateTimeConstants.MILLIS_PER_WEEK)" to="((53L - 1) * (DateTimeConstants.MILLIS_PER_WEEK)) - 1" />
    <mutant id="mutant_4715" viable="true" in="org.joda.time.Years.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) * -1)" />
    <mutant id="mutant_4714" viable="true" in="org.joda.time.Years.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) - 1)" />
    <mutant id="mutant_1687" viable="false" in="?" from="(53L - 1) * (DateTimeConstants.MILLIS_PER_WEEK)" to="((53L - 1) * (DateTimeConstants.MILLIS_PER_WEEK)) + 1" />
    <mutant id="mutant_4713" viable="false" in="org.joda.time.Years.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;Y&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;Y&quot;) * -1" />
    <mutant id="mutant_1688" viable="false" in="?" from="(53L - 1) * (DateTimeConstants.MILLIS_PER_WEEK)" to="((53L - 1) * (DateTimeConstants.MILLIS_PER_WEEK)) * -1" />
    <mutant id="mutant_4712" viable="false" in="org.joda.time.Years.toString()" from="(&quot;P&quot; + (String.valueOf(getValue()))) + &quot;Y&quot;" to="((&quot;P&quot; + (String.valueOf(getValue()))) + &quot;Y&quot;) - 1" />
    <mutant id="mutant_888" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((!hour) &amp;&amp; (!minute))" to="(!((!hour) &amp;&amp; (!minute)))" />
    <mutant id="mutant_889" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second))" to="(!(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)))" />
    <mutant id="mutant_884" viable="true" in="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)" from="(&quot;No valid format for fields: &quot; + fields)" to="((&quot;No valid format for fields: &quot; + fields) + 1)" />
    <mutant id="mutant_885" viable="true" in="org.joda.time.format.ISODateTimeFormat.checkNotStrictISO(java.util.Collection,boolean)" from="(&quot;No valid ISO8601 format for fields: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields: &quot; + fields) + 1)" />
    <mutant id="mutant_886" viable="false" in="org.joda.time.format.ISODateTimeFormat.checkNotStrictISO(java.util.Collection,boolean)" from="(&quot;No valid ISO8601 format for fields: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields: &quot; + fields) - 1)" />
    <mutant id="mutant_887" viable="false" in="org.joda.time.format.ISODateTimeFormat.checkNotStrictISO(java.util.Collection,boolean)" from="(&quot;No valid ISO8601 format for fields: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields: &quot; + fields) * -1)" />
    <mutant id="mutant_3460" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;)" to="(((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2125" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(year % (IslamicChronology.CYCLE)) + 1" to="((year % (IslamicChronology.CYCLE)) + 1) + 1" />
    <mutant id="mutant_3457" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek))" to="((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) + 1)" />
    <mutant id="mutant_2126" viable="true" in="org.joda.time.chrono.IslamicChronology.getApproxMillisAtEpochDividedByTwo()" from="(-(IslamicChronology.MILLIS_YEAR_1)) / 2" to="((-(IslamicChronology.MILLIS_YEAR_1)) / 2) - 1" />
    <mutant id="mutant_3456" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;)" to="(((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) - 1)" />
    <mutant id="mutant_2123" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(year % (IslamicChronology.CYCLE)) + 1" to="((year % (IslamicChronology.CYCLE)) + 1) * -1" />
    <mutant id="mutant_3455" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;)" to="(((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + 1)" />
    <mutant id="mutant_2124" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(year % (IslamicChronology.CYCLE)) + 1" to="((year % (IslamicChronology.CYCLE)) + 1) - 1" />
    <mutant id="mutant_3454" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;)" to="(((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) * -1)" />
    <mutant id="mutant_2121" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(year % (IslamicChronology.CYCLE))" to="((year % (IslamicChronology.CYCLE)) * -1)" />
    <mutant id="mutant_3453" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;)" to="((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_2122" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(year % (IslamicChronology.CYCLE))" to="((year % (IslamicChronology.CYCLE)) + 1)" />
    <mutant id="mutant_3452" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;)" to="((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_3451" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;)" to="((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2120" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(year % (IslamicChronology.CYCLE))" to="((year % (IslamicChronology.CYCLE)) - 1)" />
    <mutant id="mutant_3450" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth))" to="(((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) - 1)" />
    <mutant id="mutant_880" viable="true" in="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" from="(((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0')" to="((((value - (d &lt;&lt; 3)) - (d &lt;&lt; 1)) + '0') * -1)" />
    <mutant id="mutant_881" viable="true" in="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)" from="(fields == null) || ((fields.size()) == 0)" to="!((fields == null) || ((fields.size()) == 0))" />
    <mutant id="mutant_882" viable="false" in="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)" from="(&quot;No valid format for fields: &quot; + fields)" to="((&quot;No valid format for fields: &quot; + fields) * -1)" />
    <mutant id="mutant_883" viable="false" in="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)" from="(&quot;No valid format for fields: &quot; + fields)" to="((&quot;No valid format for fields: &quot; + fields) - 1)" />
    <mutant id="mutant_2129" viable="true" in="org.joda.time.chrono.IslamicChronology.getAverageMillisPerYearDividedByTwo()" from="(IslamicChronology.MILLIS_PER_YEAR) / 2" to="((IslamicChronology.MILLIS_PER_YEAR) / 2) * -1" />
    <mutant id="mutant_2127" viable="true" in="org.joda.time.chrono.IslamicChronology.getApproxMillisAtEpochDividedByTwo()" from="(-(IslamicChronology.MILLIS_YEAR_1)) / 2" to="((-(IslamicChronology.MILLIS_YEAR_1)) / 2) * -1" />
    <mutant id="mutant_3459" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek))" to="((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) * -1)" />
    <mutant id="mutant_2128" viable="true" in="org.joda.time.chrono.IslamicChronology.getApproxMillisAtEpochDividedByTwo()" from="(-(IslamicChronology.MILLIS_YEAR_1)) / 2" to="((-(IslamicChronology.MILLIS_YEAR_1)) / 2) + 1" />
    <mutant id="mutant_3458" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek))" to="((((((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + &quot;\n&quot;) + &quot;DayOfWeek: &quot;) + (iDayOfWeek)) - 1)" />
    <mutant id="mutant_899" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second)" to="(!((hour &amp;&amp; minute) &amp;&amp; second))" />
    <mutant id="mutant_895" viable="false" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(&quot;No valid ISO8601 format for fields because Date was reduced precision: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields because Date was reduced precision: &quot; + fields) * -1)" />
    <mutant id="mutant_896" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(&quot;No valid ISO8601 format for fields because Date was reduced precision: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields because Date was reduced precision: &quot; + fields) + 1)" />
    <mutant id="mutant_897" viable="false" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(&quot;No valid ISO8601 format for fields because Date was reduced precision: &quot; + fields)" to="((&quot;No valid ISO8601 format for fields because Date was reduced precision: &quot; + fields) - 1)" />
    <mutant id="mutant_898" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; minute)" to="(!(hour &amp;&amp; minute))" />
    <mutant id="mutant_2114" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(cycle * (IslamicChronology.MILLIS_PER_CYCLE))" to="((cycle * (IslamicChronology.MILLIS_PER_CYCLE)) - 1)" />
    <mutant id="mutant_3446" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;)" to="((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + 1)" />
    <mutant id="mutant_2115" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(cycle * (IslamicChronology.MILLIS_PER_CYCLE))" to="((cycle * (IslamicChronology.MILLIS_PER_CYCLE)) * -1)" />
    <mutant id="mutant_3445" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;)" to="((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) * -1)" />
    <mutant id="mutant_2112" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="year / (IslamicChronology.CYCLE)" to="(year / (IslamicChronology.CYCLE)) * -1" />
    <mutant id="mutant_3444" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;)" to="(((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) - 1)" />
    <mutant id="mutant_2113" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="year / (IslamicChronology.CYCLE)" to="(year / (IslamicChronology.CYCLE)) - 1" />
    <mutant id="mutant_3443" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;)" to="(((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) * -1)" />
    <mutant id="mutant_2110" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;) + (IslamicChronology.MIN_YEAR))" to="((((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;) + (IslamicChronology.MIN_YEAR)) - 1)" />
    <mutant id="mutant_3442" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;)" to="(((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + 1)" />
    <mutant id="mutant_2111" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="year / (IslamicChronology.CYCLE)" to="(year / (IslamicChronology.CYCLE)) + 1" />
    <mutant id="mutant_3441" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(&quot;MonthOfYear: &quot; + (iMonthOfYear))" to="((&quot;MonthOfYear: &quot; + (iMonthOfYear)) * -1)" />
    <mutant id="mutant_3440" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(&quot;MonthOfYear: &quot; + (iMonthOfYear))" to="((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + 1)" />
    <mutant id="mutant_891" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour || minute)" to="(!(hour || minute))" />
    <mutant id="mutant_892" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second)" to="(!((hour || minute) || second))" />
    <mutant id="mutant_893" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second) || milli" to="!(((hour || minute) || second) || milli)" />
    <mutant id="mutant_894" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; reducedPrec" to="!(strictISO &amp;&amp; reducedPrec)" />
    <mutant id="mutant_2118" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(IslamicChronology.MILLIS_YEAR_1) + (cycle * (IslamicChronology.MILLIS_PER_CYCLE))" to="((IslamicChronology.MILLIS_YEAR_1) + (cycle * (IslamicChronology.MILLIS_PER_CYCLE))) * -1" />
    <mutant id="mutant_2119" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(IslamicChronology.MILLIS_YEAR_1) + (cycle * (IslamicChronology.MILLIS_PER_CYCLE))" to="((IslamicChronology.MILLIS_YEAR_1) + (cycle * (IslamicChronology.MILLIS_PER_CYCLE))) + 1" />
    <mutant id="mutant_3449" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth))" to="(((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) + 1)" />
    <mutant id="mutant_2116" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(cycle * (IslamicChronology.MILLIS_PER_CYCLE))" to="((cycle * (IslamicChronology.MILLIS_PER_CYCLE)) + 1)" />
    <mutant id="mutant_3448" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth))" to="(((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) + (iDayOfMonth)) * -1)" />
    <mutant id="mutant_890" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)) &amp;&amp; (!milli)" to="!((((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)) &amp;&amp; (!milli))" />
    <mutant id="mutant_2117" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(IslamicChronology.MILLIS_YEAR_1) + (cycle * (IslamicChronology.MILLIS_PER_CYCLE))" to="((IslamicChronology.MILLIS_YEAR_1) + (cycle * (IslamicChronology.MILLIS_PER_CYCLE))) - 1" />
    <mutant id="mutant_3447" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;)" to="((((&quot;MonthOfYear: &quot; + (iMonthOfYear)) + &quot;\n&quot;) + &quot;DayOfMonth: &quot;) - 1)" />
    <mutant id="mutant_2103" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(&quot;Year is too small: &quot; + year)" to="((&quot;Year is too small: &quot; + year) - 1)" />
    <mutant id="mutant_3435" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(((dayOfWeek - 1) + 1) % 7)" to="((((dayOfWeek - 1) + 1) % 7) + 1)" />
    <mutant id="mutant_2104" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(&quot;Year is too small: &quot; + year)" to="((&quot;Year is too small: &quot; + year) + 1)" />
    <mutant id="mutant_3434" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(((dayOfWeek - 1) + 1) % 7)" to="((((dayOfWeek - 1) + 1) % 7) - 1)" />
    <mutant id="mutant_2101" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;) + (IslamicChronology.MAX_YEAR))" to="((((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;) + (IslamicChronology.MAX_YEAR)) + 1)" />
    <mutant id="mutant_3433" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(((dayOfWeek - 1) + 1) % 7)" to="((((dayOfWeek - 1) + 1) % 7) * -1)" />
    <mutant id="mutant_2102" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(&quot;Year is too small: &quot; + year)" to="((&quot;Year is too small: &quot; + year) * -1)" />
    <mutant id="mutant_3432" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="((dayOfWeek - 1) + 1)" to="(((dayOfWeek - 1) + 1) + 1)" />
    <mutant id="mutant_3431" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="((dayOfWeek - 1) + 1)" to="(((dayOfWeek - 1) + 1) * -1)" />
    <mutant id="mutant_2100" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;) + (IslamicChronology.MAX_YEAR))" to="((((&quot;Year is too large: &quot; + year) + &quot; &gt; &quot;) + (IslamicChronology.MAX_YEAR)) - 1)" />
    <mutant id="mutant_3430" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="((dayOfWeek - 1) + 1)" to="(((dayOfWeek - 1) + 1) - 1)" />
    <mutant id="mutant_2109" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;) + (IslamicChronology.MIN_YEAR))" to="((((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;) + (IslamicChronology.MIN_YEAR)) + 1)" />
    <mutant id="mutant_2107" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;)" to="(((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;) * -1)" />
    <mutant id="mutant_3439" viable="false" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString()" from="(&quot;MonthOfYear: &quot; + (iMonthOfYear))" to="((&quot;MonthOfYear: &quot; + (iMonthOfYear)) - 1)" />
    <mutant id="mutant_2108" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="(((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;) + (IslamicChronology.MIN_YEAR))" to="((((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;) + (IslamicChronology.MIN_YEAR)) * -1)" />
    <mutant id="mutant_3438" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(((dayOfWeek - 1) + 1) % 7) + 1" to="((((dayOfWeek - 1) + 1) % 7) + 1) - 1" />
    <mutant id="mutant_2105" viable="true" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;)" to="(((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;) + 1)" />
    <mutant id="mutant_3437" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(((dayOfWeek - 1) + 1) % 7) + 1" to="((((dayOfWeek - 1) + 1) % 7) + 1) + 1" />
    <mutant id="mutant_2106" viable="false" in="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)" from="((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;)" to="(((&quot;Year is too small: &quot; + year) + &quot; &lt; &quot;) - 1)" />
    <mutant id="mutant_3436" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(((dayOfWeek - 1) + 1) % 7) + 1" to="((((dayOfWeek - 1) + 1) % 7) + 1) * -1" />
    <mutant id="mutant_3424" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="((str.length()) - 1)" to="(((str.length()) - 1) - 1)" />
    <mutant id="mutant_3423" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="((str.length()) - 1)" to="(((str.length()) - 1) * -1)" />
    <mutant id="mutant_3422" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="((str.length()) - 1)" to="(((str.length()) - 1) + 1)" />
    <mutant id="mutant_3421" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_3420" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_3429" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(dayOfWeek - 1)" to="((dayOfWeek - 1) - 1)" />
    <mutant id="mutant_3428" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(dayOfWeek - 1)" to="((dayOfWeek - 1) + 1)" />
    <mutant id="mutant_3427" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(dayOfWeek - 1)" to="((dayOfWeek - 1) * -1)" />
    <mutant id="mutant_3426" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(day != (-1)) &amp;&amp; (dayOfWeek != 0)" to="!((day != (-1)) &amp;&amp; (dayOfWeek != 0))" />
    <mutant id="mutant_3425" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(month == 12) &amp;&amp; (day == 31)" to="!((month == 12) &amp;&amp; (day == 31))" />
    <mutant id="mutant_327" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForPattern(java.lang.String)" from="(pattern == null) || ((pattern.length()) == 0)" to="!((pattern == null) || ((pattern.length()) == 0))" />
    <mutant id="mutant_328" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(style == null) || ((style.length()) != 2)" to="!((style == null) || ((style.length()) != 2))" />
    <mutant id="mutant_329" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(&quot;Invalid style specification: &quot; + style)" to="((&quot;Invalid style specification: &quot; + style) + 1)" />
    <mutant id="mutant_323" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="(!((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')))" />
    <mutant id="mutant_324" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(!((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" />
    <mutant id="mutant_325" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="(!(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))))" />
    <mutant id="mutant_326" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(!inLiteral) &amp;&amp; (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="!((!inLiteral) &amp;&amp; (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))))" />
    <mutant id="mutant_3262" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="(next + wallOffset)" to="((next + wallOffset) - 1)" />
    <mutant id="mutant_4593" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getWeeks())) + (millis / (DateTimeConstants.MILLIS_PER_WEEK))" to="(((long)(getWeeks())) + (millis / (DateTimeConstants.MILLIS_PER_WEEK))) * -1" />
    <mutant id="mutant_3261" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="(next + wallOffset)" to="((next + wallOffset) + 1)" />
    <mutant id="mutant_4592" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getWeeks())) + (millis / (DateTimeConstants.MILLIS_PER_WEEK))" to="(((long)(getWeeks())) + (millis / (DateTimeConstants.MILLIS_PER_WEEK))) - 1" />
    <mutant id="mutant_3260" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="(chrono.year().set(0, iFromYear)) - wallOffset" to="((chrono.year().set(0, iFromYear)) - wallOffset) + 1" />
    <mutant id="mutant_4591" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getWeeks())) + (millis / (DateTimeConstants.MILLIS_PER_WEEK))" to="(((long)(getWeeks())) + (millis / (DateTimeConstants.MILLIS_PER_WEEK))) + 1" />
    <mutant id="mutant_4590" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="(millis / (DateTimeConstants.MILLIS_PER_WEEK))" to="((millis / (DateTimeConstants.MILLIS_PER_WEEK)) * -1)" />
    <mutant id="mutant_3259" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="(chrono.year().set(0, iFromYear)) - wallOffset" to="((chrono.year().set(0, iFromYear)) - wallOffset) - 1" />
    <mutant id="mutant_3258" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="(chrono.year().set(0, iFromYear)) - wallOffset" to="((chrono.year().set(0, iFromYear)) - wallOffset) * -1" />
    <mutant id="mutant_4589" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="(millis / (DateTimeConstants.MILLIS_PER_WEEK))" to="((millis / (DateTimeConstants.MILLIS_PER_WEEK)) - 1)" />
    <mutant id="mutant_3257" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="(instant + wallOffset)" to="((instant + wallOffset) * -1)" />
    <mutant id="mutant_4588" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="(millis / (DateTimeConstants.MILLIS_PER_WEEK))" to="((millis / (DateTimeConstants.MILLIS_PER_WEEK)) + 1)" />
    <mutant id="mutant_3256" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="(instant + wallOffset)" to="((instant + wallOffset) - 1)" />
    <mutant id="mutant_4587" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getDays())) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((long)(getDays())) * (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_3255" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="(instant + wallOffset)" to="((instant + wallOffset) + 1)" />
    <mutant id="mutant_4586" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getDays())) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((long)(getDays())) * (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_3254" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) - 1" />
    <mutant id="mutant_4585" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getDays())) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((long)(getDays())) * (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_3253" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) * -1" />
    <mutant id="mutant_4584" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)" to="(((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)) - 1" />
    <mutant id="mutant_3252" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) + 1" />
    <mutant id="mutant_4583" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)" to="(((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)) + 1" />
    <mutant id="mutant_320" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_321" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_322" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((i + 1) &lt; length) &amp;&amp; ((pattern.charAt((i + 1))) == '\'')" to="!(((i + 1) &lt; length) &amp;&amp; ((pattern.charAt((i + 1))) == '\''))" />
    <mutant id="mutant_338" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)" from="((dateStyle &lt;&lt; 2) + dateStyle) + timeStyle" to="(((dateStyle &lt;&lt; 2) + dateStyle) + timeStyle) * -1" />
    <mutant id="mutant_339" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_334" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)" from="((dateStyle &lt;&lt; 2) + dateStyle)" to="(((dateStyle &lt;&lt; 2) + dateStyle) * -1)" />
    <mutant id="mutant_335" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)" from="((dateStyle &lt;&lt; 2) + dateStyle)" to="(((dateStyle &lt;&lt; 2) + dateStyle) - 1)" />
    <mutant id="mutant_336" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)" from="((dateStyle &lt;&lt; 2) + dateStyle) + timeStyle" to="(((dateStyle &lt;&lt; 2) + dateStyle) + timeStyle) - 1" />
    <mutant id="mutant_337" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)" from="((dateStyle &lt;&lt; 2) + dateStyle) + timeStyle" to="(((dateStyle &lt;&lt; 2) + dateStyle) + timeStyle) + 1" />
    <mutant id="mutant_3251" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.renameAppend(java.lang.String)" from="((iNameKey) + appendNameKey)" to="(((iNameKey) + appendNameKey) * -1)" />
    <mutant id="mutant_4582" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)" to="(((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)) * -1" />
    <mutant id="mutant_3250" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.renameAppend(java.lang.String)" from="((iNameKey) + appendNameKey)" to="(((iNameKey) + appendNameKey) - 1)" />
    <mutant id="mutant_4581" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_4580" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_3248" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))) &amp;&amp; (iOfYear.equals(other.iOfYear))" to="!((((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))) &amp;&amp; (iOfYear.equals(other.iOfYear)))" />
    <mutant id="mutant_4579" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_3247" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey)))" to="(!(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))))" />
    <mutant id="mutant_4578" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_3246" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(&quot;Fixing duplicate recurrent name key - &quot; + (tailZone.iStartRecurrence.getNameKey()))" to="((&quot;Fixing duplicate recurrent name key - &quot; + (tailZone.iStartRecurrence.getNameKey())) * -1)" />
    <mutant id="mutant_4577" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_3245" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(&quot;Fixing duplicate recurrent name key - &quot; + (tailZone.iStartRecurrence.getNameKey()))" to="((&quot;Fixing duplicate recurrent name key - &quot; + (tailZone.iStartRecurrence.getNameKey())) + 1)" />
    <mutant id="mutant_4576" viable="true" in="org.joda.time.Period.toStandardWeeks()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_3244" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(&quot;Fixing duplicate recurrent name key - &quot; + (tailZone.iStartRecurrence.getNameKey()))" to="((&quot;Fixing duplicate recurrent name key - &quot; + (tailZone.iStartRecurrence.getNameKey())) - 1)" />
    <mutant id="mutant_4575" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.SECONDS_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.SECONDS_PER_WEEK))) * -1)" />
    <mutant id="mutant_3243" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(nextNameKey + &quot;-Summer&quot;)" to="((nextNameKey + &quot;-Summer&quot;) + 1)" />
    <mutant id="mutant_4574" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.SECONDS_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.SECONDS_PER_WEEK))) + 1)" />
    <mutant id="mutant_3242" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(nextNameKey + &quot;-Summer&quot;)" to="((nextNameKey + &quot;-Summer&quot;) - 1)" />
    <mutant id="mutant_4573" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.SECONDS_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.SECONDS_PER_WEEK))) - 1)" />
    <mutant id="mutant_3241" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(nextNameKey + &quot;-Summer&quot;)" to="((nextNameKey + &quot;-Summer&quot;) * -1)" />
    <mutant id="mutant_4572" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getDays())) * ((long)(DateTimeConstants.SECONDS_PER_DAY)))" to="((((long)(getDays())) * ((long)(DateTimeConstants.SECONDS_PER_DAY))) - 1)" />
    <mutant id="mutant_330" viable="false" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(&quot;Invalid style specification: &quot; + style)" to="((&quot;Invalid style specification: &quot; + style) * -1)" />
    <mutant id="mutant_331" viable="false" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(&quot;Invalid style specification: &quot; + style)" to="((&quot;Invalid style specification: &quot; + style) - 1)" />
    <mutant id="mutant_332" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(dateStyle == (DateTimeFormat.NONE)) &amp;&amp; (timeStyle == (DateTimeFormat.NONE))" to="!((dateStyle == (DateTimeFormat.NONE)) &amp;&amp; (timeStyle == (DateTimeFormat.NONE)))" />
    <mutant id="mutant_333" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)" from="((dateStyle &lt;&lt; 2) + dateStyle)" to="(((dateStyle &lt;&lt; 2) + dateStyle) + 1)" />
    <mutant id="mutant_3249" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.renameAppend(java.lang.String)" from="((iNameKey) + appendNameKey)" to="(((iNameKey) + appendNameKey) + 1)" />
    <mutant id="mutant_349" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_345" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="((new DateTime().getYear()) - 30)" to="(((new DateTime().getYear()) - 30) + 1)" />
    <mutant id="mutant_346" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="((new DateTime().getYear()) - 30)" to="(((new DateTime().getYear()) - 30) * -1)" />
    <mutant id="mutant_347" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="((new DateTime().getYear()) - 30)" to="(((new DateTime().getYear()) - 30) - 1)" />
    <mutant id="mutant_348" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_3240" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4571" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getDays())) * ((long)(DateTimeConstants.SECONDS_PER_DAY)))" to="((((long)(getDays())) * ((long)(DateTimeConstants.SECONDS_PER_DAY))) * -1)" />
    <mutant id="mutant_4570" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getDays())) * ((long)(DateTimeConstants.SECONDS_PER_DAY)))" to="((((long)(getDays())) * ((long)(DateTimeConstants.SECONDS_PER_DAY))) + 1)" />
    <mutant id="mutant_3237" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(curNameKey + &quot;-Summer&quot;)" to="((curNameKey + &quot;-Summer&quot;) - 1)" />
    <mutant id="mutant_4568" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getHours())) * ((long)(DateTimeConstants.SECONDS_PER_HOUR)))" to="((((long)(getHours())) * ((long)(DateTimeConstants.SECONDS_PER_HOUR))) + 1)" />
    <mutant id="mutant_3236" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(curNameKey + &quot;-Summer&quot;)" to="((curNameKey + &quot;-Summer&quot;) + 1)" />
    <mutant id="mutant_4567" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getHours())) * ((long)(DateTimeConstants.SECONDS_PER_HOUR)))" to="((((long)(getHours())) * ((long)(DateTimeConstants.SECONDS_PER_HOUR))) * -1)" />
    <mutant id="mutant_3235" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(curNameKey + &quot;-Summer&quot;)" to="((curNameKey + &quot;-Summer&quot;) * -1)" />
    <mutant id="mutant_4566" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getMinutes())) * ((long)(DateTimeConstants.SECONDS_PER_MINUTE)))" to="((((long)(getMinutes())) * ((long)(DateTimeConstants.SECONDS_PER_MINUTE))) + 1)" />
    <mutant id="mutant_3234" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;) + (new DateTime(trans[(i + 1)] , chrono)))" to="((((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;) + (new DateTime(trans[(i + 1)] , chrono))) - 1)" />
    <mutant id="mutant_4565" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getMinutes())) * ((long)(DateTimeConstants.SECONDS_PER_MINUTE)))" to="((((long)(getMinutes())) * ((long)(DateTimeConstants.SECONDS_PER_MINUTE))) - 1)" />
    <mutant id="mutant_3233" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;) + (new DateTime(trans[(i + 1)] , chrono)))" to="((((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;) + (new DateTime(trans[(i + 1)] , chrono))) * -1)" />
    <mutant id="mutant_4564" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getMinutes())) * ((long)(DateTimeConstants.SECONDS_PER_MINUTE)))" to="((((long)(getMinutes())) * ((long)(DateTimeConstants.SECONDS_PER_MINUTE))) * -1)" />
    <mutant id="mutant_3232" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;) + (new DateTime(trans[(i + 1)] , chrono)))" to="((((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;) + (new DateTime(trans[(i + 1)] , chrono))) + 1)" />
    <mutant id="mutant_4563" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_3231" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4562" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_3230" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4561" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)" to="((getMillis()) / (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_341" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_342" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="((new DateTime().getWeekyear()) - 30)" to="(((new DateTime().getWeekyear()) - 30) + 1)" />
    <mutant id="mutant_343" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="((new DateTime().getWeekyear()) - 30)" to="(((new DateTime().getWeekyear()) - 30) * -1)" />
    <mutant id="mutant_344" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="((new DateTime().getWeekyear()) - 30)" to="(((new DateTime().getWeekyear()) - 30) - 1)" />
    <mutant id="mutant_3239" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_340" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_3238" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4569" viable="true" in="org.joda.time.Period.toStandardSeconds()" from="(((long)(getHours())) * ((long)(DateTimeConstants.SECONDS_PER_HOUR)))" to="((((long)(getHours())) * ((long)(DateTimeConstants.SECONDS_PER_HOUR))) - 1)" />
    <mutant id="mutant_356" viable="true" in="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" from="instantMillis + (chrono.getZone().getOffset(instantMillis))" to="(instantMillis + (chrono.getZone().getOffset(instantMillis))) + 1" />
    <mutant id="mutant_357" viable="true" in="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="!((iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null))" />
    <mutant id="mutant_358" viable="true" in="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="!((iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null))" />
    <mutant id="mutant_359" viable="true" in="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="!((iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null))" />
    <mutant id="mutant_4560" viable="false" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(&quot;Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: &quot; + (toString()))" to="((&quot;Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: &quot; + (toString())) * -1)" />
    <mutant id="mutant_3226" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;)" to="(((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;) + 1)" />
    <mutant id="mutant_4557" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="totalMonths - normalizedMonths" to="(totalMonths - normalizedMonths) * -1" />
    <mutant id="mutant_3225" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(&quot;     - &quot; + (new DateTime(trans[i] , chrono)))" to="((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + 1)" />
    <mutant id="mutant_4556" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="totalMonths - normalizedMonths" to="(totalMonths - normalizedMonths) + 1" />
    <mutant id="mutant_3224" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(&quot;     - &quot; + (new DateTime(trans[i] , chrono)))" to="((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) * -1)" />
    <mutant id="mutant_4555" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="totalMonths - normalizedMonths" to="(totalMonths - normalizedMonths) - 1" />
    <mutant id="mutant_3223" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(&quot;     - &quot; + (new DateTime(trans[i] , chrono)))" to="((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) - 1)" />
    <mutant id="mutant_4554" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="totalMonths - (normalizedYears * 12)" to="(totalMonths - (normalizedYears * 12)) * -1" />
    <mutant id="mutant_3222" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(&quot;Fixing duplicate name key - &quot; + nextNameKey)" to="((&quot;Fixing duplicate name key - &quot; + nextNameKey) + 1)" />
    <mutant id="mutant_4553" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="totalMonths - (normalizedYears * 12)" to="(totalMonths - (normalizedYears * 12)) - 1" />
    <mutant id="mutant_3221" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(&quot;Fixing duplicate name key - &quot; + nextNameKey)" to="((&quot;Fixing duplicate name key - &quot; + nextNameKey) * -1)" />
    <mutant id="mutant_4552" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="totalMonths - (normalizedYears * 12)" to="(totalMonths - (normalizedYears * 12)) + 1" />
    <mutant id="mutant_3220" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(&quot;Fixing duplicate name key - &quot; + nextNameKey)" to="((&quot;Fixing duplicate name key - &quot; + nextNameKey) - 1)" />
    <mutant id="mutant_4551" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(normalizedYears * 12)" to="((normalizedYears * 12) - 1)" />
    <mutant id="mutant_4550" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(normalizedYears * 12)" to="((normalizedYears * 12) * -1)" />
    <mutant id="mutant_352" viable="false" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="(&quot;Illegal pattern component: &quot; + token)" to="((&quot;Illegal pattern component: &quot; + token) * -1)" />
    <mutant id="mutant_353" viable="false" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="(&quot;Illegal pattern component: &quot; + token)" to="((&quot;Illegal pattern component: &quot; + token) - 1)" />
    <mutant id="mutant_354" viable="true" in="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" from="instantMillis + (chrono.getZone().getOffset(instantMillis))" to="(instantMillis + (chrono.getZone().getOffset(instantMillis))) * -1" />
    <mutant id="mutant_355" viable="true" in="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" from="instantMillis + (chrono.getZone().getOffset(instantMillis))" to="(instantMillis + (chrono.getZone().getOffset(instantMillis))) - 1" />
    <mutant id="mutant_3229" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_350" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_3228" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;)" to="(((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;) - 1)" />
    <mutant id="mutant_4559" viable="false" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(&quot;Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: &quot; + (toString()))" to="((&quot;Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: &quot; + (toString())) - 1)" />
    <mutant id="mutant_351" viable="true" in="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)" from="(&quot;Illegal pattern component: &quot; + token)" to="((&quot;Illegal pattern component: &quot; + token) + 1)" />
    <mutant id="mutant_3227" viable="false" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;)" to="(((&quot;     - &quot; + (new DateTime(trans[i] , chrono))) + &quot; - &quot;) * -1)" />
    <mutant id="mutant_4558" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(&quot;Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: &quot; + (toString()))" to="((&quot;Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: &quot; + (toString())) + 1)" />
    <mutant id="mutant_367" viable="true" in="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="((instant ^ adjustedInstant) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="!(((instant ^ adjustedInstant) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0))" />
    <mutant id="mutant_368" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + 1" to="(position + 1) - 1" />
    <mutant id="mutant_369" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + 1" to="(position + 1) * -1" />
    <mutant id="mutant_3299" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 6)" to="((32 - 6) + 1)" />
    <mutant id="mutant_3298" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 6)" to="((32 - 6) * -1)" />
    <mutant id="mutant_3297" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 6)" to="((32 - 6) - 1)" />
    <mutant id="mutant_3296" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 6)" to="((32 - 6) + 1)" />
    <mutant id="mutant_363" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="((iPivotYear) == pivotYear) || (((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="!(((iPivotYear) == pivotYear) || (((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear))))" />
    <mutant id="mutant_364" viable="true" in="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="instant + offset" to="(instant + offset) + 1" />
    <mutant id="mutant_365" viable="true" in="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="instant + offset" to="(instant + offset) - 1" />
    <mutant id="mutant_366" viable="true" in="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="instant + offset" to="(instant + offset) * -1" />
    <mutant id="mutant_360" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(!((locale != null) &amp;&amp; (locale.equals(getLocale()))))" />
    <mutant id="mutant_361" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="!((locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale()))))" />
    <mutant id="mutant_362" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="(((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="(!(((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear))))" />
    <mutant id="mutant_378" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (iMaxParsedDigits)" to="(position + (iMaxParsedDigits)) * -1" />
    <mutant id="mutant_379" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (iMaxParsedDigits)" to="(position + (iMaxParsedDigits)) - 1" />
    <mutant id="mutant_3295" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 6)" to="((32 - 6) * -1)" />
    <mutant id="mutant_3294" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 6)" to="((32 - 6) - 1)" />
    <mutant id="mutant_3293" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(size - 1)" to="((size - 1) + 1)" />
    <mutant id="mutant_3292" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(size - 1)" to="((size - 1) - 1)" />
    <mutant id="mutant_3291" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(size - 1)" to="((size - 1) * -1)" />
    <mutant id="mutant_3290" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(tr.getMillis()) + offsetForNew" to="((tr.getMillis()) + offsetForNew) * -1" />
    <mutant id="mutant_3289" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(tr.getMillis()) + offsetForNew" to="((tr.getMillis()) + offsetForNew) - 1" />
    <mutant id="mutant_3288" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(tr.getMillis()) + offsetForNew" to="((tr.getMillis()) + offsetForNew) + 1" />
    <mutant id="mutant_3287" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(last.getMillis()) + offsetForLast" to="((last.getMillis()) + offsetForLast) - 1" />
    <mutant id="mutant_3286" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(last.getMillis()) + offsetForLast" to="((last.getMillis()) + offsetForLast) * -1" />
    <mutant id="mutant_3285" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(last.getMillis()) + offsetForLast" to="((last.getMillis()) + offsetForLast) + 1" />
    <mutant id="mutant_374" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_375" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_376" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_377" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + (iMaxParsedDigits)" to="(position + (iMaxParsedDigits)) + 1" />
    <mutant id="mutant_370" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="position + 1" to="(position + 1) + 1" />
    <mutant id="mutant_371" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(printerList.contains(null)) || (printerList.isEmpty())" to="!((printerList.contains(null)) || (printerList.isEmpty()))" />
    <mutant id="mutant_372" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(parserList.contains(null)) || (parserList.isEmpty())" to="!((parserList.contains(null)) || (parserList.isEmpty()))" />
    <mutant id="mutant_373" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="!((i &lt; len) &amp;&amp; (position &gt;= 0))" />
    <mutant id="mutant_389" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(field.getDurationField().getUnitMillis()) * 10" to="((field.getDurationField().getUnitMillis()) * 10) + 1" />
    <mutant id="mutant_3284" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(size - 2)" to="((size - 2) * -1)" />
    <mutant id="mutant_3283" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(size - 2)" to="((size - 2) - 1)" />
    <mutant id="mutant_3282" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(size - 2)" to="((size - 2) + 1)" />
    <mutant id="mutant_3281" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(size - 1)" to="((size - 1) + 1)" />
    <mutant id="mutant_3280" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(size - 1)" to="((size - 1) - 1)" />
    <mutant id="mutant_3279" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(size - 1)" to="((size - 1) * -1)" />
    <mutant id="mutant_380" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="!((c == '-') || (c == '+'))" />
    <mutant id="mutant_3278" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.getSaveMillis()" from="(iWallOffset) - (iStandardOffset)" to="((iWallOffset) - (iStandardOffset)) + 1" />
    <mutant id="mutant_3277" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.getSaveMillis()" from="(iWallOffset) - (iStandardOffset)" to="((iWallOffset) - (iStandardOffset)) - 1" />
    <mutant id="mutant_3276" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.getSaveMillis()" from="(iWallOffset) - (iStandardOffset)" to="((iWallOffset) - (iStandardOffset)) * -1" />
    <mutant id="mutant_3275" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="((iMillis) &gt; (other.iMillis)) &amp;&amp; (((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="!(((iMillis) &gt; (other.iMillis)) &amp;&amp; (((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey)))))" />
    <mutant id="mutant_3274" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="(!(((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey)))))" />
    <mutant id="mutant_385" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.length()) - position)" to="(((text.length()) - position) + 1)" />
    <mutant id="mutant_386" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.length()) - position)" to="(((text.length()) - position) - 1)" />
    <mutant id="mutant_387" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(field.getDurationField().getUnitMillis()) * 10" to="((field.getDurationField().getUnitMillis()) * 10) - 1" />
    <mutant id="mutant_388" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(field.getDurationField().getUnitMillis()) * 10" to="((field.getDurationField().getUnitMillis()) * 10) * -1" />
    <mutant id="mutant_381" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(expectedPos + 1)" to="((expectedPos + 1) - 1)" />
    <mutant id="mutant_382" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(expectedPos + 1)" to="((expectedPos + 1) * -1)" />
    <mutant id="mutant_383" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(expectedPos + 1)" to="((expectedPos + 1) + 1)" />
    <mutant id="mutant_384" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.length()) - position)" to="(((text.length()) - position) * -1)" />
    <mutant id="mutant_3273" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition(long,org.joda.time.tz.DateTimeZoneBuilder$Rule,int)" from="standardOffset + (rule.getSaveMillis())" to="(standardOffset + (rule.getSaveMillis())) - 1" />
    <mutant id="mutant_3272" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition(long,org.joda.time.tz.DateTimeZoneBuilder$Rule,int)" from="standardOffset + (rule.getSaveMillis())" to="(standardOffset + (rule.getSaveMillis())) * -1" />
    <mutant id="mutant_3271" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition(long,org.joda.time.tz.DateTimeZoneBuilder$Rule,int)" from="standardOffset + (rule.getSaveMillis())" to="(standardOffset + (rule.getSaveMillis())) + 1" />
    <mutant id="mutant_3270" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.firstTransition(long)" from="((iStandardOffset) + (iInitialSaveMillis))" to="(((iStandardOffset) + (iInitialSaveMillis)) - 1)" />
    <mutant id="mutant_3269" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.firstTransition(long)" from="((iStandardOffset) + (iInitialSaveMillis))" to="(((iStandardOffset) + (iInitialSaveMillis)) + 1)" />
    <mutant id="mutant_390" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) * -1)" />
    <mutant id="mutant_3268" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.firstTransition(long)" from="((iStandardOffset) + (iInitialSaveMillis))" to="(((iStandardOffset) + (iInitialSaveMillis)) * -1)" />
    <mutant id="mutant_4599" viable="false" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains months and months vary in length&quot;)" to="(((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains months and months vary in length&quot;) * -1)" />
    <mutant id="mutant_391" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) - 1)" />
    <mutant id="mutant_3267" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(java.lang.String)" from="((startRule.getToYear()) == (Integer.MAX_VALUE)) &amp;&amp; ((endRule.getToYear()) == (Integer.MAX_VALUE))" to="!(((startRule.getToYear()) == (Integer.MAX_VALUE)) &amp;&amp; ((endRule.getToYear()) == (Integer.MAX_VALUE)))" />
    <mutant id="mutant_4598" viable="false" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains months and months vary in length&quot;)" to="(((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains months and months vary in length&quot;) - 1)" />
    <mutant id="mutant_3266" viable="false" in="?" from="(ISOChronology.getInstanceUTC().year().get(now)) + 100" to="((ISOChronology.getInstanceUTC().year().get(now)) + 100) - 1" />
    <mutant id="mutant_4597" viable="true" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains months and months vary in length&quot;)" to="(((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains months and months vary in length&quot;) + 1)" />
    <mutant id="mutant_3265" viable="false" in="?" from="(ISOChronology.getInstanceUTC().year().get(now)) + 100" to="((ISOChronology.getInstanceUTC().year().get(now)) + 100) + 1" />
    <mutant id="mutant_4596" viable="false" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="(&quot;Cannot convert to &quot; + destintionType)" to="((&quot;Cannot convert to &quot; + destintionType) - 1)" />
    <mutant id="mutant_3264" viable="false" in="?" from="(ISOChronology.getInstanceUTC().year().get(now)) + 100" to="((ISOChronology.getInstanceUTC().year().get(now)) + 100) * -1" />
    <mutant id="mutant_4595" viable="false" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="(&quot;Cannot convert to &quot; + destintionType)" to="((&quot;Cannot convert to &quot; + destintionType) * -1)" />
    <mutant id="mutant_3263" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)" from="(next + wallOffset)" to="((next + wallOffset) * -1)" />
    <mutant id="mutant_4594" viable="true" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="(&quot;Cannot convert to &quot; + destintionType)" to="((&quot;Cannot convert to &quot; + destintionType) + 1)" />
    <mutant id="mutant_396" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="n / 10" to="(n / 10) + 1" />
    <mutant id="mutant_397" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c - '0')" to="((c - '0') * -1)" />
    <mutant id="mutant_398" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c - '0')" to="((c - '0') + 1)" />
    <mutant id="mutant_399" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c - '0')" to="((c - '0') - 1)" />
    <mutant id="mutant_392" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(position + length)" to="((position + length) + 1)" />
    <mutant id="mutant_393" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="!((c &lt; '0') || (c &gt; '9'))" />
    <mutant id="mutant_394" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="n / 10" to="(n / 10) * -1" />
    <mutant id="mutant_395" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="n / 10" to="(n / 10) - 1" />
    <mutant id="mutant_2809" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(long,long)" from="(org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant" to="((org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant) * -1" />
    <mutant id="mutant_2808" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(long,long)" from="(org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant" to="((org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant) - 1" />
    <mutant id="mutant_2807" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(long,long)" from="(org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant" to="((org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant) + 1" />
    <mutant id="mutant_2806" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(int,long)" from="(org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant" to="((org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant) + 1" />
    <mutant id="mutant_2805" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(int,long)" from="(org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant" to="((org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant) * -1" />
    <mutant id="mutant_2804" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(int,long)" from="(org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant" to="((org.joda.time.field.ImpreciseDateTimeField.this.add(instant, value)) - instant) - 1" />
    <mutant id="mutant_2803" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValue(long,long)" from="(instant + duration)" to="((instant + duration) * -1)" />
    <mutant id="mutant_2802" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValue(long,long)" from="(instant + duration)" to="((instant + duration) - 1)" />
    <mutant id="mutant_2801" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValue(long,long)" from="(instant + duration)" to="((instant + duration) + 1)" />
    <mutant id="mutant_2800" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="!((value &lt; lowerBound) || (value &gt; upperBound))" />
    <mutant id="mutant_1519" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="subtrahendInstant - (getYearMillis(subtrahendYear))" to="(subtrahendInstant - (getYearMillis(subtrahendYear))) * -1" />
    <mutant id="mutant_2841" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="(instant / (getUnitMillis()))" to="((instant / (getUnitMillis())) + 1)" />
    <mutant id="mutant_1510" viable="true" in="org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1)" to="((month - 1) + 1)" />
    <mutant id="mutant_2840" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="(instant / (getUnitMillis()))" to="((instant / (getUnitMillis())) - 1)" />
    <mutant id="mutant_1517" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="subtrahendInstant - (getYearMillis(subtrahendYear))" to="(subtrahendInstant - (getYearMillis(subtrahendYear))) + 1" />
    <mutant id="mutant_2849" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="(instant + 1)" to="((instant + 1) + 1)" />
    <mutant id="mutant_1518" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="subtrahendInstant - (getYearMillis(subtrahendYear))" to="(subtrahendInstant - (getYearMillis(subtrahendYear))) - 1" />
    <mutant id="mutant_2848" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((iRange) - 1)" to="(((iRange) - 1) - 1)" />
    <mutant id="mutant_1515" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="minuendInstant - (getYearMillis(minuendYear))" to="(minuendInstant - (getYearMillis(minuendYear))) - 1" />
    <mutant id="mutant_2847" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((iRange) - 1)" to="(((iRange) - 1) + 1)" />
    <mutant id="mutant_1516" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="minuendInstant - (getYearMillis(minuendYear))" to="(minuendInstant - (getYearMillis(minuendYear))) + 1" />
    <mutant id="mutant_2846" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((iRange) - 1)" to="(((iRange) - 1) * -1)" />
    <mutant id="mutant_1513" viable="true" in="org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1)" to="((month - 1) + 1)" />
    <mutant id="mutant_2845" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((int)((instant / (getUnitMillis())) % (iRange)))" to="((int)(((instant / (getUnitMillis())) % (iRange)))) + 1" />
    <mutant id="mutant_1514" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="minuendInstant - (getYearMillis(minuendYear))" to="(minuendInstant - (getYearMillis(minuendYear))) * -1" />
    <mutant id="mutant_2844" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((int)((instant / (getUnitMillis())) % (iRange)))" to="((int)(((instant / (getUnitMillis())) % (iRange)))) * -1" />
    <mutant id="mutant_1511" viable="true" in="org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1)" to="((month - 1) * -1)" />
    <mutant id="mutant_2843" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((int)((instant / (getUnitMillis())) % (iRange)))" to="((int)(((instant / (getUnitMillis())) % (iRange)))) - 1" />
    <mutant id="mutant_1512" viable="true" in="org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1)" to="((month - 1) - 1)" />
    <mutant id="mutant_2842" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="(instant / (getUnitMillis()))" to="((instant / (getUnitMillis())) * -1)" />
    <mutant id="mutant_1508" viable="true" in="org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1)" to="((month - 1) * -1)" />
    <mutant id="mutant_1509" viable="true" in="org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)" from="(month - 1)" to="((month - 1) - 1)" />
    <mutant id="mutant_2839" viable="true" in="org.joda.time.field.PreciseDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField)" from="((int)(rangeMillis / (getUnitMillis())))" to="((int)((rangeMillis / (getUnitMillis())))) * -1" />
    <mutant id="mutant_2830" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="(field.getMaximumValue()) + offset" to="((field.getMaximumValue()) + offset) + 1" />
    <mutant id="mutant_1506" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(334 * 84375)" to="((334 * 84375) * -1)" />
    <mutant id="mutant_2838" viable="true" in="org.joda.time.field.PreciseDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField)" from="((int)(rangeMillis / (getUnitMillis())))" to="((int)((rangeMillis / (getUnitMillis())))) + 1" />
    <mutant id="mutant_1507" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(334 * 84375)" to="((334 * 84375) - 1)" />
    <mutant id="mutant_2837" viable="true" in="org.joda.time.field.PreciseDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField)" from="((int)(rangeMillis / (getUnitMillis())))" to="((int)((rangeMillis / (getUnitMillis())))) - 1" />
    <mutant id="mutant_1504" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(304 * 84375)" to="((304 * 84375) - 1)" />
    <mutant id="mutant_2836" viable="true" in="org.joda.time.field.OffsetDateTimeField.set(long,int)" from="(value - (iOffset))" to="((value - (iOffset)) + 1)" />
    <mutant id="mutant_1505" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(334 * 84375)" to="((334 * 84375) + 1)" />
    <mutant id="mutant_2835" viable="true" in="org.joda.time.field.OffsetDateTimeField.set(long,int)" from="(value - (iOffset))" to="((value - (iOffset)) - 1)" />
    <mutant id="mutant_1502" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(304 * 84375)" to="((304 * 84375) + 1)" />
    <mutant id="mutant_2834" viable="true" in="org.joda.time.field.OffsetDateTimeField.set(long,int)" from="(value - (iOffset))" to="((value - (iOffset)) * -1)" />
    <mutant id="mutant_1503" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(304 * 84375)" to="((304 * 84375) * -1)" />
    <mutant id="mutant_2833" viable="true" in="org.joda.time.field.OffsetDateTimeField.get(long)" from="(super.get(instant)) + (iOffset)" to="((super.get(instant)) + (iOffset)) * -1" />
    <mutant id="mutant_1500" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(243 * 84375)" to="((243 * 84375) - 1)" />
    <mutant id="mutant_2832" viable="true" in="org.joda.time.field.OffsetDateTimeField.get(long)" from="(super.get(instant)) + (iOffset)" to="((super.get(instant)) + (iOffset)) - 1" />
    <mutant id="mutant_1501" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(243 * 84375)" to="((243 * 84375) + 1)" />
    <mutant id="mutant_2831" viable="true" in="org.joda.time.field.OffsetDateTimeField.get(long)" from="(super.get(instant)) + (iOffset)" to="((super.get(instant)) + (iOffset)) + 1" />
    <mutant id="mutant_2829" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="(field.getMaximumValue()) + offset" to="((field.getMaximumValue()) + offset) * -1" />
    <mutant id="mutant_2828" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="(field.getMaximumValue()) + offset" to="((field.getMaximumValue()) + offset) - 1" />
    <mutant id="mutant_2827" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="((field.getMaximumValue()) + offset)" to="(((field.getMaximumValue()) + offset) + 1)" />
    <mutant id="mutant_2826" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="((field.getMaximumValue()) + offset)" to="(((field.getMaximumValue()) + offset) * -1)" />
    <mutant id="mutant_2825" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="((field.getMaximumValue()) + offset)" to="(((field.getMaximumValue()) + offset) - 1)" />
    <mutant id="mutant_2824" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="(field.getMinimumValue()) + offset" to="((field.getMinimumValue()) + offset) + 1" />
    <mutant id="mutant_2823" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="(field.getMinimumValue()) + offset" to="((field.getMinimumValue()) + offset) - 1" />
    <mutant id="mutant_2822" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="(field.getMinimumValue()) + offset" to="((field.getMinimumValue()) + offset) * -1" />
    <mutant id="mutant_2821" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="((field.getMinimumValue()) + offset)" to="(((field.getMinimumValue()) + offset) + 1)" />
    <mutant id="mutant_2820" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="((field.getMinimumValue()) + offset)" to="(((field.getMinimumValue()) + offset) - 1)" />
    <mutant id="mutant_2819" viable="true" in="org.joda.time.field.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)" from="((field.getMinimumValue()) + offset)" to="(((field.getMinimumValue()) + offset) * -1)" />
    <mutant id="mutant_2818" viable="true" in="org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(long,long)" from="(minuendInstant - subtrahendInstant) / (iUnitMillis)" to="((minuendInstant - subtrahendInstant) / (iUnitMillis)) - 1" />
    <mutant id="mutant_2817" viable="true" in="org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(long,long)" from="(minuendInstant - subtrahendInstant) / (iUnitMillis)" to="((minuendInstant - subtrahendInstant) / (iUnitMillis)) * -1" />
    <mutant id="mutant_2816" viable="true" in="org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(long,long)" from="(minuendInstant - subtrahendInstant) / (iUnitMillis)" to="((minuendInstant - subtrahendInstant) / (iUnitMillis)) + 1" />
    <mutant id="mutant_2815" viable="true" in="org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(long,long)" from="(minuendInstant - subtrahendInstant)" to="((minuendInstant - subtrahendInstant) * -1)" />
    <mutant id="mutant_2814" viable="true" in="org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(long,long)" from="(minuendInstant - subtrahendInstant)" to="((minuendInstant - subtrahendInstant) - 1)" />
    <mutant id="mutant_2813" viable="true" in="org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(long,long)" from="(minuendInstant - subtrahendInstant)" to="((minuendInstant - subtrahendInstant) + 1)" />
    <mutant id="mutant_2812" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValueAsLong(long,long)" from="(instant + duration)" to="((instant + duration) * -1)" />
    <mutant id="mutant_2811" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValueAsLong(long,long)" from="(instant + duration)" to="((instant + duration) - 1)" />
    <mutant id="mutant_2810" viable="true" in="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValueAsLong(long,long)" from="(instant + duration)" to="((instant + duration) + 1)" />
    <mutant id="mutant_1553" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) - 1)" />
    <mutant id="mutant_2885" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="(instant + 1)" to="((instant + 1) + 1)" />
    <mutant id="mutant_1554" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) * -1)" />
    <mutant id="mutant_2884" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="instant % (iUnitMillis)" to="(instant % (iUnitMillis)) * -1" />
    <mutant id="mutant_1551" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisMonth - 1) + months" to="((thisMonth - 1) + months) + 1" />
    <mutant id="mutant_2883" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="instant % (iUnitMillis)" to="(instant % (iUnitMillis)) - 1" />
    <mutant id="mutant_1552" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisMonth - 1) + months" to="((thisMonth - 1) + months) - 1" />
    <mutant id="mutant_2882" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="instant % (iUnitMillis)" to="(instant % (iUnitMillis)) + 1" />
    <mutant id="mutant_2881" viable="true" in="org.joda.time.field.PreciseDateTimeField.set(long,int)" from="instant + ((value - (get(instant))) * (iUnitMillis))" to="(instant + ((value - (get(instant))) * (iUnitMillis))) + 1" />
    <mutant id="mutant_1550" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisMonth - 1) + months" to="((thisMonth - 1) + months) * -1" />
    <mutant id="mutant_2880" viable="true" in="org.joda.time.field.PreciseDateTimeField.set(long,int)" from="instant + ((value - (get(instant))) * (iUnitMillis))" to="(instant + ((value - (get(instant))) * (iUnitMillis))) - 1" />
    <mutant id="mutant_1559" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse % (iMax))" to="((monthToUse % (iMax)) + 1)" />
    <mutant id="mutant_1557" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="thisYear + (monthToUse / (iMax))" to="(thisYear + (monthToUse / (iMax))) - 1" />
    <mutant id="mutant_2889" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="((instant + 1) % (iUnitMillis))" to="(((instant + 1) % (iUnitMillis)) - 1)" />
    <mutant id="mutant_1558" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="thisYear + (monthToUse / (iMax))" to="(thisYear + (monthToUse / (iMax))) * -1" />
    <mutant id="mutant_2888" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="((instant + 1) % (iUnitMillis))" to="(((instant + 1) % (iUnitMillis)) * -1)" />
    <mutant id="mutant_1555" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) + 1)" />
    <mutant id="mutant_2887" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="(instant + 1)" to="((instant + 1) - 1)" />
    <mutant id="mutant_1556" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="thisYear + (monthToUse / (iMax))" to="(thisYear + (monthToUse / (iMax))) + 1" />
    <mutant id="mutant_2886" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="(instant + 1)" to="((instant + 1) * -1)" />
    <mutant id="mutant_1542" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((curMonth0 + (valueToAdd % 12)) + 12) % 12)" to="((((curMonth0 + (valueToAdd % 12)) + 12) % 12) + 1)" />
    <mutant id="mutant_2874" viable="true" in="org.joda.time.field.PreciseDateTimeField.set(long,int)" from="(value - (get(instant)))" to="((value - (get(instant))) + 1)" />
    <mutant id="mutant_1543" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((curMonth0 + (valueToAdd % 12)) + 12) % 12)" to="((((curMonth0 + (valueToAdd % 12)) + 12) % 12) - 1)" />
    <mutant id="mutant_2873" viable="true" in="org.joda.time.field.PreciseDateTimeField.set(long,int)" from="(value - (get(instant)))" to="((value - (get(instant))) - 1)" />
    <mutant id="mutant_1540" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="((curMonth0 + (valueToAdd % 12)) + 12)" to="(((curMonth0 + (valueToAdd % 12)) + 12) * -1)" />
    <mutant id="mutant_2872" viable="true" in="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)" from="instant + ((wrappedValue - thisValue) * (getUnitMillis()))" to="(instant + ((wrappedValue - thisValue) * (getUnitMillis()))) + 1" />
    <mutant id="mutant_1541" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((curMonth0 + (valueToAdd % 12)) + 12) % 12)" to="((((curMonth0 + (valueToAdd % 12)) + 12) % 12) * -1)" />
    <mutant id="mutant_2871" viable="true" in="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)" from="instant + ((wrappedValue - thisValue) * (getUnitMillis()))" to="(instant + ((wrappedValue - thisValue) * (getUnitMillis()))) - 1" />
    <mutant id="mutant_2870" viable="true" in="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)" from="instant + ((wrappedValue - thisValue) * (getUnitMillis()))" to="(instant + ((wrappedValue - thisValue) * (getUnitMillis()))) * -1" />
    <mutant id="mutant_1548" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisMonth - 1)" to="((thisMonth - 1) + 1)" />
    <mutant id="mutant_1549" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisMonth - 1)" to="((thisMonth - 1) - 1)" />
    <mutant id="mutant_2879" viable="true" in="org.joda.time.field.PreciseDateTimeField.set(long,int)" from="instant + ((value - (get(instant))) * (iUnitMillis))" to="(instant + ((value - (get(instant))) * (iUnitMillis))) * -1" />
    <mutant id="mutant_1546" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((curMonth0 + (valueToAdd % 12)) + 12) % 12) + 1" to="((((curMonth0 + (valueToAdd % 12)) + 12) % 12) + 1) + 1" />
    <mutant id="mutant_2878" viable="true" in="org.joda.time.field.PreciseDateTimeField.set(long,int)" from="((value - (get(instant))) * (iUnitMillis))" to="(((value - (get(instant))) * (iUnitMillis)) - 1)" />
    <mutant id="mutant_1547" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisMonth - 1)" to="((thisMonth - 1) * -1)" />
    <mutant id="mutant_2877" viable="true" in="org.joda.time.field.PreciseDateTimeField.set(long,int)" from="((value - (get(instant))) * (iUnitMillis))" to="(((value - (get(instant))) * (iUnitMillis)) + 1)" />
    <mutant id="mutant_1544" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((curMonth0 + (valueToAdd % 12)) + 12) % 12) + 1" to="((((curMonth0 + (valueToAdd % 12)) + 12) % 12) + 1) - 1" />
    <mutant id="mutant_2876" viable="true" in="org.joda.time.field.PreciseDateTimeField.set(long,int)" from="((value - (get(instant))) * (iUnitMillis))" to="(((value - (get(instant))) * (iUnitMillis)) * -1)" />
    <mutant id="mutant_1545" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((curMonth0 + (valueToAdd % 12)) + 12) % 12) + 1" to="((((curMonth0 + (valueToAdd % 12)) + 12) % 12) + 1) * -1" />
    <mutant id="mutant_2875" viable="true" in="org.joda.time.field.PreciseDateTimeField.set(long,int)" from="(value - (get(instant)))" to="((value - (get(instant))) * -1)" />
    <mutant id="mutant_1531" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(values[0]) - 1" to="((values[0]) - 1) - 1" />
    <mutant id="mutant_2863" viable="true" in="org.joda.time.field.PreciseDateTimeField.getMaximumValue()" from="(iRange) - 1" to="((iRange) - 1) - 1" />
    <mutant id="mutant_1532" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(valueToAdd % 12)" to="((valueToAdd % 12) + 1)" />
    <mutant id="mutant_2862" viable="true" in="org.joda.time.field.PreciseDateTimeField.getMaximumValue()" from="(iRange) - 1" to="((iRange) - 1) + 1" />
    <mutant id="mutant_2861" viable="true" in="org.joda.time.field.PreciseDateTimeField.getMaximumValue()" from="(iRange) - 1" to="((iRange) - 1) * -1" />
    <mutant id="mutant_1530" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(values[0]) - 1" to="((values[0]) - 1) + 1" />
    <mutant id="mutant_2860" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((iRange) - 1) + ((int)((((instant + 1) / (getUnitMillis())) % (iRange))))" to="(((iRange) - 1) + ((int)((((instant + 1) / (getUnitMillis())) % (iRange))))) + 1" />
    <mutant id="mutant_1539" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="((curMonth0 + (valueToAdd % 12)) + 12)" to="(((curMonth0 + (valueToAdd % 12)) + 12) - 1)" />
    <mutant id="mutant_1537" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(curMonth0 + (valueToAdd % 12))" to="((curMonth0 + (valueToAdd % 12)) * -1)" />
    <mutant id="mutant_2869" viable="true" in="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)" from="((wrappedValue - thisValue) * (getUnitMillis()))" to="(((wrappedValue - thisValue) * (getUnitMillis())) + 1)" />
    <mutant id="mutant_1538" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="((curMonth0 + (valueToAdd % 12)) + 12)" to="(((curMonth0 + (valueToAdd % 12)) + 12) + 1)" />
    <mutant id="mutant_2868" viable="true" in="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)" from="((wrappedValue - thisValue) * (getUnitMillis()))" to="(((wrappedValue - thisValue) * (getUnitMillis())) - 1)" />
    <mutant id="mutant_1535" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(curMonth0 + (valueToAdd % 12))" to="((curMonth0 + (valueToAdd % 12)) + 1)" />
    <mutant id="mutant_2867" viable="true" in="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)" from="((wrappedValue - thisValue) * (getUnitMillis()))" to="(((wrappedValue - thisValue) * (getUnitMillis())) * -1)" />
    <mutant id="mutant_1536" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(curMonth0 + (valueToAdd % 12))" to="((curMonth0 + (valueToAdd % 12)) - 1)" />
    <mutant id="mutant_2866" viable="true" in="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)" from="(wrappedValue - thisValue)" to="((wrappedValue - thisValue) - 1)" />
    <mutant id="mutant_1533" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(valueToAdd % 12)" to="((valueToAdd % 12) * -1)" />
    <mutant id="mutant_2865" viable="true" in="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)" from="(wrappedValue - thisValue)" to="((wrappedValue - thisValue) * -1)" />
    <mutant id="mutant_1534" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(valueToAdd % 12)" to="((valueToAdd % 12) - 1)" />
    <mutant id="mutant_2864" viable="true" in="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)" from="(wrappedValue - thisValue)" to="((wrappedValue - thisValue) + 1)" />
    <mutant id="mutant_1520" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="(minuendRem &gt;= (BasicGJChronology.FEB_29)) &amp;&amp; (isLeapYear(minuendYear))" to="!((minuendRem &gt;= (BasicGJChronology.FEB_29)) &amp;&amp; (isLeapYear(minuendYear)))" />
    <mutant id="mutant_2852" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((instant + 1) / (getUnitMillis()))" to="(((instant + 1) / (getUnitMillis())) - 1)" />
    <mutant id="mutant_1521" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="minuendYear - subtrahendYear" to="(minuendYear - subtrahendYear) * -1" />
    <mutant id="mutant_2851" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="(instant + 1)" to="((instant + 1) - 1)" />
    <mutant id="mutant_2850" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="(instant + 1)" to="((instant + 1) * -1)" />
    <mutant id="mutant_1528" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))) &amp;&amp; (fieldIndex == 0)" to="!((((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))) &amp;&amp; (fieldIndex == 0))" />
    <mutant id="mutant_1529" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(values[0]) - 1" to="((values[0]) - 1) * -1" />
    <mutant id="mutant_2859" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((iRange) - 1) + ((int)((((instant + 1) / (getUnitMillis())) % (iRange))))" to="(((iRange) - 1) + ((int)((((instant + 1) / (getUnitMillis())) % (iRange))))) - 1" />
    <mutant id="mutant_1526" viable="true" in="org.joda.time.chrono.BasicGJChronology.setYear(long,int)" from="(31 + 28)" to="((31 + 28) * -1)" />
    <mutant id="mutant_2858" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((iRange) - 1) + ((int)((((instant + 1) / (getUnitMillis())) % (iRange))))" to="(((iRange) - 1) + ((int)((((instant + 1) / (getUnitMillis())) % (iRange))))) * -1" />
    <mutant id="mutant_1527" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear())))" to="(!(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))))" />
    <mutant id="mutant_2857" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((int)((((instant + 1) / (getUnitMillis())) % (iRange))))" to="(((int)((((instant + 1) / (getUnitMillis())) % (iRange)))) * -1)" />
    <mutant id="mutant_1524" viable="true" in="org.joda.time.chrono.BasicGJChronology.setYear(long,int)" from="(31 + 28)" to="((31 + 28) + 1)" />
    <mutant id="mutant_2856" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((int)((((instant + 1) / (getUnitMillis())) % (iRange))))" to="(((int)((((instant + 1) / (getUnitMillis())) % (iRange)))) - 1)" />
    <mutant id="mutant_1525" viable="true" in="org.joda.time.chrono.BasicGJChronology.setYear(long,int)" from="(31 + 28)" to="((31 + 28) - 1)" />
    <mutant id="mutant_2855" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((int)((((instant + 1) / (getUnitMillis())) % (iRange))))" to="(((int)((((instant + 1) / (getUnitMillis())) % (iRange)))) + 1)" />
    <mutant id="mutant_1522" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="minuendYear - subtrahendYear" to="(minuendYear - subtrahendYear) + 1" />
    <mutant id="mutant_2854" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((instant + 1) / (getUnitMillis()))" to="(((instant + 1) / (getUnitMillis())) + 1)" />
    <mutant id="mutant_1523" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="minuendYear - subtrahendYear" to="(minuendYear - subtrahendYear) - 1" />
    <mutant id="mutant_2853" viable="true" in="org.joda.time.field.PreciseDateTimeField.get(long)" from="((instant + 1) / (getUnitMillis()))" to="(((instant + 1) / (getUnitMillis())) * -1)" />
    <mutant id="mutant_1597" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="thisYear + (monthToUse / (iMax))" to="(thisYear + (monthToUse / (iMax))) * -1" />
    <mutant id="mutant_4623" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1598" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse % (iMax))" to="((monthToUse % (iMax)) - 1)" />
    <mutant id="mutant_4622" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1595" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="thisYear + (monthToUse / (iMax))" to="(thisYear + (monthToUse / (iMax))) + 1" />
    <mutant id="mutant_4621" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="(size()) - 1" to="((size()) - 1) * -1" />
    <mutant id="mutant_1596" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="thisYear + (monthToUse / (iMax))" to="(thisYear + (monthToUse / (iMax))) - 1" />
    <mutant id="mutant_4620" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="(size()) - 1" to="((size()) - 1) - 1" />
    <mutant id="mutant_1593" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) - 1)" />
    <mutant id="mutant_1594" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) + 1)" />
    <mutant id="mutant_1591" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisMonth - 1) + months" to="((thisMonth - 1) + months) * -1" />
    <mutant id="mutant_1592" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) * -1)" />
    <mutant id="mutant_4629" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="((getName()) + name)" to="(((getName()) + name) + 1)" />
    <mutant id="mutant_4628" viable="false" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="((getName()) + name)" to="(((getName()) + name) * -1)" />
    <mutant id="mutant_4627" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="(iIndices[i]) - 1" to="((iIndices[i]) - 1) + 1" />
    <mutant id="mutant_4626" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="(iIndices[i]) - 1" to="((iIndices[i]) - 1) * -1" />
    <mutant id="mutant_1599" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(monthToUse % (iMax))" to="((monthToUse % (iMax)) * -1)" />
    <mutant id="mutant_4625" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="(iIndices[i]) - 1" to="((iIndices[i]) - 1) - 1" />
    <mutant id="mutant_4624" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_1590" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisMonth - 1) + months" to="((thisMonth - 1) + months) - 1" />
    <mutant id="mutant_1586" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisMonth - 1)" to="((thisMonth - 1) * -1)" />
    <mutant id="mutant_4612" viable="true" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(types == null) || ((types.length) == 0)" to="!((types == null) || ((types.length) == 0))" />
    <mutant id="mutant_1587" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisMonth - 1)" to="((thisMonth - 1) + 1)" />
    <mutant id="mutant_4611" viable="false" in="org.joda.time.PeriodType.toString()" from="(&quot;PeriodType[&quot; + (getName())) + &quot;]&quot;" to="((&quot;PeriodType[&quot; + (getName())) + &quot;]&quot;) - 1" />
    <mutant id="mutant_1584" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="datePart + timePart" to="(datePart + timePart) - 1" />
    <mutant id="mutant_4610" viable="true" in="org.joda.time.PeriodType.toString()" from="(&quot;PeriodType[&quot; + (getName())) + &quot;]&quot;" to="((&quot;PeriodType[&quot; + (getName())) + &quot;]&quot;) + 1" />
    <mutant id="mutant_1585" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="datePart + timePart" to="(datePart + timePart) * -1" />
    <mutant id="mutant_1582" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="((iMax) - remMonthToUse) + 1" to="(((iMax) - remMonthToUse) + 1) + 1" />
    <mutant id="mutant_1583" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="datePart + timePart" to="(datePart + timePart) + 1" />
    <mutant id="mutant_1580" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="((iMax) - remMonthToUse) + 1" to="(((iMax) - remMonthToUse) + 1) * -1" />
    <mutant id="mutant_1581" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="((iMax) - remMonthToUse) + 1" to="(((iMax) - remMonthToUse) + 1) - 1" />
    <mutant id="mutant_4619" viable="true" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="(size()) - 1" to="((size()) - 1) + 1" />
    <mutant id="mutant_4618" viable="false" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(&quot;PeriodType does not support fields: &quot; + list)" to="((&quot;PeriodType does not support fields: &quot; + list) * -1)" />
    <mutant id="mutant_4617" viable="false" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(&quot;PeriodType does not support fields: &quot; + list)" to="((&quot;PeriodType does not support fields: &quot; + list) - 1)" />
    <mutant id="mutant_4616" viable="true" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(&quot;PeriodType does not support fields: &quot; + list)" to="((&quot;PeriodType does not support fields: &quot; + list) + 1)" />
    <mutant id="mutant_4615" viable="false" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(&quot;PeriodType does not support fields: &quot; + cached)" to="((&quot;PeriodType does not support fields: &quot; + cached) * -1)" />
    <mutant id="mutant_1588" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisMonth - 1)" to="((thisMonth - 1) - 1)" />
    <mutant id="mutant_4614" viable="true" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(&quot;PeriodType does not support fields: &quot; + cached)" to="((&quot;PeriodType does not support fields: &quot; + cached) + 1)" />
    <mutant id="mutant_1589" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(thisMonth - 1) + months" to="((thisMonth - 1) + months) + 1" />
    <mutant id="mutant_4613" viable="false" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(&quot;PeriodType does not support fields: &quot; + cached)" to="((&quot;PeriodType does not support fields: &quot; + cached) - 1)" />
    <mutant id="mutant_1575" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="monthToUse % (iMax)" to="(monthToUse % (iMax)) - 1" />
    <mutant id="mutant_4601" viable="false" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="(&quot;Cannot convert to &quot; + destintionType)" to="((&quot;Cannot convert to &quot; + destintionType) * -1)" />
    <mutant id="mutant_1576" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="monthToUse % (iMax)" to="(monthToUse % (iMax)) * -1" />
    <mutant id="mutant_4600" viable="true" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="(&quot;Cannot convert to &quot; + destintionType)" to="((&quot;Cannot convert to &quot; + destintionType) + 1)" />
    <mutant id="mutant_1573" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisYear + (monthToUse / (iMax))) - 1" to="((thisYear + (monthToUse / (iMax))) - 1) - 1" />
    <mutant id="mutant_1574" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="monthToUse % (iMax)" to="(monthToUse % (iMax)) + 1" />
    <mutant id="mutant_1571" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisYear + (monthToUse / (iMax))) - 1" to="((thisYear + (monthToUse / (iMax))) - 1) + 1" />
    <mutant id="mutant_1572" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisYear + (monthToUse / (iMax))) - 1" to="((thisYear + (monthToUse / (iMax))) - 1) * -1" />
    <mutant id="mutant_1570" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisYear + (monthToUse / (iMax)))" to="((thisYear + (monthToUse / (iMax))) * -1)" />
    <mutant id="mutant_4609" viable="false" in="org.joda.time.PeriodType.toString()" from="(&quot;PeriodType[&quot; + (getName())) + &quot;]&quot;" to="((&quot;PeriodType[&quot; + (getName())) + &quot;]&quot;) * -1" />
    <mutant id="mutant_4608" viable="false" in="org.joda.time.PeriodType.toString()" from="(&quot;PeriodType[&quot; + (getName()))" to="((&quot;PeriodType[&quot; + (getName())) - 1)" />
    <mutant id="mutant_4607" viable="true" in="org.joda.time.PeriodType.toString()" from="(&quot;PeriodType[&quot; + (getName()))" to="((&quot;PeriodType[&quot; + (getName())) + 1)" />
    <mutant id="mutant_4606" viable="false" in="org.joda.time.PeriodType.toString()" from="(&quot;PeriodType[&quot; + (getName()))" to="((&quot;PeriodType[&quot; + (getName())) * -1)" />
    <mutant id="mutant_1579" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="((iMax) - remMonthToUse)" to="(((iMax) - remMonthToUse) * -1)" />
    <mutant id="mutant_4605" viable="false" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains years and years vary in length&quot;)" to="(((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains years and years vary in length&quot;) * -1)" />
    <mutant id="mutant_4604" viable="true" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains years and years vary in length&quot;)" to="(((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains years and years vary in length&quot;) + 1)" />
    <mutant id="mutant_1577" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="((iMax) - remMonthToUse)" to="(((iMax) - remMonthToUse) - 1)" />
    <mutant id="mutant_4603" viable="false" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains years and years vary in length&quot;)" to="(((&quot;Cannot convert to &quot; + destintionType) + &quot; as this period contains years and years vary in length&quot;) - 1)" />
    <mutant id="mutant_1578" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="((iMax) - remMonthToUse)" to="(((iMax) - remMonthToUse) + 1)" />
    <mutant id="mutant_4602" viable="false" in="org.joda.time.Period.checkYearsAndMonths(java.lang.String)" from="(&quot;Cannot convert to &quot; + destintionType)" to="((&quot;Cannot convert to &quot; + destintionType) - 1)" />
    <mutant id="mutant_1564" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse % (iMax)) + 1" to="((monthToUse % (iMax)) + 1) * -1" />
    <mutant id="mutant_2896" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="(((instant + 1) % (iUnitMillis)) + (iUnitMillis)) - 1" to="((((instant + 1) % (iUnitMillis)) + (iUnitMillis)) - 1) + 1" />
    <mutant id="mutant_1565" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) - 1)" />
    <mutant id="mutant_2895" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="(((instant + 1) % (iUnitMillis)) + (iUnitMillis)) - 1" to="((((instant + 1) % (iUnitMillis)) + (iUnitMillis)) - 1) * -1" />
    <mutant id="mutant_1562" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse % (iMax)) + 1" to="((monthToUse % (iMax)) + 1) + 1" />
    <mutant id="mutant_2894" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="(((instant + 1) % (iUnitMillis)) + (iUnitMillis)) - 1" to="((((instant + 1) % (iUnitMillis)) + (iUnitMillis)) - 1) - 1" />
    <mutant id="mutant_1563" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse % (iMax)) + 1" to="((monthToUse % (iMax)) + 1) - 1" />
    <mutant id="mutant_2893" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="(((instant + 1) % (iUnitMillis)) + (iUnitMillis))" to="((((instant + 1) % (iUnitMillis)) + (iUnitMillis)) * -1)" />
    <mutant id="mutant_1560" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse % (iMax))" to="((monthToUse % (iMax)) - 1)" />
    <mutant id="mutant_2892" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="(((instant + 1) % (iUnitMillis)) + (iUnitMillis))" to="((((instant + 1) % (iUnitMillis)) + (iUnitMillis)) - 1)" />
    <mutant id="mutant_1561" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse % (iMax))" to="((monthToUse % (iMax)) * -1)" />
    <mutant id="mutant_2891" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="(((instant + 1) % (iUnitMillis)) + (iUnitMillis))" to="((((instant + 1) % (iUnitMillis)) + (iUnitMillis)) + 1)" />
    <mutant id="mutant_2890" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)" from="((instant + 1) % (iUnitMillis))" to="(((instant + 1) % (iUnitMillis)) + 1)" />
    <mutant id="mutant_1568" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisYear + (monthToUse / (iMax)))" to="((thisYear + (monthToUse / (iMax))) + 1)" />
    <mutant id="mutant_1569" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(thisYear + (monthToUse / (iMax)))" to="((thisYear + (monthToUse / (iMax))) - 1)" />
    <mutant id="mutant_2899" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) * -1)" />
    <mutant id="mutant_1566" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) * -1)" />
    <mutant id="mutant_2898" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) - 1)" />
    <mutant id="mutant_1567" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)" from="(monthToUse / (iMax))" to="((monthToUse / (iMax)) + 1)" />
    <mutant id="mutant_2897" viable="true" in="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)" from="(instant % (iUnitMillis))" to="((instant % (iUnitMillis)) + 1)" />
    <mutant id="mutant_4670" viable="false" in="org.joda.time.Weeks.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) - 1)" />
    <mutant id="mutant_2004" viable="true" in="org.joda.time.chrono.IslamicChronology$LeapYearPatternType.isLeapYear(int)" from="(year % 30)" to="((year % 30) * -1)" />
    <mutant id="mutant_3336" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.getLastRuleSet()" from="((iRuleSets.size()) - 1)" to="(((iRuleSets.size()) - 1) - 1)" />
    <mutant id="mutant_4667" viable="true" in="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)" from="((((int)(((date.getTime()) % 1000))) + 1000) % 1000)" to="(((((int)(((date.getTime()) % 1000))) + 1000) % 1000) * -1)" />
    <mutant id="mutant_2005" viable="true" in="org.joda.time.chrono.IslamicChronology$LeapYearPatternType.isLeapYear(int)" from="(year % 30)" to="((year % 30) - 1)" />
    <mutant id="mutant_3335" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.getLastRuleSet()" from="((iRuleSets.size()) - 1)" to="(((iRuleSets.size()) - 1) + 1)" />
    <mutant id="mutant_4666" viable="true" in="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)" from="((((int)(((date.getTime()) % 1000))) + 1000) % 1000)" to="(((((int)(((date.getTime()) % 1000))) + 1000) % 1000) - 1)" />
    <mutant id="mutant_2002" viable="true" in="org.joda.time.chrono.ISOChronology.toString()" from="((str + '[') + (zone.getID())) + ']'" to="(((str + '[') + (zone.getID())) + ']') + 1" />
    <mutant id="mutant_3334" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addCutover(int,char,int,int,int,boolean,int)" from="((iRuleSets.size()) - 1)" to="(((iRuleSets.size()) - 1) * -1)" />
    <mutant id="mutant_4665" viable="true" in="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)" from="((((int)(((date.getTime()) % 1000))) + 1000) % 1000)" to="(((((int)(((date.getTime()) % 1000))) + 1000) % 1000) + 1)" />
    <mutant id="mutant_2003" viable="false" in="org.joda.time.chrono.ISOChronology.toString()" from="((str + '[') + (zone.getID())) + ']'" to="(((str + '[') + (zone.getID())) + ']') - 1" />
    <mutant id="mutant_3333" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addCutover(int,char,int,int,int,boolean,int)" from="((iRuleSets.size()) - 1)" to="(((iRuleSets.size()) - 1) - 1)" />
    <mutant id="mutant_4664" viable="true" in="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)" from="(((int)(((date.getTime()) % 1000))) + 1000)" to="((((int)(((date.getTime()) % 1000))) + 1000) - 1)" />
    <mutant id="mutant_2000" viable="true" in="org.joda.time.chrono.ISOChronology.toString()" from="((str + '[') + (zone.getID()))" to="(((str + '[') + (zone.getID())) + 1)" />
    <mutant id="mutant_3332" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.addCutover(int,char,int,int,int,boolean,int)" from="((iRuleSets.size()) - 1)" to="(((iRuleSets.size()) - 1) + 1)" />
    <mutant id="mutant_4663" viable="true" in="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)" from="(((int)(((date.getTime()) % 1000))) + 1000)" to="((((int)(((date.getTime()) % 1000))) + 1000) * -1)" />
    <mutant id="mutant_2001" viable="false" in="org.joda.time.chrono.ISOChronology.toString()" from="((str + '[') + (zone.getID())) + ']'" to="(((str + '[') + (zone.getID())) + ']') * -1" />
    <mutant id="mutant_3331" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="((transitions.size()) == 1) &amp;&amp; (tailZone == null)" to="!(((transitions.size()) == 1) &amp;&amp; (tailZone == null))" />
    <mutant id="mutant_4662" viable="true" in="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)" from="(((int)(((date.getTime()) % 1000))) + 1000)" to="((((int)(((date.getTime()) % 1000))) + 1000) + 1)" />
    <mutant id="mutant_3330" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="(tailZone == null) &amp;&amp; (i == (ruleSetCount - 1))" to="!((tailZone == null) &amp;&amp; (i == (ruleSetCount - 1)))" />
    <mutant id="mutant_4661" viable="true" in="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)" from="((int)(((date.getTime()) % 1000)))" to="(((int)(((date.getTime()) % 1000))) + 1)" />
    <mutant id="mutant_4660" viable="true" in="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)" from="((int)(((date.getTime()) % 1000)))" to="(((int)(((date.getTime()) % 1000))) * -1)" />
    <mutant id="mutant_2008" viable="false" in="?" from="59L * (DateTimeConstants.MILLIS_PER_DAY)" to="(59L * (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_2009" viable="false" in="?" from="59L * (DateTimeConstants.MILLIS_PER_DAY)" to="(59L * (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_3339" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(30 * 60000L)" to="((30 * 60000L) + 1)" />
    <mutant id="mutant_2006" viable="true" in="org.joda.time.chrono.IslamicChronology$LeapYearPatternType.isLeapYear(int)" from="(year % 30)" to="((year % 30) + 1)" />
    <mutant id="mutant_3338" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)" from="(30 * 60000L)" to="((30 * 60000L) - 1)" />
    <mutant id="mutant_4669" viable="true" in="org.joda.time.Weeks.toString()" from="(&quot;P&quot; + (String.valueOf(getValue())))" to="((&quot;P&quot; + (String.valueOf(getValue()))) + 1)" />
    <mutant id="mutant_2007" viable="false" in="?" from="59L * (DateTimeConstants.MILLIS_PER_DAY)" to="(59L * (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_3337" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.getLastRuleSet()" from="((iRuleSets.size()) - 1)" to="(((iRuleSets.size()) - 1) * -1)" />
    <mutant id="mutant_4668" viable="true" in="org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_3325" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0))" to="(!(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)))" />
    <mutant id="mutant_4656" viable="false" in="org.joda.time.TimeOfDay.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) * -1)" />
    <mutant id="mutant_3324" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey)))" to="(!((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))))" />
    <mutant id="mutant_4655" viable="true" in="org.joda.time.Seconds.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_WEEK)) - 1)" />
    <mutant id="mutant_3323" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="w * 1000L" to="(w * 1000L) + 1" />
    <mutant id="mutant_4654" viable="true" in="org.joda.time.Seconds.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_WEEK)) * -1)" />
    <mutant id="mutant_3322" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="w * 1000L" to="(w * 1000L) - 1" />
    <mutant id="mutant_4653" viable="true" in="org.joda.time.Seconds.toStandardWeeks()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_WEEK))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_WEEK)) + 1)" />
    <mutant id="mutant_3321" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="w * 1000L" to="(w * 1000L) * -1" />
    <mutant id="mutant_4652" viable="true" in="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="!((start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime))" />
    <mutant id="mutant_3320" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(64 - 38)" to="((64 - 38) + 1)" />
    <mutant id="mutant_4651" viable="true" in="org.joda.time.Seconds.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) + 1)" />
    <mutant id="mutant_4650" viable="true" in="org.joda.time.Seconds.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) * -1)" />
    <mutant id="mutant_3329" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="(ruleSetCount - 1)" to="((ruleSetCount - 1) + 1)" />
    <mutant id="mutant_3328" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="(ruleSetCount - 1)" to="((ruleSetCount - 1) - 1)" />
    <mutant id="mutant_4659" viable="true" in="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)" from="((int)(((date.getTime()) % 1000)))" to="(((int)(((date.getTime()) % 1000))) - 1)" />
    <mutant id="mutant_3327" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="(ruleSetCount - 1)" to="((ruleSetCount - 1) * -1)" />
    <mutant id="mutant_4658" viable="true" in="org.joda.time.TimeOfDay.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) + 1)" />
    <mutant id="mutant_3326" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)) &amp;&amp; (standardOffset == 0)" to="!((((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)) &amp;&amp; (standardOffset == 0))" />
    <mutant id="mutant_4657" viable="false" in="org.joda.time.TimeOfDay.getField(int,org.joda.time.Chronology)" from="(&quot;Invalid index: &quot; + index)" to="((&quot;Invalid index: &quot; + index) - 1)" />
    <mutant id="mutant_305" viable="true" in="org.joda.time.format.DateTimeFormat.selectStyle(char)" from="(&quot;Invalid style character: &quot; + ch)" to="((&quot;Invalid style character: &quot; + ch) + 1)" />
    <mutant id="mutant_306" viable="false" in="org.joda.time.format.DateTimeFormat.selectStyle(char)" from="(&quot;Invalid style character: &quot; + ch)" to="((&quot;Invalid style character: &quot; + ch) - 1)" />
    <mutant id="mutant_307" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="(!((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')))" />
    <mutant id="mutant_308" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(!((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" />
    <mutant id="mutant_301" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result) + ((locale) == null ? 0 : locale.hashCode())" to="((prime * result) + ((locale) == null ? 0 : locale.hashCode())) - 1" />
    <mutant id="mutant_302" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result) + ((locale) == null ? 0 : locale.hashCode())" to="((prime * result) + ((locale) == null ? 0 : locale.hashCode())) + 1" />
    <mutant id="mutant_303" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result) + ((locale) == null ? 0 : locale.hashCode())" to="((prime * result) + ((locale) == null ? 0 : locale.hashCode())) * -1" />
    <mutant id="mutant_304" viable="false" in="org.joda.time.format.DateTimeFormat.selectStyle(char)" from="(&quot;Invalid style character: &quot; + ch)" to="((&quot;Invalid style character: &quot; + ch) * -1)" />
    <mutant id="mutant_309" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="!(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" />
    <mutant id="mutant_3314" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="v * 60000L" to="(v * 60000L) * -1" />
    <mutant id="mutant_4645" viable="true" in="org.joda.time.Seconds.toStandardHours()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_HOUR))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_HOUR)) * -1)" />
    <mutant id="mutant_3313" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="v * 60000L" to="(v * 60000L) - 1" />
    <mutant id="mutant_4644" viable="true" in="org.joda.time.Seconds.toStandardHours()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_HOUR))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_HOUR)) - 1)" />
    <mutant id="mutant_3312" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="v * 60000L" to="(v * 60000L) + 1" />
    <mutant id="mutant_4643" viable="true" in="org.joda.time.Seconds.toStandardHours()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_HOUR))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_HOUR)) + 1)" />
    <mutant id="mutant_3311" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 30)" to="((32 - 30) * -1)" />
    <mutant id="mutant_4642" viable="true" in="org.joda.time.Seconds.toStandardDuration()" from="(seconds * (DateTimeConstants.MILLIS_PER_SECOND))" to="((seconds * (DateTimeConstants.MILLIS_PER_SECOND)) + 1)" />
    <mutant id="mutant_3310" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 30)" to="((32 - 30) + 1)" />
    <mutant id="mutant_4641" viable="true" in="org.joda.time.Seconds.toStandardDuration()" from="(seconds * (DateTimeConstants.MILLIS_PER_SECOND))" to="((seconds * (DateTimeConstants.MILLIS_PER_SECOND)) * -1)" />
    <mutant id="mutant_4640" viable="true" in="org.joda.time.Seconds.toStandardDuration()" from="(seconds * (DateTimeConstants.MILLIS_PER_SECOND))" to="((seconds * (DateTimeConstants.MILLIS_PER_SECOND)) - 1)" />
    <mutant id="mutant_300" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result)" to="((prime * result) * -1)" />
    <mutant id="mutant_3319" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(64 - 38)" to="((64 - 38) * -1)" />
    <mutant id="mutant_3318" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(64 - 38)" to="((64 - 38) - 1)" />
    <mutant id="mutant_4649" viable="true" in="org.joda.time.Seconds.dividedBy(int)" from="((getValue()) / divisor)" to="(((getValue()) / divisor) - 1)" />
    <mutant id="mutant_3317" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(64 - 6)" to="((64 - 6) * -1)" />
    <mutant id="mutant_4648" viable="true" in="org.joda.time.Seconds.toStandardMinutes()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_MINUTE))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_MINUTE)) - 1)" />
    <mutant id="mutant_3316" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(64 - 6)" to="((64 - 6) + 1)" />
    <mutant id="mutant_4647" viable="true" in="org.joda.time.Seconds.toStandardMinutes()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_MINUTE))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_MINUTE)) * -1)" />
    <mutant id="mutant_3315" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(64 - 6)" to="((64 - 6) - 1)" />
    <mutant id="mutant_4646" viable="true" in="org.joda.time.Seconds.toStandardMinutes()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_MINUTE))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_MINUTE)) + 1)" />
    <mutant id="mutant_316" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_317" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_318" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_319" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_312" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_313" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_314" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_315" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_3303" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="v * (30 * 60000L)" to="(v * (30 * 60000L)) * -1" />
    <mutant id="mutant_4634" viable="false" in="org.joda.time.Seconds.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;S&quot;" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;S&quot;) - 1" />
    <mutant id="mutant_3302" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(30 * 60000L)" to="((30 * 60000L) * -1)" />
    <mutant id="mutant_4633" viable="false" in="org.joda.time.Seconds.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue())))" to="((&quot;PT&quot; + (String.valueOf(getValue()))) * -1)" />
    <mutant id="mutant_3301" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(30 * 60000L)" to="((30 * 60000L) + 1)" />
    <mutant id="mutant_4632" viable="true" in="org.joda.time.Seconds.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue())))" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + 1)" />
    <mutant id="mutant_3300" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(30 * 60000L)" to="((30 * 60000L) - 1)" />
    <mutant id="mutant_4631" viable="false" in="org.joda.time.Seconds.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue())))" to="((&quot;PT&quot; + (String.valueOf(getValue()))) - 1)" />
    <mutant id="mutant_4630" viable="false" in="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)" from="((getName()) + name)" to="(((getName()) + name) - 1)" />
    <mutant id="mutant_310" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_3309" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 30)" to="((32 - 30) - 1)" />
    <mutant id="mutant_311" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_3308" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 6)" to="((32 - 6) + 1)" />
    <mutant id="mutant_4639" viable="true" in="org.joda.time.Seconds.toStandardDays()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_DAY))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_DAY)) - 1)" />
    <mutant id="mutant_3307" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 6)" to="((32 - 6) * -1)" />
    <mutant id="mutant_4638" viable="true" in="org.joda.time.Seconds.toStandardDays()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_DAY))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_DAY)) + 1)" />
    <mutant id="mutant_3306" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="(32 - 6)" to="((32 - 6) - 1)" />
    <mutant id="mutant_4637" viable="true" in="org.joda.time.Seconds.toStandardDays()" from="((getValue()) / (DateTimeConstants.SECONDS_PER_DAY))" to="(((getValue()) / (DateTimeConstants.SECONDS_PER_DAY)) * -1)" />
    <mutant id="mutant_3305" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="v * (30 * 60000L)" to="(v * (30 * 60000L)) + 1" />
    <mutant id="mutant_4636" viable="false" in="org.joda.time.Seconds.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;S&quot;" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;S&quot;) * -1" />
    <mutant id="mutant_3304" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)" from="v * (30 * 60000L)" to="(v * (30 * 60000L)) - 1" />
    <mutant id="mutant_4635" viable="true" in="org.joda.time.Seconds.toString()" from="(&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;S&quot;" to="((&quot;PT&quot; + (String.valueOf(getValue()))) + &quot;S&quot;) + 1" />
    <mutant id="mutant_206" viable="true" in="org.joda.time.convert.ConverterSet.select(java.lang.Class)" from="(length - 1)" to="((length - 1) + 1)" />
    <mutant id="mutant_207" viable="true" in="org.joda.time.convert.ConverterSet.select(java.lang.Class)" from="(newLength - 1)" to="((newLength - 1) - 1)" />
    <mutant id="mutant_208" viable="true" in="org.joda.time.convert.ConverterSet.select(java.lang.Class)" from="(newLength - 1)" to="((newLength - 1) * -1)" />
    <mutant id="mutant_209" viable="true" in="org.joda.time.convert.ConverterSet.select(java.lang.Class)" from="(newLength - 1)" to="((newLength - 1) + 1)" />
    <mutant id="mutant_202" viable="false" in="org.joda.time.convert.ConverterManager.getPeriodConverter(java.lang.Object)" from="(&quot;No period converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No period converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) - 1)" />
    <mutant id="mutant_203" viable="true" in="org.joda.time.convert.ConverterManager.getPeriodConverter(java.lang.Object)" from="(&quot;No period converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No period converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) + 1)" />
    <mutant id="mutant_204" viable="true" in="org.joda.time.convert.ConverterSet.select(java.lang.Class)" from="(length - 1)" to="((length - 1) - 1)" />
    <mutant id="mutant_205" viable="true" in="org.joda.time.convert.ConverterSet.select(java.lang.Class)" from="(length - 1)" to="((length - 1) * -1)" />
    <mutant id="mutant_3141" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((((366L + 365) * 24) * 60) * 60)" to="(((((366L + 365) * 24) * 60) * 60) - 1)" />
    <mutant id="mutant_4472" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))" to="(((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) + 1" />
    <mutant id="mutant_3140" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((((366L + 365) * 24) * 60) * 60)" to="(((((366L + 365) * 24) * 60) * 60) + 1)" />
    <mutant id="mutant_4471" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))" to="(((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) - 1" />
    <mutant id="mutant_4470" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))" to="(((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) * -1" />
    <mutant id="mutant_3138" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(((366L + 365) * 24) * 60)" to="((((366L + 365) * 24) * 60) + 1)" />
    <mutant id="mutant_4469" viable="true" in="org.joda.time.Period.toStandardDays()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.DAYS_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.DAYS_PER_WEEK))) - 1)" />
    <mutant id="mutant_3137" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(((366L + 365) * 24) * 60)" to="((((366L + 365) * 24) * 60) - 1)" />
    <mutant id="mutant_4468" viable="true" in="org.joda.time.Period.toStandardDays()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.DAYS_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.DAYS_PER_WEEK))) * -1)" />
    <mutant id="mutant_3136" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(((366L + 365) * 24) * 60)" to="((((366L + 365) * 24) * 60) * -1)" />
    <mutant id="mutant_4467" viable="true" in="org.joda.time.Period.toStandardDays()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.DAYS_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.DAYS_PER_WEEK))) + 1)" />
    <mutant id="mutant_3135" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((366L + 365) * 24)" to="(((366L + 365) * 24) * -1)" />
    <mutant id="mutant_4466" viable="true" in="org.joda.time.Period.toStandardDays()" from="millis / (DateTimeConstants.MILLIS_PER_DAY)" to="(millis / (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_3134" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((366L + 365) * 24)" to="(((366L + 365) * 24) + 1)" />
    <mutant id="mutant_4465" viable="true" in="org.joda.time.Period.toStandardDays()" from="millis / (DateTimeConstants.MILLIS_PER_DAY)" to="(millis / (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_3133" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((366L + 365) * 24)" to="(((366L + 365) * 24) - 1)" />
    <mutant id="mutant_4464" viable="true" in="org.joda.time.Period.toStandardDays()" from="millis / (DateTimeConstants.MILLIS_PER_DAY)" to="(millis / (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_3132" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(366L + 365)" to="((366L + 365) * -1)" />
    <mutant id="mutant_4463" viable="true" in="org.joda.time.Period.toStandardDays()" from="((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)" to="(((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)) - 1" />
    <mutant id="mutant_3131" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(366L + 365)" to="((366L + 365) - 1)" />
    <mutant id="mutant_4462" viable="true" in="org.joda.time.Period.toStandardDays()" from="((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)" to="(((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)) + 1" />
    <mutant id="mutant_200" viable="true" in="org.joda.time.convert.ConverterManager.getPartialConverter(java.lang.Object)" from="(&quot;No partial converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No partial converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) + 1)" />
    <mutant id="mutant_201" viable="false" in="org.joda.time.convert.ConverterManager.getPeriodConverter(java.lang.Object)" from="(&quot;No period converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName()))" to="((&quot;No period converter found for type: &quot; + (object == null ? &quot;null&quot; : object.getClass().getName())) * -1)" />
    <mutant id="mutant_3139" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((((366L + 365) * 24) * 60) * 60)" to="(((((366L + 365) * 24) * 60) * 60) * -1)" />
    <mutant id="mutant_217" viable="true" in="org.joda.time.convert.ConverterSet.add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])" from="length + 1" to="(length + 1) - 1" />
    <mutant id="mutant_218" viable="true" in="org.joda.time.convert.ConverterSet.add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])" from="length + 1" to="(length + 1) * -1" />
    <mutant id="mutant_219" viable="true" in="org.joda.time.convert.ConverterSet.add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])" from="length + 1" to="(length + 1) + 1" />
    <mutant id="mutant_213" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(j != i) &amp;&amp; (converters[j].getSupportedType().isAssignableFrom(supportedType))" to="!((j != i) &amp;&amp; (converters[j].getSupportedType().isAssignableFrom(supportedType)))" />
    <mutant id="mutant_214" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="length - 1" to="(length - 1) - 1" />
    <mutant id="mutant_215" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="length - 1" to="(length - 1) * -1" />
    <mutant id="mutant_216" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="length - 1" to="(length - 1) + 1" />
    <mutant id="mutant_3130" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(366L + 365)" to="((366L + 365) + 1)" />
    <mutant id="mutant_4461" viable="true" in="org.joda.time.Period.toStandardDays()" from="((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)" to="(((long)(getHours())) * (DateTimeConstants.MILLIS_PER_HOUR)) * -1" />
    <mutant id="mutant_4460" viable="true" in="org.joda.time.Period.toStandardDays()" from="((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_3127" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(transitions[i]) - (transitions[(i - 1)])" to="((transitions[i]) - (transitions[(i - 1)])) * -1" />
    <mutant id="mutant_4458" viable="true" in="org.joda.time.Period.toStandardDays()" from="((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_3126" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4457" viable="true" in="org.joda.time.Period.toStandardDays()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_3125" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4456" viable="true" in="org.joda.time.Period.toStandardDays()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_3124" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4455" viable="true" in="org.joda.time.Period.toStandardDays()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_3123" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))) &amp;&amp; ((iTailZone) == null ? null == (other.iTailZone) : iTailZone.equals(other.iTailZone))" to="!((((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))) &amp;&amp; ((iTailZone) == null ? null == (other.iTailZone) : iTailZone.equals(other.iTailZone)))" />
    <mutant id="mutant_4454" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="((newValues.length) - index)" to="(((newValues.length) - index) + 1)" />
    <mutant id="mutant_3122" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets)))" to="(!(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))))" />
    <mutant id="mutant_4453" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="((newValues.length) - index)" to="(((newValues.length) - index) - 1)" />
    <mutant id="mutant_3121" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets)))" to="(!((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))))" />
    <mutant id="mutant_4452" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="((newValues.length) - index)" to="(((newValues.length) - index) * -1)" />
    <mutant id="mutant_3120" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys)))" to="(!(((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))))" />
    <mutant id="mutant_4451" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_210" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="(!((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type)))))" />
    <mutant id="mutant_211" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(supportedType == null) || ((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="!((supportedType == null) || ((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type)))))" />
    <mutant id="mutant_212" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(type == null) || (length == 0)" to="!((type == null) || (length == 0))" />
    <mutant id="mutant_3129" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(transitions[i]) - (transitions[(i - 1)])" to="((transitions[i]) - (transitions[(i - 1)])) - 1" />
    <mutant id="mutant_3128" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(transitions[i]) - (transitions[(i - 1)])" to="((transitions[i]) - (transitions[(i - 1)])) + 1" />
    <mutant id="mutant_4459" viable="true" in="org.joda.time.Period.toStandardDays()" from="((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_228" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(len - 1)" to="((len - 1) * -1)" />
    <mutant id="mutant_229" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(len - 1)" to="((len - 1) + 1)" />
    <mutant id="mutant_224" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p')))" to="(!((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))))" />
    <mutant id="mutant_225" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))" to="(!(((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't')))" />
    <mutant id="mutant_226" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't')))" to="(!(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))))" />
    <mutant id="mutant_227" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(len - 1)" to="((len - 1) - 1)" />
    <mutant id="mutant_4450" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_3116" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant(int,int,int)" from="millis - offset" to="(millis - offset) - 1" />
    <mutant id="mutant_4447" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="((newTypes.length) - index)" to="(((newTypes.length) - index) - 1)" />
    <mutant id="mutant_3115" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant(int,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) - 1" />
    <mutant id="mutant_4446" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="((newTypes.length) - index)" to="(((newTypes.length) - index) * -1)" />
    <mutant id="mutant_3114" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant(int,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) * -1" />
    <mutant id="mutant_4445" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_3113" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant(int,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) + 1" />
    <mutant id="mutant_4444" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_3112" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(org.joda.time.Chronology,long)" from="(iDayOfWeek) - dayOfWeek" to="((iDayOfWeek) - dayOfWeek) * -1" />
    <mutant id="mutant_4443" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_3111" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(org.joda.time.Chronology,long)" from="(iDayOfWeek) - dayOfWeek" to="((iDayOfWeek) - dayOfWeek) + 1" />
    <mutant id="mutant_4442" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(size()) - 1" to="((size()) - 1) * -1" />
    <mutant id="mutant_3110" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(org.joda.time.Chronology,long)" from="(iDayOfWeek) - dayOfWeek" to="((iDayOfWeek) - dayOfWeek) - 1" />
    <mutant id="mutant_4441" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(size()) - 1" to="((size()) - 1) + 1" />
    <mutant id="mutant_4440" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(size()) - 1" to="((size()) - 1) - 1" />
    <mutant id="mutant_220" viable="true" in="org.joda.time.convert.ConverterSet.remove(int,org.joda.time.convert.Converter[])" from="length - 1" to="(length - 1) - 1" />
    <mutant id="mutant_221" viable="true" in="org.joda.time.convert.ConverterSet.remove(int,org.joda.time.convert.Converter[])" from="length - 1" to="(length - 1) * -1" />
    <mutant id="mutant_222" viable="true" in="org.joda.time.convert.ConverterSet.remove(int,org.joda.time.convert.Converter[])" from="length - 1" to="(length - 1) + 1" />
    <mutant id="mutant_223" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))" to="(!(((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p')))" />
    <mutant id="mutant_3119" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions)))" to="(!((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))))" />
    <mutant id="mutant_3118" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant(int,int,int)" from="millis - offset" to="(millis - offset) + 1" />
    <mutant id="mutant_4449" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_3117" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant(int,int,int)" from="millis - offset" to="(millis - offset) * -1" />
    <mutant id="mutant_4448" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="((newTypes.length) - index)" to="(((newTypes.length) - index) + 1)" />
    <mutant id="mutant_239" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;')" to="(((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;') - 1)" />
    <mutant id="mutant_235" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(&quot;Invalid format: \&quot;&quot; + original)" to="((&quot;Invalid format: \&quot;&quot; + original) + 1)" />
    <mutant id="mutant_236" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(&quot;Invalid format: \&quot;&quot; + original)" to="((&quot;Invalid format: \&quot;&quot; + original) * -1)" />
    <mutant id="mutant_237" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(&quot;Invalid format: \&quot;&quot; + original)" to="((&quot;Invalid format: \&quot;&quot; + original) - 1)" />
    <mutant id="mutant_238" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;')" to="(((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;') + 1)" />
    <mutant id="mutant_3105" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous(long,int,int)" from="prev - offset" to="(prev - offset) - 1" />
    <mutant id="mutant_4436" viable="true" in="org.joda.time.Partial.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="!((period == null) || (scalar == 0))" />
    <mutant id="mutant_3104" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous(long,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) - 1" />
    <mutant id="mutant_4435" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(((newValues.length) - i) - 1)" to="((((newValues.length) - i) - 1) + 1)" />
    <mutant id="mutant_3103" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous(long,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) * -1" />
    <mutant id="mutant_4434" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(((newValues.length) - i) - 1)" to="((((newValues.length) - i) - 1) - 1)" />
    <mutant id="mutant_3102" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous(long,int,int)" from="standardOffset + saveMillis" to="(standardOffset + saveMillis) + 1" />
    <mutant id="mutant_4433" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="(((newValues.length) - i) - 1)" to="((((newValues.length) - i) - 1) * -1)" />
    <mutant id="mutant_3101" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(long,int,int)" from="next - offset" to="(next - offset) + 1" />
    <mutant id="mutant_4432" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="((newValues.length) - i)" to="(((newValues.length) - i) * -1)" />
    <mutant id="mutant_3100" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(long,int,int)" from="next - offset" to="(next - offset) * -1" />
    <mutant id="mutant_4431" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="((newValues.length) - i)" to="(((newValues.length) - i) - 1)" />
    <mutant id="mutant_4430" viable="true" in="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)" from="((newValues.length) - i)" to="(((newValues.length) - i) + 1)" />
    <mutant id="mutant_231" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(len - 1)" to="((len - 1) * -1)" />
    <mutant id="mutant_232" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(len - 1)" to="((len - 1) + 1)" />
    <mutant id="mutant_233" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="(!(((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's')))" />
    <mutant id="mutant_234" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))) &amp;&amp; (((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="!((((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))) &amp;&amp; (((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's')))" />
    <mutant id="mutant_3109" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="!(((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29))" />
    <mutant id="mutant_3108" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="!(((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29))" />
    <mutant id="mutant_4439" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(size()) - 1" to="((size()) - 1) * -1" />
    <mutant id="mutant_3107" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous(long,int,int)" from="prev - offset" to="(prev - offset) + 1" />
    <mutant id="mutant_4438" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(size()) - 1" to="((size()) - 1) + 1" />
    <mutant id="mutant_230" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(len - 1)" to="((len - 1) - 1)" />
    <mutant id="mutant_3106" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous(long,int,int)" from="prev - offset" to="(prev - offset) * -1" />
    <mutant id="mutant_4437" viable="true" in="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)" from="(size()) - 1" to="((size()) - 1) - 1" />
    <mutant id="mutant_246" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.'))" to="(!((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')))" />
    <mutant id="mutant_247" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')) &amp;&amp; (dot == (-1))" to="!(((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')) &amp;&amp; (dot == (-1)))" />
    <mutant id="mutant_248" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(&quot;Invalid format: \&quot;&quot; + original)" to="((&quot;Invalid format: \&quot;&quot; + original) + 1)" />
    <mutant id="mutant_249" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(&quot;Invalid format: \&quot;&quot; + original)" to="((&quot;Invalid format: \&quot;&quot; + original) * -1)" />
    <mutant id="mutant_3185" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_3184" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3183" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="instant - 1" to="(instant - 1) * -1" />
    <mutant id="mutant_3182" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="instant - 1" to="(instant - 1) + 1" />
    <mutant id="mutant_3181" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="instant - 1" to="(instant - 1) - 1" />
    <mutant id="mutant_3180" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(long)" from="((transitions.length) - 1)" to="(((transitions.length) - 1) + 1)" />
    <mutant id="mutant_3179" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(long)" from="((transitions.length) - 1)" to="(((transitions.length) - 1) - 1)" />
    <mutant id="mutant_3178" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(long)" from="((transitions.length) - 1)" to="(((transitions.length) - 1) * -1)" />
    <mutant id="mutant_3177" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(long)" from="i + 1" to="(i + 1) + 1" />
    <mutant id="mutant_3176" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(long)" from="i + 1" to="(i + 1) - 1" />
    <mutant id="mutant_3175" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(long)" from="i + 1" to="(i + 1) * -1" />
    <mutant id="mutant_242" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(len - 1)" to="((len - 1) * -1)" />
    <mutant id="mutant_243" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(len - 1)" to="((len - 1) + 1)" />
    <mutant id="mutant_244" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((str.charAt(i)) &gt;= '0') &amp;&amp; ((str.charAt(i)) &lt;= '9')" to="!(((str.charAt(i)) &gt;= '0') &amp;&amp; ((str.charAt(i)) &lt;= '9'))" />
    <mutant id="mutant_245" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(i == 0) &amp;&amp; ((str.charAt(0)) == '-')" to="!((i == 0) &amp;&amp; ((str.charAt(0)) == '-'))" />
    <mutant id="mutant_240" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;')" to="(((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;') * -1)" />
    <mutant id="mutant_241" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(len - 1)" to="((len - 1) - 1)" />
    <mutant id="mutant_257" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(str + &quot;000&quot;)" to="((str + &quot;000&quot;) * -1)" />
    <mutant id="mutant_258" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(str + &quot;000&quot;)" to="((str + &quot;000&quot;) - 1)" />
    <mutant id="mutant_259" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(str + &quot;000&quot;)" to="((str + &quot;000&quot;) + 1)" />
    <mutant id="mutant_3174" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(long)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3173" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(long)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_3172" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(long)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3171" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(long)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3170" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(long)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_3169" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(long)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3168" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(long)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4499" viable="true" in="org.joda.time.Period.toStandardHours()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.HOURS_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.HOURS_PER_WEEK))) - 1)" />
    <mutant id="mutant_3167" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(long)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4498" viable="true" in="org.joda.time.Period.toStandardHours()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.HOURS_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.HOURS_PER_WEEK))) * -1)" />
    <mutant id="mutant_3166" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(long)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4497" viable="true" in="org.joda.time.Period.toStandardHours()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.HOURS_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.HOURS_PER_WEEK))) + 1)" />
    <mutant id="mutant_3165" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(long)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4496" viable="true" in="org.joda.time.Period.toStandardHours()" from="(((long)(getDays())) * ((long)(DateTimeConstants.HOURS_PER_DAY)))" to="((((long)(getDays())) * ((long)(DateTimeConstants.HOURS_PER_DAY))) + 1)" />
    <mutant id="mutant_3164" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(long)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4495" viable="true" in="org.joda.time.Period.toStandardHours()" from="(((long)(getDays())) * ((long)(DateTimeConstants.HOURS_PER_DAY)))" to="((((long)(getDays())) * ((long)(DateTimeConstants.HOURS_PER_DAY))) - 1)" />
    <mutant id="mutant_253" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;')" to="(((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;') * -1)" />
    <mutant id="mutant_254" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(dot + 1)" to="((dot + 1) + 1)" />
    <mutant id="mutant_255" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(dot + 1)" to="((dot + 1) - 1)" />
    <mutant id="mutant_256" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(dot + 1)" to="((dot + 1) * -1)" />
    <mutant id="mutant_250" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(&quot;Invalid format: \&quot;&quot; + original)" to="((&quot;Invalid format: \&quot;&quot; + original) - 1)" />
    <mutant id="mutant_251" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;')" to="(((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;') + 1)" />
    <mutant id="mutant_252" viable="false" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;')" to="(((&quot;Invalid format: \&quot;&quot; + original) + '\&quot;') - 1)" />
    <mutant id="mutant_268" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(separator + 1)" to="((separator + 1) - 1)" />
    <mutant id="mutant_269" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Format invalid: &quot; + str)" to="((&quot;Format invalid: &quot; + str) * -1)" />
    <mutant id="mutant_3163" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(long)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4494" viable="true" in="org.joda.time.Period.toStandardHours()" from="(((long)(getDays())) * ((long)(DateTimeConstants.HOURS_PER_DAY)))" to="((((long)(getDays())) * ((long)(DateTimeConstants.HOURS_PER_DAY))) * -1)" />
    <mutant id="mutant_3162" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(long)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4493" viable="true" in="org.joda.time.Period.toStandardHours()" from="millis / (DateTimeConstants.MILLIS_PER_HOUR)" to="(millis / (DateTimeConstants.MILLIS_PER_HOUR)) * -1" />
    <mutant id="mutant_3161" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(long)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4492" viable="true" in="org.joda.time.Period.toStandardHours()" from="millis / (DateTimeConstants.MILLIS_PER_HOUR)" to="(millis / (DateTimeConstants.MILLIS_PER_HOUR)) + 1" />
    <mutant id="mutant_3160" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(long)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4491" viable="true" in="org.joda.time.Period.toStandardHours()" from="millis / (DateTimeConstants.MILLIS_PER_HOUR)" to="(millis / (DateTimeConstants.MILLIS_PER_HOUR)) - 1" />
    <mutant id="mutant_4490" viable="true" in="org.joda.time.Period.toStandardHours()" from="((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_3159" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(long)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3158" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(long)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4489" viable="true" in="org.joda.time.Period.toStandardHours()" from="((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_3157" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(long)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_4488" viable="true" in="org.joda.time.Period.toStandardHours()" from="((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)" to="(((long)(getMinutes())) * (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_3156" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((24 * 60) * 60) * 1000" to="(((24 * 60) * 60) * 1000) + 1" />
    <mutant id="mutant_4487" viable="true" in="org.joda.time.Period.toStandardHours()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_3155" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((24 * 60) * 60) * 1000" to="(((24 * 60) * 60) * 1000) * -1" />
    <mutant id="mutant_4486" viable="true" in="org.joda.time.Period.toStandardHours()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_3154" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((24 * 60) * 60) * 1000" to="(((24 * 60) * 60) * 1000) - 1" />
    <mutant id="mutant_4485" viable="true" in="org.joda.time.Period.toStandardHours()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_3153" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((24 * 60) * 60)" to="(((24 * 60) * 60) * -1)" />
    <mutant id="mutant_4484" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))" to="(((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))) + 1" />
    <mutant id="mutant_264" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Format invalid: &quot; + str)" to="((&quot;Format invalid: &quot; + str) + 1)" />
    <mutant id="mutant_265" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Format invalid: &quot; + str)" to="((&quot;Format invalid: &quot; + str) - 1)" />
    <mutant id="mutant_266" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(separator + 1)" to="((separator + 1) * -1)" />
    <mutant id="mutant_267" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(separator + 1)" to="((separator + 1) + 1)" />
    <mutant id="mutant_260" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Format requires a \'/\' separator: &quot; + str)" to="((&quot;Format requires a \'/\' separator: &quot; + str) * -1)" />
    <mutant id="mutant_261" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Format requires a \'/\' separator: &quot; + str)" to="((&quot;Format requires a \'/\' separator: &quot; + str) + 1)" />
    <mutant id="mutant_262" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Format requires a \'/\' separator: &quot; + str)" to="((&quot;Format requires a \'/\' separator: &quot; + str) - 1)" />
    <mutant id="mutant_263" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Format invalid: &quot; + str)" to="((&quot;Format invalid: &quot; + str) * -1)" />
    <mutant id="mutant_279" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Invalid format: \&quot;&quot; + str)" to="((&quot;Invalid format: \&quot;&quot; + str) + 1)" />
    <mutant id="mutant_3152" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((24 * 60) * 60)" to="(((24 * 60) * 60) - 1)" />
    <mutant id="mutant_4483" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))" to="(((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))) * -1" />
    <mutant id="mutant_3151" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="((24 * 60) * 60)" to="(((24 * 60) * 60) + 1)" />
    <mutant id="mutant_4482" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))" to="(((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))) - 1" />
    <mutant id="mutant_3150" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(24 * 60)" to="((24 * 60) + 1)" />
    <mutant id="mutant_4481" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_4480" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_3149" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(24 * 60)" to="((24 * 60) - 1)" />
    <mutant id="mutant_3148" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(24 * 60)" to="((24 * 60) * -1)" />
    <mutant id="mutant_4479" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_3147" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="distances / count" to="(distances / count) * -1" />
    <mutant id="mutant_4478" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))" to="(((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))) - 1" />
    <mutant id="mutant_270" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Format invalid: &quot; + str)" to="((&quot;Format invalid: &quot; + str) + 1)" />
    <mutant id="mutant_3146" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="distances / count" to="(distances / count) + 1" />
    <mutant id="mutant_4477" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))" to="(((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))) + 1" />
    <mutant id="mutant_3145" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="distances / count" to="(distances / count) - 1" />
    <mutant id="mutant_4476" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))" to="(((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))) * -1" />
    <mutant id="mutant_3144" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(((((366L + 365) * 24) * 60) * 60) * 1000)" to="((((((366L + 365) * 24) * 60) * 60) * 1000) - 1)" />
    <mutant id="mutant_4475" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))" to="(((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))) * -1" />
    <mutant id="mutant_3143" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(((((366L + 365) * 24) * 60) * 60) * 1000)" to="((((((366L + 365) * 24) * 60) * 60) * 1000) + 1)" />
    <mutant id="mutant_4474" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))" to="(((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))) - 1" />
    <mutant id="mutant_3142" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()" from="(((((366L + 365) * 24) * 60) * 60) * 1000)" to="((((((366L + 365) * 24) * 60) * 60) * 1000) * -1)" />
    <mutant id="mutant_4473" viable="true" in="org.joda.time.Period.toStandardDuration()" from="((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))" to="(((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))) + 1" />
    <mutant id="mutant_275" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Interval composed of two durations: &quot; + str)" to="((&quot;Interval composed of two durations: &quot; + str) - 1)" />
    <mutant id="mutant_276" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Interval composed of two durations: &quot; + str)" to="((&quot;Interval composed of two durations: &quot; + str) + 1)" />
    <mutant id="mutant_277" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Invalid format: \&quot;&quot; + str)" to="((&quot;Invalid format: \&quot;&quot; + str) - 1)" />
    <mutant id="mutant_278" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Invalid format: \&quot;&quot; + str)" to="((&quot;Invalid format: \&quot;&quot; + str) * -1)" />
    <mutant id="mutant_271" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Format invalid: &quot; + str)" to="((&quot;Format invalid: &quot; + str) - 1)" />
    <mutant id="mutant_272" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="!((c == 'P') || (c == 'p'))" />
    <mutant id="mutant_273" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="!((c == 'P') || (c == 'p'))" />
    <mutant id="mutant_274" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(&quot;Interval composed of two durations: &quot; + str)" to="((&quot;Interval composed of two durations: &quot; + str) * -1)" />
    <mutant id="mutant_280" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" from="((&quot;Invalid format: \&quot;&quot; + str) + '\&quot;')" to="(((&quot;Invalid format: \&quot;&quot; + str) + '\&quot;') + 1)" />
    <mutant id="mutant_281" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" from="((&quot;Invalid format: \&quot;&quot; + str) + '\&quot;')" to="(((&quot;Invalid format: \&quot;&quot; + str) + '\&quot;') - 1)" />
    <mutant id="mutant_286" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey(int,int,int,java.util.Locale)" from="(iType + (iDateStyle &lt;&lt; 4))" to="((iType + (iDateStyle &lt;&lt; 4)) - 1)" />
    <mutant id="mutant_287" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey(int,int,int,java.util.Locale)" from="(iType + (iDateStyle &lt;&lt; 4))" to="((iType + (iDateStyle &lt;&lt; 4)) + 1)" />
    <mutant id="mutant_288" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey(int,int,int,java.util.Locale)" from="(iType + (iDateStyle &lt;&lt; 4))" to="((iType + (iDateStyle &lt;&lt; 4)) * -1)" />
    <mutant id="mutant_289" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey(int,int,int,java.util.Locale)" from="(iType + (iDateStyle &lt;&lt; 4)) + (iTimeStyle &lt;&lt; 8)" to="((iType + (iDateStyle &lt;&lt; 4)) + (iTimeStyle &lt;&lt; 8)) + 1" />
    <mutant id="mutant_282" viable="false" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)" from="((&quot;Invalid format: \&quot;&quot; + str) + '\&quot;')" to="(((&quot;Invalid format: \&quot;&quot; + str) + '\&quot;') * -1)" />
    <mutant id="mutant_283" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern(java.util.Locale)" from="(&quot;No datetime pattern for locale: &quot; + locale)" to="((&quot;No datetime pattern for locale: &quot; + locale) + 1)" />
    <mutant id="mutant_284" viable="false" in="org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern(java.util.Locale)" from="(&quot;No datetime pattern for locale: &quot; + locale)" to="((&quot;No datetime pattern for locale: &quot; + locale) * -1)" />
    <mutant id="mutant_285" viable="false" in="org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern(java.util.Locale)" from="(&quot;No datetime pattern for locale: &quot; + locale)" to="((&quot;No datetime pattern for locale: &quot; + locale) - 1)" />
    <mutant id="mutant_290" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey(int,int,int,java.util.Locale)" from="(iType + (iDateStyle &lt;&lt; 4)) + (iTimeStyle &lt;&lt; 8)" to="((iType + (iDateStyle &lt;&lt; 4)) + (iTimeStyle &lt;&lt; 8)) * -1" />
    <mutant id="mutant_291" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey(int,int,int,java.util.Locale)" from="(iType + (iDateStyle &lt;&lt; 4)) + (iTimeStyle &lt;&lt; 8)" to="((iType + (iDateStyle &lt;&lt; 4)) + (iTimeStyle &lt;&lt; 8)) - 1" />
    <mutant id="mutant_292" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result)" to="((prime * result) - 1)" />
    <mutant id="mutant_297" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result) + (combinedTypeAndStyle)" to="((prime * result) + (combinedTypeAndStyle)) - 1" />
    <mutant id="mutant_298" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result)" to="((prime * result) - 1)" />
    <mutant id="mutant_299" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result)" to="((prime * result) + 1)" />
    <mutant id="mutant_293" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result)" to="((prime * result) + 1)" />
    <mutant id="mutant_294" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result)" to="((prime * result) * -1)" />
    <mutant id="mutant_295" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result) + (combinedTypeAndStyle)" to="((prime * result) + (combinedTypeAndStyle)) + 1" />
    <mutant id="mutant_296" viable="true" in="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()" from="(prime * result) + (combinedTypeAndStyle)" to="((prime * result) + (combinedTypeAndStyle)) * -1" />
    <mutant id="mutant_3199" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((nameKeys.length) - 1)" to="(((nameKeys.length) - 1) - 1)" />
    <mutant id="mutant_3198" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((nameKeys.length) - 1)" to="(((nameKeys.length) - 1) * -1)" />
    <mutant id="mutant_3197" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5)) &amp;&amp; (id.equals(set[0]))" to="!(((set != null) &amp;&amp; ((set.length) == 5)) &amp;&amp; (id.equals(set[0])))" />
    <mutant id="mutant_3196" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5))" to="(!((set != null) &amp;&amp; ((set.length) == 5)))" />
    <mutant id="mutant_3195" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="prev - 1" to="(prev - 1) - 1" />
    <mutant id="mutant_3194" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="prev - 1" to="(prev - 1) + 1" />
    <mutant id="mutant_3193" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="prev - 1" to="(prev - 1) * -1" />
    <mutant id="mutant_3192" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_3191" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_3190" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_3189" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="prev - 1" to="(prev - 1) - 1" />
    <mutant id="mutant_3188" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="prev - 1" to="(prev - 1) + 1" />
    <mutant id="mutant_3187" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="prev - 1" to="(prev - 1) * -1" />
    <mutant id="mutant_3186" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_2729" viable="false" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(&quot;Multiplication overflows a long: &quot; + dividend)" to="((&quot;Multiplication overflows a long: &quot; + dividend) - 1)" />
    <mutant id="mutant_2720" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="(&quot;The calculation caused an overflow: &quot; + val1)" to="((&quot;The calculation caused an overflow: &quot; + val1) + 1)" />
    <mutant id="mutant_2728" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(dividend == (Long.MIN_VALUE)) &amp;&amp; (divisor == (-1L))" to="!((dividend == (Long.MIN_VALUE)) &amp;&amp; (divisor == (-1L)))" />
    <mutant id="mutant_2727" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2)" to="((((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2) + 1)" />
    <mutant id="mutant_2726" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2)" to="((((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2) * -1)" />
    <mutant id="mutant_2725" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2)" to="((((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + val2) - 1)" />
    <mutant id="mutant_2724" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;)" to="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) + 1)" />
    <mutant id="mutant_2723" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;)" to="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) - 1)" />
    <mutant id="mutant_2722" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;)" to="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; + &quot;) * -1)" />
    <mutant id="mutant_2721" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="(&quot;The calculation caused an overflow: &quot; + val1)" to="((&quot;The calculation caused an overflow: &quot; + val1) - 1)" />
    <mutant id="mutant_2719" viable="false" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="(&quot;The calculation caused an overflow: &quot; + val1)" to="((&quot;The calculation caused an overflow: &quot; + val1) * -1)" />
    <mutant id="mutant_2718" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="!(((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0))" />
    <mutant id="mutant_2717" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="val1 + val2" to="(val1 + val2) - 1" />
    <mutant id="mutant_2716" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="val1 + val2" to="(val1 + val2) + 1" />
    <mutant id="mutant_2715" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="val1 + val2" to="(val1 + val2) * -1" />
    <mutant id="mutant_2714" viable="false" in="org.joda.time.field.FieldUtils.safeToInt(long)" from="(&quot;Value cannot fit in an int: &quot; + value)" to="((&quot;Value cannot fit in an int: &quot; + value) - 1)" />
    <mutant id="mutant_2713" viable="false" in="org.joda.time.field.FieldUtils.safeToInt(long)" from="(&quot;Value cannot fit in an int: &quot; + value)" to="((&quot;Value cannot fit in an int: &quot; + value) * -1)" />
    <mutant id="mutant_2712" viable="true" in="org.joda.time.field.FieldUtils.safeToInt(long)" from="(&quot;Value cannot fit in an int: &quot; + value)" to="((&quot;Value cannot fit in an int: &quot; + value) + 1)" />
    <mutant id="mutant_2711" viable="true" in="org.joda.time.field.FieldUtils.safeToInt(long)" from="((Integer.MIN_VALUE) &lt;= value) &amp;&amp; (value &lt;= (Integer.MAX_VALUE))" to="!(((Integer.MIN_VALUE) &lt;= value) &amp;&amp; (value &lt;= (Integer.MAX_VALUE)))" />
    <mutant id="mutant_2710" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;) + val2) - 1)" />
    <mutant id="mutant_2709" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;) + val2) + 1)" />
    <mutant id="mutant_2708" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;) + val2) * -1)" />
    <mutant id="mutant_2707" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;) * -1)" />
    <mutant id="mutant_2706" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;) + 1)" />
    <mutant id="mutant_2705" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows an int: &quot; + val1) + &quot; * &quot;) - 1)" />
    <mutant id="mutant_2704" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(&quot;Multiplication overflows an int: &quot; + val1)" to="((&quot;Multiplication overflows an int: &quot; + val1) + 1)" />
    <mutant id="mutant_2703" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(&quot;Multiplication overflows an int: &quot; + val1)" to="((&quot;Multiplication overflows an int: &quot; + val1) - 1)" />
    <mutant id="mutant_2702" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(&quot;Multiplication overflows an int: &quot; + val1)" to="((&quot;Multiplication overflows an int: &quot; + val1) * -1)" />
    <mutant id="mutant_2701" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(total &lt; (Integer.MIN_VALUE)) || (total &gt; (Integer.MAX_VALUE))" to="!((total &lt; (Integer.MIN_VALUE)) || (total &gt; (Integer.MAX_VALUE)))" />
    <mutant id="mutant_2700" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="((long)(val1)) * ((long)(val2))" to="(((long)(val1)) * ((long)(val2))) - 1" />
    <mutant id="mutant_1432" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)" from="(value &gt; 28) || (value &lt; 1)" to="!((value &gt; 28) || (value &lt; 1))" />
    <mutant id="mutant_2764" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2) * -1)" />
    <mutant id="mutant_1433" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)" from="(month - 1)" to="((month - 1) * -1)" />
    <mutant id="mutant_2763" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2) - 1)" />
    <mutant id="mutant_1430" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMax(int)" from="(month - 1)" to="((month - 1) - 1)" />
    <mutant id="mutant_2762" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2) + 1)" />
    <mutant id="mutant_1431" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMax(int)" from="(month - 1)" to="((month - 1) + 1)" />
    <mutant id="mutant_2761" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + 1)" />
    <mutant id="mutant_2760" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) - 1)" />
    <mutant id="mutant_1438" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)" from="(month - 1)" to="((month - 1) + 1)" />
    <mutant id="mutant_1439" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year)))" to="((millis - (getYearMillis(year))) + 1)" />
    <mutant id="mutant_2769" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(total / val2)" to="((total / val2) * -1)" />
    <mutant id="mutant_1436" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)" from="(month - 1)" to="((month - 1) * -1)" />
    <mutant id="mutant_2768" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="val1 * val2" to="(val1 * val2) - 1" />
    <mutant id="mutant_1437" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)" from="(month - 1)" to="((month - 1) - 1)" />
    <mutant id="mutant_2767" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="val1 * val2" to="(val1 * val2) + 1" />
    <mutant id="mutant_1434" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)" from="(month - 1)" to="((month - 1) - 1)" />
    <mutant id="mutant_2766" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="val1 * val2" to="(val1 * val2) * -1" />
    <mutant id="mutant_1435" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)" from="(month - 1)" to="((month - 1) + 1)" />
    <mutant id="mutant_2765" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(val1 == 0) || (val2 == 0)" to="!((val1 == 0) || (val2 == 0))" />
    <mutant id="mutant_1421" viable="false" in="?" from="(31L + 29)" to="((31L + 29) + 1)" />
    <mutant id="mutant_2753" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(total / val2)" to="((total / val2) + 1)" />
    <mutant id="mutant_1422" viable="false" in="?" from="((31L + 29) - 1)" to="(((31L + 29) - 1) * -1)" />
    <mutant id="mutant_2752" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="val1 * val2" to="(val1 * val2) * -1" />
    <mutant id="mutant_2751" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="val1 * val2" to="(val1 * val2) - 1" />
    <mutant id="mutant_1420" viable="false" in="?" from="(31L + 29)" to="((31L + 29) * -1)" />
    <mutant id="mutant_2750" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="val1 * val2" to="(val1 * val2) + 1" />
    <mutant id="mutant_1429" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMax(int)" from="(month - 1)" to="((month - 1) * -1)" />
    <mutant id="mutant_1427" viable="false" in="?" from="((31L + 29) - 1) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((31L + 29) - 1) * (DateTimeConstants.MILLIS_PER_DAY)) + 1" />
    <mutant id="mutant_2759" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) * -1)" />
    <mutant id="mutant_1428" viable="true" in="org.joda.time.chrono.BasicGJChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 29) &amp;&amp; (monthOfYear().isLeap(instant))" to="!(((dayOfMonth().get(instant)) == 29) &amp;&amp; (monthOfYear().isLeap(instant)))" />
    <mutant id="mutant_2758" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(&quot;Multiplication overflows a long: &quot; + val1)" to="((&quot;Multiplication overflows a long: &quot; + val1) * -1)" />
    <mutant id="mutant_1425" viable="false" in="?" from="((31L + 29) - 1) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((31L + 29) - 1) * (DateTimeConstants.MILLIS_PER_DAY)) - 1" />
    <mutant id="mutant_2757" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(&quot;Multiplication overflows a long: &quot; + val1)" to="((&quot;Multiplication overflows a long: &quot; + val1) + 1)" />
    <mutant id="mutant_1426" viable="false" in="?" from="((31L + 29) - 1) * (DateTimeConstants.MILLIS_PER_DAY)" to="(((31L + 29) - 1) * (DateTimeConstants.MILLIS_PER_DAY)) * -1" />
    <mutant id="mutant_2756" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(&quot;Multiplication overflows a long: &quot; + val1)" to="((&quot;Multiplication overflows a long: &quot; + val1) - 1)" />
    <mutant id="mutant_1423" viable="false" in="?" from="((31L + 29) - 1)" to="(((31L + 29) - 1) + 1)" />
    <mutant id="mutant_2755" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(total / val2)" to="((total / val2) - 1)" />
    <mutant id="mutant_1424" viable="false" in="?" from="((31L + 29) - 1)" to="(((31L + 29) - 1) - 1)" />
    <mutant id="mutant_2754" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(total / val2)" to="((total / val2) * -1)" />
    <mutant id="mutant_1410" viable="false" in="?" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_2742" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(&quot;Multiplication overflows a long: &quot; + val1)" to="((&quot;Multiplication overflows a long: &quot; + val1) + 1)" />
    <mutant id="mutant_1411" viable="false" in="?" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_2741" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(&quot;Multiplication overflows a long: &quot; + val1)" to="((&quot;Multiplication overflows a long: &quot; + val1) - 1)" />
    <mutant id="mutant_2740" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="dividend / divisor" to="(dividend / divisor) - 1" />
    <mutant id="mutant_1418" viable="false" in="?" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_1419" viable="false" in="?" from="(31L + 29)" to="((31L + 29) - 1)" />
    <mutant id="mutant_2749" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2) * -1)" />
    <mutant id="mutant_1416" viable="false" in="?" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_2748" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2) - 1)" />
    <mutant id="mutant_1417" viable="false" in="?" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_2747" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2) + 1)" />
    <mutant id="mutant_1414" viable="false" in="?" from="(BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="((BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_2746" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + 1)" />
    <mutant id="mutant_1415" viable="false" in="?" from="(BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="((BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_2745" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) - 1)" />
    <mutant id="mutant_1412" viable="false" in="?" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_2744" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) * -1)" />
    <mutant id="mutant_1413" viable="false" in="?" from="(BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="((BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_2743" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,int)" from="(&quot;Multiplication overflows a long: &quot; + val1)" to="((&quot;Multiplication overflows a long: &quot; + val1) * -1)" />
    <mutant id="mutant_1409" viable="false" in="?" from="(BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="((BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_2731" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(&quot;Multiplication overflows a long: &quot; + dividend)" to="((&quot;Multiplication overflows a long: &quot; + dividend) + 1)" />
    <mutant id="mutant_1400" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)" from="minuendInstant - (getYearMillis(minuendYear))" to="(minuendInstant - (getYearMillis(minuendYear))) + 1" />
    <mutant id="mutant_2730" viable="false" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(&quot;Multiplication overflows a long: &quot; + dividend)" to="((&quot;Multiplication overflows a long: &quot; + dividend) * -1)" />
    <mutant id="mutant_1407" viable="false" in="?" from="(BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="((BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_2739" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="dividend / divisor" to="(dividend / divisor) * -1" />
    <mutant id="mutant_1408" viable="false" in="?" from="(BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="((BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY[i]) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_2738" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="dividend / divisor" to="(dividend / divisor) + 1" />
    <mutant id="mutant_1405" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)" from="minuendYear - subtrahendYear" to="(minuendYear - subtrahendYear) + 1" />
    <mutant id="mutant_2737" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;) + divisor)" to="((((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;) + divisor) + 1)" />
    <mutant id="mutant_1406" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)" from="minuendYear - subtrahendYear" to="(minuendYear - subtrahendYear) - 1" />
    <mutant id="mutant_2736" viable="false" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;) + divisor)" to="((((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;) + divisor) * -1)" />
    <mutant id="mutant_1403" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)" from="subtrahendInstant - (getYearMillis(subtrahendYear))" to="(subtrahendInstant - (getYearMillis(subtrahendYear))) * -1" />
    <mutant id="mutant_2735" viable="false" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;) + divisor)" to="((((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;) + divisor) - 1)" />
    <mutant id="mutant_1404" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)" from="minuendYear - subtrahendYear" to="(minuendYear - subtrahendYear) * -1" />
    <mutant id="mutant_2734" viable="false" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;) * -1)" />
    <mutant id="mutant_1401" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)" from="subtrahendInstant - (getYearMillis(subtrahendYear))" to="(subtrahendInstant - (getYearMillis(subtrahendYear))) + 1" />
    <mutant id="mutant_2733" viable="false" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;) - 1)" />
    <mutant id="mutant_1402" viable="true" in="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)" from="subtrahendInstant - (getYearMillis(subtrahendYear))" to="(subtrahendInstant - (getYearMillis(subtrahendYear))) - 1" />
    <mutant id="mutant_2732" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + dividend) + &quot; / &quot;) + 1)" />
    <mutant id="mutant_1480" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(90 * 84375)" to="((90 * 84375) + 1)" />
    <mutant id="mutant_1476" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(181 * 84375)" to="((181 * 84375) + 1)" />
    <mutant id="mutant_4502" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) + 1" />
    <mutant id="mutant_1477" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(181 * 84375)" to="((181 * 84375) * -1)" />
    <mutant id="mutant_4501" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) - 1" />
    <mutant id="mutant_1474" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(335 * 84375)" to="((335 * 84375) * -1)" />
    <mutant id="mutant_4500" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)" to="(((long)(getSeconds())) * (DateTimeConstants.MILLIS_PER_SECOND)) * -1" />
    <mutant id="mutant_1475" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(181 * 84375)" to="((181 * 84375) - 1)" />
    <mutant id="mutant_1472" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(335 * 84375)" to="((335 * 84375) + 1)" />
    <mutant id="mutant_1473" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(335 * 84375)" to="((335 * 84375) - 1)" />
    <mutant id="mutant_1470" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(305 * 84375)" to="((305 * 84375) - 1)" />
    <mutant id="mutant_1471" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(305 * 84375)" to="((305 * 84375) * -1)" />
    <mutant id="mutant_4509" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="(((long)(getDays())) * ((long)(DateTimeConstants.MINUTES_PER_DAY)))" to="((((long)(getDays())) * ((long)(DateTimeConstants.MINUTES_PER_DAY))) - 1)" />
    <mutant id="mutant_4508" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="(((long)(getHours())) * ((long)(DateTimeConstants.MINUTES_PER_HOUR)))" to="((((long)(getHours())) * ((long)(DateTimeConstants.MINUTES_PER_HOUR))) * -1)" />
    <mutant id="mutant_4507" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="(((long)(getHours())) * ((long)(DateTimeConstants.MINUTES_PER_HOUR)))" to="((((long)(getHours())) * ((long)(DateTimeConstants.MINUTES_PER_HOUR))) - 1)" />
    <mutant id="mutant_4506" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="(((long)(getHours())) * ((long)(DateTimeConstants.MINUTES_PER_HOUR)))" to="((((long)(getHours())) * ((long)(DateTimeConstants.MINUTES_PER_HOUR))) + 1)" />
    <mutant id="mutant_4505" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="millis / (DateTimeConstants.MILLIS_PER_MINUTE)" to="(millis / (DateTimeConstants.MILLIS_PER_MINUTE)) + 1" />
    <mutant id="mutant_1478" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(90 * 84375)" to="((90 * 84375) - 1)" />
    <mutant id="mutant_4504" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="millis / (DateTimeConstants.MILLIS_PER_MINUTE)" to="(millis / (DateTimeConstants.MILLIS_PER_MINUTE)) - 1" />
    <mutant id="mutant_1479" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(90 * 84375)" to="((90 * 84375) * -1)" />
    <mutant id="mutant_4503" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="millis / (DateTimeConstants.MILLIS_PER_MINUTE)" to="(millis / (DateTimeConstants.MILLIS_PER_MINUTE)) * -1" />
    <mutant id="mutant_1465" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(213 * 84375)" to="((213 * 84375) + 1)" />
    <mutant id="mutant_2797" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;) + val2)" to="((((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;) + val2) + 1)" />
    <mutant id="mutant_1466" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(244 * 84375)" to="((244 * 84375) * -1)" />
    <mutant id="mutant_2796" viable="false" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;) + val2)" to="((((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;) + val2) - 1)" />
    <mutant id="mutant_1463" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(213 * 84375)" to="((213 * 84375) * -1)" />
    <mutant id="mutant_2795" viable="false" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;) + val2)" to="((((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;) + val2) * -1)" />
    <mutant id="mutant_1464" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(213 * 84375)" to="((213 * 84375) - 1)" />
    <mutant id="mutant_2794" viable="false" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;)" to="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;) * -1)" />
    <mutant id="mutant_1461" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(274 * 84375)" to="((274 * 84375) + 1)" />
    <mutant id="mutant_2793" viable="false" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;)" to="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;) - 1)" />
    <mutant id="mutant_1462" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(274 * 84375)" to="((274 * 84375) * -1)" />
    <mutant id="mutant_2792" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;)" to="(((&quot;The calculation caused an overflow: &quot; + val1) + &quot; - &quot;) + 1)" />
    <mutant id="mutant_2791" viable="false" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="(&quot;The calculation caused an overflow: &quot; + val1)" to="((&quot;The calculation caused an overflow: &quot; + val1) - 1)" />
    <mutant id="mutant_1460" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(274 * 84375)" to="((274 * 84375) - 1)" />
    <mutant id="mutant_2790" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="(&quot;The calculation caused an overflow: &quot; + val1)" to="((&quot;The calculation caused an overflow: &quot; + val1) + 1)" />
    <mutant id="mutant_1469" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(305 * 84375)" to="((305 * 84375) + 1)" />
    <mutant id="mutant_1467" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(244 * 84375)" to="((244 * 84375) - 1)" />
    <mutant id="mutant_2799" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeField,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="!((value &lt; lowerBound) || (value &gt; upperBound))" />
    <mutant id="mutant_1468" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(244 * 84375)" to="((244 * 84375) + 1)" />
    <mutant id="mutant_2798" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(java.lang.String,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="!((value &lt; lowerBound) || (value &gt; upperBound))" />
    <mutant id="mutant_1454" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(121 * 84375)" to="((121 * 84375) - 1)" />
    <mutant id="mutant_2786" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="val1 - val2" to="(val1 - val2) + 1" />
    <mutant id="mutant_1455" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(121 * 84375)" to="((121 * 84375) * -1)" />
    <mutant id="mutant_2785" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="val1 - val2" to="(val1 - val2) * -1" />
    <mutant id="mutant_1452" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(60 * 84375)" to="((60 * 84375) - 1)" />
    <mutant id="mutant_2784" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2) * -1)" />
    <mutant id="mutant_1453" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(60 * 84375)" to="((60 * 84375) * -1)" />
    <mutant id="mutant_2783" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2) - 1)" />
    <mutant id="mutant_1450" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(31 * 84375)" to="((31 * 84375) * -1)" />
    <mutant id="mutant_2782" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2)" to="((((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + val2) + 1)" />
    <mutant id="mutant_1451" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(60 * 84375)" to="((60 * 84375) + 1)" />
    <mutant id="mutant_2781" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) + 1)" />
    <mutant id="mutant_2780" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) - 1)" />
    <mutant id="mutant_1458" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(152 * 84375)" to="((152 * 84375) - 1)" />
    <mutant id="mutant_1459" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(152 * 84375)" to="((152 * 84375) * -1)" />
    <mutant id="mutant_2789" viable="false" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="(&quot;The calculation caused an overflow: &quot; + val1)" to="((&quot;The calculation caused an overflow: &quot; + val1) * -1)" />
    <mutant id="mutant_1456" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(121 * 84375)" to="((121 * 84375) + 1)" />
    <mutant id="mutant_2788" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="((val1 ^ diff) &lt; 0) &amp;&amp; ((val1 ^ val2) &lt; 0)" to="!(((val1 ^ diff) &lt; 0) &amp;&amp; ((val1 ^ val2) &lt; 0))" />
    <mutant id="mutant_1457" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(152 * 84375)" to="((152 * 84375) + 1)" />
    <mutant id="mutant_2787" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="val1 - val2" to="(val1 - val2) - 1" />
    <mutant id="mutant_1443" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(182 * 84375)" to="((182 * 84375) + 1)" />
    <mutant id="mutant_2775" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))) || ((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="!((((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))) || ((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1))))" />
    <mutant id="mutant_1444" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(182 * 84375)" to="((182 * 84375) * -1)" />
    <mutant id="mutant_2774" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="(!((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1))))" />
    <mutant id="mutant_1441" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year)))" to="((millis - (getYearMillis(year))) * -1)" />
    <mutant id="mutant_2773" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1))))" to="(!(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))))" />
    <mutant id="mutant_1442" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(182 * 84375)" to="((182 * 84375) - 1)" />
    <mutant id="mutant_2772" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))" to="(!((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1))))" />
    <mutant id="mutant_2771" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(total / val2)" to="((total / val2) + 1)" />
    <mutant id="mutant_1440" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(millis - (getYearMillis(year)))" to="((millis - (getYearMillis(year))) - 1)" />
    <mutant id="mutant_2770" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(total / val2)" to="((total / val2) - 1)" />
    <mutant id="mutant_1449" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(31 * 84375)" to="((31 * 84375) + 1)" />
    <mutant id="mutant_1447" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(91 * 84375)" to="((91 * 84375) * -1)" />
    <mutant id="mutant_2779" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;)" to="(((&quot;Multiplication overflows a long: &quot; + val1) + &quot; * &quot;) * -1)" />
    <mutant id="mutant_1448" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(31 * 84375)" to="((31 * 84375) - 1)" />
    <mutant id="mutant_2778" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(&quot;Multiplication overflows a long: &quot; + val1)" to="((&quot;Multiplication overflows a long: &quot; + val1) * -1)" />
    <mutant id="mutant_1445" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(91 * 84375)" to="((91 * 84375) + 1)" />
    <mutant id="mutant_2777" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(&quot;Multiplication overflows a long: &quot; + val1)" to="((&quot;Multiplication overflows a long: &quot; + val1) + 1)" />
    <mutant id="mutant_1446" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(91 * 84375)" to="((91 * 84375) - 1)" />
    <mutant id="mutant_2776" viable="false" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(&quot;Multiplication overflows a long: &quot; + val1)" to="((&quot;Multiplication overflows a long: &quot; + val1) - 1)" />
    <mutant id="mutant_3215" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0))" to="(!((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)))" />
    <mutant id="mutant_4546" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(totalMonths / 12)" to="((totalMonths / 12) - 1)" />
    <mutant id="mutant_3214" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey)))" to="(!(((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))))" />
    <mutant id="mutant_4545" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years * 12L) + months" to="((years * 12L) + months) + 1" />
    <mutant id="mutant_3213" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset))" to="(!((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)))" />
    <mutant id="mutant_4544" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years * 12L) + months" to="((years * 12L) + months) - 1" />
    <mutant id="mutant_3212" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4543" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years * 12L) + months" to="((years * 12L) + months) * -1" />
    <mutant id="mutant_3211" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4542" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years * 12L)" to="((years * 12L) * -1)" />
    <mutant id="mutant_3210" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4541" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years * 12L)" to="((years * 12L) - 1)" />
    <mutant id="mutant_4540" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years * 12L)" to="((years * 12L) + 1)" />
    <mutant id="mutant_3219" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))) &amp;&amp; (curNameKey.equals(zoneNameData[4]))" to="!((((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))) &amp;&amp; (curNameKey.equals(zoneNameData[4])))" />
    <mutant id="mutant_3218" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2])))" to="(!(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))))" />
    <mutant id="mutant_4549" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(normalizedYears * 12)" to="((normalizedYears * 12) + 1)" />
    <mutant id="mutant_3217" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8))" to="(!((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)))" />
    <mutant id="mutant_4548" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(totalMonths / 12)" to="((totalMonths / 12) + 1)" />
    <mutant id="mutant_3216" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4))" to="(!(((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)))" />
    <mutant id="mutant_4547" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(totalMonths / 12)" to="((totalMonths / 12) * -1)" />
    <mutant id="mutant_3204" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4535" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) * -1" />
    <mutant id="mutant_3203" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4534" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) - 1" />
    <mutant id="mutant_3202" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4533" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))" to="(((long)(getDays())) * ((long)(DateTimeConstants.MILLIS_PER_DAY))) + 1" />
    <mutant id="mutant_3201" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4532" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))" to="(((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))) - 1" />
    <mutant id="mutant_3200" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((nameKeys.length) - 1)" to="(((nameKeys.length) - 1) + 1)" />
    <mutant id="mutant_4531" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))" to="(((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))) + 1" />
    <mutant id="mutant_4530" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))" to="(((long)(getHours())) * ((long)(DateTimeConstants.MILLIS_PER_HOUR))) * -1" />
    <mutant id="mutant_3209" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_3208" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4539" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years != 0) || (months != 0)" to="!((years != 0) || (months != 0))" />
    <mutant id="mutant_3207" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_4538" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))" to="(((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))) + 1" />
    <mutant id="mutant_3206" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_4537" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))" to="(((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))) * -1" />
    <mutant id="mutant_3205" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_4536" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))" to="(((long)(getWeeks())) * ((long)(DateTimeConstants.MILLIS_PER_WEEK))) - 1" />
    <mutant id="mutant_1498" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(212 * 84375)" to="((212 * 84375) + 1)" />
    <mutant id="mutant_4524" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))" to="(((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) * -1" />
    <mutant id="mutant_1499" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(243 * 84375)" to="((243 * 84375) * -1)" />
    <mutant id="mutant_4523" viable="true" in="org.joda.time.Period.multipliedBy(int)" from="((this) == (Period.ZERO)) || (scalar == 1)" to="!(((this) == (Period.ZERO)) || (scalar == 1))" />
    <mutant id="mutant_1496" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(212 * 84375)" to="((212 * 84375) - 1)" />
    <mutant id="mutant_4522" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(end.getValue(i)) - (start.getValue(i))" to="((end.getValue(i)) - (start.getValue(i))) * -1" />
    <mutant id="mutant_1497" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(212 * 84375)" to="((212 * 84375) * -1)" />
    <mutant id="mutant_4521" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(end.getValue(i)) - (start.getValue(i))" to="((end.getValue(i)) - (start.getValue(i))) - 1" />
    <mutant id="mutant_1494" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(273 * 84375)" to="((273 * 84375) + 1)" />
    <mutant id="mutant_4520" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(end.getValue(i)) - (start.getValue(i))" to="((end.getValue(i)) - (start.getValue(i))) + 1" />
    <mutant id="mutant_1495" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(273 * 84375)" to="((273 * 84375) - 1)" />
    <mutant id="mutant_1492" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(151 * 84375)" to="((151 * 84375) * -1)" />
    <mutant id="mutant_1493" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(273 * 84375)" to="((273 * 84375) * -1)" />
    <mutant id="mutant_4529" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))" to="(((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))) * -1" />
    <mutant id="mutant_4528" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))" to="(((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))) - 1" />
    <mutant id="mutant_4527" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))" to="(((long)(getMinutes())) * ((long)(DateTimeConstants.MILLIS_PER_MINUTE))) + 1" />
    <mutant id="mutant_4526" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))" to="(((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) + 1" />
    <mutant id="mutant_4525" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))" to="(((long)(getSeconds())) * ((long)(DateTimeConstants.MILLIS_PER_SECOND))) - 1" />
    <mutant id="mutant_1490" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(151 * 84375)" to="((151 * 84375) + 1)" />
    <mutant id="mutant_1491" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(151 * 84375)" to="((151 * 84375) - 1)" />
    <mutant id="mutant_1487" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(120 * 84375)" to="((120 * 84375) - 1)" />
    <mutant id="mutant_4513" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.MINUTES_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.MINUTES_PER_WEEK))) * -1)" />
    <mutant id="mutant_1488" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(120 * 84375)" to="((120 * 84375) + 1)" />
    <mutant id="mutant_4512" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.MINUTES_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.MINUTES_PER_WEEK))) + 1)" />
    <mutant id="mutant_1485" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(59 * 84375)" to="((59 * 84375) * -1)" />
    <mutant id="mutant_4511" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="(((long)(getDays())) * ((long)(DateTimeConstants.MINUTES_PER_DAY)))" to="((((long)(getDays())) * ((long)(DateTimeConstants.MINUTES_PER_DAY))) * -1)" />
    <mutant id="mutant_1486" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(59 * 84375)" to="((59 * 84375) + 1)" />
    <mutant id="mutant_4510" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="(((long)(getDays())) * ((long)(DateTimeConstants.MINUTES_PER_DAY)))" to="((((long)(getDays())) * ((long)(DateTimeConstants.MINUTES_PER_DAY))) + 1)" />
    <mutant id="mutant_1483" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(31 * 84375)" to="((31 * 84375) * -1)" />
    <mutant id="mutant_1484" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(59 * 84375)" to="((59 * 84375) - 1)" />
    <mutant id="mutant_1481" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(31 * 84375)" to="((31 * 84375) - 1)" />
    <mutant id="mutant_1482" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(31 * 84375)" to="((31 * 84375) + 1)" />
    <mutant id="mutant_4519" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(i &gt; 0) &amp;&amp; ((types[(i - 1)]) == (types[i]))" to="!((i &gt; 0) &amp;&amp; ((types[(i - 1)]) == (types[i])))" />
    <mutant id="mutant_4518" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_4517" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_4516" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1489" viable="true" in="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)" from="(120 * 84375)" to="((120 * 84375) * -1)" />
    <mutant id="mutant_4515" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start == null) || (end == null)" to="!((start == null) || (end == null))" />
    <mutant id="mutant_4514" viable="true" in="org.joda.time.Period.toStandardMinutes()" from="(((long)(getWeeks())) * ((long)(DateTimeConstants.MINUTES_PER_WEEK)))" to="((((long)(getWeeks())) * ((long)(DateTimeConstants.MINUTES_PER_WEEK))) - 1)" />
  </mutants>
</mutation>
