<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key id="type" for="node" attr.name="type" attr.type="string" />
  <key id="type" for="edge" attr.name="type" attr.type="string" />
  <key id="USES_REFLEXION" for="node" attr.name="USES_REFLEXION" attr.type="boolean">
    <default>false</default>
  </key>
  <graph id="G" edgedefault="directed" buildtime="1416">
    <node id="org.sonar.core.cluster.WorkQueue.enqueue(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.cluster.NullQueue.enqueue(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardMapper.selectMaxOrderIndexForNullUser()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardMapper.selectGlobalDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(org.apache.ibatis.session.SqlSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardMapper.selectProjectDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardMapper.insert(org.sonar.core.dashboard.ActiveDashboardDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest#dbTester">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.truncateTables()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.myBatis()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetMaxOrderIndexForNullUser()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetZeroMaxOrderIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDto.setDashboardId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDto.setUserId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDto.setOrderIndex(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_anonymous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_anonymous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDao.selectGlobalDashboard(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardMapper.selectGlobalDashboard(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardMapper.insert(org.sonar.core.dashboard.DashboardDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.getWidgets()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.setDashboardId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetMapper.insert(org.sonar.core.dashboard.WidgetDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.getWidgetProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetPropertyDto.setWidgetId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetPropertyMapper.insert(org.sonar.core.dashboard.WidgetPropertyDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDaoTest#dbTester">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.setUserId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.setColumnLayout(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.setShared(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.setGlobal(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.Dto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.Dto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.setWidgetKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.setColumnIndex(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.setRowIndex(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.setConfigured(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.addWidget(org.sonar.core.dashboard.WidgetDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetPropertyDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetPropertyDto.setPropertyKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetPropertyDto.setTextValue(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetDto.addWidgetProperty(org.sonar.core.dashboard.WidgetPropertyDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDaoTest.shouldSelectGlobalDashboard()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.getUserId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.Dto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.Dto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.DashboardDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetPropertyDto.groupByWidgetId(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.dashboard.WidgetPropertyDto.getWidgetId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueMapper.findOldest(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDao.count()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueMapper.count()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueMapper.delete(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueMapper.insert(org.sonar.core.notification.db.NotificationQueueDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDaoTest.should_count_notification_queue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDto.toNotificationQueueDto(org.sonar.api.notifications.Notification)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDaoTest.should_findOldest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDto.toNotification()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.notification.db.NotificationQueueDto.setData(byte[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery$SORT_FIELD#BY_DATE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery$SORT_FIELD(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery$SORT_ORDER#ASC">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery$SORT_ORDER(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery$SORT_ORDER#DESC">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.setComponentId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.setIsLast(java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.setStatus(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.setVersion(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.setCreatedAfter(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.setCreatedBefore(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.setSort(org.sonar.core.component.db.SnapshotQuery$SORT_FIELD,org.sonar.core.component.db.SnapshotQuery$SORT_ORDER)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.getComponentId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.getIsLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.getStatus()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.getVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.getCreatedAfter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.getCreatedBefore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.getSortField()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.db.SnapshotQuery.getSortOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDtoTest.equals_and_hashcode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDtoTest.is_root_project()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setModuleUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.isRootProject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setScope(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setQualifier(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDtoTest.setters_and_getters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setDeprecatedKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setLongName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setLanguage(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setPath(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setCopyResourceId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setParentProjectId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setAuthorizationUpdatedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.deprecatedKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.longName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.qualifier()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.scope()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.path()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.language()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.description()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.parentProjectId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.getCopyResourceId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.getAuthorizationUpdatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDtoTest.toString_does_not_fail_if_empty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,org.sonar.api.batch.fs.InputPath)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeysTest.create_effective_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeys.createEffectiveKey(org.sonar.api.resources.Project,org.sonar.api.resources.Resource)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeysTest.create_key_from_module_key_path_and_branch()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeysTest.isValidBranchKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeys.isValidBranch(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeysTest.isValidModuleKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentKeys.isValidModuleKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.setType(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.setHref(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.getComponentUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.getType()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentLinkDto.getHref()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.Module.configureModule()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.Module.add(java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest#container">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest#initialSize">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.getPicoContainer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest$4()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.Module()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest$4.configureModule()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest$3.configureModule()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest$1.configureModule()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest.configure_throws_NPE_if_container_is_empty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest$2.configureModule()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ModuleTest.module_with_empty_configureModule_method_adds_no_component()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getRootIdOrSelf()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getRootId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDtoTest.getRootIdOrSelf_return_own_id_when_root_id_is_null()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setRootId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDtoTest.get_root_id_if_when_it_is_not_null()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setParentId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setRootProjectId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setBuildDate(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setComponentId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setLast(java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setScope(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setQualifier(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setVersion(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setPath(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setDepth(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setPeriodMode(int,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setPeriodParam(int,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.setPeriodDate(int,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getParentId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getRootProjectId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getBuildDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getComponentId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getScope()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getQualifier()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getDepth()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getPeriodMode(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getPeriodModeParameter(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.SnapshotDto.getPeriodDate(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDtoTest.test_getters_and_setters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.setCategory(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.setData(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.setDate(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.setSnapshotId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.getCategory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.getData()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.getComponentUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.getSnapshotId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.event.EventDto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setShortName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setDomain(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setValueType(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setQualitative(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setUserManaged(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setWorstValue(java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setBestValue(java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setOptimizedBestValue(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setDirection(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setHidden(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setDeleteHistoricalData(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.setEnabled(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.getShortName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.getDomain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.getValueType()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.isQualitative()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.isUserManaged()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.getWorstValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.getBestValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.isOptimizedBestValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.getDirection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.isHidden()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.isDeleteHistoricalData()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.metric.db.MetricDto.isEnabled()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n(org.sonar.core.platform.PluginRepository,org.sonar.api.utils.System2)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,java.util.Date,java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.ageFromNow(java.util.Locale,java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.formatMessage(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.readInputStream(java.lang.String,java.io.InputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.initPlugin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginRepository.getPluginInfos()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloader(org.sonar.core.platform.PluginRepository)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.newPlugin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.before()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.fallback_to_default_locale()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.format_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.formatDate(java.util.Locale,java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.format_date_time()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.formatDateTime(java.util.Locale,java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.format_double()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.formatDouble(java.util.Locale,java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.format_integer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.formatInteger(java.util.Locale,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.format_message_with_parameters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.get_age_from_now()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.get_age_with_dates()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.get_age_with_duration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.get_english_labels()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.get_english_labels_when_default_locale_is_not_english()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.get_french_label_if_swiss_country()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.get_labels_from_french_pack()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.introspect_all_available_properties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18n.getPropertyKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.load_core_bundle()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.return_default_value_if_missing_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.return_null_if_file_not_found()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.return_null_if_rule_not_internationalized()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DefaultI18nTest.use_default_locale_if_missing_value_in_localized_bundle()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabel.getMessage(double,double,double,double,double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabel.message(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabel.message(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabel$Result(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.age_in_day()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.age_in_days()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.age_in_hour()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.age_in_hours()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.age_in_minute()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.age_in_month()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.age_in_months()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.age_in_seconds()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.year_ago()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.DurationLabelTest.years_ago()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloader(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloader.allPluginClassloaders(org.sonar.core.platform.PluginRepository)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginRepository.getPluginInstance(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloaderTest.newCheckstyleClassloader()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloaderTest.newClassLoader(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloaderTest.aggregate_plugin_classloaders()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloader.getResource(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloaderTest.contain_its_own_classloader()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloaderTest.init()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloaderTest.override_toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloader.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.I18nClassloaderTest.return_null_if_resource_not_found()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.lookUpDescriptionInFormerLocation(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String,java.util.Locale)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.message(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String,java.util.Locale)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.getName(org.sonar.api.rules.Rule)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.getName(org.sonar.api.rules.Rule,java.util.Locale)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String,java.util.Locale)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManagerTest.shoudlReturnNullIfMissingDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManagerTest.shouldBeRuleKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManager.isRuleProperty(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFileWithBackwardCompatibility()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetParamDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.i18n.RuleI18nManagerTest.shouldNotBeRuleKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto$Status#PENDING">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto$Status()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto$Status#WORKING">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto$Status#SUCCESS">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto$Status#FAILED">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto$Status#CANCELLED">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto.getProjectKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto.getUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto.getStatus()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto.getStartedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto.getFinishedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto.newForTests(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.db.AnalysisReportDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.selectProjectSnapshots(long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.clean(org.sonar.core.persistence.DbSession,long,org.sonar.api.config.Settings)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Filters.all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.getDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.create()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.setRootSnapshotId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Filter.log()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$1.matches(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.getRootSnapshotId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newRootSnapshotQuery()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$2.matches(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newSnapshotIdQuery()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newLazyFilter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.setDate(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner(org.sonar.core.purge.PurgeDao)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DeleteAllFilter.filter(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DeleteAllFilter.log()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DeleteAllFilterTest.shouldDeleteAllSnapshotsPriorToDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.DeleteAllFilter(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Filters.getDateFromHours(org.sonar.api.config.Settings,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Filters.getDateFromWeeks(org.sonar.api.config.Settings,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilter(java.util.Date,java.util.Date,int,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Interval()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Interval.add(org.sonar.core.purge.PurgeableSnapshotDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Interval.count()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.Interval.get()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldGroupByIntervals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDateTime(long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldNotJoinMonthsOfDifferentYears()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.isDeletable(org.sonar.core.purge.PurgeableSnapshotDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.isLast()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.hasEvents()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.filter(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.appendSnapshotsToDelete(org.sonar.core.computation.dbcleaner.period.Interval,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.log()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest$1.apply(org.sonar.core.purge.PurgeableSnapshotDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.snapshotIds(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.setLast(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.setHasEvents(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldOnlyOneSnapshotPerInterval()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.test_isDeletable()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.DataCleanerPropertiesTest.shouldGetExtensions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.computation.dbcleaner.DataCleanerProperties.all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationDao.selectCandidates(int,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationMapper.selectCandidates(int,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationMapper.batchInsert(org.sonar.core.duplication.DuplicationUnitDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationUnitDto.getResourceKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationUnitDto.getHash()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationUnitDto.getIndexInFile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationUnitDto.getStartLine()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationUnitDto.getEndLine()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationDaoTest.shouldInsert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.duplication.DuplicationUnitDto(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanMapper.findByKeys(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDao.findByNameAndProjectId(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanMapper.findByNameAndProjectId(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDao.findOpenByProjectId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanMapper.findOpenByProjectId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDao.findByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanMapper.findByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDao.delete(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanMapper.delete(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDao.save(org.sonar.core.issue.db.ActionPlanDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanMapper.insert(org.sonar.core.issue.db.ActionPlanDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDao.update(org.sonar.core.issue.db.ActionPlanDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanMapper.update(org.sonar.core.issue.db.ActionPlanDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest.should_delete_action_plan()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.getProjectKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_name_and_project_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_open_by_project_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.setStatus(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.setProjectId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.setProjectKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.setUserLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.setDeadLine(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsDao.findByProjectId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsMapper.findByProjectId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsDto.getProjectKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsDto.getTotalIssues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsDto.getUnresolvedIssues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanStats.setTotalIssues(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanStats.setUnresolvedIssues(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapper.delete(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapper.update(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDao.selectByIssuesAndType(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapper.selectByIssuesAndType(java.util.List,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.toFieldDiffs()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.toComment()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapper.selectByKeyAndType(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapper.insert(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.delete()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.delete_unknown_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.insert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.select_comment_by_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_empty_input()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.getIssueKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.getUserLogin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.getChangeType()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.getChangeData()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.getUpdatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module_should_be_sorted_by_creation_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_from_issue_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.update()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.getIssueChangeCreationDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment_with_created_at()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff_with_created_at()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDtoTest.to_string()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeDto.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapperTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapperTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueChangeMapperTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDao.mapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDao.selectNonClosedIssuesByModule(long,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getRuleRepo()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getRule()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getComponentKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getProjectKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getKee()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getRuleId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getSeverity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.isManualSeverity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getMessage()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getLine()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getEffortToFix()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getStatus()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getResolution()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getChecksum()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getAuthorLogin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getReporter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getAssignee()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getIssueAttributes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getIssueCreationDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getIssueUpdateDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getIssueCloseDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getUpdatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getComponentUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getModuleUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getModuleUuidPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getProjectUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDaoTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.toDefaultIssue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getRuleKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getTags()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.uuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.moduleUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.moduleUuidPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setProject(org.sonar.core.component.ComponentDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getRuleKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getRepositoryKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getLanguage()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setTags(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setModuleUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setProjectKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setIssueCreationDate(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setIssueCloseDate(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setIssueUpdateDate(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setSelectedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setCreatedAt(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.toDtoForServerInsert(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto,int,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDtoTest.set_data_check_maximal_length()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setLanguage(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDtoTest.set_rule()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.setId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.setRuleKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.setRepositoryKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getLanguage()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDtoTest.set_tags()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getTagsString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setTagsString(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterMapper.selectByUser(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterMapper.selectFavoriteFiltersByUser(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterMapper.selectSharedFilters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao.selectById(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterMapper.selectById(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterMapper.selectProvidedFilterByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao.delete(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterMapper.delete(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterMapper.insert(org.sonar.core.issue.db.IssueFilterDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterMapper.update(org.sonar.core.issue.db.IssueFilterDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest.should_delete()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto.setShared(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto.setData(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto.isShared()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user_with_only_favorite_filters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_provided_by_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_shared()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteMapper.selectByFilterId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteMapper.selectById(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteMapper.delete(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteMapper.deleteByFilterId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteMapper.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete_by_issue_filter_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDto.setIssueFilterId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDto.getUserLogin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDto.getIssueFilterId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapperTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapperTest.insert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setIssueCreationTime(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setIssueUpdateTime(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.setIssueCloseTime(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapper.insert(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapperTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapperTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapperTest.update()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapper.updateIfBeforeSelectedDate(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.doAfterSave()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.save(java.lang.Iterable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.save(org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.save(org.sonar.core.persistence.DbSession,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorage.rule(org.sonar.api.issue.Issue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest.after()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest.before()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.component.ComponentDto.setUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolver.resolveAssignee(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolver.resolvePlan(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolver.resolveSeverity(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolver.resolveEffortToFix(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolver.resolveResolution(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolver.resolveStatus(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.IssueDto.getActionPlanKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolver()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Function$Context.issue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.issue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Function$Context.setAssignee(org.sonar.api.user.User)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setAssignee(org.sonar.api.user.User)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Function$Context.setCloseDate(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setCloseDate(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setCloseDate(org.sonar.api.issue.internal.DefaultIssue,java.util.Date,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Function$Context.setLine(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setLine(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setResolution(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setResolution(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.FunctionExecutor.execute(org.sonar.core.issue.workflow.Function[],org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext(org.sonar.core.issue.IssueUpdater,org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_be_end_of_life()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IsEndOfLife(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IsEndOfLife.matches(org.sonar.api.issue.Issue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_not_be_end_of_life()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IsManualTest.should_match()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IsManual(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IsManual.matches(org.sonar.api.issue.Issue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IsManualTest.should_match_dead()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.stateOf(org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.State.transition(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.automatic()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.functions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setStatus(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.to()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachine.state(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.State.outManualTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.statusKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachine.stateKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition$TransitionBuilder.conditions(org.sonar.api.issue.condition.Condition[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition$TransitionBuilder.functions(org.sonar.core.issue.workflow.Function[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetEndOfLife()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetCloseDate(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition$TransitionBuilder.automatic()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetResolution(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition$TransitionBuilder.requiredProjectPermission(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.State.outAutomaticTransition(org.sonar.api.issue.Issue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachine.builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachine$Builder.states(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachine$Builder.build()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest#updater">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest#workflow">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow(org.sonar.core.issue.workflow.FunctionExecutor,org.sonar.core.issue.IssueUpdater)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest$1.apply(org.sonar.core.issue.workflow.Transition)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.close_confirmed_dead_issue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.close_open_dead_issue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.close_reopened_dead_issue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.do_automatic_transition()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_on_automatic_trans()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_when_listing_transitions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.flag_as_false_positive()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.init_state_machine()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.machine()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflow.stop()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.list_no_out_transition_from_status_closed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_closed_on_manual_issue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_confirmed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_open()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_reopen()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_resolved()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.list_statuses()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_component_be_closed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_rule_be_closed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.IssueWorkflowTest.wont_fix()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetAssignee#UNASSIGN">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetAssignee(org.sonar.api.user.User)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetAssignee.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetAssigneeTest.assign()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUser()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUser.setLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUser.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetAssigneeTest.unassign()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetCloseDate.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetCloseDateTest.should_set_close_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetEndOfLifeTest#function">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetEndOfLifeTest.line_number_must_be_unset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_fail_if_issue_is_not_resolved()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_fixed()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_removed_when_rule_is_disabled()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetResolution.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.SetResolutionTest.execute()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.State.checkDuplications(org.sonar.core.issue.workflow.Transition[],java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.supports(org.sonar.api.issue.Issue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachine(org.sonar.core.issue.workflow.StateMachine$Builder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.from()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachine$Builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachineTest.keep_order_of_state_keys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateMachineTest.stateKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateTest#t1">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateTest.key_should_be_set()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateTest.key_should_be_upper_case()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.StateTest.no_duplicated_out_transitions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition(org.sonar.core.issue.workflow.Transition$TransitionBuilder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition$TransitionBuilder(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.destination_status_should_be_set()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.key_should_be_lower_case()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.key_should_be_set()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.originating_status_should_be_set()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.test_builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.conditions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.test_equals_and_hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.TransitionTest.test_toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.workflow.Transition.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanDeadlineComparatorTest#shortTerm">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanDeadlineComparatorTest#longTerm">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanDeadlineComparatorTest#noDeadline">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanDeadlineComparatorTest.compare_plans_with_deadlines()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanDeadlineComparator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanDeadlineComparatorTest.end_with_plans_without_deadline()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanStats()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanStats.isOpen()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.status()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanStats.overDue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.deadLine()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.ActionPlanStatsTest.test_over_due()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder.componentKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder.projectKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder.message(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder.line(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder.effortToFix(java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder.ruleKey(org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder.severity(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder.attribute(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilder.build()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueFilterSerializerTest#issueFilterSerializer">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueFilterSerializer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueFilterSerializerTest.should_deserialize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueFilterSerializer.deserialize(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueFilterSerializerTest.should_remove_empty_value_when_deserializing()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueFilterSerializerTest.should_remove_empty_value_when_serializing()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueFilterSerializer.serialize(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueFilterSerializerTest.should_serialize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setPastEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setPastLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setPastMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setPastProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setPastSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setPastTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setTags(org.sonar.api.issue.internal.DefaultIssue,java.util.Collection,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.assign()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.change_assignee()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_change_assignee()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_change_line()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_change_manual_severity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setManualSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_change_resolution()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_change_severity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_change_status()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_plan_again()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.plan(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.ActionPlan,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_revert_manual_severity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_set_effort_to_fix_if_unchanged()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_set_past_project_if_no_change()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.not_update_attribute()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setAttribute(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.plan_with_existing_plan()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.plan_with_no_existing_plan()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_author()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdater.setAuthorLogin(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_effort_to_fix()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_line()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_manual_severity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_message()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_new_attribute_value()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_past_effort()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_past_line()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_past_message()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_past_project()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_past_severity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_past_technical_debt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_past_technical_debt_with_null_new_value()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_past_technical_debt_without_previous_value()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_project()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_resolution()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_severity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.set_status()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.unassign()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.unplan()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.unset_attribute()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.issue.IssueUpdaterTest.update_severity()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.CorePropertyDefinitions.all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.IssueExclusionProperties.all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.ExclusionProperties.all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.SecurityProperties.all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.DebtProperties.all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.CorePropertyDefinitionsTest.all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.Logback.configure(java.io.File,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.Logback.configure(java.io.InputStream,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.Logback.configureContext(ch.qos.logback.classic.LoggerContext,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.Logback.configure(java.lang.String,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDtoTest#sut">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDtoTest.fail_to_get_out_of_bounds_variation()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.getVariation(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDtoTest.fail_to_set_out_of_bounds_variation()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.setVariation(int,java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.setComponentKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.setMetricKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.setValue(java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.setData(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDto.getData()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDtoTest.text_value_under_4000_characters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureDtoTest.value_with_text_over_4000_characters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterMapper.findSystemFilterByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDao.insert(org.sonar.core.measure.db.MeasureFilterDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterMapper.insert(org.sonar.core.measure.db.MeasureFilterDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDaoTest.should_find_filter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDto.setUserId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDto.setShared(java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDto.setData(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.MeasureFilterDaoTest.should_not_find_filter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDtoTest.get_value_throw_a_NPE_if_value_is_null()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.setValue(java.lang.Double)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.setMetricId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.setCharacteristicId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.setPersonId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.hasValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.getMetricId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.getRuleId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.getCharacteristicId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.measure.db.PastMeasureDto.getPersonId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePlugin.marshal()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePluginFile.getFilename()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePluginFile.getHash()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePlugin.create(org.sonar.core.platform.PluginInfo)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePlugin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePlugin.setFile(java.io.File)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getNonNullJarFile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePlugin.setFile(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePluginFile(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePlugin.unmarshal(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePluginTest.shouldEqual()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePlugin.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePluginTest.shouldMarshal()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePlugin.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.plugins.RemotePlugin.file()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateMapper.countByTypeAndKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDao.delete(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateMapper.delete(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateMapper.insert(org.sonar.core.template.LoadedTemplateDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDaoTest.shouldCountByTypeAndKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDaoTest.shouldInsert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.template.LoadedTemplateDto(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods$PeriodParameters(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods$PeriodParameters.findByDays(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods$PeriodParameters.findByDate(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.abbreviation(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.abbreviation(java.lang.String,java.lang.String,java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods$PeriodParameters.getMode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods$PeriodParameters.getParam()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods$PeriodParameters.getDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.convertDate(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.label(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.label(java.lang.String,boolean,java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.getLocale()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_duration_in_days()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_previous_analysis_with_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_previous_analysis_without_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_previous_version()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_snapshot_version()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.before()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.Periods(org.sonar.api.config.Settings,org.sonar.api.i18n.I18n)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.label_of_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.label_of_duration_in_days()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.label_of_previous_analysis_with_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.label_of_previous_analysis_without_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.label_of_previous_version()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.label_of_previous_version_with_param_and_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.label_of_snapshot_version()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.shouldNotSupportUnknownModeForLabel()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.shouldNotSupportUnknownModeForSnapshotLabel()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.shouldReturnLabelInModeDays()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.shouldReturnLabelInModePreviousAnalysis()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.shouldReturnLabelInModeVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.shouldReturnSnapshotLabelInModeDate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.shouldReturnSnapshotLabelInModePreviousVersionWithParamNotNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.timemachine.PeriodsTest.shouldReturnSnapshotLabelInModePreviousVersionWithParamNull()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.getConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtils.repeatCondition(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.findNotificationSubscribers(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.findNotificationSubscribers(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.findUsersForNotification(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.findUsersForNotification(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.selectByQuery(org.sonar.core.properties.PropertyQuery,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.selectByQuery(org.sonar.core.properties.PropertyQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.selectEnabledDescendantModuleProperties(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.selectDescendantModuleProperties(java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.selectGlobalProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.selectGlobalProperties(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.selectGlobalProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.selectProjectProperties(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.selectProjectProperties(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.selectProjectProperties(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.selectByKey(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.deleteAllProperties(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.deleteAllProperties(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.deleteGlobalProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.deleteGlobalProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.deleteGlobalProperty(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.deleteProjectProperties(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.deleteProjectProperty(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.renamePropertyKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.insert(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto.setValue(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto.getValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.update(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesMapper.updateProperties(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.findById(java.util.List,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.deleteAllProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.delete_project_properties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.delete_project_property()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.findNotificationSubscribers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.hasNotificationSubscribers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.insertGlobalProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.renamePropertyKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.select_by_query()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyQuery.builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyQuery$Builder.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyQuery$Builder.setComponentId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyQuery$Builder.setUserId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyQuery$Builder.build()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.select_module_properties_tree()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto.setUserId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.shouldFindUsersForNotification()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_an_empty_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_if_same_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_with_empty_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.updateGlobalProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertiesDaoTest.updatePropertiesFromKeyAndValueToNewValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDtoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDtoTest.testEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDtoTest.testHashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDtoTest.testToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyDto.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyQuery(org.sonar.core.properties.PropertyQuery$Builder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.properties.PropertyQuery$Builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationMapper.selectProjects(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.projectSearch(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociation()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociation.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociation.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociation.setMember(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setGateId(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociation.id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociation.name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociation.isMember()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.initMembership()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.initPageIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.initPageSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.projectSearchToSql(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_invalid_membership()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_null_login()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionMapper.selectForQualityGate(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionMapper.selectById(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionMapper.delete(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionMapper.deleteConditionsWithInvalidMetrics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionMapper.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionMapper.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.shouldCleanConditions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.setId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.setQualityGateId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.setMetricId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.setOperator(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.setWarningThreshold(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.setErrorThreshold(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.setPeriod(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.getMetricId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.getOperator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.getPeriod()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.getQualityGateId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.getWarningThreshold()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.getErrorThreshold()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectForQualityGate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.isOperatorAllowed(java.lang.String,org.sonar.api.measures.Metric$ValueType)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDto.getOperatorsForType(org.sonar.api.measures.Metric$ValueType)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateConditionDtoTest.should_validate_operators_for_metric_type()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.selectAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.selectAll(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateMapper.selectAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateMapper.selectById(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateMapper.selectByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateMapper.delete(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateMapper.insert(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateMapper.update(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectById()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectByName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao.countDeveloperLogins(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorMapper.countDeveloperLogins(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(org.apache.ibatis.session.SqlSession,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao$1.apply(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorMapper.selectScmAccountsByDeveloperUuids(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao.selectByLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorMapper.selectByLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDto.setLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDto.setPersonId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorMapper.insert(org.sonar.core.user.AuthorDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getModuleUuidPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.insertUsingExistingSession(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDaoTest.countDeveloperLogins()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDao(org.sonar.core.persistence.MyBatis,org.sonar.core.resource.ResourceDao)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthor()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsDuplication()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDto.getPersonId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorDto.getLogin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao.keepAuthorizedComponentKeys(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao$1.apply(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForAnonymous(java.lang.String,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForUser(java.lang.Integer,java.lang.String,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationMapper.keepAuthorizedComponentKeysForAnonymous(java.lang.String,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationMapper.keepAuthorizedComponentKeysForUser(java.lang.Integer,java.lang.String,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.anonymous_should_be_authorized()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.group_should_be_authorized()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_anonymous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_group()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_anonymous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_group()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_anonymous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_group_anyone()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_group_global_permissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_anonymous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_group()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_anonymous()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_group()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.should_return_user_global_permissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.AuthorizationDaoTest.user_should_be_authorized()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserFinder.find(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserFinder.toUsers(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserFinder.findByLogins(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.toUser()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserFinder.findByLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserFinderTest#finder">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserFinder(org.sonar.core.user.UserDao)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserFinderTest.findByLogin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setEmail(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserFinderTest.findByLogins()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserFinderTest.findByQuery()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserTest.test_email()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUser.email()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUser.setEmail(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUserTest.test_object_methods()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUser.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUser.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getEmail()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getLogin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DeprecatedUserFinder.findById(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.getUser(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DeprecatedUserFinder.findByLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DeprecatedUserFinderTest#dbTester">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DeprecatedUserFinderTest.init()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserById()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DeprecatedUserFinder(org.sonar.core.user.UserDao)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserByLogin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupDtoTest.getter_and_setter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupDto.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao$2.apply(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipMapper.selectGroupsByLogins(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.LoginGroup.login()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.LoginGroup.groupName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao.countGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipMapper.countGroups(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao.countMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery.groupId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipMapper.countMembers(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao.selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipMapper.selectGroups(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipMapper.selectMembers(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao$1.apply(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipMapper.countUsersByGroup(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupUserCount.groupName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupUserCount.userCount()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest#dbTester">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.count_groups()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.count_groups_by_login()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.count_members()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery.builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery$Builder.build()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.count_users_by_group()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery$Builder.groupSearch(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery$Builder.memberSearch(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto.getUserId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDaoTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto.toGroupMembership()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembership()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembership.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembership.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembership.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembership.setMember(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDto.setUserId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembership.id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembership.name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembership.description()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembership.isMember()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery$Builder.initMembership()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery$Builder.initPageIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery$Builder.initPageSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery(org.sonar.core.user.GroupMembershipQuery$Builder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery.groupSearchToSql(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQuery$Builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQueryTest.fail_on_invalid_membership()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipQueryTest.fail_on_null_login()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipTest.test_equals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.countResourceGroupRoles(org.sonar.core.persistence.DbSession,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.countResourceGroupRoles(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.countResourceUserRoles(org.sonar.core.persistence.DbSession,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.countResourceUserRoles(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.selectGroupPermissions(java.lang.String,java.lang.Long,java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.selectUserPermissions(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.deleteGroupRole(org.sonar.core.user.GroupRoleDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.deleteGroupRolesByGroupId(org.sonar.core.persistence.DbSession,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.deleteGroupRolesByGroupId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.deleteGroupRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.deleteGroupRolesByResourceId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.deleteUserRole(org.sonar.core.user.UserRoleDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.deleteUserRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.deleteUserRolesByResourceId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.insertGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.insertGroupRole(org.sonar.core.user.GroupRoleDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao.insertUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapper.insertUserRole(org.sonar.core.user.UserRoleDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest#dbTester">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.delete_all_group_permissions_by_group_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupRoleDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserRoleDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.GroupRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.retrieve_global_group_permissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.retrieve_global_user_permissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.retrieve_resource_group_permissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.retrieve_resource_user_permissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleDaoTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapperTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapperTest.closeSession()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapperTest.count_roles()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapperTest.delete_roles_by_resource_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapperTest.insert_roles()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.RoleMapperTest.openSession()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.selectUserByLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.removeUserFromGroups(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.deleteUserActiveDashboards(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.deleteUnsharedUserDashboards(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.deleteUnsharedUserIssueFilters(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.deleteUserIssueFilterFavourites(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.deleteUnsharedUserMeasureFilters(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.deleteUserMeasureFilterFavourites(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.deleteUserProperties(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.deleteUserRoles(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.deactivateUser(long,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.selectUsersByLogins(org.sonar.core.persistence.DbSession,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.selectUsersByLogins(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.selectGroupByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.getUser(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.selectUser(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.insert(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.insert(org.sonar.core.user.UserDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.selectActiveUserByLogin(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDao.update(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMapper.update(org.sonar.core.user.UserDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.deactivate_missing_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.deactivate_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.isActive()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getUpdatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.insert_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setScmAccounts(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setActive(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setSalt(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setCryptedPassword(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getScmAccounts()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getSalt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getCryptedPassword()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectGroupByName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.Dto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.Dto.getUpdatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectGroupByName_not_found()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUserByLogin_ignore_inactive()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUserByLogin_not_found()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUsersByLogins()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUsersByLogins_empty_logins()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUsersByQuery_all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUsersByQuery_escape_special_characters_in_like()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUsersByQuery_filter_by_login()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUsersByQuery_only_actives()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_login_text()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_name_text()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDaoTest.update_user()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.getScmAccountsAsList()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.decodeScmAccounts(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.DefaultUser.setActive(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.setScmAccounts(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDto.encodeScmAccounts(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDtoTest.decode_scm_accounts()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserDtoTest.encode_scm_accounts()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery$Builder.initMembership()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery$Builder.initPageIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery$Builder.initPageSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery(org.sonar.core.user.UserMembershipQuery$Builder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery.memberSearchToSql(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.user.UserMembershipQuery$Builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleMapper.selectEnablesAndNonManual()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDao.selectParameters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDao.selectParameters(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleMapper.selectAllParams()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getDescriptionFormat()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getStatus()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getNoteData()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getSubCharacteristicId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getDefaultSubCharacteristicId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getRemediationFunction()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getDefaultRemediationFunction()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getRemediationCoefficient()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getDefaultRemediationCoefficient()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getRemediationOffset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getDefaultRemediationOffset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getEffortToFixDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDaoTest.select_parameters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleParamDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleParamDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleParamDto.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleParamDto.getType()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleParamDto.getDefaultValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto$Format#HTML">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto$Format()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto$Format#MARKDOWN">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getSeverityString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.SeverityUtil.getSeverityFromOrdinal(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.createFor(org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.setSeverity(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleDto.setSeverity(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.SeverityUtil.getOrdinalFromSeverity(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleParamDto.createFor(org.sonar.core.rule.RuleDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleParamDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.rule.RuleParamDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.decodeTestData(byte[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.decodeTestData(java.io.InputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.getTestData()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.setSourceData(org.sonar.server.source.db.FileSourceDb$Data)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.encodeSourceData(org.sonar.server.source.db.FileSourceDb$Data)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.setTestData(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.encodeTestData(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.decodeSourceData(byte[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.decodeSourceData(java.io.InputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto.getSourceData()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDtoTest.encode_and_decode_test_data()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.source.db.FileSourceDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.migration.v45.Rule.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.migration.v45.Rule.getRepositoryKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.migration.v45.Rule.getRuleKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getScrollDefaultFetchSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getScrollSingleRowFetchSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect.getScrollSingleRowFetchSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getActiveRecordDialectCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getDefaultDriverClassName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getFalseSqlValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getTrueSqlValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getValidationQuery()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getConnectionInitStatements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect.getConnectionInitStatements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtils.findById(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtils.findByJdbcUrl(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtils$2.apply(org.sonar.core.persistence.dialect.Dialect)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtils.findDialect(com.google.common.base.Predicate)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtils$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtils$1.apply(org.sonar.core.persistence.dialect.Dialect)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtils$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtilsTest.testFindById()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtilsTest.testFindByJdbcUrl()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.DialectUtilsTest.testFindNoMatch()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.supportsMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2.supportsMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2.getHibernateDialectClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2Test#dialect">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2Test.h2_does_not_supportMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2Test.matchesJdbcURL()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2Test.should_configure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2Test.testBooleanSqlValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.H2Test.testFetchSizeForScrolling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MsSql()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MsSql.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MsSql.supportsMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MsSql.getHibernateDialectClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MsSqlTest#msSql">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MsSqlTest.matchesJdbcURL()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MsSqlTest.msSql_does_supportMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MsSqlTest.should_configure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MsSqlTest.testBooleanSqlValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySql()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySql.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySql.supportsMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySql.getScrollDefaultFetchSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySql.getScrollSingleRowFetchSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySql.getHibernateDialectClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySqlTest#mySql">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySqlTest.matchesJdbcURL()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySqlTest.mysql_does_supportMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySqlTest.should_configure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySqlTest.testBooleanSqlValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.MySqlTest.testFetchSizeForScrolling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Oracle()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Oracle.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Oracle.supportsMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Oracle.getHibernateDialectClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleSequenceGenerator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.Oracle$Oracle10gWithDecimalDialect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleTest#dialect">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleTest.matchesJdbcURL()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleTest.oracle_does_supportMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleTest.should_configure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleTest.testBooleanSqlValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.OracleTest.testFetchSizeForScrolling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSql$PostgreSQLWithDecimalDialect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSql()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSql.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSql.supportsMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSql.getHibernateDialectClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSql.getConnectionInitStatements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSqlTest#dialect">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSqlTest.matchesJdbcURL()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSqlTest.postgres_does_supportMigration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSqlTest.should_configure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSqlTest.should_set_connection_properties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSqlTest.testBooleanSqlValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.dialect.PostgreSqlTest.testFetchSizeForScrolling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.InvocationUtilsTest.should_return_result()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.InvocationUtilsTest.should_throw_declared_exception()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.InvocationUtilsTest.should_wrap_undeclared_exception()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfiledDataSource.getConnection()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfilingConnectionHandler(java.sql.Connection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfiledDataSource.getConnection(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.delegate_to_underlying_datasource()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfiledDataSource(org.apache.commons.dbcp.BasicDataSource)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.log_sql_requests()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfiledDataSource.getUrl()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfilingConnectionHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfilingPreparedStatementHandler(java.sql.PreparedStatement,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfilingStatementHandler(java.sql.Statement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfilingPreparedStatementHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.persistence.profiling.ProfilingStatementHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.getConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands.getDbUnitFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.Database.getDialect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.getData(java.io.InputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.getExpectedData(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.closeDbUnitConnection(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.loadOrchestratorSettings(org.sonar.api.config.Settings)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2Database(java.lang.String,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands.forDialect(org.sonar.core.persistence.dialect.Dialect)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.Logback()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.cluster.NullQueue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.startDbUnit()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands.useLoginAsSchema()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.selectList(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.selectList(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.getMapper(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.getConfiguration()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.selectOne(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.selectOne(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.delete(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.delete(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.increment()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.delete(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.delete(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.insert(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.insert(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.makeSureGeneratedKeysAreNotUsedInBatchInserts(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.insert(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.insert(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.update(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.update(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.update(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.update(java.lang.String,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.flushStatements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.flushStatements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.commit()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.commit(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.commit(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.enqueue(org.sonar.core.cluster.ClusterAction)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.enqueue(org.sonar.core.cluster.ClusterAction)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.rollback()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.rollback()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.rollback(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.rollback(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.cluster.ClusterAction.call()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSessionTest$1.call()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSizeWithoutCommits()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSessionTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.BatchSessionTest.shouldResetCounterAfterCommit()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtilsTest$1.apply(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtilsTest$1$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtilsTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs_on_empty_list()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtilsTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtilsTest.list_all_dao_classes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtils.getDaoClasses()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DaoUtilsTest.repeatCondition()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$1(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$1.resetSequenceSql(java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands#H2">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$2(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$2.resetSequenceSql(java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands#POSTGRESQL">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$3(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$3.useLoginAsSchema()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands.truncateSql(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$3.truncateSql(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$3.resetSequenceSql(java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands#ORACLE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$4(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands.shouldTruncate(java.sql.Connection,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$4.shouldTruncate(java.sql.Connection,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$4.resetSequenceSql(java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$4.resetPrimaryKeys(javax.sql.DataSource)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands#MSSQL">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$5(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$5.resetSequenceSql(java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands$5.resetPrimaryKeys(javax.sql.DataSource)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseCommands#MYSQL">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.Connection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.selectDual()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.AbstractDaoTestCase.getDatabase()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.should_close_connection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Connection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.ResultSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Statement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.Statement)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.ResultSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.should_not_fail_on_connection_errors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.should_not_fail_on_resulset_errors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.should_not_fail_on_statement_errors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseUtilsTest.should_support_null_connection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersion$Status#UP_TO_DATE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersion$Status()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersion$Status#REQUIRES_UPGRADE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersion$Status#REQUIRES_DOWNGRADE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersion$Status#FRESH_INSTALL">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersion.getVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SchemaMigrationMapper.selectVersions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersion.getStatus()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersion.getStatus(java.lang.Integer,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersionTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersionTest.getStatus()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersionTest.getVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersion(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DatabaseVersionTest.getVersion_no_rows()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.countRowsOfTable(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.countSql(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.openConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.getHashMap(java.sql.ResultSet)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.doClobFree(java.sql.Clob)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.select(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.selectFirst(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.dbUnitConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.dbUnitDataSet(java.io.InputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.dialect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.assertColumnDefinition(java.lang.String,java.lang.String,int,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.getColumnIndex(java.sql.ResultSet,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.closeQuietly(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.before()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.loadOrchestratorSettings(org.sonar.api.config.Settings)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2Database.executeScript(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.executeUpdateSql(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DdlUtils.createSchema(java.sql.Connection,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DdlUtils.executeScript(java.sql.Connection,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DdlUtils.newScriptRunner(java.sql.Connection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DdlUtilsTest.shouldCreateSchema()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DdlUtilsTest.countTables(java.sql.Connection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DdlUtilsTest.shouldSupportOnlyH2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DdlUtils.supportsDialect(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.Database.getHibernateProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.getHibernateProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.getDialect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.getDataSource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.completeDefaultProperties(java.util.Properties)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.completeDefaultProperty(java.util.Properties,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.initDatasource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.extractCommonsDbcpProperties(java.util.Properties)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.initSettings()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.completeProperties(org.sonar.api.config.Settings,java.util.Properties,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.doCompleteProperties(java.util.Properties)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.checkConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.doAfterStart()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest$1(org.sonar.api.config.Settings)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest$1.doCompleteProperties(java.util.Properties)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest.shouldCompleteProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.getProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest.shouldExtractCommonsDbcpProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDefaultDriver()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDialectFromUrl()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest.shouldLoadDefaultValues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest.shouldSetHibernateProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabase.stop()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.DefaultDatabaseTest.shouldSupportDeprecatedUserProperty()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2Database.getHibernateProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2Database.getDataSource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2Database.getDialect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2Database.createSchema()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2Database.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2Database.startDatabase()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2DatabaseTest#db">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2DatabaseTest.shouldExecuteDdlAtStartup()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2DatabaseTest.startDb()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2DatabaseTest.stopDb()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.H2Database.stop()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.IsAliveMapperTest#dbTester">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.IsAliveMapperTest.isAlive_works_for_current_vendors()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.IsAliveMapper.isAlive()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.IsAliveMapperTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.IsAliveMapperTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.openBatchSession()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.createTransactionFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.loadAlias(org.apache.ibatis.session.Configuration,java.lang.String,java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.loadMappers(org.apache.ibatis.session.Configuration,java.lang.Class[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.config.Logback.setLoggerLevel(java.lang.String,ch.qos.logback.classic.Level)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatisTest.shouldConfigureMyBatis()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatis.getSessionFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatisTest.shouldOpenBatchSession()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatisTest.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.MyBatisTest.stop()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.acquireIfOutdated(java.lang.String,int,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreMapper.acquire(java.lang.String,java.lang.Long,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.lockedSince(org.sonar.core.persistence.SemaphoreDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreMapper.selectSemaphore(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDto.setLockedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreMapper.initialize(org.sonar.core.persistence.SemaphoreDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreMapper.release(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreMapper.update(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest$Runner.run()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.before()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_update_null_semaphore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_blank_semaphore_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_negative_timeout()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_null_semaphore_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_release_if_blank_semaphore_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest.test_concurrent_locks()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreDaoTest$Runner(org.sonar.core.persistence.SemaphoreDao,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.CyclicBarrier,java.util.concurrent.CountDownLatch)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdater$1.run()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdater$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdaterTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdaterTest.before()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdater(org.sonar.core.persistence.SemaphoreDao)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdaterTest.shouldNotFailWhenCancelNotExistingSemaphore()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdater.stopUpdate(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdaterTest.testCancelUpdate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoreUpdaterTest.testScheduleUpdate()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoresImpl.release(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SemaphoresImpl(org.sonar.core.persistence.SemaphoreDao,org.sonar.core.persistence.SemaphoreUpdater)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDto.getPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery$Builder.search(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDto.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermission.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermission.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermission.hasPermission(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDto.setPermission(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermission.name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermission.description()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermission.hasPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionTest.test_equals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionTest.test_hashcode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermission.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionMapper.selectGroups(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionMapper.selectUsers(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.countComponentPermissions(org.sonar.core.persistence.DbSession,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.getKeyPattern()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.checkAtMostOneMatchForComponentKey(java.lang.String,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.getKee()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.removeAllPermissions(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.getUsersPermissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateUserDto.getUserId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateUserDto.getPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.getGroupsPermissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateGroupDto.getGroupId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateGroupDto.getPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.grantDefaultRoles(org.sonar.core.persistence.DbSession,java.lang.Long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.updateAuthorizationDate(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacade(org.sonar.core.user.RoleDao,org.sonar.core.user.UserDao,org.sonar.core.resource.ResourceDao,org.sonar.core.permission.PermissionTemplateDao,org.sonar.api.config.Settings)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_add_user_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getAuthorizationUpdatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_count_component_permissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_name_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_delete_user_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_fail_on_unmatched_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_insert_anyone_group_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_name_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.setKee(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionFacadeTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery$Builder.initMembership()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery$Builder.initPageIndex()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery$Builder.initPageSize()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery(org.sonar.core.permission.PermissionQuery$Builder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery.searchToSql(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery$Builder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.generateTemplateKee(java.lang.String,java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.selectGroups(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.selectUsers(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.now()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.setKeyPattern(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.insert(org.sonar.core.permission.PermissionTemplateDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.selectTemplateUsersPermissions(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.setUsersPermissions(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.selectTemplateGroupsPermissions(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.setGroupsByPermission(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateGroupDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateGroupDto.setTemplateId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateGroupDto.setPermission(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateGroupDto.setGroupId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateGroupDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateGroupDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.insertGroupPermission(org.sonar.core.permission.PermissionTemplateGroupDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateUserDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateUserDto.setTemplateId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateUserDto.setUserId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateUserDto.setPermission(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateUserDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateUserDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.insertUserPermission(org.sonar.core.permission.PermissionTemplateUserDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.deleteUsersPermissions(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.deleteGroupsPermissions(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.delete(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.removeByGroup(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.deleteByGroupId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.deleteGroupPermission(org.sonar.core.permission.PermissionTemplateGroupDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.deleteUserPermission(org.sonar.core.permission.PermissionTemplateUserDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateMapper.update(org.sonar.core.permission.PermissionTemplateDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.after()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.remove_by_group()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.setUpDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_to_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_with_null_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_user_permission_to_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_create_permission_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_delete_permission_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_normalize_kee_on_template_creation()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_from_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_with_null_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_user_permission_from_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_all_permission_templates()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDaoTest.should_update_permission_template()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionTemplateDto#DEFAULT">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDto.getPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDto.getLogin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest$1.apply(org.sonar.core.permission.UserWithPermissionDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.PermissionQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermission.setLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermission.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermission.hasPermission(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDto.setLogin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDto.setPermission(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermission.name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermission.login()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermission.hasPermission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest$1.apply(org.sonar.core.permission.UserWithPermissionDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTest.test_equals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTest.test_hashcode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermission.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer(org.picocontainer.MutablePicoContainer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.createPicoContainer()">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeys()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.getName(java.lang.Object)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer$1(org.picocontainer.ComponentMonitor,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.addPicoAdapter(org.picocontainer.ComponentAdapter)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeys.of(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.addSingletons(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.createChild()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.startComponents()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.doBeforeStart()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.doAfterStart()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.stopComponents()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.stopComponents(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.removeChild()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$SimpleComponentProvider.provide()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$SimpleComponent()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.display_plugin_name_when_failing_to_add_extension()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.shouldDeclareComponentProperties()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWhenAdding()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.getComponentByKey(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWithoutAddingIt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.shouldRegisterItself()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.should_close_components_with_lifecycle()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$StartableCloseableComponent()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.should_close_components_without_lifecycle()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$CloseableComponent()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.should_execute_components()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$StartableComponent()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.should_sanitize_pico_exception_on_start_failure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$1.doAfterStart()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$2.doAfterStart()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$UnstartableComponent()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.stop_exception_should_not_hide_start_exception()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.testChild()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.getParent()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainer.getChild()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.test_add_adapter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest$SimpleComponentProvider()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.test_add_class()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.test_add_collection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.test_start_failure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentContainerTest.test_stop_failure()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeys.of(java.lang.Object,org.sonar.api.utils.log.Logger)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeysTest#keys">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeysTest.generate_key_of_class()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeysTest.generate_key_of_object()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeysTest$FakeComponent()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeysTest.should_generate_unique_key_when_toString_is_not_overridden()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeysTest$WrongToStringImpl()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ComponentKeysTest.should_log_warning_if_toString_is_not_overridden()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PicoUtils.sanitize(java.lang.Throwable)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PicoUtilsTest.newPicoLifecycleException(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PicoUtilsTest.shouldNotSanitizeOtherExceptions()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PicoUtilsTest.shouldPropagateInitialUncheckedException()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PicoUtilsTest.shouldSanitizePicoLifecycleException()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PicoUtilsTest.shouldSanitizePicoLifecycleException_no_wrapper_message()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PicoUtilsTest.shouldThrowUncheckedExceptionWhenPropagatingCheckedException()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactory.build(java.util.Collection,org.sonar.classloader.ClassloaderBuilder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactory.baseClassloader()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactory.apiMask()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.isSelfFirstStrategy()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.getFiles()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactory.fileToUrl(java.io.File)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.isCompatibilityMode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactory.extractCompatibilityModeJar()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactory.exportResources(org.sonar.core.platform.PluginClassloaderDef,org.sonar.classloader.ClassloaderBuilder,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.getExportMask()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactoryTest#factory">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactory(org.sonar.api.utils.TempFolder)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.addFiles(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactoryTest.fakePluginJar(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactoryTest.classloader_exports_resources_to_other_classloaders()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactoryTest.canLoadClass(java.lang.ClassLoader,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactoryTest.create_classloader_compatible_with_with_old_api_dependencies()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.setCompatibilityMode(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderFactoryTest.create_isolated_classloader()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo$RequiredPlugin.parse(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo$RequiredPlugin(java.lang.String,org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo$JarToPluginInfo#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo$JarToPluginInfo()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo$JarToPluginInfo.apply(java.io.File)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.create(java.io.File)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setMainClass(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setLicense(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setOrganizationName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setOrganizationUrl(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setMinimalSqVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setHomepageUrl(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setIssueTrackerUrl(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setUseChildFirstClassLoader(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setBasePlugin(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.setImplementationBuild(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.addRequiredPlugin(org.sonar.core.platform.PluginInfo$RequiredPlugin)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.withMinSqVersion(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getBasePlugin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getHomepageUrl()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getImplementationBuild()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getIssueTrackerUrl()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getLicense()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getOrganizationName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getOrganizationUrl()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getMinimalSqVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getRequiredPlugins()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.create_from_file()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getJarFile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.getMainClass()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.l10n_plugins_should_not_extend_english_plugin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo$RequiredPlugin.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo$RequiredPlugin.getMinimalVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo$RequiredPlugin.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo$RequiredPlugin.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.test_comparison()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.test_compatibility_with_sq_version()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.isCompatibleWith(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.test_equals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfoTest.test_toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploder$ZipLibFilter#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploder$ZipLibFilter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ExplodedPlugin(java.lang.String,java.io.File,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploderTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploder.newLibFilter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploderTest.getFile(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ExplodedPlugin.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ExplodedPlugin.getLibs()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.ExplodedPlugin.getMain()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploderTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploderTest$2.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoader.basePluginKey(org.sonar.core.platform.PluginInfo,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.setSelfFirstStrategy(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginInfo.isUseChildFirstClassLoader()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoader.instantiatePluginClasses(java.util.Map)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.core.platform.PluginClassloaderDef.getMainClassesByPluginKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoader.load(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoader.unload(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoaderTest#loader">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoader(org.sonar.core.platform.PluginJarExploder,org.sonar.core.platform.PluginClassloaderFactory)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoaderTest.define_classloader()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoaderTest.instantiate_plugin_entry_point()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoaderTest.plugin_entry_point_must_be_no_arg_public()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.DefaultResourceTypesTest.projects_should_be_available_for_global_widgets()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.DefaultResourceTypes.get()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.DefaultResourceTypesTest.provide_types()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getDescendantProjects(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getDescendantProjects(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectResourceIds(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectResources(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.toComponents(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectGhostsProjects(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectProjectsByQualifiers(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.selectProvisionedProjects(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectProvisionedProjects(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao$1.apply(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.findById(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceQuery.create()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceQuery.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getPath()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getLongName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getQualifier()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getLastSnapshot(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectLastSnapshotByResourceKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getLastSnapshotByResourceUuid(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectLastSnapshotByResourceUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getScope()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setAuthorizationUpdatedAt(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.insert(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.update(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getRootId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getResource(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectResourceByUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getResource(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectResource(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.selectProvisionedProject(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDao.selectProvisionedProject(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectProvisionedProject(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.selectDescendantProjects(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceMapper.updateAuthorizationDate(java.lang.Long,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.getKeys(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.find_parent_by_component_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_Id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.getResourceIds_all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.getResourceIds_filter_by_qualifier()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceQuery.setQualifiers(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.getResource_not_found()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.getResources_all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.getResources_exclude_disabled()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceQuery.setExcludeDisabled(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_qualifier()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getProjectUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getDescription()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getLanguage()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.isEnabled()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.get_resource_path_and_module_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.get_uuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getModuleUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setScope(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_insert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setModuleUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setDeprecatedKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setLanguage(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setLongName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setPath(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_select_ghosts_projects_by_qualifiers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_select_projects_by_qualifiers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_select_projects_including_not_finished_by_qualifiers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_project_by_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_projects_by_qualifiers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.should_update()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setDescription(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.setId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_do_not_include_self()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_id_not_found()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDaoTest.update_authorization_date()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.indexResource(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.nameToKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.sanitizeIndex(long,java.lang.String,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerMapper.selectResourceToIndex(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerMapper.selectMasterIndexByResourceId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerMapper.deleteByResourceId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.indexProject(long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao$1.handleResult(org.apache.ibatis.session.ResultContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.indexProjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerQuery.create()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao$2.handleResult(org.apache.ibatis.session.ResultContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao$3.handleResult(org.apache.ibatis.session.ResultContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerQuery.setNonIndexedOnly(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerQuery.setQualifiers(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerQuery.setScopes(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerQuery.setRootProjectId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexDto.setResourceId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexDto.setQualifier(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexDto.setRootProjectId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexDto.setNameSize(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexDto.setPosition(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerMapper.insert(org.sonar.core.resource.ResourceIndexDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexMultiModulesProject()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexProjects()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexResource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexTwoLettersLongResources()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotIndexPackages()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotReindexUnchangedResource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexNewTwoLettersLongResource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexTwoLettersLongResources()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexProjectAfterRenaming()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexResource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceIndexerQuery()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDao.computeNewKey(org.sonar.core.resource.ResourceDto,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterMapper.countResourceByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProject(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterMapper.selectDescendantProjects(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDao.checkNewNameOfAllModules(java.util.Set,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProjectResources(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceDto.getDeprecatedKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterMapper.update(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKeyOnOnlyOneSubmodule()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldCheckModuleKeysBeforeRenaming()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldFailBulkUpdateKeyIfKeyAlreadyExist()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateAllSubmodules()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldUpdateKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.resource.ResourceQuery()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier.getInput()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI,java.net.ProxySelector)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader(java.util.Map,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initProxy(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initUserAgent(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.propagateProxySystemProperties(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.requiresProxyAuthentication(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.registerProxyCredentials(java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$ProxyAuthenticator(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.readBytes(java.net.URI)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.openStream(java.net.URI)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.description(java.net.URI)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.getProxySynthesis(java.net.URI)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.downloadPlainText(java.net.URI,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI,java.io.File)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.downloadBytes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.downloadToFile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.followRedirect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.readGzipString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.readString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithDefaultTimeout()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithTimeout()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.shouldGetDirectProxySynthesis()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.shouldGetProxySynthesis()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.FakeProxy()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.shouldNotCreateFileIfFailToDownload()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.startServer()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.supported_schemes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloader.getSupportedSchemes()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.uri_description()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.DefaultHttpDownloaderTest.userAgentIsSonarVersion()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust#INSTANCE">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust(org.sonar.core.util.HttpsTrust$Ssl)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust.createSocketFactory(org.sonar.core.util.HttpsTrust$Ssl)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust.createHostnameVerifier()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust$Ssl.newFactory(javax.net.ssl.TrustManager[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust$AlwaysTrustManager()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrustTest.failOnError()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrustTest.singleHostnameVerifier()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrustTest.newHttpsConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrustTest.singleSslFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrustTest.testAlwaysTrustManager()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust$AlwaysTrustManager.getAcceptedIssuers()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust$AlwaysTrustManager.checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrust$AlwaysTrustManager.checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrustTest.trustAllCerts()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.HttpsTrustTest.trustAllHosts()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.MultiSets$NonNullOrdering.compare(T,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.MultiSets$NonNullOrdering.doCompare(T,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.MultiSets$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.MultiSets$NonNullOrdering()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.MultiSets$1.doCompare(com.google.common.collect.Multiset$Entry,com.google.common.collect.Multiset$Entry)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.MultiSets#DECREASING_COUNT_ORDERING">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.MultiSetsTest.order_with_highest_count_first()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.MultiSetsTest.add(com.google.common.collect.Multiset,java.lang.String,int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.MultiSets.listOrderedByHighestCounts(com.google.common.collect.Multiset)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.NonNullInputFunction.apply(F)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.NonNullInputFunction.doApply(F)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.NonNullInputFunctionTest$TestFunction()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.NonNullInputFunction()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.NonNullInputFunctionTest$TestFunction.doApply(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.NonNullInputFunctionTest#sut">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.NonNullInputFunctionTest.apply()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.util.NonNullInputFunctionTest.fail_if_null_input()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPairs$IdUuidPairToIdFunction.apply(org.sonar.core.purge.IdUuidPair)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPair.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPairs$IdUuidPairToUuidFunction.apply(org.sonar.core.purge.IdUuidPair)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPair.getUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPairs.ids(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPairs$IdUuidPairToIdFunction()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPairs.uuids(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPairs$IdUuidPairToUuidFunction()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPairsTest.extract_ids()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.IdUuidPairsTest.extract_uuids()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands.deleteFileSources(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteFileSourcesByProjectUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler.stop()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.selectSnapshotIdsByResource(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteResourceLinks(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteResourceProperties(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteResourceIndex(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteResourceGroupRoles(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteResourceUserRoles(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteResourceManualMeasures(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteComponentIssueChanges(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteComponentIssues(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteResourceActionPlans(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteComponentEvents(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteResource(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteAuthors(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteSnapshotDuplications(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteSnapshotEvents(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteSnapshotMeasures(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteSnapshot(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.selectMetricIdsWithoutHistoricalData()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteSnapshotWastedMeasures(java.util.List,java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.updatePurgeStatusToOne(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIdUuids()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.prepare()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIds()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int,org.sonar.api.utils.System2)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfiguration.newDefaultPurgeConfiguration(org.sonar.api.config.Settings,org.sonar.core.purge.IdUuidPair)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfigurationTest.delete_directory_if_in_settings()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfiguration.scopesWithoutHistoricalData()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfigurationTest.do_not_delete_directory_by_default()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfigurationTest.should_delete_all_closed_issues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfigurationTest.should_delete_only_old_closed_issues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.setIslast(java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.setStatus(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.setResourceId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.getProjects(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.selectPurgeableFiles(org.sonar.core.persistence.DbSession,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.mapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.selectPurgeableFileUuids(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.selectPurgeableSnapshotsWithEvents(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.selectPurgeableSnapshotsWithoutEvents(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.deleteFileSources(java.lang.String,org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.purge.IdUuidPair)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.setRootProjectId(java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteOldClosedIssueChanges(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeConfiguration.rootProjectIdUuid()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteOldClosedIssues(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.selectProjectIdUuidsByRootId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.selectComponentIdUuidsByRootId(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao$1.handleResult(org.apache.ibatis.session.ResultContext)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeListener.onComponentDisabling(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.setSnapshotIsLastToFalse(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.deleteFileSourcesByUuid(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.disableResource(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeMapper.resolveResourceIssuesNotAlreadyResolved(java.lang.String,java.lang.Long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.setNotPurged(java.lang.Boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery.setScopes(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days(org.sonar.api.utils.System2)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.getById(java.util.List,long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.after()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.before()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDao(org.sonar.core.persistence.MyBatis,org.sonar.core.resource.ResourceDao,org.sonar.core.purge.PurgeProfiler,org.sonar.api.utils.System2)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.delete_file_sources_of_disabled_resources()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.disable_resources_without_last_snapshot()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.select_purgeable_file_uuids_and_only_them()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.shouldDeleteAbortedBuilds()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.should_delete_old_closed_issues()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.should_delete_project_and_associated_data()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeDaoTest.should_purge_project()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler(org.sonar.core.purge.PurgeProfiler$Clock)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler$Clock()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler.dump(long,org.sonar.api.utils.log.Logger)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler.truncateList(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler$Clock.now()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfilerTest$MockedClock()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfilerTest$MockedClock.now()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfilerTest.prepare()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfilerTest.shouldProfilePurge()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfilerTest$MockedClock.sleep(long)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeProfiler.reset()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeSnapshotQuery()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDtoTest.testEquals()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDtoTest.testHasCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDtoTest.testToString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeableSnapshotDto.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeListener$1.onComponentDisabling(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeListener#EMPTY">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.purge.PurgeListener$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectMaxCharacteristicOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectCharacteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectCharacteristicsByIds(java.util.List)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectCharacteristicsByParentId(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectEnabledCharacteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectEnabledRootCharacteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectById(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectByName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.technicaldebt.db.CharacteristicDto,org.sonar.core.technicaldebt.db.CharacteristicDto[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicMapper.update(org.sonar.core.technicaldebt.db.CharacteristicDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest#db">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.getParentId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics_by_ids()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.getOrder()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.isEnabled()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.getCreatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.getUpdatedAt()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics_order_by_characteristic_order()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order_when_characteristics_are_all_disabled()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_sub_characteristics_by_parent_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.tearDown()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.setId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.setParentId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDto.toCharacteristic(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.toDefaultCharacteristic(org.sonar.api.batch.debt.internal.DefaultDebtCharacteristic,org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.rootCharacteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicById(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel$3()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel$2()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.characteristic_by_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_characteristic_by_key()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_characteristics()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_requirement_by_id_always_return_null()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.requirementsById(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_requirement_by_rule_key_always_return_null()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.requirementsByRule(org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_requirements_always_return_empty_list()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.requirements()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel(org.sonar.api.batch.debt.DebtModel)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleMapper.selectByProfileKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleMapper.selectParamsByProfileKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDao.insert(org.sonar.core.qualityprofile.db.ActiveRuleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleMapper.insert(org.sonar.core.qualityprofile.db.ActiveRuleDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDao.insert(org.sonar.core.qualityprofile.db.ActiveRuleParamDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleMapper.insertParameter(org.sonar.core.qualityprofile.db.ActiveRuleParamDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.before()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleParamDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setActiveRuleId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setRulesParameterId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setValue(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_by_profile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_params_by_profile_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDto.getSeverityString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDto.setProfileId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDto.setKey(org.sonar.core.qualityprofile.db.ActiveRuleKey)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.getKee()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKey.ruleKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKey.qProfile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDto.setSeverity(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKey(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKey.parse(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.equals_and_hashcode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKey.equals(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKey.hashCode()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.of()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKey.toString()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse_fail_when_less_than_three_colons()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.profile_must_not_be_null()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_can_contain_colons()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_must_not_be_null()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.groupByKey(java.util.Collection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.ActiveRuleParamDtoTest.groupByKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.countProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectAll()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByLanguage(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.findChildren(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectChildren(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.findDescendants(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.getKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.selectDeselectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.sqlQueryString(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectDeselectedProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjectAssociations(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectProjectAssociations(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.selectSelectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectSelectedProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.countProjectsByProfile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileProjectCount.getProfileKey()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileProjectCount.getProjectCount()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectById(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getByKey(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByNameAndLanguage(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByProjectAndLanguage(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByProjectIdAndLanguage(java.lang.Long,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectDefaultProfile(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getNonNullByKey(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectParent(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectParentById(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.delete(int)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.doDelete(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteAllProjectProfileAssociation(java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.deleteAllProjectProfileAssociation(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.deleteProjectProfileAssociation(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.doUpdate(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.update(org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.insertProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.insertProjectProfileAssociation(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao.updateProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileMapper.updateProjectProfileAssociation(java.lang.String,java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.after()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects_by_profile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.createDao()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.UtcDateUtils.parseDateTime(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.delete()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.getName()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.getLanguage()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.getParentKee()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all_is_sorted_by_profile_name()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_by_language()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_default_profile()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_parent_by_id()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.createFor(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.setName(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.setLanguage(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_id_and_language()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_key_and_language()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_projects()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.setId(java.lang.Integer)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.setParentKee(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.setDefault(boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.setKee(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.setKey(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.qualityprofile.db.QualityProfileDto.setRulesUpdatedAtAsDate(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.UtcDateUtils.formatDateTime(java.util.Date)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.UtcDateUtils.newFormat()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.UtcDateUtilsTest.fail_if_bad_format()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.UtcDateUtilsTest.parse_then_format()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseConnector.createEntityManager()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManager()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManagerFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.AbstractDatabaseConnector.logHibernateSettings(java.util.Properties)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseConnector.getDialect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.AbstractDatabaseConnector.getDialect()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.AbstractDatabaseConnector.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseSessionTest()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseSessionTest.testGetResultsWithMultipleResults()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseSessionTest.testGetResultsWithNoResults()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithNoCriterias()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithNoResults()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithOneResult()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithTwoResults()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DefaultDatabaseConnector(org.sonar.core.persistence.Database)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.AbstractDatabaseConnector(org.sonar.core.persistence.Database)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseConnector.getConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DefaultDatabaseConnector.getConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DefaultDatabaseConnector.createDatasource()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.CustomHibernateConnectionProvider.setDatasourceForConfig(javax.sql.DataSource)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DefaultDatabaseConnector.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.getEntity(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(javax.persistence.Query,T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.reattach(java.lang.Class,java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.save(T)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.internalSave(java.lang.Object,boolean)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.getResults(java.lang.Class)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.getResults(java.lang.Class,java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.contains(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.merge(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.saveWithoutFlush(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.createNativeQuery(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.createQuery(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.buildCriteriasHQL(java.lang.StringBuilder,java.util.Map)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.commit()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.commitAndClose()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.remove(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.removeWithoutFlush(java.lang.Object)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.rollback()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.save(java.lang.Object[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.start()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession.stop()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSessionTest.setUp()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSession(org.sonar.jpa.session.DatabaseConnector)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldBuildCriteriasHQL()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldReturnDefaultValue()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldReturnSingleResult()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldThrowNonUniqueResultException()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.getHQLCount(java.lang.Class)">
      <data key="type">METHOD</data>
      <data key="USES_REFLEXION">true</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.getData(java.io.InputStream)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.getExpectedData(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseSessionFactory.getSession()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase$1.getSession()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.session.DatabaseSessionFactory.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase$1.clear()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.getSessionFactory()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase$1()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.closeQuietly(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.core.persistence.SchemaMigrationMapper.insert(java.lang.String)">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.startDbUnit()">
      <data key="type">METHOD</data>
    </node>
    <node id="org.sonar.jpa.test.AbstractDbUnitTestCase.stopDbUnit()">
      <data key="type">METHOD</data>
    </node>
    <edge id="e1" source="org.sonar.core.cluster.WorkQueue.enqueue(java.util.List)" target="org.sonar.core.cluster.NullQueue.enqueue(java.util.List)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e2" source="org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3" source="org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()" target="org.sonar.core.dashboard.ActiveDashboardDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4" source="org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()" target="org.sonar.core.dashboard.ActiveDashboardMapper.selectMaxOrderIndexForNullUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5" source="org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e6" source="org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)" target="org.sonar.core.dashboard.ActiveDashboardDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e7" source="org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)" target="org.sonar.core.dashboard.ActiveDashboardMapper.selectGlobalDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e8" source="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e9" source="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(java.lang.String)" target="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(org.apache.ibatis.session.SqlSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e10" source="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(org.apache.ibatis.session.SqlSession,java.lang.String)" target="org.sonar.core.dashboard.ActiveDashboardDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e11" source="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(org.apache.ibatis.session.SqlSession,java.lang.String)" target="org.sonar.core.dashboard.ActiveDashboardMapper.selectProjectDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e12" source="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e13" source="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)" target="org.sonar.core.dashboard.ActiveDashboardDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e14" source="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)" target="org.sonar.core.dashboard.ActiveDashboardMapper.insert(org.sonar.core.dashboard.ActiveDashboardDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e15" source="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e16" source="org.sonar.core.dashboard.ActiveDashboardDaoTest#dbTester" target="org.sonar.core.persistence.DbTester()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e17" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.createDao()" target="org.sonar.core.persistence.DbTester.truncateTables()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e18" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.createDao()" target="org.sonar.core.dashboard.ActiveDashboardDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e19" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.createDao()" target="org.sonar.core.persistence.DbTester.myBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e20" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetMaxOrderIndexForNullUser()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e21" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetMaxOrderIndexForNullUser()" target="org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e22" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetZeroMaxOrderIndex()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e23" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldGetZeroMaxOrderIndex()" target="org.sonar.core.dashboard.ActiveDashboardDao.selectMaxOrderIndexForNullUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e24" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e25" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.ActiveDashboardDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e26" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.ActiveDashboardDto.setDashboardId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e27" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.ActiveDashboardDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e28" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.ActiveDashboardDto.setOrderIndex(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e29" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e30" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsert()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e31" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e32" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()" target="org.sonar.core.dashboard.ActiveDashboardDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e33" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()" target="org.sonar.core.dashboard.ActiveDashboardDto.setDashboardId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e34" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()" target="org.sonar.core.dashboard.ActiveDashboardDto.setOrderIndex(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e35" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()" target="org.sonar.core.dashboard.ActiveDashboardDao.insert(org.sonar.core.dashboard.ActiveDashboardDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e36" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.shouldInsertWithNoUser()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e37" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_anonymous()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e38" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_anonymous()" target="org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e39" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_user()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e40" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_dashboards_for_user()" target="org.sonar.core.dashboard.ActiveDashboardDao.selectGlobalDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e41" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_anonymous()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e42" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_anonymous()" target="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e43" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_user()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e44" source="org.sonar.core.dashboard.ActiveDashboardDaoTest.should_get_project_dashboards_for_user()" target="org.sonar.core.dashboard.ActiveDashboardDao.selectProjectDashboardsForUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e45" source="org.sonar.core.dashboard.DashboardDao.selectGlobalDashboard(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e46" source="org.sonar.core.dashboard.DashboardDao.selectGlobalDashboard(java.lang.String)" target="org.sonar.core.dashboard.DashboardMapper.selectGlobalDashboard(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e47" source="org.sonar.core.dashboard.DashboardDao.selectGlobalDashboard(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e48" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e49" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.dashboard.DashboardMapper.insert(org.sonar.core.dashboard.DashboardDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e50" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.dashboard.DashboardDto.getWidgets()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e51" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.dashboard.WidgetDto.setDashboardId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e52" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.dashboard.DashboardDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e53" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.dashboard.WidgetMapper.insert(org.sonar.core.dashboard.WidgetDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e54" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.dashboard.WidgetDto.getWidgetProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e55" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.dashboard.WidgetPropertyDto.setWidgetId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e56" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.dashboard.WidgetDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e57" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.dashboard.WidgetPropertyMapper.insert(org.sonar.core.dashboard.WidgetPropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e58" source="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e59" source="org.sonar.core.dashboard.DashboardDaoTest#dbTester" target="org.sonar.core.persistence.DbTester()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e60" source="org.sonar.core.dashboard.DashboardDaoTest.createDao()" target="org.sonar.core.persistence.DbTester.truncateTables()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e61" source="org.sonar.core.dashboard.DashboardDaoTest.createDao()" target="org.sonar.core.dashboard.DashboardDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e62" source="org.sonar.core.dashboard.DashboardDaoTest.createDao()" target="org.sonar.core.persistence.DbTester.myBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e63" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e64" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.DashboardDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e65" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.DashboardDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e66" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.DashboardDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e67" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.DashboardDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e68" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.DashboardDto.setColumnLayout(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e69" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.DashboardDto.setShared(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e70" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.DashboardDto.setGlobal(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e71" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.persistence.Dto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e72" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.persistence.Dto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e73" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e74" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto.setWidgetKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e75" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e76" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e77" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto.setColumnIndex(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e78" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto.setRowIndex(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e79" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto.setConfigured(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e80" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e81" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e82" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.DashboardDto.addWidget(org.sonar.core.dashboard.WidgetDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e83" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetPropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e84" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetPropertyDto.setPropertyKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e85" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetPropertyDto.setTextValue(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e86" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.WidgetDto.addWidgetProperty(org.sonar.core.dashboard.WidgetPropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e87" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e88" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsert()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e89" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e90" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.DashboardDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e91" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.DashboardDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e92" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.DashboardDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e93" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.DashboardDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e94" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.DashboardDto.setColumnLayout(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e95" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.DashboardDto.setShared(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e96" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.DashboardDto.setGlobal(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e97" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.persistence.Dto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e98" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.persistence.Dto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e99" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e100" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto.setWidgetKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e101" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e102" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e103" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto.setColumnIndex(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e104" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto.setRowIndex(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e105" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto.setConfigured(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e106" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e107" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e108" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.DashboardDto.addWidget(org.sonar.core.dashboard.WidgetDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e109" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetPropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e110" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetPropertyDto.setPropertyKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e111" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetPropertyDto.setTextValue(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e112" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.WidgetDto.addWidgetProperty(org.sonar.core.dashboard.WidgetPropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e113" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.dashboard.DashboardDao.insert(org.sonar.core.dashboard.DashboardDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e114" source="org.sonar.core.dashboard.DashboardDaoTest.shouldInsertWithNullableColumns()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e115" source="org.sonar.core.dashboard.DashboardDaoTest.shouldSelectGlobalDashboard()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e116" source="org.sonar.core.dashboard.DashboardDaoTest.shouldSelectGlobalDashboard()" target="org.sonar.core.dashboard.DashboardDao.selectGlobalDashboard(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e117" source="org.sonar.core.dashboard.DashboardDaoTest.shouldSelectGlobalDashboard()" target="org.sonar.core.dashboard.DashboardDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e118" source="org.sonar.core.dashboard.DashboardDaoTest.shouldSelectGlobalDashboard()" target="org.sonar.core.dashboard.DashboardDto.getUserId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e119" source="org.sonar.core.dashboard.DashboardDto()" target="org.sonar.core.persistence.Dto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e120" source="org.sonar.core.persistence.Dto.getKey()" target="org.sonar.core.dashboard.DashboardDto.getKey()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e121" source="org.sonar.core.dashboard.WidgetPropertyDto.groupByWidgetId(java.util.Collection)" target="org.sonar.core.dashboard.WidgetPropertyDto.getWidgetId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e122" source="org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e123" source="org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)" target="org.sonar.core.notification.db.NotificationQueueMapper.findOldest(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e124" source="org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e125" source="org.sonar.core.notification.db.NotificationQueueDao.count()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e126" source="org.sonar.core.notification.db.NotificationQueueDao.count()" target="org.sonar.core.notification.db.NotificationQueueMapper.count()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e127" source="org.sonar.core.notification.db.NotificationQueueDao.count()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e128" source="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e129" source="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e130" source="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)" target="org.sonar.core.notification.db.NotificationQueueMapper.delete(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e131" source="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)" target="org.sonar.core.notification.db.NotificationQueueDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e132" source="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e133" source="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e134" source="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e135" source="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e136" source="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)" target="org.sonar.core.notification.db.NotificationQueueMapper.insert(org.sonar.core.notification.db.NotificationQueueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e137" source="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e138" source="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e139" source="org.sonar.core.notification.db.NotificationQueueDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e140" source="org.sonar.core.notification.db.NotificationQueueDaoTest.createDao()" target="org.sonar.core.notification.db.NotificationQueueDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e141" source="org.sonar.core.notification.db.NotificationQueueDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e142" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_count_notification_queue()" target="org.sonar.core.notification.db.NotificationQueueDto.toNotificationQueueDto(org.sonar.api.notifications.Notification)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e143" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_count_notification_queue()" target="org.sonar.core.notification.db.NotificationQueueDao.count()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e144" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_count_notification_queue()" target="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e145" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e146" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()" target="org.sonar.core.notification.db.NotificationQueueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e147" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()" target="org.sonar.core.notification.db.NotificationQueueDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e148" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()" target="org.sonar.core.notification.db.NotificationQueueDao.delete(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e149" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_delete_notification()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e150" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_findOldest()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e151" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_findOldest()" target="org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e152" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()" target="org.sonar.core.notification.db.NotificationQueueDto.toNotificationQueueDto(org.sonar.api.notifications.Notification)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e153" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()" target="org.sonar.core.notification.db.NotificationQueueDao.insert(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e154" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()" target="org.sonar.core.notification.db.NotificationQueueDao.count()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e155" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()" target="org.sonar.core.notification.db.NotificationQueueDao.findOldest(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e156" source="org.sonar.core.notification.db.NotificationQueueDaoTest.should_insert_new_notification_queue()" target="org.sonar.core.notification.db.NotificationQueueDto.toNotification()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e157" source="org.sonar.core.notification.db.NotificationQueueDto.toNotificationQueueDto(org.sonar.api.notifications.Notification)" target="org.sonar.core.notification.db.NotificationQueueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e158" source="org.sonar.core.notification.db.NotificationQueueDto.toNotificationQueueDto(org.sonar.api.notifications.Notification)" target="org.sonar.core.notification.db.NotificationQueueDto.setData(byte[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e159" source="org.sonar.core.component.db.SnapshotQuery$SORT_FIELD#BY_DATE" target="org.sonar.core.component.db.SnapshotQuery$SORT_FIELD(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e160" source="org.sonar.core.component.db.SnapshotQuery$SORT_ORDER#ASC" target="org.sonar.core.component.db.SnapshotQuery$SORT_ORDER(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e161" source="org.sonar.core.component.db.SnapshotQuery$SORT_ORDER#DESC" target="org.sonar.core.component.db.SnapshotQuery$SORT_ORDER(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e162" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e163" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.setComponentId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e164" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.setIsLast(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e165" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e166" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.setVersion(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e167" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.setCreatedAfter(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e168" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.setCreatedBefore(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e169" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.setSort(org.sonar.core.component.db.SnapshotQuery$SORT_FIELD,org.sonar.core.component.db.SnapshotQuery$SORT_ORDER)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e170" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.getComponentId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e171" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.getIsLast()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e172" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.getStatus()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e173" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.getVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e174" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.getCreatedAfter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e175" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.getCreatedBefore()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e176" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.getSortField()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e177" source="org.sonar.core.component.db.SnapshotQueryTest.test_setters_and_getters()" target="org.sonar.core.component.db.SnapshotQuery.getSortOrder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e178" source="org.sonar.core.component.ComponentDto.getKey()" target="org.sonar.core.component.ComponentDto.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e179" source="org.sonar.core.component.ComponentDtoTest.equals_and_hashcode()" target="org.sonar.core.component.ComponentDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e180" source="org.sonar.core.component.ComponentDtoTest.equals_and_hashcode()" target="org.sonar.core.component.ComponentDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e181" source="org.sonar.core.component.ComponentDtoTest.equals_and_hashcode()" target="org.sonar.core.component.ComponentDto.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e182" source="org.sonar.core.component.ComponentDtoTest.is_root_project()" target="org.sonar.core.component.ComponentDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e183" source="org.sonar.core.component.ComponentDtoTest.is_root_project()" target="org.sonar.core.component.ComponentDto.setModuleUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e184" source="org.sonar.core.component.ComponentDtoTest.is_root_project()" target="org.sonar.core.component.ComponentDto.isRootProject()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e185" source="org.sonar.core.component.ComponentDtoTest.is_root_project()" target="org.sonar.core.component.ComponentDto.setScope(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e186" source="org.sonar.core.component.ComponentDtoTest.is_root_project()" target="org.sonar.core.component.ComponentDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e187" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e188" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e189" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e190" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setDeprecatedKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e191" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e192" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setLongName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e193" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e194" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setScope(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e195" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e196" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e197" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e198" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setCopyResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e199" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setParentProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e200" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.setAuthorizationUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e201" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e202" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e203" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.deprecatedKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e204" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e205" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.longName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e206" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.qualifier()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e207" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.scope()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e208" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.path()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e209" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.language()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e210" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.description()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e211" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.parentProjectId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e212" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.getCopyResourceId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e213" source="org.sonar.core.component.ComponentDtoTest.setters_and_getters()" target="org.sonar.core.component.ComponentDto.getAuthorizationUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e214" source="org.sonar.core.component.ComponentDtoTest.toString_does_not_fail_if_empty()" target="org.sonar.core.component.ComponentDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e215" source="org.sonar.core.component.ComponentDtoTest.toString_does_not_fail_if_empty()" target="org.sonar.core.component.ComponentDto.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e216" source="org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,org.sonar.api.batch.fs.InputPath)" target="org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e217" source="org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e218" source="org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e219" source="org.sonar.core.component.ComponentKeysTest.create_effective_key()" target="org.sonar.core.component.ComponentKeys.createEffectiveKey(org.sonar.api.resources.Project,org.sonar.api.resources.Resource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e220" source="org.sonar.core.component.ComponentKeysTest.create_effective_key()" target="org.sonar.core.component.ComponentKeys.createEffectiveKey(java.lang.String,org.sonar.api.batch.fs.InputPath)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e221" source="org.sonar.core.component.ComponentKeysTest.create_key_from_module_key_path_and_branch()" target="org.sonar.core.component.ComponentKeys.createKey(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e222" source="org.sonar.core.component.ComponentKeysTest.isValidBranchKey()" target="org.sonar.core.component.ComponentKeys.isValidBranch(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e223" source="org.sonar.core.component.ComponentKeysTest.isValidModuleKey()" target="org.sonar.core.component.ComponentKeys.isValidModuleKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e224" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e225" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e226" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e227" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.setType(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e228" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e229" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.setHref(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e230" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e231" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.getComponentUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e232" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e233" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e234" source="org.sonar.core.component.ComponentLinkDtoTest.test_getters_and_setters()" target="org.sonar.core.component.ComponentLinkDto.getHref()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e235" source="org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)" target="org.sonar.core.component.Module.configureModule()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e236" source="org.sonar.core.component.Module.add(java.lang.Object[])" target="org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e237" source="org.sonar.core.component.ModuleTest#container" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e238" source="org.sonar.core.component.ModuleTest#initialSize" target="org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e239" source="org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)" target="org.sonar.core.platform.ComponentContainer.getPicoContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e240" source="org.sonar.core.component.ModuleTest$4()" target="org.sonar.core.component.Module()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e241" source="org.sonar.core.component.Module.configureModule()" target="org.sonar.core.component.ModuleTest$4.configureModule()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e242" source="org.sonar.core.component.ModuleTest$4.configureModule()" target="org.sonar.core.component.Module.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e243" source="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()" target="org.sonar.core.component.ModuleTest$4()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e244" source="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()" target="org.sonar.core.component.Module()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e245" source="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()" target="org.sonar.core.component.Module.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e246" source="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()" target="org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e247" source="org.sonar.core.component.ModuleTest.add_method_filters_out_null_inside_vararg_parameter()" target="org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e248" source="org.sonar.core.component.ModuleTest$3()" target="org.sonar.core.component.Module()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e249" source="org.sonar.core.component.Module.configureModule()" target="org.sonar.core.component.ModuleTest$3.configureModule()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e250" source="org.sonar.core.component.ModuleTest$3.configureModule()" target="org.sonar.core.component.Module.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e251" source="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()" target="org.sonar.core.component.ModuleTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e252" source="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()" target="org.sonar.core.component.Module()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e253" source="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()" target="org.sonar.core.component.Module.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e254" source="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()" target="org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e255" source="org.sonar.core.component.ModuleTest.add_method_supports_null_and_adds_nothing_to_container()" target="org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e256" source="org.sonar.core.component.ModuleTest$1()" target="org.sonar.core.component.Module()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e257" source="org.sonar.core.component.Module.configureModule()" target="org.sonar.core.component.ModuleTest$1.configureModule()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e258" source="org.sonar.core.component.ModuleTest.configure_throws_NPE_if_container_is_empty()" target="org.sonar.core.component.ModuleTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e259" source="org.sonar.core.component.ModuleTest.configure_throws_NPE_if_container_is_empty()" target="org.sonar.core.component.Module()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e260" source="org.sonar.core.component.ModuleTest.configure_throws_NPE_if_container_is_empty()" target="org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e261" source="org.sonar.core.component.ModuleTest$2()" target="org.sonar.core.component.Module()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e262" source="org.sonar.core.component.Module.configureModule()" target="org.sonar.core.component.ModuleTest$2.configureModule()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e263" source="org.sonar.core.component.ModuleTest.module_with_empty_configureModule_method_adds_no_component()" target="org.sonar.core.component.ModuleTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e264" source="org.sonar.core.component.ModuleTest.module_with_empty_configureModule_method_adds_no_component()" target="org.sonar.core.component.Module()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e265" source="org.sonar.core.component.ModuleTest.module_with_empty_configureModule_method_adds_no_component()" target="org.sonar.core.component.Module.configure(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e266" source="org.sonar.core.component.ModuleTest.module_with_empty_configureModule_method_adds_no_component()" target="org.sonar.core.component.ModuleTest.sizeOf(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e267" source="org.sonar.core.component.SnapshotDto.getRootIdOrSelf()" target="org.sonar.core.component.SnapshotDto.getRootId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e268" source="org.sonar.core.component.SnapshotDto.getRootIdOrSelf()" target="org.sonar.core.component.SnapshotDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e269" source="org.sonar.core.component.SnapshotDtoTest.getRootIdOrSelf_return_own_id_when_root_id_is_null()" target="org.sonar.core.component.SnapshotDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e270" source="org.sonar.core.component.SnapshotDtoTest.getRootIdOrSelf_return_own_id_when_root_id_is_null()" target="org.sonar.core.component.SnapshotDto.setRootId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e271" source="org.sonar.core.component.SnapshotDtoTest.getRootIdOrSelf_return_own_id_when_root_id_is_null()" target="org.sonar.core.component.SnapshotDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e272" source="org.sonar.core.component.SnapshotDtoTest.getRootIdOrSelf_return_own_id_when_root_id_is_null()" target="org.sonar.core.component.SnapshotDto.getRootIdOrSelf()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e273" source="org.sonar.core.component.SnapshotDtoTest.get_root_id_if_when_it_is_not_null()" target="org.sonar.core.component.SnapshotDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e274" source="org.sonar.core.component.SnapshotDtoTest.get_root_id_if_when_it_is_not_null()" target="org.sonar.core.component.SnapshotDto.setRootId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e275" source="org.sonar.core.component.SnapshotDtoTest.get_root_id_if_when_it_is_not_null()" target="org.sonar.core.component.SnapshotDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e276" source="org.sonar.core.component.SnapshotDtoTest.get_root_id_if_when_it_is_not_null()" target="org.sonar.core.component.SnapshotDto.getRootIdOrSelf()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e277" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e278" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e279" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setParentId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e280" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setRootId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e281" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setRootProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e282" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setBuildDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e283" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setComponentId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e284" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setLast(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e285" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setScope(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e286" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e287" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setVersion(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e288" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e289" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setDepth(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e290" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setPeriodMode(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e291" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setPeriodParam(int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e292" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.setPeriodDate(int,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e293" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e294" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getParentId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e295" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getRootId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e296" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getRootProjectId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e297" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getBuildDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e298" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getComponentId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e299" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getLast()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e300" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getScope()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e301" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getQualifier()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e302" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e303" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e304" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getDepth()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e305" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getPeriodMode(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e306" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getPeriodModeParameter(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e307" source="org.sonar.core.component.SnapshotDtoTest.test_getter_and_setter()" target="org.sonar.core.component.SnapshotDto.getPeriodDate(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e308" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e309" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e310" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e311" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.setCategory(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e312" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e313" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.setData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e314" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.setDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e315" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e316" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.setSnapshotId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e317" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e318" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e319" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e320" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.getCategory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e321" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e322" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.getData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e323" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.getComponentUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e324" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.getSnapshotId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e325" source="org.sonar.core.event.EventDtoTest.test_getters_and_setters()" target="org.sonar.core.event.EventDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e326" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e327" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e328" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e329" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setShortName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e330" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e331" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setDomain(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e332" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setValueType(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e333" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setQualitative(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e334" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setUserManaged(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e335" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setWorstValue(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e336" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setBestValue(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e337" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setOptimizedBestValue(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e338" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setDirection(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e339" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setHidden(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e340" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setDeleteHistoricalData(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e341" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.setEnabled(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e342" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e343" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e344" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.getShortName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e345" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e346" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.getDomain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e347" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.getValueType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e348" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.isQualitative()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e349" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.isUserManaged()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e350" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.getWorstValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e351" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.getBestValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e352" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.isOptimizedBestValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e353" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.getDirection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e354" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.isHidden()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e355" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.isDeleteHistoricalData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e356" source="org.sonar.core.metric.db.MetricDtoTest.getters_and_setters()" target="org.sonar.core.metric.db.MetricDto.isEnabled()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e357" source="org.sonar.core.i18n.DefaultI18n(org.sonar.core.platform.PluginRepository,org.sonar.api.utils.System2)" target="org.sonar.core.i18n.DefaultI18n$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e358" source="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,java.util.Date,java.util.Date)" target="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e359" source="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e360" source="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e361" source="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e362" source="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e363" source="org.sonar.core.i18n.DefaultI18n.ageFromNow(java.util.Locale,java.util.Date)" target="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e364" source="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])" target="org.sonar.core.i18n.DefaultI18n.formatMessage(java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e365" source="org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)" target="org.sonar.core.i18n.DefaultI18n.readInputStream(java.lang.String,java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e366" source="org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)" target="org.sonar.core.i18n.DefaultI18n.initPlugin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e367" source="org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)" target="org.sonar.core.platform.PluginRepository.getPluginInfos()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e368" source="org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e369" source="org.sonar.core.i18n.DefaultI18n.start()" target="org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e370" source="org.sonar.core.i18n.DefaultI18n.start()" target="org.sonar.core.i18n.I18nClassloader(org.sonar.core.platform.PluginRepository)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e371" source="org.sonar.core.i18n.DefaultI18nTest.newPlugin(java.lang.String)" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e372" source="org.sonar.core.i18n.DefaultI18nTest.before()" target="org.sonar.core.i18n.DefaultI18nTest.newPlugin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e373" source="org.sonar.core.i18n.DefaultI18nTest.before()" target="org.sonar.core.platform.PluginRepository.getPluginInfos()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e374" source="org.sonar.core.i18n.DefaultI18nTest.before()" target="org.sonar.core.i18n.DefaultI18n(org.sonar.core.platform.PluginRepository,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e375" source="org.sonar.core.i18n.DefaultI18nTest.before()" target="org.sonar.core.i18n.DefaultI18n.doStart(java.lang.ClassLoader)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e376" source="org.sonar.core.i18n.DefaultI18nTest.fallback_to_default_locale()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e377" source="org.sonar.core.i18n.DefaultI18nTest.format_date()" target="org.sonar.core.i18n.DefaultI18n.formatDate(java.util.Locale,java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e378" source="org.sonar.core.i18n.DefaultI18nTest.format_date_time()" target="org.sonar.core.i18n.DefaultI18n.formatDateTime(java.util.Locale,java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e379" source="org.sonar.core.i18n.DefaultI18nTest.format_double()" target="org.sonar.core.i18n.DefaultI18n.formatDouble(java.util.Locale,java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e380" source="org.sonar.core.i18n.DefaultI18nTest.format_integer()" target="org.sonar.core.i18n.DefaultI18n.formatInteger(java.util.Locale,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e381" source="org.sonar.core.i18n.DefaultI18nTest.format_message_with_parameters()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e382" source="org.sonar.core.i18n.DefaultI18nTest.get_age_from_now()" target="org.sonar.core.i18n.DefaultI18n.ageFromNow(java.util.Locale,java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e383" source="org.sonar.core.i18n.DefaultI18nTest.get_age_with_dates()" target="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,java.util.Date,java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e384" source="org.sonar.core.i18n.DefaultI18nTest.get_age_with_duration()" target="org.sonar.core.i18n.DefaultI18n.age(java.util.Locale,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e385" source="org.sonar.core.i18n.DefaultI18nTest.get_english_labels()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e386" source="org.sonar.core.i18n.DefaultI18nTest.get_english_labels_when_default_locale_is_not_english()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e387" source="org.sonar.core.i18n.DefaultI18nTest.get_french_label_if_swiss_country()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e388" source="org.sonar.core.i18n.DefaultI18nTest.get_labels_from_french_pack()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e389" source="org.sonar.core.i18n.DefaultI18nTest.introspect_all_available_properties()" target="org.sonar.core.i18n.DefaultI18n.getPropertyKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e390" source="org.sonar.core.i18n.DefaultI18nTest.load_core_bundle()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e391" source="org.sonar.core.i18n.DefaultI18nTest.return_default_value_if_missing_key()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e392" source="org.sonar.core.i18n.DefaultI18nTest.return_null_if_file_not_found()" target="org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e393" source="org.sonar.core.i18n.DefaultI18nTest.return_null_if_rule_not_internationalized()" target="org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e394" source="org.sonar.core.i18n.DefaultI18nTest.use_default_locale_if_missing_value_in_localized_bundle()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e395" source="org.sonar.core.i18n.DurationLabel.getMessage(double,double,double,double,double)" target="org.sonar.core.i18n.DurationLabel.message(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e396" source="org.sonar.core.i18n.DurationLabel.getMessage(double,double,double,double,double)" target="org.sonar.core.i18n.DurationLabel.message(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e397" source="org.sonar.core.i18n.DurationLabel.label(long)" target="org.sonar.core.i18n.DurationLabel.getMessage(double,double,double,double,double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e398" source="org.sonar.core.i18n.DurationLabel.message(java.lang.String)" target="org.sonar.core.i18n.DurationLabel.message(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e399" source="org.sonar.core.i18n.DurationLabel.message(java.lang.String,java.lang.Long)" target="org.sonar.core.i18n.DurationLabel$Result(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e400" source="org.sonar.core.i18n.DurationLabelTest.age_in_day()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e401" source="org.sonar.core.i18n.DurationLabelTest.age_in_day()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e402" source="org.sonar.core.i18n.DurationLabelTest.age_in_day()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e403" source="org.sonar.core.i18n.DurationLabelTest.age_in_day()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e404" source="org.sonar.core.i18n.DurationLabelTest.age_in_day()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e405" source="org.sonar.core.i18n.DurationLabelTest.age_in_days()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e406" source="org.sonar.core.i18n.DurationLabelTest.age_in_days()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e407" source="org.sonar.core.i18n.DurationLabelTest.age_in_days()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e408" source="org.sonar.core.i18n.DurationLabelTest.age_in_days()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e409" source="org.sonar.core.i18n.DurationLabelTest.age_in_days()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e410" source="org.sonar.core.i18n.DurationLabelTest.age_in_hour()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e411" source="org.sonar.core.i18n.DurationLabelTest.age_in_hour()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e412" source="org.sonar.core.i18n.DurationLabelTest.age_in_hour()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e413" source="org.sonar.core.i18n.DurationLabelTest.age_in_hour()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e414" source="org.sonar.core.i18n.DurationLabelTest.age_in_hour()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e415" source="org.sonar.core.i18n.DurationLabelTest.age_in_hours()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e416" source="org.sonar.core.i18n.DurationLabelTest.age_in_hours()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e417" source="org.sonar.core.i18n.DurationLabelTest.age_in_hours()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e418" source="org.sonar.core.i18n.DurationLabelTest.age_in_hours()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e419" source="org.sonar.core.i18n.DurationLabelTest.age_in_hours()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e420" source="org.sonar.core.i18n.DurationLabelTest.age_in_minute()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e421" source="org.sonar.core.i18n.DurationLabelTest.age_in_minute()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e422" source="org.sonar.core.i18n.DurationLabelTest.age_in_minute()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e423" source="org.sonar.core.i18n.DurationLabelTest.age_in_minute()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e424" source="org.sonar.core.i18n.DurationLabelTest.age_in_minute()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e425" source="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e426" source="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e427" source="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e428" source="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e429" source="org.sonar.core.i18n.DurationLabelTest.age_in_minutes()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e430" source="org.sonar.core.i18n.DurationLabelTest.age_in_month()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e431" source="org.sonar.core.i18n.DurationLabelTest.age_in_month()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e432" source="org.sonar.core.i18n.DurationLabelTest.age_in_month()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e433" source="org.sonar.core.i18n.DurationLabelTest.age_in_month()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e434" source="org.sonar.core.i18n.DurationLabelTest.age_in_month()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e435" source="org.sonar.core.i18n.DurationLabelTest.age_in_months()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e436" source="org.sonar.core.i18n.DurationLabelTest.age_in_months()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e437" source="org.sonar.core.i18n.DurationLabelTest.age_in_months()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e438" source="org.sonar.core.i18n.DurationLabelTest.age_in_months()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e439" source="org.sonar.core.i18n.DurationLabelTest.age_in_months()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e440" source="org.sonar.core.i18n.DurationLabelTest.age_in_seconds()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e441" source="org.sonar.core.i18n.DurationLabelTest.age_in_seconds()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e442" source="org.sonar.core.i18n.DurationLabelTest.age_in_seconds()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e443" source="org.sonar.core.i18n.DurationLabelTest.year_ago()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e444" source="org.sonar.core.i18n.DurationLabelTest.year_ago()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e445" source="org.sonar.core.i18n.DurationLabelTest.year_ago()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e446" source="org.sonar.core.i18n.DurationLabelTest.year_ago()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e447" source="org.sonar.core.i18n.DurationLabelTest.year_ago()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e448" source="org.sonar.core.i18n.DurationLabelTest.years_ago()" target="org.sonar.core.i18n.DurationLabel.label(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e449" source="org.sonar.core.i18n.DurationLabelTest.years_ago()" target="org.sonar.core.i18n.DurationLabelTest.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e450" source="org.sonar.core.i18n.DurationLabelTest.years_ago()" target="org.sonar.core.i18n.DurationLabelTest.ago(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e451" source="org.sonar.core.i18n.DurationLabelTest.years_ago()" target="org.sonar.core.i18n.DurationLabel$Result.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e452" source="org.sonar.core.i18n.DurationLabelTest.years_ago()" target="org.sonar.core.i18n.DurationLabel$Result.value()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e453" source="org.sonar.core.i18n.I18nClassloader(org.sonar.core.platform.PluginRepository)" target="org.sonar.core.i18n.I18nClassloader(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e454" source="org.sonar.core.i18n.I18nClassloader(org.sonar.core.platform.PluginRepository)" target="org.sonar.core.i18n.I18nClassloader.allPluginClassloaders(org.sonar.core.platform.PluginRepository)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e455" source="org.sonar.core.i18n.I18nClassloader.allPluginClassloaders(org.sonar.core.platform.PluginRepository)" target="org.sonar.core.platform.PluginRepository.getPluginInfos()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e456" source="org.sonar.core.i18n.I18nClassloader.allPluginClassloaders(org.sonar.core.platform.PluginRepository)" target="org.sonar.core.platform.PluginRepository.getPluginInstance(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e457" source="org.sonar.core.i18n.I18nClassloader.allPluginClassloaders(org.sonar.core.platform.PluginRepository)" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e458" source="org.sonar.core.i18n.I18nClassloaderTest.newCheckstyleClassloader()" target="org.sonar.core.i18n.I18nClassloaderTest.newClassLoader(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e459" source="org.sonar.core.i18n.I18nClassloaderTest.aggregate_plugin_classloaders()" target="org.sonar.core.i18n.I18nClassloaderTest.newCheckstyleClassloader()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e460" source="org.sonar.core.i18n.I18nClassloaderTest.aggregate_plugin_classloaders()" target="org.sonar.core.i18n.I18nClassloader(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e461" source="org.sonar.core.i18n.I18nClassloaderTest.aggregate_plugin_classloaders()" target="org.sonar.core.i18n.I18nClassloader.getResource(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e462" source="org.sonar.core.i18n.I18nClassloaderTest.contain_its_own_classloader()" target="org.sonar.core.i18n.I18nClassloader.getResource(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e463" source="org.sonar.core.i18n.I18nClassloaderTest.init()" target="org.sonar.core.i18n.I18nClassloader(org.sonar.core.platform.PluginRepository)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e464" source="org.sonar.core.i18n.I18nClassloaderTest.override_toString()" target="org.sonar.core.i18n.I18nClassloader.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e465" source="org.sonar.core.i18n.I18nClassloaderTest.return_null_if_resource_not_found()" target="org.sonar.core.i18n.I18nClassloader.getResource(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e466" source="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String)" target="org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e467" source="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String)" target="org.sonar.core.i18n.RuleI18nManager.lookUpDescriptionInFormerLocation(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e468" source="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String,java.util.Locale)" target="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e469" source="org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String)" target="org.sonar.core.i18n.RuleI18nManager.message(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e470" source="org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String,java.util.Locale)" target="org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e471" source="org.sonar.core.i18n.RuleI18nManager.getName(org.sonar.api.rules.Rule)" target="org.sonar.core.i18n.RuleI18nManager.message(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e472" source="org.sonar.core.i18n.RuleI18nManager.getName(org.sonar.api.rules.Rule,java.util.Locale)" target="org.sonar.core.i18n.RuleI18nManager.getName(org.sonar.api.rules.Rule)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e473" source="org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.i18n.RuleI18nManager.message(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e474" source="org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String,java.util.Locale)" target="org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e475" source="org.sonar.core.i18n.RuleI18nManager.lookUpDescriptionInFormerLocation(java.lang.String,java.lang.String)" target="org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e476" source="org.sonar.core.i18n.RuleI18nManager.message(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e477" source="org.sonar.core.i18n.RuleI18nManagerTest.shoudlReturnNullIfMissingDescription()" target="org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e478" source="org.sonar.core.i18n.RuleI18nManagerTest.shoudlReturnNullIfMissingDescription()" target="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String,java.util.Locale)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e479" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldBeRuleKey()" target="org.sonar.core.i18n.RuleI18nManager.isRuleProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e480" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFile()" target="org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e481" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFile()" target="org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e482" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFile()" target="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String,java.util.Locale)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e483" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFileWithBackwardCompatibility()" target="org.sonar.core.i18n.DefaultI18n.messageFromFile(java.util.Locale,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e484" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFileWithBackwardCompatibility()" target="org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e485" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetDescriptionFromFileWithBackwardCompatibility()" target="org.sonar.core.i18n.RuleI18nManager.getDescription(java.lang.String,java.lang.String,java.util.Locale)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e486" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetName()" target="org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e487" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetName()" target="org.sonar.core.i18n.RuleI18nManager.getName(java.lang.String,java.lang.String,java.util.Locale)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e488" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetName()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e489" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetParamDescription()" target="org.sonar.core.i18n.RuleI18nManager(org.sonar.core.i18n.DefaultI18n)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e490" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetParamDescription()" target="org.sonar.core.i18n.RuleI18nManager.getParamDescription(java.lang.String,java.lang.String,java.lang.String,java.util.Locale)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e491" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldGetParamDescription()" target="org.sonar.core.i18n.DefaultI18n.message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e492" source="org.sonar.core.i18n.RuleI18nManagerTest.shouldNotBeRuleKey()" target="org.sonar.core.i18n.RuleI18nManager.isRuleProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e493" source="org.sonar.core.computation.db.AnalysisReportDto$Status#PENDING" target="org.sonar.core.computation.db.AnalysisReportDto$Status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e494" source="org.sonar.core.computation.db.AnalysisReportDto$Status#WORKING" target="org.sonar.core.computation.db.AnalysisReportDto$Status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e495" source="org.sonar.core.computation.db.AnalysisReportDto$Status#SUCCESS" target="org.sonar.core.computation.db.AnalysisReportDto$Status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e496" source="org.sonar.core.computation.db.AnalysisReportDto$Status#FAILED" target="org.sonar.core.computation.db.AnalysisReportDto$Status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e497" source="org.sonar.core.computation.db.AnalysisReportDto$Status#CANCELLED" target="org.sonar.core.computation.db.AnalysisReportDto$Status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e498" source="org.sonar.core.computation.db.AnalysisReportDto.toString()" target="org.sonar.core.computation.db.AnalysisReportDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e499" source="org.sonar.core.computation.db.AnalysisReportDto.toString()" target="org.sonar.core.computation.db.AnalysisReportDto.getProjectKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e500" source="org.sonar.core.computation.db.AnalysisReportDto.toString()" target="org.sonar.core.computation.db.AnalysisReportDto.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e501" source="org.sonar.core.computation.db.AnalysisReportDto.toString()" target="org.sonar.core.computation.db.AnalysisReportDto.getStatus()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e502" source="org.sonar.core.computation.db.AnalysisReportDto.toString()" target="org.sonar.core.computation.db.AnalysisReportDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e503" source="org.sonar.core.computation.db.AnalysisReportDto.toString()" target="org.sonar.core.computation.db.AnalysisReportDto.getStartedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e504" source="org.sonar.core.computation.db.AnalysisReportDto.toString()" target="org.sonar.core.computation.db.AnalysisReportDto.getFinishedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e505" source="org.sonar.core.computation.db.AnalysisReportDto.newForTests(java.lang.Long)" target="org.sonar.core.computation.db.AnalysisReportDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e506" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.selectProjectSnapshots(long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e507" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.clean(org.sonar.core.persistence.DbSession,long,org.sonar.api.config.Settings)" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e508" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.clean(org.sonar.core.persistence.DbSession,long,org.sonar.api.config.Settings)" target="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e509" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.clean(org.sonar.core.persistence.DbSession,long,org.sonar.api.config.Settings)" target="org.sonar.core.computation.dbcleaner.period.Filters.all()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e510" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeableSnapshotDto.getDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e511" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e512" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e513" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeSnapshotQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e514" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeSnapshotQuery.setRootSnapshotId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e515" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e516" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.selectProjectSnapshots(long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e517" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.computation.dbcleaner.period.Filter.log()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e518" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.delete(java.util.List,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e519" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)" target="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e520" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$1.matches(java.lang.Object)" target="org.sonar.core.purge.PurgeSnapshotQuery.getRootSnapshotId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e521" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newRootSnapshotQuery()" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e522" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newRootSnapshotQuery()" target="org.sonar.core.purge.PurgeSnapshotQuery.getRootSnapshotId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e523" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$2.matches(java.lang.Object)" target="org.sonar.core.purge.PurgeSnapshotQuery.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e524" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newSnapshotIdQuery()" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e525" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newSnapshotIdQuery()" target="org.sonar.core.purge.PurgeSnapshotQuery.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e526" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newLazyFilter()" target="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e527" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newLazyFilter()" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e528" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e529" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.purge.PurgeableSnapshotDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e530" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e531" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.purge.PurgeableSnapshotDto.setDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e532" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newLazyFilter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e533" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner(org.sonar.core.purge.PurgeDao)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e534" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleaner.doClean(long,java.util.List,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e535" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.computation.dbcleaner.period.Filter.log()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e536" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e537" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newRootSnapshotQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e538" source="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.doClean()" target="org.sonar.core.computation.dbcleaner.period.DefaultPeriodCleanerTest.newSnapshotIdQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e539" source="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)" target="org.sonar.core.computation.dbcleaner.period.DeleteAllFilter.filter(java.util.List)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e540" source="org.sonar.core.computation.dbcleaner.period.DeleteAllFilter.filter(java.util.List)" target="org.sonar.core.purge.PurgeableSnapshotDto.getDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e541" source="org.sonar.core.computation.dbcleaner.period.Filter.log()" target="org.sonar.core.computation.dbcleaner.period.DeleteAllFilter.log()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e542" source="org.sonar.core.computation.dbcleaner.period.DeleteAllFilterTest.shouldDeleteAllSnapshotsPriorToDate()" target="org.sonar.core.computation.dbcleaner.period.DeleteAllFilter(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e543" source="org.sonar.core.computation.dbcleaner.period.DeleteAllFilterTest.shouldDeleteAllSnapshotsPriorToDate()" target="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e544" source="org.sonar.core.computation.dbcleaner.period.DeleteAllFilterTest.shouldDeleteAllSnapshotsPriorToDate()" target="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e545" source="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)" target="org.sonar.core.computation.dbcleaner.period.Filters.getDateFromHours(org.sonar.api.config.Settings,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e546" source="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)" target="org.sonar.core.computation.dbcleaner.period.Filters.getDateFromWeeks(org.sonar.api.config.Settings,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e547" source="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilter(java.util.Date,java.util.Date,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e548" source="org.sonar.core.computation.dbcleaner.period.Filters(org.sonar.api.config.Settings)" target="org.sonar.core.computation.dbcleaner.period.DeleteAllFilter(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e549" source="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)" target="org.sonar.core.purge.PurgeableSnapshotDto.getDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e550" source="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)" target="org.sonar.core.computation.dbcleaner.period.Interval()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e551" source="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)" target="org.sonar.core.computation.dbcleaner.period.Interval.add(org.sonar.core.purge.PurgeableSnapshotDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e552" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)" target="org.sonar.core.computation.dbcleaner.period.Interval.count()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e553" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)" target="org.sonar.core.computation.dbcleaner.period.Interval.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e554" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)" target="org.sonar.core.purge.PurgeableSnapshotDto.getDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e555" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldGroupByIntervals()" target="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e556" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldGroupByIntervals()" target="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e557" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldGroupByIntervals()" target="org.sonar.core.computation.dbcleaner.period.Interval.count()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e558" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldGroupByIntervals()" target="org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e559" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()" target="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDateTime(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e560" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()" target="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e561" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()" target="org.sonar.core.computation.dbcleaner.period.Interval.count()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e562" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()" target="org.sonar.core.computation.dbcleaner.period.Interval.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e563" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldIgnoreTimeWhenGroupingByIntervals()" target="org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e564" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldNotJoinMonthsOfDifferentYears()" target="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e565" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldNotJoinMonthsOfDifferentYears()" target="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e566" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldNotJoinMonthsOfDifferentYears()" target="org.sonar.core.computation.dbcleaner.period.Interval.count()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e567" source="org.sonar.core.computation.dbcleaner.period.IntervalTest.shouldNotJoinMonthsOfDifferentYears()" target="org.sonar.core.computation.dbcleaner.period.IntervalTest.calendarField(org.sonar.core.computation.dbcleaner.period.Interval,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e568" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.isDeletable(org.sonar.core.purge.PurgeableSnapshotDto)" target="org.sonar.core.purge.PurgeableSnapshotDto.isLast()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e569" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.isDeletable(org.sonar.core.purge.PurgeableSnapshotDto)" target="org.sonar.core.purge.PurgeableSnapshotDto.hasEvents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e570" source="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.filter(java.util.List)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e571" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.filter(java.util.List)" target="org.sonar.core.computation.dbcleaner.period.Interval.group(java.util.List,java.util.Date,java.util.Date,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e572" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.filter(java.util.List)" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.appendSnapshotsToDelete(org.sonar.core.computation.dbcleaner.period.Interval,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e573" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.appendSnapshotsToDelete(org.sonar.core.computation.dbcleaner.period.Interval,java.util.List)" target="org.sonar.core.computation.dbcleaner.period.Interval.count()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e574" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.appendSnapshotsToDelete(org.sonar.core.computation.dbcleaner.period.Interval,java.util.List)" target="org.sonar.core.computation.dbcleaner.period.Interval.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e575" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.appendSnapshotsToDelete(org.sonar.core.computation.dbcleaner.period.Interval,java.util.List)" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.isDeletable(org.sonar.core.purge.PurgeableSnapshotDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e576" source="org.sonar.core.computation.dbcleaner.period.Filter.log()" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.log()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e577" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest$1.apply(org.sonar.core.purge.PurgeableSnapshotDto)" target="org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e578" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.snapshotIds(java.util.List)" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e579" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.snapshotIds(java.util.List)" target="org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e580" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilter(java.util.Date,java.util.Date,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e581" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()" target="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e582" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()" target="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e583" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()" target="org.sonar.core.purge.PurgeableSnapshotDto.setLast(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e584" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()" target="org.sonar.core.purge.PurgeableSnapshotDto.setHasEvents(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e585" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldKeepNonDeletableSnapshots()" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.snapshotIds(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e586" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldOnlyOneSnapshotPerInterval()" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilter(java.util.Date,java.util.Date,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e587" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldOnlyOneSnapshotPerInterval()" target="org.sonar.core.computation.dbcleaner.period.Filter.filter(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e588" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldOnlyOneSnapshotPerInterval()" target="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e589" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.shouldOnlyOneSnapshotPerInterval()" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.snapshotIds(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e590" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.test_isDeletable()" target="org.sonar.core.computation.dbcleaner.period.KeepOneFilter.isDeletable(org.sonar.core.purge.PurgeableSnapshotDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e591" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.test_isDeletable()" target="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e592" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.test_isDeletable()" target="org.sonar.core.purge.PurgeableSnapshotDto.setLast(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e593" source="org.sonar.core.computation.dbcleaner.period.KeepOneFilterTest.test_isDeletable()" target="org.sonar.core.purge.PurgeableSnapshotDto.setHasEvents(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e594" source="org.sonar.core.computation.dbcleaner.DataCleanerPropertiesTest.shouldGetExtensions()" target="org.sonar.core.computation.dbcleaner.DataCleanerProperties.all()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e595" source="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)" target="org.sonar.core.purge.PurgeableSnapshotDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e596" source="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)" target="org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e597" source="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDate(long,java.lang.String)" target="org.sonar.core.purge.PurgeableSnapshotDto.setDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e598" source="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDateTime(long,java.lang.String)" target="org.sonar.core.purge.PurgeableSnapshotDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e599" source="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDateTime(long,java.lang.String)" target="org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e600" source="org.sonar.core.computation.dbcleaner.DbCleanerTestUtils.createSnapshotWithDateTime(long,java.lang.String)" target="org.sonar.core.purge.PurgeableSnapshotDto.setDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e601" source="org.sonar.core.duplication.DuplicationDao.selectCandidates(int,java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e602" source="org.sonar.core.duplication.DuplicationDao.selectCandidates(int,java.lang.Integer,java.lang.String)" target="org.sonar.core.duplication.DuplicationMapper.selectCandidates(int,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e603" source="org.sonar.core.duplication.DuplicationDao.selectCandidates(int,java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e604" source="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e605" source="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e606" source="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)" target="org.sonar.core.duplication.DuplicationMapper.batchInsert(org.sonar.core.duplication.DuplicationUnitDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e607" source="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e608" source="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e609" source="org.sonar.core.duplication.DuplicationDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e610" source="org.sonar.core.duplication.DuplicationDaoTest.createDao()" target="org.sonar.core.duplication.DuplicationDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e611" source="org.sonar.core.duplication.DuplicationDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e612" source="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e613" source="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()" target="org.sonar.core.duplication.DuplicationDao.selectCandidates(int,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e614" source="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()" target="org.sonar.core.duplication.DuplicationUnitDto.getResourceKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e615" source="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()" target="org.sonar.core.duplication.DuplicationUnitDto.getHash()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e616" source="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()" target="org.sonar.core.duplication.DuplicationUnitDto.getIndexInFile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e617" source="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()" target="org.sonar.core.duplication.DuplicationUnitDto.getStartLine()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e618" source="org.sonar.core.duplication.DuplicationDaoTest.shouldGetByHash()" target="org.sonar.core.duplication.DuplicationUnitDto.getEndLine()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e619" source="org.sonar.core.duplication.DuplicationDaoTest.shouldInsert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e620" source="org.sonar.core.duplication.DuplicationDaoTest.shouldInsert()" target="org.sonar.core.duplication.DuplicationDao.insert(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e621" source="org.sonar.core.duplication.DuplicationDaoTest.shouldInsert()" target="org.sonar.core.duplication.DuplicationUnitDto(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e622" source="org.sonar.core.duplication.DuplicationDaoTest.shouldInsert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e623" source="org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e624" source="org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)" target="org.sonar.core.issue.db.ActionPlanMapper.findByKeys(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e625" source="org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e626" source="org.sonar.core.issue.db.ActionPlanDao.findByNameAndProjectId(java.lang.String,java.lang.Long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e627" source="org.sonar.core.issue.db.ActionPlanDao.findByNameAndProjectId(java.lang.String,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanMapper.findByNameAndProjectId(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e628" source="org.sonar.core.issue.db.ActionPlanDao.findByNameAndProjectId(java.lang.String,java.lang.Long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e629" source="org.sonar.core.issue.db.ActionPlanDao.findOpenByProjectId(java.lang.Long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e630" source="org.sonar.core.issue.db.ActionPlanDao.findOpenByProjectId(java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanMapper.findOpenByProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e631" source="org.sonar.core.issue.db.ActionPlanDao.findOpenByProjectId(java.lang.Long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e632" source="org.sonar.core.issue.db.ActionPlanDao.findByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e633" source="org.sonar.core.issue.db.ActionPlanDao.findByKey(java.lang.String)" target="org.sonar.core.issue.db.ActionPlanMapper.findByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e634" source="org.sonar.core.issue.db.ActionPlanDao.findByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e635" source="org.sonar.core.issue.db.ActionPlanDao.delete(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e636" source="org.sonar.core.issue.db.ActionPlanDao.delete(java.lang.String)" target="org.sonar.core.issue.db.ActionPlanMapper.delete(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e637" source="org.sonar.core.issue.db.ActionPlanDao.delete(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e638" source="org.sonar.core.issue.db.ActionPlanDao.save(org.sonar.core.issue.db.ActionPlanDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e639" source="org.sonar.core.issue.db.ActionPlanDao.save(org.sonar.core.issue.db.ActionPlanDto)" target="org.sonar.core.issue.db.ActionPlanMapper.insert(org.sonar.core.issue.db.ActionPlanDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e640" source="org.sonar.core.issue.db.ActionPlanDao.save(org.sonar.core.issue.db.ActionPlanDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e641" source="org.sonar.core.issue.db.ActionPlanDao.update(org.sonar.core.issue.db.ActionPlanDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e642" source="org.sonar.core.issue.db.ActionPlanDao.update(org.sonar.core.issue.db.ActionPlanDto)" target="org.sonar.core.issue.db.ActionPlanMapper.update(org.sonar.core.issue.db.ActionPlanDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e643" source="org.sonar.core.issue.db.ActionPlanDao.update(org.sonar.core.issue.db.ActionPlanDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e644" source="org.sonar.core.issue.db.ActionPlanDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e645" source="org.sonar.core.issue.db.ActionPlanDaoTest.createDao()" target="org.sonar.core.issue.db.ActionPlanDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e646" source="org.sonar.core.issue.db.ActionPlanDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e647" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_delete_action_plan()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e648" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_delete_action_plan()" target="org.sonar.core.issue.db.ActionPlanDao.delete(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e649" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_delete_action_plan()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e650" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e651" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_key()" target="org.sonar.core.issue.db.ActionPlanDao.findByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e652" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_key()" target="org.sonar.core.issue.db.ActionPlanDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e653" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_key()" target="org.sonar.core.issue.db.ActionPlanDto.getProjectKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e654" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e655" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys()" target="org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e656" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e657" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e658" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e659" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()" target="org.sonar.core.issue.db.ActionPlanDao.findByKeys(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e660" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_keys_on_huge_number_of_keys()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e661" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_name_and_project_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e662" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_by_name_and_project_id()" target="org.sonar.core.issue.db.ActionPlanDao.findByNameAndProjectId(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e663" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_open_by_project_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e664" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_find_open_by_project_id()" target="org.sonar.core.issue.db.ActionPlanDao.findOpenByProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e665" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e666" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e667" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e668" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e669" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e670" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e671" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e672" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()" target="org.sonar.core.issue.db.ActionPlanDao.save(org.sonar.core.issue.db.ActionPlanDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e673" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_insert_new_action_plan()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e674" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e675" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e676" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e677" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e678" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e679" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e680" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e681" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.issue.db.ActionPlanDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e682" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.issue.db.ActionPlanDao.update(org.sonar.core.issue.db.ActionPlanDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e683" source="org.sonar.core.issue.db.ActionPlanDaoTest.should_update_action_plan()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e684" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e685" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e686" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e687" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan.setProjectKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e688" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e689" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e690" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e691" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e692" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e693" source="org.sonar.core.issue.db.ActionPlanDto.toActionPlan()" target="org.sonar.core.issue.DefaultActionPlan.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e694" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e695" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e696" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e697" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto.setProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e698" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e699" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e700" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto.setDeadLine(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e701" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e702" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e703" source="org.sonar.core.issue.db.ActionPlanDto.toActionDto(org.sonar.api.issue.ActionPlan,java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e704" source="org.sonar.core.issue.db.ActionPlanStatsDao.findByProjectId(java.lang.Long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e705" source="org.sonar.core.issue.db.ActionPlanStatsDao.findByProjectId(java.lang.Long)" target="org.sonar.core.issue.db.ActionPlanStatsMapper.findByProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e706" source="org.sonar.core.issue.db.ActionPlanStatsDao.findByProjectId(java.lang.Long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e707" source="org.sonar.core.issue.db.ActionPlanStatsDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e708" source="org.sonar.core.issue.db.ActionPlanStatsDaoTest.createDao()" target="org.sonar.core.issue.db.ActionPlanStatsDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e709" source="org.sonar.core.issue.db.ActionPlanStatsDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e710" source="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e711" source="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()" target="org.sonar.core.issue.db.ActionPlanStatsDao.findByProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e712" source="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()" target="org.sonar.core.issue.db.ActionPlanStatsDto.getProjectKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e713" source="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()" target="org.sonar.core.issue.db.ActionPlanStatsDto.getTotalIssues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e714" source="org.sonar.core.issue.db.ActionPlanStatsDaoTest.should_find_by_project()" target="org.sonar.core.issue.db.ActionPlanStatsDto.getUnresolvedIssues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e715" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e716" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e717" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.DefaultActionPlan.setProjectKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e718" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.DefaultActionPlan.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e719" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e720" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e721" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.DefaultActionPlan.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e722" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.DefaultActionPlan.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e723" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.DefaultActionPlan.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e724" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.ActionPlanStats.setTotalIssues(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e725" source="org.sonar.core.issue.db.ActionPlanStatsDto.toActionPlanStat()" target="org.sonar.core.issue.ActionPlanStats.setUnresolvedIssues(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e726" source="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e727" source="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e728" source="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)" target="org.sonar.core.issue.db.IssueChangeMapper.delete(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e729" source="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e730" source="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e731" source="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e732" source="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e733" source="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)" target="org.sonar.core.issue.db.IssueChangeMapper.update(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e734" source="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e735" source="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e736" source="org.sonar.core.issue.db.IssueChangeDao.selectByIssuesAndType(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e737" source="org.sonar.core.issue.db.IssueChangeDao.selectByIssuesAndType(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.String)" target="org.sonar.core.issue.db.IssueChangeMapper.selectByIssuesAndType(java.util.List,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e738" source="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e739" source="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)" target="org.sonar.core.issue.db.IssueChangeDao.selectByIssuesAndType(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e740" source="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)" target="org.sonar.core.issue.db.IssueChangeDto.toFieldDiffs()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e741" source="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e742" source="org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.issue.db.IssueChangeDao.selectByIssuesAndType(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e743" source="org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.issue.db.IssueChangeDto.toComment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e744" source="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e745" source="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e746" source="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)" target="org.sonar.core.issue.db.IssueChangeMapper.selectByKeyAndType(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e747" source="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)" target="org.sonar.core.issue.db.IssueChangeDto.toComment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e748" source="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e749" source="org.sonar.core.issue.db.IssueChangeDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.issue.db.IssueChangeDto)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e750" source="org.sonar.core.issue.db.IssueChangeDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.issue.db.IssueChangeDto)" target="org.sonar.core.issue.db.IssueChangeMapper.insert(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e751" source="org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e752" source="org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e753" source="org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e754" source="org.sonar.core.issue.db.IssueChangeDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e755" source="org.sonar.core.issue.db.IssueChangeDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e756" source="org.sonar.core.issue.db.IssueChangeDaoTest.createDao()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e757" source="org.sonar.core.issue.db.IssueChangeDaoTest.createDao()" target="org.sonar.core.issue.db.IssueChangeDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e758" source="org.sonar.core.issue.db.IssueChangeDaoTest.delete()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e759" source="org.sonar.core.issue.db.IssueChangeDaoTest.delete()" target="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e760" source="org.sonar.core.issue.db.IssueChangeDaoTest.delete()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e761" source="org.sonar.core.issue.db.IssueChangeDaoTest.delete_unknown_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e762" source="org.sonar.core.issue.db.IssueChangeDaoTest.delete_unknown_key()" target="org.sonar.core.issue.db.IssueChangeDao.delete(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e763" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e764" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e765" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e766" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e767" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e768" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e769" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e770" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e771" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e772" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e773" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.issue.db.IssueChangeDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e774" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e775" source="org.sonar.core.issue.db.IssueChangeDaoTest.insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e776" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comment_by_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e777" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comment_by_key()" target="org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e778" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e779" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e780" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e781" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()" target="org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e782" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e783" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_empty_input()" target="org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e784" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e785" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e786" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e787" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()" target="org.sonar.core.issue.db.IssueChangeDao.selectCommentsByIssues(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e788" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_comments_by_issues_on_huge_number_of_issues()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e789" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e790" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e791" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.issue.db.IssueChangeDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e792" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.issue.db.IssueChangeDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e793" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.issue.db.IssueChangeDto.getIssueKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e794" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.issue.db.IssueChangeDto.getUserLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e795" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.issue.db.IssueChangeDto.getChangeType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e796" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.issue.db.IssueChangeDto.getChangeData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e797" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.issue.db.IssueChangeDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e798" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module()" target="org.sonar.core.issue.db.IssueChangeDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e799" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module_should_be_sorted_by_creation_date()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e800" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module_should_be_sorted_by_creation_date()" target="org.sonar.core.issue.db.IssueChangeDao.selectChangelogOnNonClosedIssuesByModuleAndType(long,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e801" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_by_module_should_be_sorted_by_creation_date()" target="org.sonar.core.issue.db.IssueChangeDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e802" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_from_issue_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e803" source="org.sonar.core.issue.db.IssueChangeDaoTest.select_issue_changelog_from_issue_key()" target="org.sonar.core.issue.db.IssueChangeDao.selectChangelogByIssue(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e804" source="org.sonar.core.issue.db.IssueChangeDaoTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e805" source="org.sonar.core.issue.db.IssueChangeDaoTest.update()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e806" source="org.sonar.core.issue.db.IssueChangeDaoTest.update()" target="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e807" source="org.sonar.core.issue.db.IssueChangeDaoTest.update()" target="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e808" source="org.sonar.core.issue.db.IssueChangeDaoTest.update()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e809" source="org.sonar.core.issue.db.IssueChangeDaoTest.update()" target="org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e810" source="org.sonar.core.issue.db.IssueChangeDaoTest.update()" target="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e811" source="org.sonar.core.issue.db.IssueChangeDaoTest.update()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e812" source="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e813" source="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()" target="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e814" source="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()" target="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e815" source="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e816" source="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()" target="org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e817" source="org.sonar.core.issue.db.IssueChangeDaoTest.update_unknown_key()" target="org.sonar.core.issue.db.IssueChangeDao.update(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e818" source="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)" target="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e819" source="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)" target="org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e820" source="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)" target="org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e821" source="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)" target="org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e822" source="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)" target="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e823" source="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)" target="org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e824" source="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e825" source="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)" target="org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e826" source="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)" target="org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e827" source="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" target="org.sonar.core.issue.db.IssueChangeDto.newDto(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e828" source="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" target="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e829" source="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" target="org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e830" source="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e831" source="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" target="org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e832" source="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)" target="org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e833" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()" target="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e834" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()" target="org.sonar.core.issue.db.IssueChangeDto.getChangeData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e835" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()" target="org.sonar.core.issue.db.IssueChangeDto.getChangeType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e836" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()" target="org.sonar.core.issue.db.IssueChangeDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e837" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()" target="org.sonar.core.issue.db.IssueChangeDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e838" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()" target="org.sonar.core.issue.db.IssueChangeDto.getIssueChangeCreationDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e839" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()" target="org.sonar.core.issue.db.IssueChangeDto.getIssueKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e840" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment()" target="org.sonar.core.issue.db.IssueChangeDto.getUserLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e841" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment_with_created_at()" target="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e842" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_comment_with_created_at()" target="org.sonar.core.issue.db.IssueChangeDto.getIssueChangeCreationDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e843" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()" target="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e844" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()" target="org.sonar.core.issue.db.IssueChangeDto.getChangeData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e845" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()" target="org.sonar.core.issue.db.IssueChangeDto.getChangeType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e846" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()" target="org.sonar.core.issue.db.IssueChangeDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e847" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()" target="org.sonar.core.issue.db.IssueChangeDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e848" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()" target="org.sonar.core.issue.db.IssueChangeDto.getIssueChangeCreationDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e849" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()" target="org.sonar.core.issue.db.IssueChangeDto.getIssueKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e850" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff()" target="org.sonar.core.issue.db.IssueChangeDto.getUserLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e851" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff_with_created_at()" target="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e852" source="org.sonar.core.issue.db.IssueChangeDtoTest.create_from_diff_with_created_at()" target="org.sonar.core.issue.db.IssueChangeDto.getIssueChangeCreationDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e853" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()" target="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e854" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e855" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e856" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e857" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e858" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e859" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e860" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_comment()" target="org.sonar.core.issue.db.IssueChangeDto.toComment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e861" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()" target="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e862" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()" target="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e863" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()" target="org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e864" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e865" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()" target="org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e866" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()" target="org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e867" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_create_at()" target="org.sonar.core.issue.db.IssueChangeDto.toFieldDiffs()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e868" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()" target="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e869" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()" target="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e870" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()" target="org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e871" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e872" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()" target="org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e873" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()" target="org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e874" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_field_diffs_with_issue_creation_date()" target="org.sonar.core.issue.db.IssueChangeDto.toFieldDiffs()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e875" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_string()" target="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e876" source="org.sonar.core.issue.db.IssueChangeDtoTest.to_string()" target="org.sonar.core.issue.db.IssueChangeDto.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e877" source="org.sonar.core.issue.db.IssueChangeMapperTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e878" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e879" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e880" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e881" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e882" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e883" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e884" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e885" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e886" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.issue.db.IssueChangeMapper.insert(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e887" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_comment()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e888" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e889" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e890" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e891" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeDto.setIssueKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e892" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeType(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e893" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeDto.setChangeData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e894" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e895" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e896" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeDto.setIssueChangeCreationDate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e897" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.issue.db.IssueChangeMapper.insert(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e898" source="org.sonar.core.issue.db.IssueChangeMapperTest.insert_diff()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e899" source="org.sonar.core.issue.db.IssueChangeMapperTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e900" source="org.sonar.core.issue.db.IssueChangeMapperTest.setUp()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e901" source="org.sonar.core.issue.db.IssueChangeMapperTest.tearDown()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e902" source="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e903" source="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)" target="org.sonar.core.issue.db.IssueDao.mapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e904" source="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)" target="org.sonar.core.issue.db.IssueMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e905" source="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e906" source="org.sonar.core.issue.db.IssueDao.mapper(org.sonar.core.persistence.DbSession)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e907" source="org.sonar.core.issue.db.IssueDao.selectNonClosedIssuesByModule(long,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e908" source="org.sonar.core.issue.db.IssueDao.selectNonClosedIssuesByModule(long,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e909" source="org.sonar.core.issue.db.IssueDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e910" source="org.sonar.core.issue.db.IssueDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e911" source="org.sonar.core.issue.db.IssueDaoTest.createDao()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e912" source="org.sonar.core.issue.db.IssueDaoTest.createDao()" target="org.sonar.core.issue.db.IssueDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e913" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e914" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()" target="org.sonar.core.issue.db.IssueDao.selectNonClosedIssuesByModule(long,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e915" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()" target="org.sonar.core.issue.db.IssueDto.getRuleRepo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e916" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()" target="org.sonar.core.issue.db.IssueDto.getRule()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e917" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()" target="org.sonar.core.issue.db.IssueDto.getComponentKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e918" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module()" target="org.sonar.core.issue.db.IssueDto.getProjectKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e919" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e920" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()" target="org.sonar.core.issue.db.IssueDao.selectNonClosedIssuesByModule(long,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e921" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()" target="org.sonar.core.issue.db.IssueDto.getRuleRepo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e922" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()" target="org.sonar.core.issue.db.IssueDto.getRule()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e923" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()" target="org.sonar.core.issue.db.IssueDto.getComponentKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e924" source="org.sonar.core.issue.db.IssueDaoTest.select_non_closed_issues_by_module_on_removed_project()" target="org.sonar.core.issue.db.IssueDto.getProjectKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e925" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e926" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDao.selectByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e927" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e928" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e929" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getRuleId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e930" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getSeverity()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e931" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.isManualSeverity()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e932" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getMessage()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e933" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getLine()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e934" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getEffortToFix()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e935" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getStatus()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e936" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getResolution()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e937" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getChecksum()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e938" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getAuthorLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e939" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getReporter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e940" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getAssignee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e941" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getIssueAttributes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e942" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getIssueCreationDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e943" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getIssueUpdateDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e944" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getIssueCloseDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e945" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e946" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e947" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getRuleRepo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e948" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getRule()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e949" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getComponentUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e950" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getComponentKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e951" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getModuleUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e952" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getModuleUuidPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e953" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getProjectKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e954" source="org.sonar.core.issue.db.IssueDaoTest.should_select_by_key()" target="org.sonar.core.issue.db.IssueDto.getProjectUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e955" source="org.sonar.core.issue.db.IssueDaoTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e956" source="org.sonar.core.issue.db.IssueDto.getKey()" target="org.sonar.core.issue.db.IssueDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e957" source="org.sonar.core.issue.db.IssueDto.toDefaultIssue()" target="org.sonar.core.issue.db.IssueDto.getRuleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e958" source="org.sonar.core.issue.db.IssueDto.toDefaultIssue()" target="org.sonar.core.issue.db.IssueDto.getTags()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e959" source="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e960" source="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)" target="org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e961" source="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)" target="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e962" source="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e963" source="org.sonar.core.issue.db.IssueDto.createFor(org.sonar.api.resources.Project,org.sonar.core.rule.RuleDto)" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e964" source="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)" target="org.sonar.core.component.ComponentDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e965" source="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)" target="org.sonar.core.component.ComponentDto.uuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e966" source="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)" target="org.sonar.core.component.ComponentDto.moduleUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e967" source="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)" target="org.sonar.core.component.ComponentDto.moduleUuidPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e968" source="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)" target="org.sonar.core.component.ComponentDto.path()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e969" source="org.sonar.core.issue.db.IssueDto.setProject(org.sonar.core.component.ComponentDto)" target="org.sonar.core.component.ComponentDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e970" source="org.sonar.core.issue.db.IssueDto.setProject(org.sonar.core.component.ComponentDto)" target="org.sonar.core.component.ComponentDto.uuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e971" source="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e972" source="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleDto.getRuleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e973" source="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleDto.getRepositoryKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e974" source="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleDto.getLanguage()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e975" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e976" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e977" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e978" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e979" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e980" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e981" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e982" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e983" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e984" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e985" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e986" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e987" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e988" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e989" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e990" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setTags(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e991" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e992" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e993" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setModuleUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e994" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e995" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e996" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setProjectKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e997" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e998" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e999" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1000" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setIssueCreationDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1001" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setIssueCloseDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1002" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setIssueUpdateDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1003" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setSelectedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1004" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setCreatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1005" source="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)" target="org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1006" source="org.sonar.core.issue.db.IssueDto.toDtoForServerInsert(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto,int,long)" target="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1007" source="org.sonar.core.issue.db.IssueDto.toDtoForServerInsert(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto,int,long)" target="org.sonar.core.issue.db.IssueDto.setComponent(org.sonar.core.component.ComponentDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1008" source="org.sonar.core.issue.db.IssueDto.toDtoForServerInsert(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto,int,long)" target="org.sonar.core.issue.db.IssueDto.setProject(org.sonar.core.component.ComponentDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1009" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1010" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1011" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1012" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1013" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1014" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1015" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1016" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1017" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1018" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1019" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1020" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1021" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1022" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1023" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1024" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1025" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1026" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setTags(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1027" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1028" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1029" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setModuleUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1030" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1031" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1032" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setProjectKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1033" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setIssueCreationDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1034" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setIssueCloseDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1035" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setIssueUpdateDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1036" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setSelectedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1037" source="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)" target="org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1038" source="org.sonar.core.issue.db.IssueDtoTest.set_data_check_maximal_length()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1039" source="org.sonar.core.issue.db.IssueDtoTest.set_data_check_maximal_length()" target="org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1040" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1041" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1042" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1043" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1044" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1045" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1046" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1047" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1048" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setModuleUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1049" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1050" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setProjectKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1051" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1052" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1053" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1054" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1055" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1056" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1057" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1058" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1059" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1060" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1061" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1062" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1063" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setIssueCreationDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1064" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setIssueUpdateDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1065" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.setIssueCloseDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1066" source="org.sonar.core.issue.db.IssueDtoTest.set_issue_fields()" target="org.sonar.core.issue.db.IssueDto.toDefaultIssue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1067" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1068" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1069" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.issue.db.IssueDto.setRule(org.sonar.core.rule.RuleDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1070" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.rule.RuleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1071" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.rule.RuleDto.setId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1072" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.rule.RuleDto.setRuleKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1073" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.rule.RuleDto.setRepositoryKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1074" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.issue.db.IssueDto.setLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1075" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.issue.db.IssueDto.getRuleId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1076" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.issue.db.IssueDto.getRuleRepo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1077" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.issue.db.IssueDto.getRule()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1078" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.issue.db.IssueDto.getRuleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1079" source="org.sonar.core.issue.db.IssueDtoTest.set_rule()" target="org.sonar.core.issue.db.IssueDto.getLanguage()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1080" source="org.sonar.core.issue.db.IssueDtoTest.set_tags()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1081" source="org.sonar.core.issue.db.IssueDtoTest.set_tags()" target="org.sonar.core.issue.db.IssueDto.getTags()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1082" source="org.sonar.core.issue.db.IssueDtoTest.set_tags()" target="org.sonar.core.issue.db.IssueDto.getTagsString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1083" source="org.sonar.core.issue.db.IssueDtoTest.set_tags()" target="org.sonar.core.issue.db.IssueDto.setTags(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1084" source="org.sonar.core.issue.db.IssueDtoTest.set_tags()" target="org.sonar.core.issue.db.IssueDto.setTagsString(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1085" source="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1086" source="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)" target="org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1087" source="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)" target="org.sonar.core.issue.db.IssueFilterMapper.selectByUser(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1088" source="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1089" source="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1090" source="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)" target="org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1091" source="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)" target="org.sonar.core.issue.db.IssueFilterMapper.selectFavoriteFiltersByUser(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1092" source="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1093" source="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1094" source="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()" target="org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1095" source="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()" target="org.sonar.core.issue.db.IssueFilterMapper.selectSharedFilters()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1096" source="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1097" source="org.sonar.core.issue.db.IssueFilterDao.selectById(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1098" source="org.sonar.core.issue.db.IssueFilterDao.selectById(long)" target="org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1099" source="org.sonar.core.issue.db.IssueFilterDao.selectById(long)" target="org.sonar.core.issue.db.IssueFilterMapper.selectById(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1100" source="org.sonar.core.issue.db.IssueFilterDao.selectById(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1101" source="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1102" source="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)" target="org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1103" source="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)" target="org.sonar.core.issue.db.IssueFilterMapper.selectProvidedFilterByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1104" source="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1105" source="org.sonar.core.issue.db.IssueFilterDao.delete(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1106" source="org.sonar.core.issue.db.IssueFilterDao.delete(long)" target="org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1107" source="org.sonar.core.issue.db.IssueFilterDao.delete(long)" target="org.sonar.core.issue.db.IssueFilterMapper.delete(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1108" source="org.sonar.core.issue.db.IssueFilterDao.delete(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1109" source="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1110" source="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)" target="org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1111" source="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)" target="org.sonar.core.issue.db.IssueFilterMapper.insert(org.sonar.core.issue.db.IssueFilterDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1112" source="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1113" source="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1114" source="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)" target="org.sonar.core.issue.db.IssueFilterDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1115" source="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)" target="org.sonar.core.issue.db.IssueFilterMapper.update(org.sonar.core.issue.db.IssueFilterDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1116" source="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1117" source="org.sonar.core.issue.db.IssueFilterDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1118" source="org.sonar.core.issue.db.IssueFilterDaoTest.createDao()" target="org.sonar.core.issue.db.IssueFilterDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1119" source="org.sonar.core.issue.db.IssueFilterDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1120" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_delete()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1121" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_delete()" target="org.sonar.core.issue.db.IssueFilterDao.delete(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1122" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_delete()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1123" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1124" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1125" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1126" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1127" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterDto.setShared(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1128" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1129" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterDto.setData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1130" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterDao.insert(org.sonar.core.issue.db.IssueFilterDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1131" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1132" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1133" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()" target="org.sonar.core.issue.db.IssueFilterDao.selectById(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1134" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()" target="org.sonar.core.issue.db.IssueFilterDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1135" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()" target="org.sonar.core.issue.db.IssueFilterDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1136" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_id()" target="org.sonar.core.issue.db.IssueFilterDto.isShared()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1137" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1138" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user()" target="org.sonar.core.issue.db.IssueFilterDao.selectByUser(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1139" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user_with_only_favorite_filters()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1140" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user_with_only_favorite_filters()" target="org.sonar.core.issue.db.IssueFilterDao.selectFavoriteFiltersByUser(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1141" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_by_user_with_only_favorite_filters()" target="org.sonar.core.issue.db.IssueFilterDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1142" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_provided_by_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1143" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_provided_by_name()" target="org.sonar.core.issue.db.IssueFilterDao.selectProvidedFilterByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1144" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_provided_by_name()" target="org.sonar.core.issue.db.IssueFilterDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1145" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_shared()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1146" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_select_shared()" target="org.sonar.core.issue.db.IssueFilterDao.selectSharedFilters()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1147" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1148" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.issue.db.IssueFilterDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1149" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.issue.db.IssueFilterDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1150" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.issue.db.IssueFilterDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1151" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.issue.db.IssueFilterDto.setShared(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1152" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.issue.db.IssueFilterDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1153" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.issue.db.IssueFilterDto.setData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1154" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.issue.db.IssueFilterDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1155" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.issue.db.IssueFilterDao.update(org.sonar.core.issue.db.IssueFilterDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1156" source="org.sonar.core.issue.db.IssueFilterDaoTest.should_update()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1157" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1158" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1159" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)" target="org.sonar.core.issue.db.IssueFilterFavouriteMapper.selectByFilterId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1160" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1161" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1162" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1163" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)" target="org.sonar.core.issue.db.IssueFilterFavouriteMapper.selectById(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1164" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1165" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1166" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1167" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)" target="org.sonar.core.issue.db.IssueFilterFavouriteMapper.delete(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1168" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1169" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1170" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1171" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)" target="org.sonar.core.issue.db.IssueFilterFavouriteMapper.deleteByFilterId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1172" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1173" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1174" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1175" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)" target="org.sonar.core.issue.db.IssueFilterFavouriteMapper.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1176" source="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1177" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1178" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.createDao()" target="org.sonar.core.issue.db.IssueFilterFavouriteDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1179" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1180" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1181" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete()" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.delete(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1182" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1183" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete_by_issue_filter_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1184" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete_by_issue_filter_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.deleteByFilterId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1185" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_delete_by_issue_filter_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1186" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1187" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1188" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.setUserLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1189" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.setIssueFilterId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1190" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.insert(org.sonar.core.issue.db.IssueFilterFavouriteDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1191" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1192" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1193" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectByFilterId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1194" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1195" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.getUserLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1196" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.getIssueFilterId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1197" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_filter_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1198" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1199" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDao.selectById(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1200" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1201" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.getUserLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1202" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.getIssueFilterId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1203" source="org.sonar.core.issue.db.IssueFilterFavouriteDaoTest.should_select_by_id()" target="org.sonar.core.issue.db.IssueFilterFavouriteDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1204" source="org.sonar.core.issue.db.IssueMapperTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1205" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1206" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1207" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1208" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1209" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1210" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1211" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1212" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1213" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1214" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1215" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1216" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1217" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1218" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1219" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1220" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1221" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1222" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1223" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setIssueCreationTime(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1224" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setIssueUpdateTime(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1225" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setIssueCloseTime(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1226" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setCreatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1227" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1228" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.issue.db.IssueMapper.insert(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1229" source="org.sonar.core.issue.db.IssueMapperTest.insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1230" source="org.sonar.core.issue.db.IssueMapperTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1231" source="org.sonar.core.issue.db.IssueMapperTest.setUp()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1232" source="org.sonar.core.issue.db.IssueMapperTest.tearDown()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1233" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1234" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1235" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1236" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1237" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1238" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1239" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1240" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1241" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1242" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1243" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1244" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1245" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1246" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1247" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1248" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1249" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1250" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1251" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1252" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setIssueCreationTime(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1253" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setIssueUpdateTime(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1254" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setIssueCloseTime(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1255" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setCreatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1256" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1257" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1258" source="org.sonar.core.issue.db.IssueMapperTest.update()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1259" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1260" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1261" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1262" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1263" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1264" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1265" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1266" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1267" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1268" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1269" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1270" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1271" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1272" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1273" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1274" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1275" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1276" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1277" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1278" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setIssueCreationDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1279" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setIssueUpdateDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1280" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setIssueCloseDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1281" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setCreatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1282" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1283" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueDto.setSelectedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1284" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.issue.db.IssueMapper.updateIfBeforeSelectedDate(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1285" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_with_conflict()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1286" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1287" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1288" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1289" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1290" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1291" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1292" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1293" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setEffortToFix(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1294" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setDebt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1295" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1296" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1297" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1298" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setReporter(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1299" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setAuthorLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1300" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1301" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1302" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setIssueAttributes(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1303" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setChecksum(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1304" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setMessage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1305" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setIssueCreationTime(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1306" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setIssueUpdateTime(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1307" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setIssueCloseTime(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1308" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setCreatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1309" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setUpdatedAt(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1310" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueDto.setSelectedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1311" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.issue.db.IssueMapper.updateIfBeforeSelectedDate(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1312" source="org.sonar.core.issue.db.IssueMapperTest.updateBeforeSelectedDate_without_conflict()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1313" source="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1314" source="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)" target="org.sonar.core.issue.db.IssueStorage.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1315" source="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)" target="org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1316" source="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1317" source="org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)" target="org.sonar.core.issue.db.IssueStorage.batchInsertAndReturnIssuesToUpdate(org.sonar.core.persistence.DbSession,java.lang.Iterable,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1318" source="org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)" target="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1319" source="org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)" target="org.sonar.core.issue.db.IssueStorage.doAfterSave()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1320" source="org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueChangeDto.of(org.sonar.api.issue.internal.DefaultIssueComment)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1321" source="org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueChangeMapper.insert(org.sonar.core.issue.db.IssueChangeDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1322" source="org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueChangeDto.of(java.lang.String,org.sonar.api.issue.internal.FieldDiffs)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1323" source="org.sonar.core.issue.db.IssueStorage.save(java.lang.Iterable)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1324" source="org.sonar.core.issue.db.IssueStorage.save(java.lang.Iterable)" target="org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1325" source="org.sonar.core.issue.db.IssueStorage.save(java.lang.Iterable)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1326" source="org.sonar.core.issue.db.IssueStorage.save(org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueStorage.save(java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1327" source="org.sonar.core.issue.db.IssueStorage.save(org.sonar.core.persistence.DbSession,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueStorage.doSave(org.sonar.core.persistence.DbSession,java.lang.Iterable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1328" source="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1329" source="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1330" source="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)" target="org.sonar.core.issue.db.IssueStorage.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1331" source="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)" target="org.sonar.core.issue.db.IssueStorage.insertChanges(org.sonar.core.issue.db.IssueChangeMapper,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1332" source="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1333" source="org.sonar.core.issue.db.IssueStorage.update(java.util.List,long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1334" source="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)" target="org.sonar.core.issue.db.IssueStorage(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1335" source="org.sonar.core.issue.db.IssueStorage.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1336" source="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueStorage.rule(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1337" source="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.toDtoForComputationInsert(org.sonar.api.issue.internal.DefaultIssue,int,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1338" source="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1339" source="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueMapper.insert(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1340" source="org.sonar.core.issue.db.IssueStorage.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1341" source="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1342" source="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1343" source="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1344" source="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto)" target="org.sonar.core.issue.db.IssueStorage(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1345" source="org.sonar.core.issue.db.IssueStorage.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1346" source="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueStorage.rule(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1347" source="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.toDtoForServerInsert(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto,int,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1348" source="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1349" source="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doInsert(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueMapper.insert(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1350" source="org.sonar.core.issue.db.IssueStorage.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1351" source="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1352" source="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1353" source="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver.doUpdate(org.sonar.core.persistence.DbSession,long,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1354" source="org.sonar.core.issue.db.IssueStorageTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1355" source="org.sonar.core.issue.db.IssueStorageTest.after()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1356" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()" target="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1357" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1358" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()" target="org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1359" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()" target="org.sonar.core.issue.db.IssueStorage.save(org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1360" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1361" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()" target="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1362" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1363" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()" target="org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1364" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()" target="org.sonar.core.issue.db.IssueStorage.save(org.sonar.core.persistence.DbSession,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1365" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1366" source="org.sonar.core.issue.db.IssueStorageTest.batch_insert_new_issues_with_session()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1367" source="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1368" source="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()" target="org.sonar.core.issue.db.IssueStorageTest$FakeBatchSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1369" source="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1370" source="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()" target="org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1371" source="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()" target="org.sonar.core.issue.db.IssueStorage.save(org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1372" source="org.sonar.core.issue.db.IssueStorageTest.batch_update_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1373" source="org.sonar.core.issue.db.IssueStorageTest.before()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1374" source="org.sonar.core.issue.db.IssueStorageTest.before()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1375" source="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()" target="org.sonar.core.component.ComponentDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1376" source="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()" target="org.sonar.core.component.ComponentDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1377" source="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()" target="org.sonar.core.component.ComponentDto.setUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1378" source="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()" target="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1379" source="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1380" source="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()" target="org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1381" source="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()" target="org.sonar.core.issue.db.IssueStorage.save(org.sonar.core.persistence.DbSession,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1382" source="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1383" source="org.sonar.core.issue.db.IssueStorageTest.server_insert_new_issues_with_session()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1384" source="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1385" source="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()" target="org.sonar.core.component.ComponentDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1386" source="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()" target="org.sonar.core.component.ComponentDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1387" source="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()" target="org.sonar.core.component.ComponentDto.setUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1388" source="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()" target="org.sonar.core.issue.db.IssueStorageTest$FakeServerSaver(org.sonar.core.persistence.MyBatis,org.sonar.api.rules.RuleFinder,org.sonar.core.component.ComponentDto,org.sonar.core.component.ComponentDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1389" source="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1390" source="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()" target="org.sonar.core.issue.db.IssueStorageTest$FakeRuleFinder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1391" source="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()" target="org.sonar.core.issue.db.IssueStorage.save(org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1392" source="org.sonar.core.issue.db.IssueStorageTest.server_update_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1393" source="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.UpdateConflictResolver.resolveAssignee(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1394" source="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.UpdateConflictResolver.resolvePlan(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1395" source="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.UpdateConflictResolver.resolveSeverity(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1396" source="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.UpdateConflictResolver.resolveEffortToFix(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1397" source="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.UpdateConflictResolver.resolveResolution(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1398" source="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.UpdateConflictResolver.resolveStatus(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1399" source="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)" target="org.sonar.core.issue.db.IssueMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1400" source="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)" target="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1401" source="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)" target="org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1402" source="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)" target="org.sonar.core.issue.db.IssueDto.toDtoForUpdate(org.sonar.api.issue.internal.DefaultIssue,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1403" source="org.sonar.core.issue.db.UpdateConflictResolver.resolveAssignee(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.getAssignee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1404" source="org.sonar.core.issue.db.UpdateConflictResolver.resolveEffortToFix(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.getEffortToFix()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1405" source="org.sonar.core.issue.db.UpdateConflictResolver.resolvePlan(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.getActionPlanKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1406" source="org.sonar.core.issue.db.UpdateConflictResolver.resolveResolution(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.getResolution()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1407" source="org.sonar.core.issue.db.UpdateConflictResolver.resolveSeverity(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.isManualSeverity()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1408" source="org.sonar.core.issue.db.UpdateConflictResolver.resolveSeverity(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.getSeverity()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1409" source="org.sonar.core.issue.db.UpdateConflictResolver.resolveStatus(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.db.IssueDto.getStatus()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1410" source="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1411" source="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1412" source="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1413" source="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()" target="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1414" source="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()" target="org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1415" source="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()" target="org.sonar.core.issue.db.UpdateConflictResolver()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1416" source="org.sonar.core.issue.db.UpdateConflictResolverTest.severity_changed_by_user_should_be_kept()" target="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1417" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1418" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1419" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1420" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1421" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setComponentUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1422" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1423" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1424" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1425" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1426" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1427" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setActionPlanKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1428" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1429" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.IssueDto.setManualSeverity(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1430" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.UpdateConflictResolver()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1431" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_keep_changes_made_by_user()" target="org.sonar.core.issue.db.UpdateConflictResolver.mergeFields(org.sonar.core.issue.db.IssueDto,org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1432" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1433" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1434" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1435" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1436" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto.setRuleKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1437" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto.setComponentKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1438" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1439" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1440" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto.setAssignee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1441" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.UpdateConflictResolver()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1442" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.UpdateConflictResolver.resolve(org.sonar.api.issue.internal.DefaultIssue,org.sonar.core.issue.db.IssueMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1443" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueMapper.update(org.sonar.core.issue.db.IssueDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1444" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1445" source="org.sonar.core.issue.db.UpdateConflictResolverTest.should_reload_issue_and_resolve_conflict()" target="org.sonar.core.issue.db.IssueDto.getAssignee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1446" source="org.sonar.core.issue.workflow.Function$Context.issue()" target="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.issue()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1447" source="org.sonar.core.issue.workflow.Function$Context.setAssignee(org.sonar.api.user.User)" target="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setAssignee(org.sonar.api.user.User)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1448" source="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setAssignee(org.sonar.api.user.User)" target="org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1449" source="org.sonar.core.issue.workflow.Function$Context.setCloseDate(boolean)" target="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setCloseDate(boolean)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1450" source="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setCloseDate(boolean)" target="org.sonar.core.issue.IssueUpdater.setCloseDate(org.sonar.api.issue.internal.DefaultIssue,java.util.Date,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1451" source="org.sonar.core.issue.workflow.Function$Context.setLine(java.lang.Integer)" target="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setLine(java.lang.Integer)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1452" source="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setLine(java.lang.Integer)" target="org.sonar.core.issue.IssueUpdater.setLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1453" source="org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)" target="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setResolution(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1454" source="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext.setResolution(java.lang.String)" target="org.sonar.core.issue.IssueUpdater.setResolution(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1455" source="org.sonar.core.issue.workflow.FunctionExecutor.execute(org.sonar.core.issue.workflow.Function[],org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.FunctionExecutor$FunctionContext(org.sonar.core.issue.IssueUpdater,org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1456" source="org.sonar.core.issue.workflow.FunctionExecutor.execute(org.sonar.core.issue.workflow.Function[],org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1457" source="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_be_end_of_life()" target="org.sonar.core.issue.workflow.IsEndOfLife(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1458" source="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_be_end_of_life()" target="org.sonar.core.issue.workflow.IsEndOfLife.matches(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1459" source="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_not_be_end_of_life()" target="org.sonar.core.issue.workflow.IsEndOfLife(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1460" source="org.sonar.core.issue.workflow.IsEndOfLifeTest.should_not_be_end_of_life()" target="org.sonar.core.issue.workflow.IsEndOfLife.matches(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1461" source="org.sonar.core.issue.workflow.IsManualTest.should_match()" target="org.sonar.core.issue.workflow.IsManual(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1462" source="org.sonar.core.issue.workflow.IsManualTest.should_match()" target="org.sonar.core.issue.workflow.IsManual.matches(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1463" source="org.sonar.core.issue.workflow.IsManualTest.should_match_dead()" target="org.sonar.core.issue.workflow.IsManual(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1464" source="org.sonar.core.issue.workflow.IsManualTest.should_match_dead()" target="org.sonar.core.issue.workflow.IsManual.matches(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1465" source="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.IssueWorkflow.stateOf(org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1466" source="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.State.transition(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1467" source="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.Transition.automatic()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1468" source="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.FunctionExecutor.execute(org.sonar.core.issue.workflow.Function[],org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1469" source="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.Transition.functions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1470" source="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.IssueUpdater.setStatus(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1471" source="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.Transition.to()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1472" source="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" target="org.sonar.core.issue.workflow.StateMachine.state(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1473" source="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)" target="org.sonar.core.issue.workflow.State.outManualTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1474" source="org.sonar.core.issue.workflow.IssueWorkflow.statusKeys()" target="org.sonar.core.issue.workflow.StateMachine.stateKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1475" source="org.sonar.core.issue.workflow.IssueWorkflow.stateOf(org.sonar.api.issue.internal.DefaultIssue)" target="org.sonar.core.issue.workflow.StateMachine.state(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1476" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1477" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1478" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1479" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1480" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.conditions(org.sonar.api.issue.condition.Condition[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1481" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.IsEndOfLife(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1482" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.functions(org.sonar.core.issue.workflow.Function[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1483" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.SetEndOfLife()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1484" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.SetCloseDate(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1485" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.automatic()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1486" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1487" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.IsManual(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1488" source="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.SetResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1489" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1490" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1491" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1492" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1493" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.functions(org.sonar.core.issue.workflow.Function[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1494" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.SetResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1495" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1496" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.conditions(org.sonar.api.issue.condition.Condition[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1497" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.IsManual(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1498" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.SetCloseDate(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1499" source="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.requiredProjectPermission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1500" source="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.IssueWorkflow.stateOf(org.sonar.api.issue.internal.DefaultIssue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1501" source="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.State.outAutomaticTransition(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1502" source="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.FunctionExecutor.execute(org.sonar.core.issue.workflow.Function[],org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1503" source="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.Transition.functions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1504" source="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.IssueUpdater.setStatus(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1505" source="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.workflow.Transition.to()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1506" source="org.sonar.core.issue.workflow.IssueWorkflow.start()" target="org.sonar.core.issue.workflow.StateMachine.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1507" source="org.sonar.core.issue.workflow.IssueWorkflow.start()" target="org.sonar.core.issue.workflow.StateMachine$Builder.states(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1508" source="org.sonar.core.issue.workflow.IssueWorkflow.start()" target="org.sonar.core.issue.workflow.IssueWorkflow.buildManualTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1509" source="org.sonar.core.issue.workflow.IssueWorkflow.start()" target="org.sonar.core.issue.workflow.IssueWorkflow.buildAutomaticTransitions(org.sonar.core.issue.workflow.StateMachine$Builder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1510" source="org.sonar.core.issue.workflow.IssueWorkflow.start()" target="org.sonar.core.issue.workflow.StateMachine$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1511" source="org.sonar.core.issue.workflow.IssueWorkflowTest#updater" target="org.sonar.core.issue.IssueUpdater()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1512" source="org.sonar.core.issue.workflow.IssueWorkflowTest#workflow" target="org.sonar.core.issue.workflow.IssueWorkflow(org.sonar.core.issue.workflow.FunctionExecutor,org.sonar.core.issue.IssueUpdater)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1513" source="org.sonar.core.issue.workflow.IssueWorkflowTest$1.apply(org.sonar.core.issue.workflow.Transition)" target="org.sonar.core.issue.workflow.Transition.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1514" source="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)" target="org.sonar.core.issue.workflow.IssueWorkflowTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1515" source="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)" target="org.sonar.core.issue.workflow.Transition.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1516" source="org.sonar.core.issue.workflow.IssueWorkflowTest.close_confirmed_dead_issue()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1517" source="org.sonar.core.issue.workflow.IssueWorkflowTest.close_confirmed_dead_issue()" target="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1518" source="org.sonar.core.issue.workflow.IssueWorkflowTest.close_open_dead_issue()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1519" source="org.sonar.core.issue.workflow.IssueWorkflowTest.close_open_dead_issue()" target="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1520" source="org.sonar.core.issue.workflow.IssueWorkflowTest.close_reopened_dead_issue()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1521" source="org.sonar.core.issue.workflow.IssueWorkflowTest.close_reopened_dead_issue()" target="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1522" source="org.sonar.core.issue.workflow.IssueWorkflowTest.do_automatic_transition()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1523" source="org.sonar.core.issue.workflow.IssueWorkflowTest.do_automatic_transition()" target="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1524" source="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_on_automatic_trans()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1525" source="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_on_automatic_trans()" target="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1526" source="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_when_listing_transitions()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1527" source="org.sonar.core.issue.workflow.IssueWorkflowTest.fail_if_unknown_status_when_listing_transitions()" target="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1528" source="org.sonar.core.issue.workflow.IssueWorkflowTest.flag_as_false_positive()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1529" source="org.sonar.core.issue.workflow.IssueWorkflowTest.flag_as_false_positive()" target="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1530" source="org.sonar.core.issue.workflow.IssueWorkflowTest.init_state_machine()" target="org.sonar.core.issue.workflow.IssueWorkflow.machine()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1531" source="org.sonar.core.issue.workflow.IssueWorkflowTest.init_state_machine()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1532" source="org.sonar.core.issue.workflow.IssueWorkflowTest.init_state_machine()" target="org.sonar.core.issue.workflow.StateMachine.state(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1533" source="org.sonar.core.issue.workflow.IssueWorkflowTest.init_state_machine()" target="org.sonar.core.issue.workflow.IssueWorkflow.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1534" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_no_out_transition_from_status_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1535" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_no_out_transition_from_status_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1536" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_closed_on_manual_issue()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1537" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_closed_on_manual_issue()" target="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1538" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_closed_on_manual_issue()" target="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1539" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_confirmed()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1540" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_confirmed()" target="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1541" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_confirmed()" target="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1542" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_open()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1543" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_open()" target="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1544" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_open()" target="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1545" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_reopen()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1546" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_reopen()" target="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1547" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_reopen()" target="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1548" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_resolved()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1549" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_resolved()" target="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1550" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_out_transitions_from_status_resolved()" target="org.sonar.core.issue.workflow.IssueWorkflowTest.keys(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1551" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_statuses()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1552" source="org.sonar.core.issue.workflow.IssueWorkflowTest.list_statuses()" target="org.sonar.core.issue.workflow.IssueWorkflow.statusKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1553" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_component_be_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1554" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_component_be_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1555" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_rule_be_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1556" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issue_on_removed_rule_be_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1557" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1558" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()" target="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1559" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()" target="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1560" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()" target="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1561" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_confirmed_then_kept_open()" target="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1562" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1563" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.outTransitions(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1564" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()" target="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1565" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1566" source="org.sonar.core.issue.workflow.IssueWorkflowTest.manual_issues_be_resolved_then_closed()" target="org.sonar.core.issue.workflow.IssueWorkflow.doAutomaticTransition(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1567" source="org.sonar.core.issue.workflow.IssueWorkflowTest.wont_fix()" target="org.sonar.core.issue.workflow.IssueWorkflow.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1568" source="org.sonar.core.issue.workflow.IssueWorkflowTest.wont_fix()" target="org.sonar.core.issue.workflow.IssueWorkflow.doTransition(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1569" source="org.sonar.core.issue.workflow.SetAssignee#UNASSIGN" target="org.sonar.core.issue.workflow.SetAssignee(org.sonar.api.user.User)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1570" source="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.SetAssignee.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1571" source="org.sonar.core.issue.workflow.SetAssignee.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.Function$Context.setAssignee(org.sonar.api.user.User)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1572" source="org.sonar.core.issue.workflow.SetAssigneeTest.assign()" target="org.sonar.core.user.DefaultUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1573" source="org.sonar.core.issue.workflow.SetAssigneeTest.assign()" target="org.sonar.core.user.DefaultUser.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1574" source="org.sonar.core.issue.workflow.SetAssigneeTest.assign()" target="org.sonar.core.user.DefaultUser.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1575" source="org.sonar.core.issue.workflow.SetAssigneeTest.assign()" target="org.sonar.core.issue.workflow.SetAssignee(org.sonar.api.user.User)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1576" source="org.sonar.core.issue.workflow.SetAssigneeTest.assign()" target="org.sonar.core.issue.workflow.SetAssignee.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1577" source="org.sonar.core.issue.workflow.SetAssigneeTest.assign()" target="org.sonar.core.issue.workflow.Function$Context.setAssignee(org.sonar.api.user.User)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1578" source="org.sonar.core.issue.workflow.SetAssigneeTest.unassign()" target="org.sonar.core.issue.workflow.SetAssignee.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1579" source="org.sonar.core.issue.workflow.SetAssigneeTest.unassign()" target="org.sonar.core.issue.workflow.Function$Context.setAssignee(org.sonar.api.user.User)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1580" source="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.SetCloseDate.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1581" source="org.sonar.core.issue.workflow.SetCloseDate.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.Function$Context.setCloseDate(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1582" source="org.sonar.core.issue.workflow.SetCloseDateTest.should_set_close_date()" target="org.sonar.core.issue.workflow.SetCloseDate(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1583" source="org.sonar.core.issue.workflow.SetCloseDateTest.should_set_close_date()" target="org.sonar.core.issue.workflow.SetCloseDate.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1584" source="org.sonar.core.issue.workflow.SetCloseDateTest.should_set_close_date()" target="org.sonar.core.issue.workflow.Function$Context.setCloseDate(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1585" source="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1586" source="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.Function$Context.issue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1587" source="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1588" source="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.Function$Context.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1589" source="org.sonar.core.issue.workflow.SetEndOfLifeTest#function" target="org.sonar.core.issue.workflow.SetEndOfLife()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1590" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.line_number_must_be_unset()" target="org.sonar.core.issue.workflow.Function$Context.issue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1591" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.line_number_must_be_unset()" target="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1592" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.line_number_must_be_unset()" target="org.sonar.core.issue.workflow.Function$Context.setLine(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1593" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_fail_if_issue_is_not_resolved()" target="org.sonar.core.issue.workflow.Function$Context.issue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1594" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_fail_if_issue_is_not_resolved()" target="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1595" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_fail_if_issue_is_not_resolved()" target="org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1596" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_fixed()" target="org.sonar.core.issue.workflow.Function$Context.issue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1597" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_fixed()" target="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1598" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_fixed()" target="org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1599" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_removed_when_rule_is_disabled()" target="org.sonar.core.issue.workflow.Function$Context.issue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1600" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_removed_when_rule_is_disabled()" target="org.sonar.core.issue.workflow.SetEndOfLife.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1601" source="org.sonar.core.issue.workflow.SetEndOfLifeTest.should_resolve_as_removed_when_rule_is_disabled()" target="org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1602" source="org.sonar.core.issue.workflow.Function.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.SetResolution.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1603" source="org.sonar.core.issue.workflow.SetResolution.execute(org.sonar.core.issue.workflow.Function$Context)" target="org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1604" source="org.sonar.core.issue.workflow.SetResolutionTest.execute()" target="org.sonar.core.issue.workflow.SetResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1605" source="org.sonar.core.issue.workflow.SetResolutionTest.execute()" target="org.sonar.core.issue.workflow.SetResolution.execute(org.sonar.core.issue.workflow.Function$Context)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1606" source="org.sonar.core.issue.workflow.SetResolutionTest.execute()" target="org.sonar.core.issue.workflow.Function$Context.setResolution(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1607" source="org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])" target="org.sonar.core.issue.workflow.State.checkDuplications(org.sonar.core.issue.workflow.Transition[],java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1608" source="org.sonar.core.issue.workflow.State.outManualTransitions(org.sonar.api.issue.Issue)" target="org.sonar.core.issue.workflow.Transition.automatic()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1609" source="org.sonar.core.issue.workflow.State.outManualTransitions(org.sonar.api.issue.Issue)" target="org.sonar.core.issue.workflow.Transition.supports(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1610" source="org.sonar.core.issue.workflow.State.outAutomaticTransition(org.sonar.api.issue.Issue)" target="org.sonar.core.issue.workflow.Transition.automatic()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1611" source="org.sonar.core.issue.workflow.State.outAutomaticTransition(org.sonar.api.issue.Issue)" target="org.sonar.core.issue.workflow.Transition.supports(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1612" source="org.sonar.core.issue.workflow.State.transition(java.lang.String)" target="org.sonar.core.issue.workflow.Transition.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1613" source="org.sonar.core.issue.workflow.State.checkDuplications(org.sonar.core.issue.workflow.Transition[],java.lang.String)" target="org.sonar.core.issue.workflow.Transition.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1614" source="org.sonar.core.issue.workflow.StateMachine$Builder.build()" target="org.sonar.core.issue.workflow.StateMachine(org.sonar.core.issue.workflow.StateMachine$Builder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1615" source="org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)" target="org.sonar.core.issue.workflow.Transition.from()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1616" source="org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)" target="org.sonar.core.issue.workflow.Transition.to()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1617" source="org.sonar.core.issue.workflow.StateMachine(org.sonar.core.issue.workflow.StateMachine$Builder)" target="org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1618" source="org.sonar.core.issue.workflow.StateMachine.builder()" target="org.sonar.core.issue.workflow.StateMachine$Builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1619" source="org.sonar.core.issue.workflow.StateMachineTest.keep_order_of_state_keys()" target="org.sonar.core.issue.workflow.StateMachine.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1620" source="org.sonar.core.issue.workflow.StateMachineTest.keep_order_of_state_keys()" target="org.sonar.core.issue.workflow.StateMachine$Builder.states(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1621" source="org.sonar.core.issue.workflow.StateMachineTest.keep_order_of_state_keys()" target="org.sonar.core.issue.workflow.StateMachine$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1622" source="org.sonar.core.issue.workflow.StateMachineTest.keep_order_of_state_keys()" target="org.sonar.core.issue.workflow.StateMachine.stateKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1623" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.StateMachine.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1624" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.StateMachine$Builder.states(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1625" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.StateMachine$Builder.transition(org.sonar.core.issue.workflow.Transition)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1626" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1627" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1628" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1629" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1630" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.StateMachine$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1631" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.StateMachine.state(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1632" source="org.sonar.core.issue.workflow.StateMachineTest.stateKey()" target="org.sonar.core.issue.workflow.State.transition(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1633" source="org.sonar.core.issue.workflow.StateTest#t1" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1634" source="org.sonar.core.issue.workflow.StateTest.key_should_be_set()" target="org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1635" source="org.sonar.core.issue.workflow.StateTest.key_should_be_upper_case()" target="org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1636" source="org.sonar.core.issue.workflow.StateTest.no_duplicated_out_transitions()" target="org.sonar.core.issue.workflow.State(java.lang.String,org.sonar.core.issue.workflow.Transition[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1637" source="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()" target="org.sonar.core.issue.workflow.Transition(org.sonar.core.issue.workflow.Transition$TransitionBuilder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1638" source="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1639" source="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1640" source="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1641" source="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1642" source="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1643" source="org.sonar.core.issue.workflow.TransitionTest.destination_status_should_be_set()" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1644" source="org.sonar.core.issue.workflow.TransitionTest.destination_status_should_be_set()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1645" source="org.sonar.core.issue.workflow.TransitionTest.destination_status_should_be_set()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1646" source="org.sonar.core.issue.workflow.TransitionTest.destination_status_should_be_set()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1647" source="org.sonar.core.issue.workflow.TransitionTest.key_should_be_lower_case()" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1648" source="org.sonar.core.issue.workflow.TransitionTest.key_should_be_lower_case()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1649" source="org.sonar.core.issue.workflow.TransitionTest.key_should_be_lower_case()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1650" source="org.sonar.core.issue.workflow.TransitionTest.key_should_be_lower_case()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1651" source="org.sonar.core.issue.workflow.TransitionTest.key_should_be_set()" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1652" source="org.sonar.core.issue.workflow.TransitionTest.key_should_be_set()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1653" source="org.sonar.core.issue.workflow.TransitionTest.key_should_be_set()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1654" source="org.sonar.core.issue.workflow.TransitionTest.key_should_be_set()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1655" source="org.sonar.core.issue.workflow.TransitionTest.originating_status_should_be_set()" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1656" source="org.sonar.core.issue.workflow.TransitionTest.originating_status_should_be_set()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1657" source="org.sonar.core.issue.workflow.TransitionTest.originating_status_should_be_set()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1658" source="org.sonar.core.issue.workflow.TransitionTest.originating_status_should_be_set()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1659" source="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1660" source="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1661" source="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1662" source="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.conditions(org.sonar.api.issue.condition.Condition[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1663" source="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1664" source="org.sonar.core.issue.workflow.TransitionTest.should_verify_conditions()" target="org.sonar.core.issue.workflow.Transition.supports(org.sonar.api.issue.Issue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1665" source="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1666" source="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1667" source="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1668" source="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.automatic()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1669" source="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1670" source="org.sonar.core.issue.workflow.TransitionTest.test_automatic_transition()" target="org.sonar.core.issue.workflow.Transition.automatic()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1671" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1672" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1673" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1674" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.conditions(org.sonar.api.issue.condition.Condition[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1675" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.functions(org.sonar.core.issue.workflow.Function[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1676" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1677" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1678" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition.from()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1679" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition.to()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1680" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition.conditions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1681" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition.functions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1682" source="org.sonar.core.issue.workflow.TransitionTest.test_builder()" target="org.sonar.core.issue.workflow.Transition.automatic()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1683" source="org.sonar.core.issue.workflow.TransitionTest.test_equals_and_hashCode()" target="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1684" source="org.sonar.core.issue.workflow.TransitionTest.test_equals_and_hashCode()" target="org.sonar.core.issue.workflow.Transition.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1685" source="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()" target="org.sonar.core.issue.workflow.Transition.builder(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1686" source="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.from(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1687" source="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.to(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1688" source="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()" target="org.sonar.core.issue.workflow.Transition$TransitionBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1689" source="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()" target="org.sonar.core.issue.workflow.Transition.key()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1690" source="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()" target="org.sonar.core.issue.workflow.Transition.from()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1691" source="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()" target="org.sonar.core.issue.workflow.Transition.to()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1692" source="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()" target="org.sonar.core.issue.workflow.Transition.conditions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1693" source="org.sonar.core.issue.workflow.TransitionTest.test_simplest_transition()" target="org.sonar.core.issue.workflow.Transition.functions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1694" source="org.sonar.core.issue.workflow.TransitionTest.test_toString()" target="org.sonar.core.issue.workflow.Transition.create(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1695" source="org.sonar.core.issue.workflow.TransitionTest.test_toString()" target="org.sonar.core.issue.workflow.Transition.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1696" source="org.sonar.core.issue.ActionPlanDeadlineComparatorTest#shortTerm" target="org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1697" source="org.sonar.core.issue.ActionPlanDeadlineComparatorTest#longTerm" target="org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1698" source="org.sonar.core.issue.ActionPlanDeadlineComparatorTest#noDeadline" target="org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1699" source="org.sonar.core.issue.ActionPlanDeadlineComparatorTest.compare_plans_with_deadlines()" target="org.sonar.core.issue.ActionPlanDeadlineComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1700" source="org.sonar.core.issue.ActionPlanDeadlineComparatorTest.end_with_plans_without_deadline()" target="org.sonar.core.issue.ActionPlanDeadlineComparator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1701" source="org.sonar.core.issue.ActionPlanStats()" target="org.sonar.core.issue.DefaultActionPlan()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1702" source="org.sonar.core.issue.ActionPlanStats.isOpen()" target="org.sonar.core.issue.DefaultActionPlan.status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1703" source="org.sonar.core.issue.ActionPlanStats.overDue()" target="org.sonar.core.issue.DefaultActionPlan.deadLine()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1704" source="org.sonar.core.issue.ActionPlanStats.overDue()" target="org.sonar.core.issue.ActionPlanStats.isOpen()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1705" source="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" target="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e1706" source="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)" target="org.sonar.core.issue.ActionPlanStats()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1707" source="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1708" source="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1709" source="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1710" source="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1711" source="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1712" source="org.sonar.core.issue.ActionPlanStatsTest.test_over_due()" target="org.sonar.core.issue.ActionPlanStats.create(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1713" source="org.sonar.core.issue.ActionPlanStatsTest.test_over_due()" target="org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1714" source="org.sonar.core.issue.ActionPlanStatsTest.test_over_due()" target="org.sonar.core.issue.DefaultActionPlan.setDeadLine(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1715" source="org.sonar.core.issue.ActionPlanStatsTest.test_over_due()" target="org.sonar.core.issue.ActionPlanStats.overDue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1716" source="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1717" source="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1718" source="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1719" source="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setStatus(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1720" source="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1721" source="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)" target="org.sonar.core.issue.DefaultActionPlan.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1722" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1723" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder.componentKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1724" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder.projectKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1725" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder.message(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1726" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder.line(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1727" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder.effortToFix(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1728" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder.ruleKey(org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1729" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder.severity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1730" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder.attribute(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1731" source="org.sonar.core.issue.DefaultIssueBuilderTest.build_new_issue()" target="org.sonar.core.issue.DefaultIssueBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1732" source="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()" target="org.sonar.core.issue.DefaultIssueBuilder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1733" source="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()" target="org.sonar.core.issue.DefaultIssueBuilder.componentKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1734" source="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()" target="org.sonar.core.issue.DefaultIssueBuilder.projectKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1735" source="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()" target="org.sonar.core.issue.DefaultIssueBuilder.ruleKey(org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1736" source="org.sonar.core.issue.DefaultIssueBuilderTest.not_set_default_severity()" target="org.sonar.core.issue.DefaultIssueBuilder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1737" source="org.sonar.core.issue.IssueFilterSerializerTest#issueFilterSerializer" target="org.sonar.core.issue.IssueFilterSerializer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1738" source="org.sonar.core.issue.IssueFilterSerializerTest.should_deserialize()" target="org.sonar.core.issue.IssueFilterSerializer.deserialize(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1739" source="org.sonar.core.issue.IssueFilterSerializerTest.should_remove_empty_value_when_deserializing()" target="org.sonar.core.issue.IssueFilterSerializer.deserialize(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1740" source="org.sonar.core.issue.IssueFilterSerializerTest.should_remove_empty_value_when_serializing()" target="org.sonar.core.issue.IssueFilterSerializer.serialize(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1741" source="org.sonar.core.issue.IssueFilterSerializerTest.should_serialize()" target="org.sonar.core.issue.IssueFilterSerializer.serialize(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1742" source="org.sonar.core.issue.IssueUpdater.setPastEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.IssueUpdater.setEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1743" source="org.sonar.core.issue.IssueUpdater.setPastLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)" target="org.sonar.core.issue.IssueUpdater.setLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1744" source="org.sonar.core.issue.IssueUpdater.setPastMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.IssueUpdater.setMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1745" source="org.sonar.core.issue.IssueUpdater.setPastProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.IssueUpdater.setProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1746" source="org.sonar.core.issue.IssueUpdater.setPastSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1747" source="org.sonar.core.issue.IssueUpdater.setPastTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.IssueUpdater.setTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1748" source="org.sonar.core.issue.IssueUpdater.setTags(org.sonar.api.issue.internal.DefaultIssue,java.util.Collection,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.IssueUpdater$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1749" source="org.sonar.core.issue.IssueUpdater.setTags(org.sonar.api.issue.internal.DefaultIssue,java.util.Collection,org.sonar.api.issue.internal.IssueChangeContext)" target="org.sonar.core.issue.IssueUpdater$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1750" source="org.sonar.core.issue.IssueUpdaterTest.assign()" target="org.sonar.core.user.DefaultUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1751" source="org.sonar.core.issue.IssueUpdaterTest.assign()" target="org.sonar.core.user.DefaultUser.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1752" source="org.sonar.core.issue.IssueUpdaterTest.assign()" target="org.sonar.core.user.DefaultUser.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1753" source="org.sonar.core.issue.IssueUpdaterTest.assign()" target="org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1754" source="org.sonar.core.issue.IssueUpdaterTest.change_assignee()" target="org.sonar.core.user.DefaultUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1755" source="org.sonar.core.issue.IssueUpdaterTest.change_assignee()" target="org.sonar.core.user.DefaultUser.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1756" source="org.sonar.core.issue.IssueUpdaterTest.change_assignee()" target="org.sonar.core.user.DefaultUser.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1757" source="org.sonar.core.issue.IssueUpdaterTest.change_assignee()" target="org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1758" source="org.sonar.core.issue.IssueUpdaterTest.not_change_assignee()" target="org.sonar.core.user.DefaultUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1759" source="org.sonar.core.issue.IssueUpdaterTest.not_change_assignee()" target="org.sonar.core.user.DefaultUser.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1760" source="org.sonar.core.issue.IssueUpdaterTest.not_change_assignee()" target="org.sonar.core.user.DefaultUser.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1761" source="org.sonar.core.issue.IssueUpdaterTest.not_change_assignee()" target="org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1762" source="org.sonar.core.issue.IssueUpdaterTest.not_change_line()" target="org.sonar.core.issue.IssueUpdater.setLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1763" source="org.sonar.core.issue.IssueUpdaterTest.not_change_manual_severity()" target="org.sonar.core.issue.IssueUpdater.setManualSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1764" source="org.sonar.core.issue.IssueUpdaterTest.not_change_resolution()" target="org.sonar.core.issue.IssueUpdater.setResolution(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1765" source="org.sonar.core.issue.IssueUpdaterTest.not_change_severity()" target="org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1766" source="org.sonar.core.issue.IssueUpdaterTest.not_change_status()" target="org.sonar.core.issue.IssueUpdater.setStatus(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1767" source="org.sonar.core.issue.IssueUpdaterTest.not_plan_again()" target="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1768" source="org.sonar.core.issue.IssueUpdaterTest.not_plan_again()" target="org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1769" source="org.sonar.core.issue.IssueUpdaterTest.not_plan_again()" target="org.sonar.core.issue.IssueUpdater.plan(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.ActionPlan,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1770" source="org.sonar.core.issue.IssueUpdaterTest.not_revert_manual_severity()" target="org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1771" source="org.sonar.core.issue.IssueUpdaterTest.not_set_effort_to_fix_if_unchanged()" target="org.sonar.core.issue.IssueUpdater.setEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1772" source="org.sonar.core.issue.IssueUpdaterTest.not_set_past_project_if_no_change()" target="org.sonar.core.issue.IssueUpdater.setPastProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1773" source="org.sonar.core.issue.IssueUpdaterTest.not_update_attribute()" target="org.sonar.core.issue.IssueUpdater.setAttribute(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1774" source="org.sonar.core.issue.IssueUpdaterTest.plan_with_existing_plan()" target="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1775" source="org.sonar.core.issue.IssueUpdaterTest.plan_with_existing_plan()" target="org.sonar.core.issue.DefaultActionPlan.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1776" source="org.sonar.core.issue.IssueUpdaterTest.plan_with_existing_plan()" target="org.sonar.core.issue.IssueUpdater.plan(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.ActionPlan,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1777" source="org.sonar.core.issue.IssueUpdaterTest.plan_with_no_existing_plan()" target="org.sonar.core.issue.DefaultActionPlan.create(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1778" source="org.sonar.core.issue.IssueUpdaterTest.plan_with_no_existing_plan()" target="org.sonar.core.issue.IssueUpdater.plan(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.ActionPlan,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1779" source="org.sonar.core.issue.IssueUpdaterTest.setUp()" target="org.sonar.core.issue.IssueUpdater()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1780" source="org.sonar.core.issue.IssueUpdaterTest.set_author()" target="org.sonar.core.issue.IssueUpdater.setAuthorLogin(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1781" source="org.sonar.core.issue.IssueUpdaterTest.set_effort_to_fix()" target="org.sonar.core.issue.IssueUpdater.setEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1782" source="org.sonar.core.issue.IssueUpdaterTest.set_line()" target="org.sonar.core.issue.IssueUpdater.setLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1783" source="org.sonar.core.issue.IssueUpdaterTest.set_manual_severity()" target="org.sonar.core.issue.IssueUpdater.setManualSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1784" source="org.sonar.core.issue.IssueUpdaterTest.set_message()" target="org.sonar.core.issue.IssueUpdater.setMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1785" source="org.sonar.core.issue.IssueUpdaterTest.set_new_attribute_value()" target="org.sonar.core.issue.IssueUpdater.setAttribute(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1786" source="org.sonar.core.issue.IssueUpdaterTest.set_past_effort()" target="org.sonar.core.issue.IssueUpdater.setPastEffortToFix(org.sonar.api.issue.internal.DefaultIssue,java.lang.Double,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1787" source="org.sonar.core.issue.IssueUpdaterTest.set_past_line()" target="org.sonar.core.issue.IssueUpdater.setPastLine(org.sonar.api.issue.internal.DefaultIssue,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1788" source="org.sonar.core.issue.IssueUpdaterTest.set_past_message()" target="org.sonar.core.issue.IssueUpdater.setPastMessage(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1789" source="org.sonar.core.issue.IssueUpdaterTest.set_past_project()" target="org.sonar.core.issue.IssueUpdater.setPastProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1790" source="org.sonar.core.issue.IssueUpdaterTest.set_past_severity()" target="org.sonar.core.issue.IssueUpdater.setPastSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1791" source="org.sonar.core.issue.IssueUpdaterTest.set_past_technical_debt()" target="org.sonar.core.issue.IssueUpdater.setPastTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1792" source="org.sonar.core.issue.IssueUpdaterTest.set_past_technical_debt_with_null_new_value()" target="org.sonar.core.issue.IssueUpdater.setPastTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1793" source="org.sonar.core.issue.IssueUpdaterTest.set_past_technical_debt_without_previous_value()" target="org.sonar.core.issue.IssueUpdater.setPastTechnicalDebt(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1794" source="org.sonar.core.issue.IssueUpdaterTest.set_project()" target="org.sonar.core.issue.IssueUpdater.setProject(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1795" source="org.sonar.core.issue.IssueUpdaterTest.set_resolution()" target="org.sonar.core.issue.IssueUpdater.setResolution(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1796" source="org.sonar.core.issue.IssueUpdaterTest.set_severity()" target="org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1797" source="org.sonar.core.issue.IssueUpdaterTest.set_status()" target="org.sonar.core.issue.IssueUpdater.setStatus(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1798" source="org.sonar.core.issue.IssueUpdaterTest.unassign()" target="org.sonar.core.issue.IssueUpdater.assign(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.user.User,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1799" source="org.sonar.core.issue.IssueUpdaterTest.unplan()" target="org.sonar.core.issue.IssueUpdater.plan(org.sonar.api.issue.internal.DefaultIssue,org.sonar.api.issue.ActionPlan,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1800" source="org.sonar.core.issue.IssueUpdaterTest.unset_attribute()" target="org.sonar.core.issue.IssueUpdater.setAttribute(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1801" source="org.sonar.core.issue.IssueUpdaterTest.update_severity()" target="org.sonar.core.issue.IssueUpdater.setSeverity(org.sonar.api.issue.internal.DefaultIssue,java.lang.String,org.sonar.api.issue.internal.IssueChangeContext)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1802" source="org.sonar.core.config.CorePropertyDefinitions.all()" target="org.sonar.core.config.IssueExclusionProperties.all()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1803" source="org.sonar.core.config.CorePropertyDefinitions.all()" target="org.sonar.core.config.ExclusionProperties.all()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1804" source="org.sonar.core.config.CorePropertyDefinitions.all()" target="org.sonar.core.config.SecurityProperties.all()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1805" source="org.sonar.core.config.CorePropertyDefinitions.all()" target="org.sonar.core.config.DebtProperties.all()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1806" source="org.sonar.core.config.CorePropertyDefinitions.all()" target="org.sonar.core.computation.dbcleaner.DataCleanerProperties.all()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1807" source="org.sonar.core.config.CorePropertyDefinitionsTest.all()" target="org.sonar.core.config.CorePropertyDefinitions.all()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1808" source="org.sonar.core.config.Logback.configure(java.io.File,java.util.Map)" target="org.sonar.core.config.Logback.configure(java.io.InputStream,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1809" source="org.sonar.core.config.Logback.configure(java.io.InputStream,java.util.Map)" target="org.sonar.core.config.Logback.configureContext(ch.qos.logback.classic.LoggerContext,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1810" source="org.sonar.core.config.Logback.configure(java.lang.String,java.util.Map)" target="org.sonar.core.config.Logback.configure(java.io.InputStream,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1811" source="org.sonar.core.measure.db.MeasureDtoTest#sut" target="org.sonar.core.measure.db.MeasureDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1812" source="org.sonar.core.measure.db.MeasureDtoTest.fail_to_get_out_of_bounds_variation()" target="org.sonar.core.measure.db.MeasureDto.getVariation(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1813" source="org.sonar.core.measure.db.MeasureDtoTest.fail_to_set_out_of_bounds_variation()" target="org.sonar.core.measure.db.MeasureDto.setVariation(int,java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1814" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.setComponentKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1815" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.setMetricKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1816" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1817" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.setValue(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1818" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.setData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1819" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.setVariation(int,java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1820" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1821" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1822" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.getData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1823" source="org.sonar.core.measure.db.MeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.MeasureDto.getVariation(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1824" source="org.sonar.core.measure.db.MeasureDtoTest.text_value_under_4000_characters()" target="org.sonar.core.measure.db.MeasureDto.setData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1825" source="org.sonar.core.measure.db.MeasureDtoTest.text_value_under_4000_characters()" target="org.sonar.core.measure.db.MeasureDto.getData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1826" source="org.sonar.core.measure.db.MeasureDtoTest.value_with_text_over_4000_characters()" target="org.sonar.core.measure.db.MeasureDto.setData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1827" source="org.sonar.core.measure.db.MeasureDtoTest.value_with_text_over_4000_characters()" target="org.sonar.core.measure.db.MeasureDto.getData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1828" source="org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1829" source="org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)" target="org.sonar.core.measure.db.MeasureFilterMapper.findSystemFilterByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1830" source="org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1831" source="org.sonar.core.measure.db.MeasureFilterDao.insert(org.sonar.core.measure.db.MeasureFilterDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1832" source="org.sonar.core.measure.db.MeasureFilterDao.insert(org.sonar.core.measure.db.MeasureFilterDto)" target="org.sonar.core.measure.db.MeasureFilterMapper.insert(org.sonar.core.measure.db.MeasureFilterDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1833" source="org.sonar.core.measure.db.MeasureFilterDao.insert(org.sonar.core.measure.db.MeasureFilterDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1834" source="org.sonar.core.measure.db.MeasureFilterDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1835" source="org.sonar.core.measure.db.MeasureFilterDaoTest.createDao()" target="org.sonar.core.measure.db.MeasureFilterDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1836" source="org.sonar.core.measure.db.MeasureFilterDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1837" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_find_filter()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1838" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_find_filter()" target="org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1839" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_find_filter()" target="org.sonar.core.measure.db.MeasureFilterDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1840" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_find_filter()" target="org.sonar.core.measure.db.MeasureFilterDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1841" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1842" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()" target="org.sonar.core.measure.db.MeasureFilterDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1843" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()" target="org.sonar.core.measure.db.MeasureFilterDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1844" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()" target="org.sonar.core.measure.db.MeasureFilterDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1845" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()" target="org.sonar.core.measure.db.MeasureFilterDto.setShared(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1846" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()" target="org.sonar.core.measure.db.MeasureFilterDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1847" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()" target="org.sonar.core.measure.db.MeasureFilterDto.setData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1848" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()" target="org.sonar.core.measure.db.MeasureFilterDao.insert(org.sonar.core.measure.db.MeasureFilterDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1849" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1850" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_not_find_filter()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1851" source="org.sonar.core.measure.db.MeasureFilterDaoTest.should_not_find_filter()" target="org.sonar.core.measure.db.MeasureFilterDao.findSystemFilterByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1852" source="org.sonar.core.measure.db.PastMeasureDtoTest.get_value_throw_a_NPE_if_value_is_null()" target="org.sonar.core.measure.db.PastMeasureDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1853" source="org.sonar.core.measure.db.PastMeasureDtoTest.get_value_throw_a_NPE_if_value_is_null()" target="org.sonar.core.measure.db.PastMeasureDto.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1854" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1855" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1856" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.setValue(java.lang.Double)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1857" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.setMetricId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1858" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1859" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.setCharacteristicId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1860" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.setPersonId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1861" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1862" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.hasValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1863" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1864" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.getMetricId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1865" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.getRuleId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1866" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.getCharacteristicId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1867" source="org.sonar.core.measure.db.PastMeasureDtoTest.test_getter_and_setter()" target="org.sonar.core.measure.db.PastMeasureDto.getPersonId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1868" source="org.sonar.core.plugins.RemotePlugin.marshal()" target="org.sonar.core.plugins.RemotePluginFile.getFilename()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1869" source="org.sonar.core.plugins.RemotePlugin.marshal()" target="org.sonar.core.plugins.RemotePluginFile.getHash()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1870" source="org.sonar.core.plugins.RemotePlugin.create(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.plugins.RemotePlugin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1871" source="org.sonar.core.plugins.RemotePlugin.create(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1872" source="org.sonar.core.plugins.RemotePlugin.create(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.plugins.RemotePlugin.setFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1873" source="org.sonar.core.plugins.RemotePlugin.create(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginInfo.getNonNullJarFile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1874" source="org.sonar.core.plugins.RemotePlugin.setFile(java.io.File)" target="org.sonar.core.plugins.RemotePlugin.setFile(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1875" source="org.sonar.core.plugins.RemotePlugin.setFile(java.lang.String,java.lang.String)" target="org.sonar.core.plugins.RemotePluginFile(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1876" source="org.sonar.core.plugins.RemotePlugin.unmarshal(java.lang.String)" target="org.sonar.core.plugins.RemotePlugin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1877" source="org.sonar.core.plugins.RemotePlugin.unmarshal(java.lang.String)" target="org.sonar.core.plugins.RemotePlugin.setFile(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1878" source="org.sonar.core.plugins.RemotePluginTest.shouldEqual()" target="org.sonar.core.plugins.RemotePlugin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1879" source="org.sonar.core.plugins.RemotePluginTest.shouldEqual()" target="org.sonar.core.plugins.RemotePlugin.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1880" source="org.sonar.core.plugins.RemotePluginTest.shouldMarshal()" target="org.sonar.core.plugins.RemotePlugin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1881" source="org.sonar.core.plugins.RemotePluginTest.shouldMarshal()" target="org.sonar.core.plugins.RemotePlugin.setFile(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1882" source="org.sonar.core.plugins.RemotePluginTest.shouldMarshal()" target="org.sonar.core.plugins.RemotePlugin.marshal()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1883" source="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()" target="org.sonar.core.plugins.RemotePlugin.unmarshal(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1884" source="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()" target="org.sonar.core.plugins.RemotePlugin.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1885" source="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()" target="org.sonar.core.plugins.RemotePlugin.file()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1886" source="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()" target="org.sonar.core.plugins.RemotePluginFile.getFilename()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1887" source="org.sonar.core.plugins.RemotePluginTest.shouldUnmarshal()" target="org.sonar.core.plugins.RemotePluginFile.getHash()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1888" source="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1889" source="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String)" target="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1890" source="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1891" source="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.template.LoadedTemplateMapper.countByTypeAndKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1892" source="org.sonar.core.template.LoadedTemplateDao.delete(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1893" source="org.sonar.core.template.LoadedTemplateDao.delete(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)" target="org.sonar.core.template.LoadedTemplateMapper.delete(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1894" source="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1895" source="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto)" target="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1896" source="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1897" source="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.template.LoadedTemplateMapper.insert(org.sonar.core.template.LoadedTemplateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1898" source="org.sonar.core.template.LoadedTemplateDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1899" source="org.sonar.core.template.LoadedTemplateDaoTest.createDao()" target="org.sonar.core.template.LoadedTemplateDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1900" source="org.sonar.core.template.LoadedTemplateDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1901" source="org.sonar.core.template.LoadedTemplateDaoTest.shouldCountByTypeAndKey()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1902" source="org.sonar.core.template.LoadedTemplateDaoTest.shouldCountByTypeAndKey()" target="org.sonar.core.template.LoadedTemplateDao.countByTypeAndKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1903" source="org.sonar.core.template.LoadedTemplateDaoTest.shouldInsert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1904" source="org.sonar.core.template.LoadedTemplateDaoTest.shouldInsert()" target="org.sonar.core.template.LoadedTemplateDto(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1905" source="org.sonar.core.template.LoadedTemplateDaoTest.shouldInsert()" target="org.sonar.core.template.LoadedTemplateDao.insert(org.sonar.core.template.LoadedTemplateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1906" source="org.sonar.core.template.LoadedTemplateDaoTest.shouldInsert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1907" source="org.sonar.core.timemachine.Periods$PeriodParameters(java.lang.String)" target="org.sonar.core.timemachine.Periods$PeriodParameters.findByDays(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1908" source="org.sonar.core.timemachine.Periods$PeriodParameters(java.lang.String)" target="org.sonar.core.timemachine.Periods$PeriodParameters.findByDate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1909" source="org.sonar.core.timemachine.Periods.abbreviation(int)" target="org.sonar.core.timemachine.Periods$PeriodParameters(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1910" source="org.sonar.core.timemachine.Periods.abbreviation(int)" target="org.sonar.core.timemachine.Periods.abbreviation(java.lang.String,java.lang.String,java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1911" source="org.sonar.core.timemachine.Periods.abbreviation(int)" target="org.sonar.core.timemachine.Periods$PeriodParameters.getMode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1912" source="org.sonar.core.timemachine.Periods.abbreviation(int)" target="org.sonar.core.timemachine.Periods$PeriodParameters.getParam()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1913" source="org.sonar.core.timemachine.Periods.abbreviation(int)" target="org.sonar.core.timemachine.Periods$PeriodParameters.getDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1914" source="org.sonar.core.timemachine.Periods.abbreviation(java.lang.String,java.lang.String,java.util.Date)" target="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1915" source="org.sonar.core.timemachine.Periods.abbreviation(java.lang.String,java.lang.String,java.util.Date)" target="org.sonar.core.timemachine.Periods.convertDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1916" source="org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)" target="org.sonar.core.timemachine.Periods.abbreviation(java.lang.String,java.lang.String,java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1917" source="org.sonar.core.timemachine.Periods.label(int)" target="org.sonar.core.timemachine.Periods$PeriodParameters(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1918" source="org.sonar.core.timemachine.Periods.label(int)" target="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1919" source="org.sonar.core.timemachine.Periods.label(int)" target="org.sonar.core.timemachine.Periods$PeriodParameters.getMode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1920" source="org.sonar.core.timemachine.Periods.label(int)" target="org.sonar.core.timemachine.Periods$PeriodParameters.getParam()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1921" source="org.sonar.core.timemachine.Periods.label(int)" target="org.sonar.core.timemachine.Periods$PeriodParameters.getDate()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1922" source="org.sonar.core.timemachine.Periods.label(java.lang.String,boolean,java.lang.Object[])" target="org.sonar.core.timemachine.Periods.getLocale()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1923" source="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1924" source="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String,boolean)" target="org.sonar.core.timemachine.Periods.label(java.lang.String,boolean,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1925" source="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.util.Date)" target="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1926" source="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.util.Date)" target="org.sonar.core.timemachine.Periods.convertDate(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1927" source="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)" target="org.sonar.core.timemachine.Periods.label(java.lang.String,java.lang.String,java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1928" source="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_date()" target="org.sonar.core.timemachine.Periods.abbreviation(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1929" source="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_duration_in_days()" target="org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1930" source="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_previous_analysis_with_date()" target="org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1931" source="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_previous_analysis_without_date()" target="org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1932" source="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_previous_version()" target="org.sonar.core.timemachine.Periods.abbreviation(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1933" source="org.sonar.core.timemachine.PeriodsTest.abbreviation_of_snapshot_version()" target="org.sonar.core.timemachine.Periods.abbreviation(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1934" source="org.sonar.core.timemachine.PeriodsTest.before()" target="org.sonar.core.timemachine.Periods(org.sonar.api.config.Settings,org.sonar.api.i18n.I18n)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1935" source="org.sonar.core.timemachine.PeriodsTest.label_of_date()" target="org.sonar.core.timemachine.Periods.label(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1936" source="org.sonar.core.timemachine.PeriodsTest.label_of_duration_in_days()" target="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1937" source="org.sonar.core.timemachine.PeriodsTest.label_of_previous_analysis_with_date()" target="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1938" source="org.sonar.core.timemachine.PeriodsTest.label_of_previous_analysis_without_date()" target="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1939" source="org.sonar.core.timemachine.PeriodsTest.label_of_previous_version()" target="org.sonar.core.timemachine.Periods.label(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1940" source="org.sonar.core.timemachine.PeriodsTest.label_of_previous_version_with_param_and_date()" target="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1941" source="org.sonar.core.timemachine.PeriodsTest.label_of_snapshot_version()" target="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1942" source="org.sonar.core.timemachine.PeriodsTest.shouldNotSupportUnknownModeForLabel()" target="org.sonar.core.timemachine.Periods.label(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1943" source="org.sonar.core.timemachine.PeriodsTest.shouldNotSupportUnknownModeForSnapshotLabel()" target="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1944" source="org.sonar.core.timemachine.PeriodsTest.shouldReturnLabelInModeDays()" target="org.sonar.core.timemachine.Periods.label(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1945" source="org.sonar.core.timemachine.PeriodsTest.shouldReturnLabelInModePreviousAnalysis()" target="org.sonar.core.timemachine.Periods.label(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1946" source="org.sonar.core.timemachine.PeriodsTest.shouldReturnLabelInModeVersion()" target="org.sonar.core.timemachine.Periods.label(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1947" source="org.sonar.core.timemachine.PeriodsTest.shouldReturnSnapshotLabelInModeDate()" target="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1948" source="org.sonar.core.timemachine.PeriodsTest.shouldReturnSnapshotLabelInModePreviousVersionWithParamNotNull()" target="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1949" source="org.sonar.core.timemachine.PeriodsTest.shouldReturnSnapshotLabelInModePreviousVersionWithParamNull()" target="org.sonar.core.timemachine.Periods.label(org.sonar.api.database.model.Snapshot,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1950" source="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1951" source="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)" target="org.sonar.core.persistence.DbSession.getConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1952" source="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)" target="org.sonar.core.persistence.DaoUtils.repeatCondition(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1953" source="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1954" source="org.sonar.core.properties.PropertiesDao.findNotificationSubscribers(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1955" source="org.sonar.core.properties.PropertiesDao.findNotificationSubscribers(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.properties.PropertiesMapper.findNotificationSubscribers(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1956" source="org.sonar.core.properties.PropertiesDao.findNotificationSubscribers(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1957" source="org.sonar.core.properties.PropertiesDao.findUsersForNotification(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1958" source="org.sonar.core.properties.PropertiesDao.findUsersForNotification(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.properties.PropertiesMapper.findUsersForNotification(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1959" source="org.sonar.core.properties.PropertiesDao.findUsersForNotification(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1960" source="org.sonar.core.properties.PropertiesDao.selectByQuery(org.sonar.core.properties.PropertyQuery,org.sonar.core.persistence.DbSession)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1961" source="org.sonar.core.properties.PropertiesDao.selectByQuery(org.sonar.core.properties.PropertyQuery,org.sonar.core.persistence.DbSession)" target="org.sonar.core.properties.PropertiesMapper.selectByQuery(org.sonar.core.properties.PropertyQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1962" source="org.sonar.core.properties.PropertiesDao.selectEnabledDescendantModuleProperties(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertiesMapper.selectDescendantModuleProperties(java.lang.String,java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1963" source="org.sonar.core.properties.PropertiesDao.selectGlobalProperties()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1964" source="org.sonar.core.properties.PropertiesDao.selectGlobalProperties()" target="org.sonar.core.properties.PropertiesDao.selectGlobalProperties(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1965" source="org.sonar.core.properties.PropertiesDao.selectGlobalProperties()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1966" source="org.sonar.core.properties.PropertiesDao.selectGlobalProperties(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertiesMapper.selectGlobalProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1967" source="org.sonar.core.properties.PropertiesDao.selectProjectProperties(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1968" source="org.sonar.core.properties.PropertiesDao.selectProjectProperties(java.lang.String)" target="org.sonar.core.properties.PropertiesDao.selectProjectProperties(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1969" source="org.sonar.core.properties.PropertiesDao.selectProjectProperties(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1970" source="org.sonar.core.properties.PropertiesDao.selectProjectProperties(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1971" source="org.sonar.core.properties.PropertiesDao.selectProjectProperties(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.properties.PropertiesMapper.selectProjectProperties(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1972" source="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1973" source="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)" target="org.sonar.core.properties.PropertiesMapper.selectByKey(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1974" source="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)" target="org.sonar.core.properties.PropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1975" source="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)" target="org.sonar.core.properties.PropertyDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1976" source="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1977" source="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1978" source="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)" target="org.sonar.core.properties.PropertiesMapper.selectByKey(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1979" source="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)" target="org.sonar.core.properties.PropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1980" source="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)" target="org.sonar.core.properties.PropertyDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1981" source="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)" target="org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1982" source="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1983" source="org.sonar.core.properties.PropertiesDao.deleteAllProperties(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1984" source="org.sonar.core.properties.PropertiesDao.deleteAllProperties(java.lang.String)" target="org.sonar.core.properties.PropertiesMapper.deleteAllProperties(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1985" source="org.sonar.core.properties.PropertiesDao.deleteAllProperties(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1986" source="org.sonar.core.properties.PropertiesDao.deleteGlobalProperties()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1987" source="org.sonar.core.properties.PropertiesDao.deleteGlobalProperties()" target="org.sonar.core.properties.PropertiesMapper.deleteGlobalProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1988" source="org.sonar.core.properties.PropertiesDao.deleteGlobalProperties()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1989" source="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1990" source="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String)" target="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1991" source="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1992" source="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertiesMapper.deleteGlobalProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1993" source="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1994" source="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String)" target="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1995" source="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1996" source="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertiesMapper.deleteProjectProperties(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1997" source="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1998" source="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long)" target="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e1999" source="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2000" source="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertiesMapper.deleteProjectProperty(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2001" source="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2002" source="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)" target="org.sonar.core.properties.PropertiesMapper.renamePropertyKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2003" source="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2004" source="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2005" source="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2006" source="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" target="org.sonar.core.properties.PropertiesMapper.deleteGlobalProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2007" source="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" target="org.sonar.core.properties.PropertiesMapper.insert(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2008" source="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" target="org.sonar.core.properties.PropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2009" source="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" target="org.sonar.core.properties.PropertyDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2010" source="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" target="org.sonar.core.properties.PropertyDto.setValue(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2011" source="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2012" source="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2013" source="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2014" source="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)" target="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2015" source="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2016" source="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertiesMapper.selectByKey(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2017" source="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertyDto.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2018" source="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertyDto.setValue(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2019" source="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertiesMapper.update(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2020" source="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertiesMapper.insert(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2021" source="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2022" source="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2023" source="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2024" source="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.properties.PropertiesMapper.updateProperties(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2025" source="org.sonar.core.properties.PropertiesDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2026" source="org.sonar.core.properties.PropertiesDaoTest.findById(java.util.List,int)" target="org.sonar.core.properties.PropertyDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2027" source="org.sonar.core.properties.PropertiesDaoTest.createDao()" target="org.sonar.core.properties.PropertiesDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2028" source="org.sonar.core.properties.PropertiesDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2029" source="org.sonar.core.properties.PropertiesDaoTest.createDao()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2030" source="org.sonar.core.properties.PropertiesDaoTest.deleteAllProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2031" source="org.sonar.core.properties.PropertiesDaoTest.deleteAllProperties()" target="org.sonar.core.properties.PropertiesDao.deleteAllProperties(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2032" source="org.sonar.core.properties.PropertiesDaoTest.deleteAllProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2033" source="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2034" source="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperties()" target="org.sonar.core.properties.PropertiesDao.deleteGlobalProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2035" source="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2036" source="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperty()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2037" source="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperty()" target="org.sonar.core.properties.PropertiesDao.deleteGlobalProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2038" source="org.sonar.core.properties.PropertiesDaoTest.deleteGlobalProperty()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2039" source="org.sonar.core.properties.PropertiesDaoTest.delete_project_properties()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2040" source="org.sonar.core.properties.PropertiesDaoTest.delete_project_properties()" target="org.sonar.core.properties.PropertiesDao.deleteProjectProperties(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2041" source="org.sonar.core.properties.PropertiesDaoTest.delete_project_properties()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2042" source="org.sonar.core.properties.PropertiesDaoTest.delete_project_property()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2043" source="org.sonar.core.properties.PropertiesDaoTest.delete_project_property()" target="org.sonar.core.properties.PropertiesDao.deleteProjectProperty(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2044" source="org.sonar.core.properties.PropertiesDaoTest.delete_project_property()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2045" source="org.sonar.core.properties.PropertiesDaoTest.findNotificationSubscribers()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2046" source="org.sonar.core.properties.PropertiesDaoTest.findNotificationSubscribers()" target="org.sonar.core.properties.PropertiesDao.findNotificationSubscribers(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2047" source="org.sonar.core.properties.PropertiesDaoTest.hasNotificationSubscribers()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2048" source="org.sonar.core.properties.PropertiesDaoTest.hasNotificationSubscribers()" target="org.sonar.core.properties.PropertiesDao.hasProjectNotificationSubscribersForDispatchers(java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2049" source="org.sonar.core.properties.PropertiesDaoTest.insertGlobalProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2050" source="org.sonar.core.properties.PropertiesDaoTest.insertGlobalProperties()" target="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2051" source="org.sonar.core.properties.PropertiesDaoTest.insertGlobalProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2052" source="org.sonar.core.properties.PropertiesDaoTest.renamePropertyKey()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2053" source="org.sonar.core.properties.PropertiesDaoTest.renamePropertyKey()" target="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2054" source="org.sonar.core.properties.PropertiesDaoTest.renamePropertyKey()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2055" source="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2056" source="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()" target="org.sonar.core.properties.PropertiesDao.selectGlobalProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2057" source="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()" target="org.sonar.core.properties.PropertiesDaoTest.findById(java.util.List,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2058" source="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()" target="org.sonar.core.properties.PropertyDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2059" source="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperties()" target="org.sonar.core.properties.PropertyDto.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2060" source="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperty()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2061" source="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperty()" target="org.sonar.core.properties.PropertiesDao.selectGlobalProperty(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2062" source="org.sonar.core.properties.PropertiesDaoTest.selectGlobalProperty()" target="org.sonar.core.properties.PropertyDto.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2063" source="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2064" source="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperties()" target="org.sonar.core.properties.PropertiesDao.selectProjectProperties(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2065" source="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperties()" target="org.sonar.core.properties.PropertyDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2066" source="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperties()" target="org.sonar.core.properties.PropertyDto.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2067" source="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperty()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2068" source="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperty()" target="org.sonar.core.properties.PropertiesDao.selectProjectProperty(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2069" source="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperty()" target="org.sonar.core.properties.PropertyDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2070" source="org.sonar.core.properties.PropertiesDaoTest.selectProjectProperty()" target="org.sonar.core.properties.PropertyDto.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2071" source="org.sonar.core.properties.PropertiesDaoTest.select_by_query()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2072" source="org.sonar.core.properties.PropertiesDaoTest.select_by_query()" target="org.sonar.core.properties.PropertiesDao.selectByQuery(org.sonar.core.properties.PropertyQuery,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2073" source="org.sonar.core.properties.PropertiesDaoTest.select_by_query()" target="org.sonar.core.properties.PropertyQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2074" source="org.sonar.core.properties.PropertiesDaoTest.select_by_query()" target="org.sonar.core.properties.PropertyQuery$Builder.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2075" source="org.sonar.core.properties.PropertiesDaoTest.select_by_query()" target="org.sonar.core.properties.PropertyQuery$Builder.setComponentId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2076" source="org.sonar.core.properties.PropertiesDaoTest.select_by_query()" target="org.sonar.core.properties.PropertyQuery$Builder.setUserId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2077" source="org.sonar.core.properties.PropertiesDaoTest.select_by_query()" target="org.sonar.core.properties.PropertyQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2078" source="org.sonar.core.properties.PropertiesDaoTest.select_by_query()" target="org.sonar.core.properties.PropertyDto.getValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2079" source="org.sonar.core.properties.PropertiesDaoTest.select_module_properties_tree()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2080" source="org.sonar.core.properties.PropertiesDaoTest.select_module_properties_tree()" target="org.sonar.core.properties.PropertiesDao.selectEnabledDescendantModuleProperties(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2081" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2082" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()" target="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2083" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()" target="org.sonar.core.properties.PropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2084" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()" target="org.sonar.core.properties.PropertyDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2085" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()" target="org.sonar.core.properties.PropertyDto.setValue(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2086" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()" target="org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2087" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()" target="org.sonar.core.properties.PropertyDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2088" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2089" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2090" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()" target="org.sonar.core.properties.PropertiesDao.setProperty(org.sonar.core.properties.PropertyDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2091" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()" target="org.sonar.core.properties.PropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2092" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()" target="org.sonar.core.properties.PropertyDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2093" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()" target="org.sonar.core.properties.PropertyDto.setValue(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2094" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()" target="org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2095" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()" target="org.sonar.core.properties.PropertyDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2096" source="org.sonar.core.properties.PropertiesDaoTest.setProperty_update()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2097" source="org.sonar.core.properties.PropertiesDaoTest.shouldFindUsersForNotification()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2098" source="org.sonar.core.properties.PropertiesDaoTest.shouldFindUsersForNotification()" target="org.sonar.core.properties.PropertiesDao.findUsersForNotification(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2099" source="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_an_empty_key()" target="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2100" source="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_if_same_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2101" source="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_if_same_key()" target="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2102" source="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_if_same_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2103" source="org.sonar.core.properties.PropertiesDaoTest.should_not_rename_with_empty_key()" target="org.sonar.core.properties.PropertiesDao.renamePropertyKey(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2104" source="org.sonar.core.properties.PropertiesDaoTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2105" source="org.sonar.core.properties.PropertiesDaoTest.updateGlobalProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2106" source="org.sonar.core.properties.PropertiesDaoTest.updateGlobalProperties()" target="org.sonar.core.properties.PropertiesDao.saveGlobalProperties(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2107" source="org.sonar.core.properties.PropertiesDaoTest.updateGlobalProperties()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2108" source="org.sonar.core.properties.PropertiesDaoTest.updatePropertiesFromKeyAndValueToNewValue()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2109" source="org.sonar.core.properties.PropertiesDaoTest.updatePropertiesFromKeyAndValueToNewValue()" target="org.sonar.core.properties.PropertiesDao.updateProperties(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2110" source="org.sonar.core.properties.PropertiesDaoTest.updatePropertiesFromKeyAndValueToNewValue()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2111" source="org.sonar.core.properties.PropertyDtoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2112" source="org.sonar.core.properties.PropertyDtoTest.testEquals()" target="org.sonar.core.properties.PropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2113" source="org.sonar.core.properties.PropertyDtoTest.testEquals()" target="org.sonar.core.properties.PropertyDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2114" source="org.sonar.core.properties.PropertyDtoTest.testEquals()" target="org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2115" source="org.sonar.core.properties.PropertyDtoTest.testHashCode()" target="org.sonar.core.properties.PropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2116" source="org.sonar.core.properties.PropertyDtoTest.testHashCode()" target="org.sonar.core.properties.PropertyDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2117" source="org.sonar.core.properties.PropertyDtoTest.testHashCode()" target="org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2118" source="org.sonar.core.properties.PropertyDtoTest.testHashCode()" target="org.sonar.core.properties.PropertyDto.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2119" source="org.sonar.core.properties.PropertyDtoTest.testToString()" target="org.sonar.core.properties.PropertyDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2120" source="org.sonar.core.properties.PropertyDtoTest.testToString()" target="org.sonar.core.properties.PropertyDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2121" source="org.sonar.core.properties.PropertyDtoTest.testToString()" target="org.sonar.core.properties.PropertyDto.setValue(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2122" source="org.sonar.core.properties.PropertyDtoTest.testToString()" target="org.sonar.core.properties.PropertyDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2123" source="org.sonar.core.properties.PropertyDtoTest.testToString()" target="org.sonar.core.properties.PropertyDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2124" source="org.sonar.core.properties.PropertyDtoTest.testToString()" target="org.sonar.core.properties.PropertyDto.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2125" source="org.sonar.core.properties.PropertyQuery$Builder.build()" target="org.sonar.core.properties.PropertyQuery(org.sonar.core.properties.PropertyQuery$Builder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2126" source="org.sonar.core.properties.PropertyQuery.builder()" target="org.sonar.core.properties.PropertyQuery$Builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2127" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2128" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2129" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2130" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationMapper.selectProjects(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2131" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long,int,int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2132" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2133" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2134" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2135" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2136" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2137" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.projectSearch(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2138" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2139" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.search_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2140" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2141" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2142" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2143" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2144" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_all_projects_by_query()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2145" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2146" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2147" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2148" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2149" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2150" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.select_projects_by_query()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2151" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.setUp()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2152" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2153" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2154" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDao.selectProjects(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2155" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2156" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2157" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2158" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDaoTest.should_be_sorted_by_project_name()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2159" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2160" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2161" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2162" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation.setMember(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2163" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2164" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2165" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2166" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setGateId(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2167" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2168" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation.id()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2169" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2170" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation.isMember()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2171" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2172" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2173" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2174" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.setGateId(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2175" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationDto.toQgateAssociation()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2176" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation.id()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2177" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2178" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationDtoTest.to_assoc_with_project_not_having_assoc()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociation.isMember()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2179" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.initMembership()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2180" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.initPageIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2181" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.initPageSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2182" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2183" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery(org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder)" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.projectSearchToSql(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2184" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2185" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_invalid_membership()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2186" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_invalid_membership()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2187" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_invalid_membership()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2188" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_invalid_membership()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2189" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_null_login()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2190" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_null_login()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.gateId(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2191" source="org.sonar.core.qualitygate.db.ProjectQgateAssociationQueryTest.fail_on_null_login()" target="org.sonar.core.qualitygate.db.ProjectQgateAssociationQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2192" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2193" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2194" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2195" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2196" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionMapper.selectForQualityGate(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2197" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2198" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2199" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2200" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2201" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionMapper.selectById(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2202" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2203" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2204" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2205" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2206" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionMapper.delete(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2207" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2208" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2209" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics()" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2210" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2211" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2212" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionMapper.deleteConditionsWithInvalidMetrics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2213" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2214" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2215" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2216" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2217" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionMapper.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2218" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2219" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2220" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2221" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2222" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2223" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionMapper.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2224" source="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2225" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2226" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.createDao()" target="org.sonar.core.qualitygate.db.QualityGateConditionDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2227" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2228" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.shouldCleanConditions()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2229" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.shouldCleanConditions()" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.deleteConditionsWithInvalidMetrics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2230" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.shouldCleanConditions()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2231" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2232" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.delete(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2233" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2234" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2235" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testDelete()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2236" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2237" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2238" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setQualityGateId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2239" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setMetricId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2240" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setOperator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2241" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setWarningThreshold(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2242" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setErrorThreshold(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2243" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setPeriod(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2244" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.insert(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2245" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2246" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2247" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2248" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectById(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2249" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2250" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getMetricId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2251" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getOperator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2252" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getPeriod()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2253" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getQualityGateId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2254" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getWarningThreshold()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2255" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getErrorThreshold()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2256" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectForQualityGate()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2257" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testSelectForQualityGate()" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.selectForQualityGate(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2258" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2259" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateConditionDao.update(org.sonar.core.qualitygate.db.QualityGateConditionDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2260" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2261" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2262" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setMetricId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2263" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setOperator(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2264" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setPeriod(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2265" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setWarningThreshold(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2266" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.setErrorThreshold(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2267" source="org.sonar.core.qualitygate.db.QualityGateConditionDaoTest.testUpdate()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2268" source="org.sonar.core.qualitygate.db.QualityGateConditionDto.isOperatorAllowed(java.lang.String,org.sonar.api.measures.Metric$ValueType)" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.getOperatorsForType(org.sonar.api.measures.Metric$ValueType)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2269" source="org.sonar.core.qualitygate.db.QualityGateConditionDtoTest.should_validate_operators_for_metric_type()" target="org.sonar.core.qualitygate.db.QualityGateConditionDto.isOperatorAllowed(java.lang.String,org.sonar.api.measures.Metric$ValueType)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2270" source="org.sonar.core.qualitygate.db.QualityGateDao.selectAll()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2271" source="org.sonar.core.qualitygate.db.QualityGateDao.selectAll()" target="org.sonar.core.qualitygate.db.QualityGateDao.selectAll(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2272" source="org.sonar.core.qualitygate.db.QualityGateDao.selectAll()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2273" source="org.sonar.core.qualitygate.db.QualityGateDao.selectAll(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2274" source="org.sonar.core.qualitygate.db.QualityGateDao.selectAll(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateMapper.selectAll()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2275" source="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2276" source="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long)" target="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2277" source="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2278" source="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2279" source="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateMapper.selectById(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2280" source="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2281" source="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String)" target="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2282" source="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2283" source="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2284" source="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateMapper.selectByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2285" source="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2286" source="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto)" target="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2287" source="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2288" source="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2289" source="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateMapper.delete(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2290" source="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2291" source="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2292" source="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto)" target="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2293" source="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2294" source="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2295" source="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateMapper.insert(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2296" source="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2297" source="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2298" source="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto)" target="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2299" source="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2300" source="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2301" source="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateMapper.update(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2302" source="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualitygate.db.QualityGateDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2303" source="org.sonar.core.qualitygate.db.QualityGateDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2304" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.createDao()" target="org.sonar.core.qualitygate.db.QualityGateDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2305" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2306" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2307" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()" target="org.sonar.core.qualitygate.db.QualityGateDao.delete(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2308" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()" target="org.sonar.core.qualitygate.db.QualityGateDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2309" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()" target="org.sonar.core.qualitygate.db.QualityGateDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2310" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testDelete()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2311" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2312" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2313" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2314" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateDao.insert(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2315" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2316" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testInsert()" target="org.sonar.core.qualitygate.db.QualityGateDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2317" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectAll()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2318" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectAll()" target="org.sonar.core.qualitygate.db.QualityGateDao.selectAll()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2319" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectAll()" target="org.sonar.core.qualitygate.db.QualityGateDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2320" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectById()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2321" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateDao.selectById(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2322" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectById()" target="org.sonar.core.qualitygate.db.QualityGateDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2323" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectByName()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2324" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectByName()" target="org.sonar.core.qualitygate.db.QualityGateDao.selectByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2325" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testSelectByName()" target="org.sonar.core.qualitygate.db.QualityGateDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2326" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2327" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateDao.update(org.sonar.core.qualitygate.db.QualityGateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2328" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2329" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2330" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()" target="org.sonar.core.qualitygate.db.QualityGateDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2331" source="org.sonar.core.qualitygate.db.QualityGateDaoTest.testUpdate()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2332" source="org.sonar.core.user.AuthorDao.countDeveloperLogins(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2333" source="org.sonar.core.user.AuthorDao.countDeveloperLogins(long)" target="org.sonar.core.user.AuthorMapper.countDeveloperLogins(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2334" source="org.sonar.core.user.AuthorDao.countDeveloperLogins(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2335" source="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2336" source="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(java.util.Collection)" target="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(org.apache.ibatis.session.SqlSession,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2337" source="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2338" source="org.sonar.core.user.AuthorDao$1.apply(java.util.List)" target="org.sonar.core.user.AuthorMapper.selectScmAccountsByDeveloperUuids(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2339" source="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(org.apache.ibatis.session.SqlSession,java.util.Collection)" target="org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2340" source="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(org.apache.ibatis.session.SqlSession,java.util.Collection)" target="org.sonar.core.user.AuthorDao$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2341" source="org.sonar.core.user.AuthorDao.selectScmAccountsByDeveloperUuids(org.apache.ibatis.session.SqlSession,java.util.Collection)" target="org.sonar.core.user.AuthorMapper.selectScmAccountsByDeveloperUuids(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2342" source="org.sonar.core.user.AuthorDao.selectByLogin(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2343" source="org.sonar.core.user.AuthorDao.selectByLogin(java.lang.String)" target="org.sonar.core.user.AuthorMapper.selectByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2344" source="org.sonar.core.user.AuthorDao.selectByLogin(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2345" source="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2346" source="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)" target="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2347" source="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2348" source="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.AuthorDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2349" source="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.AuthorDto.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2350" source="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.AuthorDto.setPersonId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2351" source="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.AuthorDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2352" source="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.AuthorDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2353" source="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.AuthorMapper.insert(org.sonar.core.user.AuthorDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2354" source="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2355" source="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.getModuleUuidPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2356" source="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2357" source="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2358" source="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDao.insertUsingExistingSession(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2359" source="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" target="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2360" source="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2361" source="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2362" source="org.sonar.core.user.AuthorDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2363" source="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2364" source="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()" target="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2365" source="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()" target="org.sonar.core.resource.ResourceDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2366" source="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()" target="org.sonar.core.resource.ResourceDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2367" source="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()" target="org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2368" source="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()" target="org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2369" source="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()" target="org.sonar.core.resource.ResourceDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2370" source="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()" target="org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2371" source="org.sonar.core.user.AuthorDaoTest.add_missing_module_uuid_path()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2372" source="org.sonar.core.user.AuthorDaoTest.countDeveloperLogins()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2373" source="org.sonar.core.user.AuthorDaoTest.countDeveloperLogins()" target="org.sonar.core.user.AuthorDao.countDeveloperLogins(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2374" source="org.sonar.core.user.AuthorDaoTest.setUp()" target="org.sonar.core.user.AuthorDao(org.sonar.core.persistence.MyBatis,org.sonar.core.resource.ResourceDao)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2375" source="org.sonar.core.user.AuthorDaoTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2376" source="org.sonar.core.user.AuthorDaoTest.setUp()" target="org.sonar.core.resource.ResourceDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2377" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthor()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2378" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthor()" target="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2379" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthor()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2380" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2381" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()" target="org.sonar.core.resource.ResourceDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2382" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()" target="org.sonar.core.resource.ResourceDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2383" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()" target="org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2384" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()" target="org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2385" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()" target="org.sonar.core.resource.ResourceDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2386" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()" target="org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2387" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()" target="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2388" source="org.sonar.core.user.AuthorDaoTest.shouldInsertAuthorAndDeveloper()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2389" source="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2390" source="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()" target="org.sonar.core.resource.ResourceDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2391" source="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()" target="org.sonar.core.resource.ResourceDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2392" source="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()" target="org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2393" source="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()" target="org.sonar.core.user.AuthorDao.insertAuthorAndDeveloper(java.lang.String,org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2394" source="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsAndDevelopersDuplication()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2395" source="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsDuplication()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2396" source="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsDuplication()" target="org.sonar.core.user.AuthorDao.insertAuthor(java.lang.String,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2397" source="org.sonar.core.user.AuthorDaoTest.shouldPreventAuthorsDuplication()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2398" source="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2399" source="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()" target="org.sonar.core.user.AuthorDao.selectByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2400" source="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()" target="org.sonar.core.user.AuthorDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2401" source="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()" target="org.sonar.core.user.AuthorDto.getPersonId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2402" source="org.sonar.core.user.AuthorDaoTest.shouldSelectByLogin()" target="org.sonar.core.user.AuthorDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2403" source="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2404" source="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)" target="org.sonar.core.user.AuthorizationDao.keepAuthorizedComponentKeys(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2405" source="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2406" source="org.sonar.core.user.AuthorizationDao$1.apply(java.util.List)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2407" source="org.sonar.core.user.AuthorizationDao$1.apply(java.util.List)" target="org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForAnonymous(java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2408" source="org.sonar.core.user.AuthorizationDao$1.apply(java.util.List)" target="org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForUser(java.lang.Integer,java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2409" source="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2410" source="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" target="org.sonar.core.user.AuthorizationDao$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2411" source="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2412" source="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" target="org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForAnonymous(java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2413" source="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)" target="org.sonar.core.user.AuthorizationMapper.keepAuthorizedProjectIdsForUser(java.lang.Integer,java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2414" source="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2415" source="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2416" source="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2417" source="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2418" source="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2419" source="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2420" source="org.sonar.core.user.AuthorizationDao.keepAuthorizedComponentKeys(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Integer,java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2421" source="org.sonar.core.user.AuthorizationDao.keepAuthorizedComponentKeys(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Integer,java.lang.String)" target="org.sonar.core.user.AuthorizationMapper.keepAuthorizedComponentKeysForAnonymous(java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2422" source="org.sonar.core.user.AuthorizationDao.keepAuthorizedComponentKeys(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Integer,java.lang.String)" target="org.sonar.core.user.AuthorizationMapper.keepAuthorizedComponentKeysForUser(java.lang.Integer,java.lang.String,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2423" source="org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2424" source="org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2425" source="org.sonar.core.user.AuthorizationDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2426" source="org.sonar.core.user.AuthorizationDaoTest.anonymous_should_be_authorized()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2427" source="org.sonar.core.user.AuthorizationDaoTest.anonymous_should_be_authorized()" target="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2428" source="org.sonar.core.user.AuthorizationDaoTest.group_should_be_authorized()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2429" source="org.sonar.core.user.AuthorizationDaoTest.group_should_be_authorized()" target="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2430" source="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_anonymous()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2431" source="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_anonymous()" target="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2432" source="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_group()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2433" source="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_group()" target="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2434" source="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_user()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2435" source="org.sonar.core.user.AuthorizationDaoTest.is_authorized_component_key_for_user()" target="org.sonar.core.user.AuthorizationDao.isAuthorizedComponentKey(java.lang.String,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2436" source="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_anonymous()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2437" source="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_anonymous()" target="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2438" source="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_group()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2439" source="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_group()" target="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2440" source="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_user()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2441" source="org.sonar.core.user.AuthorizationDaoTest.keep_authorized_project_ids_for_user()" target="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2442" source="org.sonar.core.user.AuthorizationDaoTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2443" source="org.sonar.core.user.AuthorizationDaoTest.setUp()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2444" source="org.sonar.core.user.AuthorizationDaoTest.setUp()" target="org.sonar.core.user.AuthorizationDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2445" source="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_anonymous()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2446" source="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_anonymous()" target="org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2447" source="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_group_anyone()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2448" source="org.sonar.core.user.AuthorizationDaoTest.should_return_global_permissions_for_group_anyone()" target="org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2449" source="org.sonar.core.user.AuthorizationDaoTest.should_return_group_global_permissions()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2450" source="org.sonar.core.user.AuthorizationDaoTest.should_return_group_global_permissions()" target="org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2451" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_anonymous()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2452" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_anonymous()" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2453" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_group()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2454" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_group()" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2455" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_user()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2456" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_keys_for_user()" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2457" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_anonymous()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2458" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_anonymous()" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2459" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_anonymous()" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2460" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_group()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2461" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_group()" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2462" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_group()" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2463" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_user()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2464" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_user()" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsUuids(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2465" source="org.sonar.core.user.AuthorizationDaoTest.should_return_root_project_uuids_for_user()" target="org.sonar.core.user.AuthorizationDao.selectAuthorizedRootProjectsKeys(java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2466" source="org.sonar.core.user.AuthorizationDaoTest.should_return_user_global_permissions()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2467" source="org.sonar.core.user.AuthorizationDaoTest.should_return_user_global_permissions()" target="org.sonar.core.user.AuthorizationDao.selectGlobalPermissions(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2468" source="org.sonar.core.user.AuthorizationDaoTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2469" source="org.sonar.core.user.AuthorizationDaoTest.user_should_be_authorized()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2470" source="org.sonar.core.user.AuthorizationDaoTest.user_should_be_authorized()" target="org.sonar.core.user.AuthorizationDao.keepAuthorizedProjectIds(org.sonar.core.persistence.DbSession,java.util.Collection,java.lang.Integer,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2471" source="org.sonar.core.user.DefaultUserFinder.find(org.sonar.api.user.UserQuery)" target="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2472" source="org.sonar.core.user.DefaultUserFinder.find(org.sonar.api.user.UserQuery)" target="org.sonar.core.user.DefaultUserFinder.toUsers(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2473" source="org.sonar.core.user.DefaultUserFinder.findByLogins(java.util.List)" target="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2474" source="org.sonar.core.user.DefaultUserFinder.findByLogins(java.util.List)" target="org.sonar.core.user.DefaultUserFinder.toUsers(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2475" source="org.sonar.core.user.DefaultUserFinder.toUsers(java.util.Collection)" target="org.sonar.core.user.UserDto.toUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2476" source="org.sonar.core.user.DefaultUserFinder.findByLogin(java.lang.String)" target="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2477" source="org.sonar.core.user.DefaultUserFinder.findByLogin(java.lang.String)" target="org.sonar.core.user.UserDto.toUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2478" source="org.sonar.core.user.DefaultUserFinderTest#finder" target="org.sonar.core.user.DefaultUserFinder(org.sonar.core.user.UserDao)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2479" source="org.sonar.core.user.DefaultUserFinderTest.findByLogin()" target="org.sonar.core.user.UserDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2480" source="org.sonar.core.user.DefaultUserFinderTest.findByLogin()" target="org.sonar.core.user.UserDto.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2481" source="org.sonar.core.user.DefaultUserFinderTest.findByLogin()" target="org.sonar.core.user.UserDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2482" source="org.sonar.core.user.DefaultUserFinderTest.findByLogin()" target="org.sonar.core.user.UserDto.setEmail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2483" source="org.sonar.core.user.DefaultUserFinderTest.findByLogin()" target="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2484" source="org.sonar.core.user.DefaultUserFinderTest.findByLogin()" target="org.sonar.core.user.DefaultUserFinder.findByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2485" source="org.sonar.core.user.DefaultUserFinderTest.findByLogins()" target="org.sonar.core.user.UserDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2486" source="org.sonar.core.user.DefaultUserFinderTest.findByLogins()" target="org.sonar.core.user.UserDto.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2487" source="org.sonar.core.user.DefaultUserFinderTest.findByLogins()" target="org.sonar.core.user.UserDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2488" source="org.sonar.core.user.DefaultUserFinderTest.findByLogins()" target="org.sonar.core.user.UserDto.setEmail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2489" source="org.sonar.core.user.DefaultUserFinderTest.findByLogins()" target="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2490" source="org.sonar.core.user.DefaultUserFinderTest.findByLogins()" target="org.sonar.core.user.DefaultUserFinder.findByLogins(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2491" source="org.sonar.core.user.DefaultUserFinderTest.findByQuery()" target="org.sonar.core.user.DefaultUserFinder.find(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2492" source="org.sonar.core.user.DefaultUserFinderTest.findByQuery()" target="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2493" source="org.sonar.core.user.DefaultUserTest.test_email()" target="org.sonar.core.user.DefaultUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2494" source="org.sonar.core.user.DefaultUserTest.test_email()" target="org.sonar.core.user.DefaultUser.email()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2495" source="org.sonar.core.user.DefaultUserTest.test_email()" target="org.sonar.core.user.DefaultUser.setEmail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2496" source="org.sonar.core.user.DefaultUserTest.test_object_methods()" target="org.sonar.core.user.DefaultUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2497" source="org.sonar.core.user.DefaultUserTest.test_object_methods()" target="org.sonar.core.user.DefaultUser.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2498" source="org.sonar.core.user.DefaultUserTest.test_object_methods()" target="org.sonar.core.user.DefaultUser.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2499" source="org.sonar.core.user.DefaultUserTest.test_object_methods()" target="org.sonar.core.user.DefaultUser.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2500" source="org.sonar.core.user.DefaultUserTest.test_object_methods()" target="org.sonar.core.user.DefaultUser.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2501" source="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)" target="org.sonar.core.user.UserDto.getEmail()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2502" source="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)" target="org.sonar.core.user.UserDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2503" source="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)" target="org.sonar.core.user.UserDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2504" source="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)" target="org.sonar.core.user.UserDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2505" source="org.sonar.core.user.DeprecatedUserFinder.findById(int)" target="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2506" source="org.sonar.core.user.DeprecatedUserFinder.findById(int)" target="org.sonar.core.user.UserDao.getUser(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2507" source="org.sonar.core.user.DeprecatedUserFinder.findByLogin(java.lang.String)" target="org.sonar.core.user.DeprecatedUserFinder.copy(org.sonar.core.user.UserDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2508" source="org.sonar.core.user.DeprecatedUserFinder.findByLogin(java.lang.String)" target="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2509" source="org.sonar.core.user.DeprecatedUserFinderTest#dbTester" target="org.sonar.core.persistence.DbTester()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2510" source="org.sonar.core.user.DeprecatedUserFinderTest.init()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2511" source="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserById()" target="org.sonar.core.user.DeprecatedUserFinder(org.sonar.core.user.UserDao)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2512" source="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserById()" target="org.sonar.core.user.UserDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2513" source="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserById()" target="org.sonar.core.persistence.DbTester.myBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2514" source="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserById()" target="org.sonar.core.user.DeprecatedUserFinder.findById(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2515" source="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserByLogin()" target="org.sonar.core.user.DeprecatedUserFinder(org.sonar.core.user.UserDao)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2516" source="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserByLogin()" target="org.sonar.core.user.UserDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2517" source="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserByLogin()" target="org.sonar.core.persistence.DbTester.myBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2518" source="org.sonar.core.user.DeprecatedUserFinderTest.shouldFindUserByLogin()" target="org.sonar.core.user.DeprecatedUserFinder.findByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2519" source="org.sonar.core.user.GroupDto()" target="org.sonar.core.persistence.Dto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2520" source="org.sonar.core.persistence.Dto.getKey()" target="org.sonar.core.user.GroupDto.getKey()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e2521" source="org.sonar.core.user.GroupDtoTest.getter_and_setter()" target="org.sonar.core.user.GroupDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2522" source="org.sonar.core.user.GroupDtoTest.getter_and_setter()" target="org.sonar.core.user.GroupDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2523" source="org.sonar.core.user.GroupDtoTest.getter_and_setter()" target="org.sonar.core.user.GroupDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2524" source="org.sonar.core.user.GroupDtoTest.getter_and_setter()" target="org.sonar.core.user.GroupDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2525" source="org.sonar.core.user.GroupDtoTest.getter_and_setter()" target="org.sonar.core.user.GroupDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2526" source="org.sonar.core.user.GroupDtoTest.getter_and_setter()" target="org.sonar.core.user.GroupDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2527" source="org.sonar.core.user.GroupDtoTest.getter_and_setter()" target="org.sonar.core.user.GroupDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2528" source="org.sonar.core.user.GroupDtoTest.getter_and_setter()" target="org.sonar.core.user.GroupDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2529" source="org.sonar.core.user.GroupMembershipDao$2.apply(java.util.List)" target="org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2530" source="org.sonar.core.user.GroupMembershipDao$2.apply(java.util.List)" target="org.sonar.core.user.GroupMembershipMapper.selectGroupsByLogins(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2531" source="org.sonar.core.user.GroupMembershipDao$2.apply(java.util.List)" target="org.sonar.core.user.LoginGroup.login()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2532" source="org.sonar.core.user.GroupMembershipDao$2.apply(java.util.List)" target="org.sonar.core.user.LoginGroup.groupName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2533" source="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2534" source="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.GroupMembershipDao$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2535" source="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2536" source="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.GroupMembershipMapper.selectGroupsByLogins(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2537" source="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.LoginGroup.login()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2538" source="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.LoginGroup.groupName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2539" source="org.sonar.core.user.GroupMembershipDao.countGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" target="org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2540" source="org.sonar.core.user.GroupMembershipDao.countGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" target="org.sonar.core.user.GroupMembershipMapper.countGroups(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2541" source="org.sonar.core.user.GroupMembershipDao.countMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery)" target="org.sonar.core.user.UserMembershipQuery.groupId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2542" source="org.sonar.core.user.GroupMembershipDao.countMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery)" target="org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2543" source="org.sonar.core.user.GroupMembershipDao.countMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery)" target="org.sonar.core.user.GroupMembershipMapper.countMembers(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2544" source="org.sonar.core.user.GroupMembershipDao.selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)" target="org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2545" source="org.sonar.core.user.GroupMembershipDao.selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)" target="org.sonar.core.user.GroupMembershipMapper.selectGroups(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2546" source="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2547" source="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2548" source="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2549" source="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2550" source="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)" target="org.sonar.core.user.UserMembershipQuery.groupId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2551" source="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)" target="org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2552" source="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)" target="org.sonar.core.user.GroupMembershipMapper.selectMembers(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2553" source="org.sonar.core.user.GroupMembershipDao$1.apply(java.util.List)" target="org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2554" source="org.sonar.core.user.GroupMembershipDao$1.apply(java.util.List)" target="org.sonar.core.user.GroupMembershipMapper.countUsersByGroup(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2555" source="org.sonar.core.user.GroupMembershipDao$1.apply(java.util.List)" target="org.sonar.core.user.GroupUserCount.groupName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2556" source="org.sonar.core.user.GroupMembershipDao$1.apply(java.util.List)" target="org.sonar.core.user.GroupUserCount.userCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2557" source="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2558" source="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.GroupMembershipDao$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2559" source="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.GroupMembershipDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2560" source="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.GroupMembershipMapper.countUsersByGroup(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2561" source="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.GroupUserCount.groupName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2562" source="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.user.GroupUserCount.userCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2563" source="org.sonar.core.user.GroupMembershipDaoTest#dbTester" target="org.sonar.core.persistence.DbTester()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2564" source="org.sonar.core.user.GroupMembershipDaoTest.count_groups()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2565" source="org.sonar.core.user.GroupMembershipDaoTest.count_groups()" target="org.sonar.core.user.GroupMembershipDao.countGroups(org.apache.ibatis.session.SqlSession,org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2566" source="org.sonar.core.user.GroupMembershipDaoTest.count_groups()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2567" source="org.sonar.core.user.GroupMembershipDaoTest.count_groups()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2568" source="org.sonar.core.user.GroupMembershipDaoTest.count_groups()" target="org.sonar.core.user.GroupMembershipQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2569" source="org.sonar.core.user.GroupMembershipDaoTest.count_groups()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2570" source="org.sonar.core.user.GroupMembershipDaoTest.count_groups_by_login()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2571" source="org.sonar.core.user.GroupMembershipDaoTest.count_groups_by_login()" target="org.sonar.core.user.GroupMembershipDao.selectGroupsByLogins(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2572" source="org.sonar.core.user.GroupMembershipDaoTest.count_members()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2573" source="org.sonar.core.user.GroupMembershipDaoTest.count_members()" target="org.sonar.core.user.GroupMembershipDao.countMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2574" source="org.sonar.core.user.GroupMembershipDaoTest.count_members()" target="org.sonar.core.user.UserMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2575" source="org.sonar.core.user.GroupMembershipDaoTest.count_members()" target="org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2576" source="org.sonar.core.user.GroupMembershipDaoTest.count_members()" target="org.sonar.core.user.UserMembershipQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2577" source="org.sonar.core.user.GroupMembershipDaoTest.count_members()" target="org.sonar.core.user.UserMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2578" source="org.sonar.core.user.GroupMembershipDaoTest.count_users_by_group()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2579" source="org.sonar.core.user.GroupMembershipDaoTest.count_users_by_group()" target="org.sonar.core.user.GroupMembershipDao.countUsersByGroups(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2580" source="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2581" source="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()" target="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2582" source="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()" target="org.sonar.core.user.UserMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2583" source="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()" target="org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2584" source="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()" target="org.sonar.core.user.UserMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2585" source="org.sonar.core.user.GroupMembershipDaoTest.members_should_be_paginated()" target="org.sonar.core.user.UserMembershipDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2586" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2587" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2588" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2589" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2590" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()" target="org.sonar.core.user.GroupMembershipQuery$Builder.groupSearch(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2591" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2592" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name()" target="org.sonar.core.user.GroupMembershipDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2593" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2594" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2595" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2596" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2597" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()" target="org.sonar.core.user.GroupMembershipQuery$Builder.groupSearch(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2598" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2599" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_group_name_with_capitalization()" target="org.sonar.core.user.GroupMembershipDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2600" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2601" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()" target="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2602" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()" target="org.sonar.core.user.UserMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2603" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()" target="org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2604" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()" target="org.sonar.core.user.UserMembershipQuery$Builder.memberSearch(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2605" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_login_or_name_with_capitalization()" target="org.sonar.core.user.UserMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2606" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2607" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()" target="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2608" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()" target="org.sonar.core.user.UserMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2609" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()" target="org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2610" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()" target="org.sonar.core.user.UserMembershipQuery$Builder.memberSearch(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2611" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()" target="org.sonar.core.user.UserMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2612" source="org.sonar.core.user.GroupMembershipDaoTest.search_by_user_name_or_login()" target="org.sonar.core.user.UserMembershipDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2613" source="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2614" source="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2615" source="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2616" source="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2617" source="org.sonar.core.user.GroupMembershipDaoTest.select_all_groups_by_query()" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2618" source="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2619" source="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()" target="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2620" source="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()" target="org.sonar.core.user.UserMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2621" source="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()" target="org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2622" source="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()" target="org.sonar.core.user.UserMembershipQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2623" source="org.sonar.core.user.GroupMembershipDaoTest.select_group_members_by_query()" target="org.sonar.core.user.UserMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2624" source="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2625" source="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2626" source="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2627" source="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2628" source="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()" target="org.sonar.core.user.GroupMembershipQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2629" source="org.sonar.core.user.GroupMembershipDaoTest.select_groups_not_affected_to_a_user_by_query()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2630" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2631" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2632" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2633" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2634" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2635" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()" target="org.sonar.core.user.GroupMembershipDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2636" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()" target="org.sonar.core.user.GroupMembershipDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2637" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()" target="org.sonar.core.user.GroupMembershipDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2638" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_group()" target="org.sonar.core.user.GroupMembershipDto.getUserId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2639" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2640" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2641" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2642" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2643" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()" target="org.sonar.core.user.GroupMembershipQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2644" source="org.sonar.core.user.GroupMembershipDaoTest.select_user_groups_by_query()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2645" source="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2646" source="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()" target="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2647" source="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()" target="org.sonar.core.user.UserMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2648" source="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()" target="org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2649" source="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()" target="org.sonar.core.user.UserMembershipQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2650" source="org.sonar.core.user.GroupMembershipDaoTest.select_users_not_affected_to_a_group_by_query()" target="org.sonar.core.user.UserMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2651" source="org.sonar.core.user.GroupMembershipDaoTest.setUp()" target="org.sonar.core.persistence.DbTester.truncateTables()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2652" source="org.sonar.core.user.GroupMembershipDaoTest.setUp()" target="org.sonar.core.user.GroupMembershipDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2653" source="org.sonar.core.user.GroupMembershipDaoTest.setUp()" target="org.sonar.core.persistence.DbTester.myBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2654" source="org.sonar.core.user.GroupMembershipDaoTest.setUp()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2655" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2656" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2657" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2658" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2659" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2660" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_paginated()" target="org.sonar.core.user.GroupMembershipDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2661" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2662" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()" target="org.sonar.core.user.GroupMembershipDao.selectGroups(org.sonar.core.user.GroupMembershipQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2663" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2664" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2665" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2666" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_group_name()" target="org.sonar.core.user.GroupMembershipDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2667" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2668" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.user.GroupMembershipDao.selectMembers(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserMembershipQuery,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2669" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.user.UserMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2670" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.user.UserMembershipQuery$Builder.groupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2671" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.user.UserMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2672" source="org.sonar.core.user.GroupMembershipDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.user.UserMembershipDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2673" source="org.sonar.core.user.GroupMembershipDaoTest.tearDown()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2674" source="org.sonar.core.user.GroupMembershipDto.toGroupMembership()" target="org.sonar.core.user.GroupMembership()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2675" source="org.sonar.core.user.GroupMembershipDto.toGroupMembership()" target="org.sonar.core.user.GroupMembership.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2676" source="org.sonar.core.user.GroupMembershipDto.toGroupMembership()" target="org.sonar.core.user.GroupMembership.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2677" source="org.sonar.core.user.GroupMembershipDto.toGroupMembership()" target="org.sonar.core.user.GroupMembership.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2678" source="org.sonar.core.user.GroupMembershipDto.toGroupMembership()" target="org.sonar.core.user.GroupMembership.setMember(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2679" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembershipDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2680" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembershipDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2681" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembershipDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2682" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembershipDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2683" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembershipDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2684" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembershipDto.toGroupMembership()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2685" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembership.id()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2686" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembership.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2687" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembership.description()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2688" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.user.GroupMembership.isMember()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2689" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembershipDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2690" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembershipDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2691" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembershipDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2692" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembershipDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2693" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembershipDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2694" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembershipDto.toGroupMembership()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2695" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembership.id()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2696" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembership.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2697" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembership.description()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2698" source="org.sonar.core.user.GroupMembershipDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.user.GroupMembership.isMember()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2699" source="org.sonar.core.user.GroupMembershipQuery$Builder.build()" target="org.sonar.core.user.GroupMembershipQuery$Builder.initMembership()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2700" source="org.sonar.core.user.GroupMembershipQuery$Builder.build()" target="org.sonar.core.user.GroupMembershipQuery$Builder.initPageIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2701" source="org.sonar.core.user.GroupMembershipQuery$Builder.build()" target="org.sonar.core.user.GroupMembershipQuery$Builder.initPageSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2702" source="org.sonar.core.user.GroupMembershipQuery$Builder.build()" target="org.sonar.core.user.GroupMembershipQuery(org.sonar.core.user.GroupMembershipQuery$Builder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2703" source="org.sonar.core.user.GroupMembershipQuery(org.sonar.core.user.GroupMembershipQuery$Builder)" target="org.sonar.core.user.GroupMembershipQuery.groupSearchToSql(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2704" source="org.sonar.core.user.GroupMembershipQuery.builder()" target="org.sonar.core.user.GroupMembershipQuery$Builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2705" source="org.sonar.core.user.GroupMembershipQueryTest.fail_on_invalid_membership()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2706" source="org.sonar.core.user.GroupMembershipQueryTest.fail_on_invalid_membership()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2707" source="org.sonar.core.user.GroupMembershipQueryTest.fail_on_invalid_membership()" target="org.sonar.core.user.GroupMembershipQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2708" source="org.sonar.core.user.GroupMembershipQueryTest.fail_on_invalid_membership()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2709" source="org.sonar.core.user.GroupMembershipQueryTest.fail_on_null_login()" target="org.sonar.core.user.GroupMembershipQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2710" source="org.sonar.core.user.GroupMembershipQueryTest.fail_on_null_login()" target="org.sonar.core.user.GroupMembershipQuery$Builder.login(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2711" source="org.sonar.core.user.GroupMembershipQueryTest.fail_on_null_login()" target="org.sonar.core.user.GroupMembershipQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2712" source="org.sonar.core.user.GroupMembershipTest.test_equals()" target="org.sonar.core.user.GroupMembership()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2713" source="org.sonar.core.user.GroupMembershipTest.test_equals()" target="org.sonar.core.user.GroupMembership.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2714" source="org.sonar.core.user.GroupMembershipTest.test_equals()" target="org.sonar.core.user.GroupMembership.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2715" source="org.sonar.core.user.GroupMembershipTest.test_equals()" target="org.sonar.core.user.GroupMembership.setMember(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2716" source="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()" target="org.sonar.core.user.GroupMembership()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2717" source="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()" target="org.sonar.core.user.GroupMembership.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2718" source="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()" target="org.sonar.core.user.GroupMembership.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2719" source="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()" target="org.sonar.core.user.GroupMembership.setMember(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2720" source="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()" target="org.sonar.core.user.GroupMembership.id()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2721" source="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()" target="org.sonar.core.user.GroupMembership.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2722" source="org.sonar.core.user.GroupMembershipTest.test_setters_and_getters()" target="org.sonar.core.user.GroupMembership.isMember()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2723" source="org.sonar.core.user.RoleDao.countResourceGroupRoles(org.sonar.core.persistence.DbSession,java.lang.Long)" target="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2724" source="org.sonar.core.user.RoleDao.countResourceGroupRoles(org.sonar.core.persistence.DbSession,java.lang.Long)" target="org.sonar.core.user.RoleMapper.countResourceGroupRoles(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2725" source="org.sonar.core.user.RoleDao.countResourceUserRoles(org.sonar.core.persistence.DbSession,java.lang.Long)" target="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2726" source="org.sonar.core.user.RoleDao.countResourceUserRoles(org.sonar.core.persistence.DbSession,java.lang.Long)" target="org.sonar.core.user.RoleMapper.countResourceUserRoles(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2727" source="org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2728" source="org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.user.RoleMapper.selectGroupPermissions(java.lang.String,java.lang.Long,java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2729" source="org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2730" source="org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.user.RoleMapper.selectUserPermissions(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2731" source="org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2732" source="org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleMapper.deleteGroupRole(org.sonar.core.user.GroupRoleDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2733" source="org.sonar.core.user.RoleDao.deleteGroupRolesByGroupId(org.sonar.core.persistence.DbSession,long)" target="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2734" source="org.sonar.core.user.RoleDao.deleteGroupRolesByGroupId(org.sonar.core.persistence.DbSession,long)" target="org.sonar.core.user.RoleMapper.deleteGroupRolesByGroupId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2735" source="org.sonar.core.user.RoleDao.deleteGroupRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2736" source="org.sonar.core.user.RoleDao.deleteGroupRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleMapper.deleteGroupRolesByResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2737" source="org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2738" source="org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleMapper.deleteUserRole(org.sonar.core.user.UserRoleDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2739" source="org.sonar.core.user.RoleDao.deleteUserRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2740" source="org.sonar.core.user.RoleDao.deleteUserRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleMapper.deleteUserRolesByResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2741" source="org.sonar.core.user.RoleDao.insertGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2742" source="org.sonar.core.user.RoleDao.insertGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleMapper.insertGroupRole(org.sonar.core.user.GroupRoleDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2743" source="org.sonar.core.user.RoleDao.insertUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2744" source="org.sonar.core.user.RoleDao.insertUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.RoleMapper.insertUserRole(org.sonar.core.user.UserRoleDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2745" source="org.sonar.core.user.RoleDaoTest#dbTester" target="org.sonar.core.persistence.DbTester()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2746" source="org.sonar.core.user.RoleDaoTest.delete_all_group_permissions_by_group_id()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2747" source="org.sonar.core.user.RoleDaoTest.delete_all_group_permissions_by_group_id()" target="org.sonar.core.user.RoleDao.deleteGroupRolesByGroupId(org.sonar.core.persistence.DbSession,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2748" source="org.sonar.core.user.RoleDaoTest.delete_all_group_permissions_by_group_id()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2749" source="org.sonar.core.user.RoleDaoTest.delete_all_group_permissions_by_group_id()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2750" source="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2751" source="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()" target="org.sonar.core.user.GroupRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2752" source="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()" target="org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2753" source="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()" target="org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2754" source="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()" target="org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2755" source="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2756" source="org.sonar.core.user.RoleDaoTest.delete_global_group_permission()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2757" source="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2758" source="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()" target="org.sonar.core.user.UserRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2759" source="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()" target="org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2760" source="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()" target="org.sonar.core.user.UserRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2761" source="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()" target="org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2762" source="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2763" source="org.sonar.core.user.RoleDaoTest.delete_global_user_permission()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2764" source="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2765" source="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()" target="org.sonar.core.user.GroupRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2766" source="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()" target="org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2767" source="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()" target="org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2768" source="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()" target="org.sonar.core.user.GroupRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2769" source="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()" target="org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2770" source="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2771" source="org.sonar.core.user.RoleDaoTest.delete_resource_group_permission()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2772" source="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2773" source="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()" target="org.sonar.core.user.UserRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2774" source="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()" target="org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2775" source="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()" target="org.sonar.core.user.UserRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2776" source="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()" target="org.sonar.core.user.UserRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2777" source="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()" target="org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2778" source="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2779" source="org.sonar.core.user.RoleDaoTest.delete_resource_user_permission()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2780" source="org.sonar.core.user.RoleDaoTest.retrieve_global_group_permissions()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2781" source="org.sonar.core.user.RoleDaoTest.retrieve_global_group_permissions()" target="org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2782" source="org.sonar.core.user.RoleDaoTest.retrieve_global_user_permissions()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2783" source="org.sonar.core.user.RoleDaoTest.retrieve_global_user_permissions()" target="org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2784" source="org.sonar.core.user.RoleDaoTest.retrieve_resource_group_permissions()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2785" source="org.sonar.core.user.RoleDaoTest.retrieve_resource_group_permissions()" target="org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2786" source="org.sonar.core.user.RoleDaoTest.retrieve_resource_user_permissions()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2787" source="org.sonar.core.user.RoleDaoTest.retrieve_resource_user_permissions()" target="org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2788" source="org.sonar.core.user.RoleDaoTest.setUp()" target="org.sonar.core.persistence.DbTester.truncateTables()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2789" source="org.sonar.core.user.RoleDaoTest.setUp()" target="org.sonar.core.persistence.DbTester.myBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2790" source="org.sonar.core.user.RoleDaoTest.setUp()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2791" source="org.sonar.core.user.RoleDaoTest.setUp()" target="org.sonar.core.user.RoleDao()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2792" source="org.sonar.core.user.RoleDaoTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2793" source="org.sonar.core.user.RoleMapperTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2794" source="org.sonar.core.user.RoleMapperTest.closeSession()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2795" source="org.sonar.core.user.RoleMapperTest.count_roles()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2796" source="org.sonar.core.user.RoleMapperTest.count_roles()" target="org.sonar.core.user.RoleMapper.countResourceGroupRoles(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2797" source="org.sonar.core.user.RoleMapperTest.count_roles()" target="org.sonar.core.user.RoleMapper.countResourceUserRoles(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2798" source="org.sonar.core.user.RoleMapperTest.delete_roles_by_resource_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2799" source="org.sonar.core.user.RoleMapperTest.delete_roles_by_resource_id()" target="org.sonar.core.user.RoleMapper.deleteGroupRolesByResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2800" source="org.sonar.core.user.RoleMapperTest.delete_roles_by_resource_id()" target="org.sonar.core.user.RoleMapper.deleteUserRolesByResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2801" source="org.sonar.core.user.RoleMapperTest.delete_roles_by_resource_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2802" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2803" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.RoleMapper.insertGroupRole(org.sonar.core.user.GroupRoleDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2804" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.GroupRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2805" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2806" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2807" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.GroupRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2808" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.RoleMapper.insertUserRole(org.sonar.core.user.UserRoleDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2809" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.UserRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2810" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.UserRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2811" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2812" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.user.UserRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2813" source="org.sonar.core.user.RoleMapperTest.insert_roles()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2814" source="org.sonar.core.user.RoleMapperTest.openSession()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2815" source="org.sonar.core.user.RoleMapperTest.openSession()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2816" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2817" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.selectUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2818" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.removeUserFromGroups(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2819" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2820" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.deleteUserActiveDashboards(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2821" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.deleteUnsharedUserDashboards(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2822" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.deleteUnsharedUserIssueFilters(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2823" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2824" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.deleteUserIssueFilterFavourites(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2825" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.deleteUnsharedUserMeasureFilters(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2826" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.deleteUserMeasureFilterFavourites(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2827" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.deleteUserProperties(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2828" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.deleteUserRoles(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2829" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.user.UserMapper.deactivateUser(long,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2830" source="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2831" source="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2832" source="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" target="org.sonar.core.user.UserMapper.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2833" source="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2834" source="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2835" source="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)" target="org.sonar.core.user.UserDao.selectUsersByLogins(org.sonar.core.persistence.DbSession,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2836" source="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2837" source="org.sonar.core.user.UserDao.selectUsersByLogins(org.sonar.core.persistence.DbSession,java.util.List)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2838" source="org.sonar.core.user.UserDao.selectUsersByLogins(org.sonar.core.persistence.DbSession,java.util.List)" target="org.sonar.core.user.UserMapper.selectUsersByLogins(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2839" source="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2840" source="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)" target="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2841" source="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2842" source="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2843" source="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserMapper.selectGroupByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2844" source="org.sonar.core.user.UserDao.getUser(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2845" source="org.sonar.core.user.UserDao.getUser(long)" target="org.sonar.core.user.UserDao.getUser(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2846" source="org.sonar.core.user.UserDao.getUser(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2847" source="org.sonar.core.user.UserDao.getUser(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.user.UserMapper.selectUser(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2848" source="org.sonar.core.user.UserDao.insert(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)" target="org.sonar.core.user.UserMapper.insert(org.sonar.core.user.UserDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2849" source="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2850" source="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" target="org.sonar.core.user.UserDao.selectActiveUserByLogin(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2851" source="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2852" source="org.sonar.core.user.UserDao.selectActiveUserByLogin(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2853" source="org.sonar.core.user.UserDao.selectActiveUserByLogin(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.user.UserMapper.selectUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2854" source="org.sonar.core.user.UserDao.update(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)" target="org.sonar.core.user.UserMapper.update(org.sonar.core.user.UserDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2855" source="org.sonar.core.user.UserDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2856" source="org.sonar.core.user.UserDaoTest.deactivate_missing_user()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2857" source="org.sonar.core.user.UserDaoTest.deactivate_missing_user()" target="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2858" source="org.sonar.core.user.UserDaoTest.deactivate_missing_user()" target="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2859" source="org.sonar.core.user.UserDaoTest.deactivate_user()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2860" source="org.sonar.core.user.UserDaoTest.deactivate_user()" target="org.sonar.core.user.UserDao.deactivateUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2861" source="org.sonar.core.user.UserDaoTest.deactivate_user()" target="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2862" source="org.sonar.core.user.UserDaoTest.deactivate_user()" target="org.sonar.core.user.UserDao.getUser(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2863" source="org.sonar.core.user.UserDaoTest.deactivate_user()" target="org.sonar.core.user.UserDto.isActive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2864" source="org.sonar.core.user.UserDaoTest.deactivate_user()" target="org.sonar.core.user.UserDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2865" source="org.sonar.core.user.UserDaoTest.deactivate_user()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2866" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2867" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2868" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2869" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2870" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setEmail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2871" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setScmAccounts(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2872" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setActive(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2873" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setSalt(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2874" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setCryptedPassword(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2875" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2876" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2877" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDao.insert(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2878" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2879" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2880" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2881" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2882" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2883" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.getEmail()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2884" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.isActive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2885" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.getScmAccounts()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2886" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.getSalt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2887" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.getCryptedPassword()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2888" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2889" source="org.sonar.core.user.UserDaoTest.insert_user()" target="org.sonar.core.user.UserDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2890" source="org.sonar.core.user.UserDaoTest.selectGroupByName()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2891" source="org.sonar.core.user.UserDaoTest.selectGroupByName()" target="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2892" source="org.sonar.core.user.UserDaoTest.selectGroupByName()" target="org.sonar.core.user.GroupDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2893" source="org.sonar.core.user.UserDaoTest.selectGroupByName()" target="org.sonar.core.user.GroupDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2894" source="org.sonar.core.user.UserDaoTest.selectGroupByName()" target="org.sonar.core.user.GroupDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2895" source="org.sonar.core.user.UserDaoTest.selectGroupByName()" target="org.sonar.core.persistence.Dto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2896" source="org.sonar.core.user.UserDaoTest.selectGroupByName()" target="org.sonar.core.persistence.Dto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2897" source="org.sonar.core.user.UserDaoTest.selectGroupByName_not_found()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2898" source="org.sonar.core.user.UserDaoTest.selectGroupByName_not_found()" target="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2899" source="org.sonar.core.user.UserDaoTest.selectUserByLogin_ignore_inactive()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2900" source="org.sonar.core.user.UserDaoTest.selectUserByLogin_ignore_inactive()" target="org.sonar.core.user.UserDao.getUser(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2901" source="org.sonar.core.user.UserDaoTest.selectUserByLogin_ignore_inactive()" target="org.sonar.core.user.UserDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2902" source="org.sonar.core.user.UserDaoTest.selectUserByLogin_ignore_inactive()" target="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2903" source="org.sonar.core.user.UserDaoTest.selectUserByLogin_not_found()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2904" source="org.sonar.core.user.UserDaoTest.selectUserByLogin_not_found()" target="org.sonar.core.user.UserDao.selectActiveUserByLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2905" source="org.sonar.core.user.UserDaoTest.selectUsersByLogins()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2906" source="org.sonar.core.user.UserDaoTest.selectUsersByLogins()" target="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2907" source="org.sonar.core.user.UserDaoTest.selectUsersByLogins_empty_logins()" target="org.sonar.core.user.UserDao.selectUsersByLogins(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2908" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_all()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2909" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_all()" target="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2910" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_escape_special_characters_in_like()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2911" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_escape_special_characters_in_like()" target="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2912" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_filter_by_login()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2913" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_filter_by_login()" target="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2914" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_filter_by_login()" target="org.sonar.core.user.UserDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2915" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_only_actives()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2916" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_only_actives()" target="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2917" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_only_actives()" target="org.sonar.core.user.UserDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2918" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_login_text()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2919" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_login_text()" target="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2920" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_login_text()" target="org.sonar.core.user.UserDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2921" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_name_text()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2922" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_name_text()" target="org.sonar.core.user.UserDao.selectUsers(org.sonar.api.user.UserQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2923" source="org.sonar.core.user.UserDaoTest.selectUsersByQuery_search_by_name_text()" target="org.sonar.core.user.UserDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2924" source="org.sonar.core.user.UserDaoTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2925" source="org.sonar.core.user.UserDaoTest.setUp()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2926" source="org.sonar.core.user.UserDaoTest.setUp()" target="org.sonar.core.user.UserDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2927" source="org.sonar.core.user.UserDaoTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2928" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2929" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2930" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2931" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2932" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2933" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.setEmail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2934" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.setScmAccounts(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2935" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.setActive(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2936" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.setSalt(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2937" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.setCryptedPassword(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2938" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2939" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDao.update(org.apache.ibatis.session.SqlSession,org.sonar.core.user.UserDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2940" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2941" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDao.getUser(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2942" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2943" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2944" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2945" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.getEmail()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2946" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.isActive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2947" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.getScmAccounts()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2948" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.getSalt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2949" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.getCryptedPassword()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2950" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2951" source="org.sonar.core.user.UserDaoTest.update_user()" target="org.sonar.core.user.UserDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2952" source="org.sonar.core.user.UserDto.getScmAccountsAsList()" target="org.sonar.core.user.UserDto.decodeScmAccounts(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2953" source="org.sonar.core.user.UserDto.toUser()" target="org.sonar.core.user.DefaultUser()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2954" source="org.sonar.core.user.UserDto.toUser()" target="org.sonar.core.user.DefaultUser.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2955" source="org.sonar.core.user.UserDto.toUser()" target="org.sonar.core.user.DefaultUser.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2956" source="org.sonar.core.user.UserDto.toUser()" target="org.sonar.core.user.DefaultUser.setEmail(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2957" source="org.sonar.core.user.UserDto.toUser()" target="org.sonar.core.user.DefaultUser.setActive(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2958" source="org.sonar.core.user.UserDto.setScmAccounts(java.util.List)" target="org.sonar.core.user.UserDto.encodeScmAccounts(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2959" source="org.sonar.core.user.UserDtoTest.decode_scm_accounts()" target="org.sonar.core.user.UserDto.decodeScmAccounts(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2960" source="org.sonar.core.user.UserDtoTest.encode_scm_accounts()" target="org.sonar.core.user.UserDto.encodeScmAccounts(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2961" source="org.sonar.core.user.UserMembershipQuery$Builder.build()" target="org.sonar.core.user.UserMembershipQuery$Builder.initMembership()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2962" source="org.sonar.core.user.UserMembershipQuery$Builder.build()" target="org.sonar.core.user.UserMembershipQuery$Builder.initPageIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2963" source="org.sonar.core.user.UserMembershipQuery$Builder.build()" target="org.sonar.core.user.UserMembershipQuery$Builder.initPageSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2964" source="org.sonar.core.user.UserMembershipQuery$Builder.build()" target="org.sonar.core.user.UserMembershipQuery(org.sonar.core.user.UserMembershipQuery$Builder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2965" source="org.sonar.core.user.UserMembershipQuery(org.sonar.core.user.UserMembershipQuery$Builder)" target="org.sonar.core.user.UserMembershipQuery.memberSearchToSql(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2966" source="org.sonar.core.user.UserMembershipQuery.builder()" target="org.sonar.core.user.UserMembershipQuery$Builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2967" source="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2968" source="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual()" target="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2969" source="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2970" source="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.rule.RuleDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2971" source="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.rule.RuleMapper.selectEnablesAndNonManual()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2972" source="org.sonar.core.rule.RuleDao.selectParameters()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2973" source="org.sonar.core.rule.RuleDao.selectParameters()" target="org.sonar.core.rule.RuleDao.selectParameters(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2974" source="org.sonar.core.rule.RuleDao.selectParameters()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2975" source="org.sonar.core.rule.RuleDao.selectParameters(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.rule.RuleDao.getMapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2976" source="org.sonar.core.rule.RuleDao.selectParameters(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.rule.RuleMapper.selectAllParams()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2977" source="org.sonar.core.rule.RuleDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2978" source="org.sonar.core.rule.RuleDaoTest.createDao()" target="org.sonar.core.rule.RuleDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2979" source="org.sonar.core.rule.RuleDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2980" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2981" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDao.selectEnablesAndNonManual()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2982" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2983" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2984" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2985" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getDescriptionFormat()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2986" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getStatus()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2987" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getRepositoryKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2988" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getNoteData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2989" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getSubCharacteristicId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2990" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getDefaultSubCharacteristicId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2991" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getRemediationFunction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2992" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getDefaultRemediationFunction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2993" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getRemediationCoefficient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2994" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getDefaultRemediationCoefficient()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2995" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getRemediationOffset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2996" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getDefaultRemediationOffset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2997" source="org.sonar.core.rule.RuleDaoTest.select_enables_and_non_manual()" target="org.sonar.core.rule.RuleDto.getEffortToFixDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2998" source="org.sonar.core.rule.RuleDaoTest.select_parameters()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e2999" source="org.sonar.core.rule.RuleDaoTest.select_parameters()" target="org.sonar.core.rule.RuleDao.selectParameters()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3000" source="org.sonar.core.rule.RuleDaoTest.select_parameters()" target="org.sonar.core.rule.RuleParamDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3001" source="org.sonar.core.rule.RuleDaoTest.select_parameters()" target="org.sonar.core.rule.RuleParamDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3002" source="org.sonar.core.rule.RuleDaoTest.select_parameters()" target="org.sonar.core.rule.RuleParamDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3003" source="org.sonar.core.rule.RuleDaoTest.select_parameters()" target="org.sonar.core.rule.RuleParamDto.getType()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3004" source="org.sonar.core.rule.RuleDaoTest.select_parameters()" target="org.sonar.core.rule.RuleParamDto.getDefaultValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3005" source="org.sonar.core.rule.RuleDto$Format#HTML" target="org.sonar.core.rule.RuleDto$Format()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3006" source="org.sonar.core.rule.RuleDto$Format#MARKDOWN" target="org.sonar.core.rule.RuleDto$Format()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3007" source="org.sonar.core.rule.RuleDto()" target="org.sonar.core.persistence.Dto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3008" source="org.sonar.core.rule.RuleDto.equals(java.lang.Object)" target="org.sonar.core.rule.RuleDto.getRepositoryKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3009" source="org.sonar.core.rule.RuleDto.equals(java.lang.Object)" target="org.sonar.core.rule.RuleDto.getRuleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3010" source="org.sonar.core.rule.RuleDto.getSeverityString()" target="org.sonar.core.rule.SeverityUtil.getSeverityFromOrdinal(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3011" source="org.sonar.core.persistence.Dto.getKey()" target="org.sonar.core.rule.RuleDto.getKey()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3012" source="org.sonar.core.rule.RuleDto.getKey()" target="org.sonar.core.rule.RuleDto.getRepositoryKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3013" source="org.sonar.core.rule.RuleDto.getKey()" target="org.sonar.core.rule.RuleDto.getRuleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3014" source="org.sonar.core.rule.RuleDto.createFor(org.sonar.api.rule.RuleKey)" target="org.sonar.core.rule.RuleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3015" source="org.sonar.core.rule.RuleDto.createFor(org.sonar.api.rule.RuleKey)" target="org.sonar.core.rule.RuleDto.setRepositoryKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3016" source="org.sonar.core.rule.RuleDto.createFor(org.sonar.api.rule.RuleKey)" target="org.sonar.core.rule.RuleDto.setRuleKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3017" source="org.sonar.core.rule.RuleDto.setSeverity(java.lang.String)" target="org.sonar.core.rule.RuleDto.setSeverity(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3018" source="org.sonar.core.rule.RuleDto.setSeverity(java.lang.String)" target="org.sonar.core.rule.SeverityUtil.getOrdinalFromSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3019" source="org.sonar.core.rule.RuleParamDto.createFor(org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleParamDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3020" source="org.sonar.core.rule.RuleParamDto.createFor(org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleParamDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3021" source="org.sonar.core.rule.RuleParamDto.createFor(org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3022" source="org.sonar.core.source.db.FileSourceDto.decodeTestData(byte[])" target="org.sonar.core.source.db.FileSourceDto.decodeTestData(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3023" source="org.sonar.core.source.db.FileSourceDto.getTestData()" target="org.sonar.core.source.db.FileSourceDto.decodeTestData(byte[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3024" source="org.sonar.core.source.db.FileSourceDto.setSourceData(org.sonar.server.source.db.FileSourceDb$Data)" target="org.sonar.core.source.db.FileSourceDto.encodeSourceData(org.sonar.server.source.db.FileSourceDb$Data)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3025" source="org.sonar.core.source.db.FileSourceDto.setTestData(java.util.List)" target="org.sonar.core.source.db.FileSourceDto.encodeTestData(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3026" source="org.sonar.core.source.db.FileSourceDto.decodeSourceData(byte[])" target="org.sonar.core.source.db.FileSourceDto.decodeSourceData(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3027" source="org.sonar.core.source.db.FileSourceDto.getSourceData()" target="org.sonar.core.source.db.FileSourceDto.decodeSourceData(byte[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3028" source="org.sonar.core.source.db.FileSourceDtoTest.encode_and_decode_test_data()" target="org.sonar.core.source.db.FileSourceDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3029" source="org.sonar.core.source.db.FileSourceDtoTest.encode_and_decode_test_data()" target="org.sonar.core.source.db.FileSourceDto.setTestData(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3030" source="org.sonar.core.source.db.FileSourceDtoTest.encode_and_decode_test_data()" target="org.sonar.core.source.db.FileSourceDto.getTestData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3031" source="org.sonar.core.persistence.migration.v45.Rule.equals(java.lang.Object)" target="org.sonar.core.persistence.migration.v45.Rule.getRepositoryKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3032" source="org.sonar.core.persistence.migration.v45.Rule.equals(java.lang.Object)" target="org.sonar.core.persistence.migration.v45.Rule.getRuleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3033" source="org.sonar.core.persistence.dialect.Dialect.getScrollDefaultFetchSize()" target="org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3034" source="org.sonar.core.persistence.dialect.Dialect.getScrollSingleRowFetchSize()" target="org.sonar.core.persistence.dialect.AbstractDialect.getScrollSingleRowFetchSize()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3035" source="org.sonar.core.persistence.dialect.Dialect.getActiveRecordDialectCode()" target="org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3036" source="org.sonar.core.persistence.dialect.Dialect.getDefaultDriverClassName()" target="org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3037" source="org.sonar.core.persistence.dialect.Dialect.getFalseSqlValue()" target="org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3038" source="org.sonar.core.persistence.dialect.Dialect.getId()" target="org.sonar.core.persistence.dialect.AbstractDialect.getId()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3039" source="org.sonar.core.persistence.dialect.Dialect.getTrueSqlValue()" target="org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3040" source="org.sonar.core.persistence.dialect.Dialect.getValidationQuery()" target="org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3041" source="org.sonar.core.persistence.dialect.Dialect.getConnectionInitStatements()" target="org.sonar.core.persistence.dialect.AbstractDialect.getConnectionInitStatements()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3042" source="org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.dialect.DialectUtils.findById(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3043" source="org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.dialect.DialectUtils.findByJdbcUrl(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3044" source="org.sonar.core.persistence.dialect.DialectUtils$2.apply(org.sonar.core.persistence.dialect.Dialect)" target="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3045" source="org.sonar.core.persistence.dialect.DialectUtils.findById(java.lang.String)" target="org.sonar.core.persistence.dialect.DialectUtils.findDialect(com.google.common.base.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3046" source="org.sonar.core.persistence.dialect.DialectUtils.findById(java.lang.String)" target="org.sonar.core.persistence.dialect.DialectUtils$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3047" source="org.sonar.core.persistence.dialect.DialectUtils.findById(java.lang.String)" target="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3048" source="org.sonar.core.persistence.dialect.DialectUtils$1.apply(org.sonar.core.persistence.dialect.Dialect)" target="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3049" source="org.sonar.core.persistence.dialect.DialectUtils.findByJdbcUrl(java.lang.String)" target="org.sonar.core.persistence.dialect.DialectUtils.findDialect(com.google.common.base.Predicate)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3050" source="org.sonar.core.persistence.dialect.DialectUtils.findByJdbcUrl(java.lang.String)" target="org.sonar.core.persistence.dialect.DialectUtils$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3051" source="org.sonar.core.persistence.dialect.DialectUtils.findByJdbcUrl(java.lang.String)" target="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3052" source="org.sonar.core.persistence.dialect.DialectUtilsTest.testFindById()" target="org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3053" source="org.sonar.core.persistence.dialect.DialectUtilsTest.testFindByJdbcUrl()" target="org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3054" source="org.sonar.core.persistence.dialect.DialectUtilsTest.testFindNoMatch()" target="org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3055" source="org.sonar.core.persistence.dialect.H2()" target="org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3056" source="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)" target="org.sonar.core.persistence.dialect.H2.matchesJdbcURL(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3057" source="org.sonar.core.persistence.dialect.Dialect.supportsMigration()" target="org.sonar.core.persistence.dialect.H2.supportsMigration()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3058" source="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()" target="org.sonar.core.persistence.dialect.H2.getHibernateDialectClass()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3059" source="org.sonar.core.persistence.dialect.H2Test#dialect" target="org.sonar.core.persistence.dialect.H2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3060" source="org.sonar.core.persistence.dialect.H2Test.h2_does_not_supportMigration()" target="org.sonar.core.persistence.dialect.H2.supportsMigration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3061" source="org.sonar.core.persistence.dialect.H2Test.matchesJdbcURL()" target="org.sonar.core.persistence.dialect.H2.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3062" source="org.sonar.core.persistence.dialect.H2Test.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3063" source="org.sonar.core.persistence.dialect.H2Test.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3064" source="org.sonar.core.persistence.dialect.H2Test.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3065" source="org.sonar.core.persistence.dialect.H2Test.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3066" source="org.sonar.core.persistence.dialect.H2Test.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3067" source="org.sonar.core.persistence.dialect.H2Test.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3068" source="org.sonar.core.persistence.dialect.H2Test.testFetchSizeForScrolling()" target="org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3069" source="org.sonar.core.persistence.dialect.MsSql()" target="org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3070" source="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)" target="org.sonar.core.persistence.dialect.MsSql.matchesJdbcURL(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3071" source="org.sonar.core.persistence.dialect.Dialect.supportsMigration()" target="org.sonar.core.persistence.dialect.MsSql.supportsMigration()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3072" source="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()" target="org.sonar.core.persistence.dialect.MsSql.getHibernateDialectClass()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3073" source="org.sonar.core.persistence.dialect.MsSqlTest#msSql" target="org.sonar.core.persistence.dialect.MsSql()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3074" source="org.sonar.core.persistence.dialect.MsSqlTest.matchesJdbcURL()" target="org.sonar.core.persistence.dialect.MsSql.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3075" source="org.sonar.core.persistence.dialect.MsSqlTest.msSql_does_supportMigration()" target="org.sonar.core.persistence.dialect.MsSql.supportsMigration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3076" source="org.sonar.core.persistence.dialect.MsSqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3077" source="org.sonar.core.persistence.dialect.MsSqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3078" source="org.sonar.core.persistence.dialect.MsSqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3079" source="org.sonar.core.persistence.dialect.MsSqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3080" source="org.sonar.core.persistence.dialect.MsSqlTest.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3081" source="org.sonar.core.persistence.dialect.MsSqlTest.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3082" source="org.sonar.core.persistence.dialect.MySql()" target="org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3083" source="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)" target="org.sonar.core.persistence.dialect.MySql.matchesJdbcURL(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3084" source="org.sonar.core.persistence.dialect.Dialect.supportsMigration()" target="org.sonar.core.persistence.dialect.MySql.supportsMigration()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3085" source="org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()" target="org.sonar.core.persistence.dialect.MySql.getScrollDefaultFetchSize()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3086" source="org.sonar.core.persistence.dialect.Dialect.getScrollDefaultFetchSize()" target="org.sonar.core.persistence.dialect.MySql.getScrollDefaultFetchSize()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3087" source="org.sonar.core.persistence.dialect.AbstractDialect.getScrollSingleRowFetchSize()" target="org.sonar.core.persistence.dialect.MySql.getScrollSingleRowFetchSize()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3088" source="org.sonar.core.persistence.dialect.Dialect.getScrollSingleRowFetchSize()" target="org.sonar.core.persistence.dialect.MySql.getScrollSingleRowFetchSize()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3089" source="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()" target="org.sonar.core.persistence.dialect.MySql.getHibernateDialectClass()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3090" source="org.sonar.core.persistence.dialect.MySqlTest#mySql" target="org.sonar.core.persistence.dialect.MySql()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3091" source="org.sonar.core.persistence.dialect.MySqlTest.matchesJdbcURL()" target="org.sonar.core.persistence.dialect.MySql.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3092" source="org.sonar.core.persistence.dialect.MySqlTest.mysql_does_supportMigration()" target="org.sonar.core.persistence.dialect.MySql.supportsMigration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3093" source="org.sonar.core.persistence.dialect.MySqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3094" source="org.sonar.core.persistence.dialect.MySqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3095" source="org.sonar.core.persistence.dialect.MySqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3096" source="org.sonar.core.persistence.dialect.MySqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3097" source="org.sonar.core.persistence.dialect.MySqlTest.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3098" source="org.sonar.core.persistence.dialect.MySqlTest.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3099" source="org.sonar.core.persistence.dialect.MySqlTest.testFetchSizeForScrolling()" target="org.sonar.core.persistence.dialect.MySql.getScrollDefaultFetchSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3100" source="org.sonar.core.persistence.dialect.MySqlTest.testFetchSizeForScrolling()" target="org.sonar.core.persistence.dialect.MySql.getScrollSingleRowFetchSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3101" source="org.sonar.core.persistence.dialect.Oracle()" target="org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3102" source="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)" target="org.sonar.core.persistence.dialect.Oracle.matchesJdbcURL(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3103" source="org.sonar.core.persistence.dialect.Dialect.supportsMigration()" target="org.sonar.core.persistence.dialect.Oracle.supportsMigration()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3104" source="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()" target="org.sonar.core.persistence.dialect.Oracle.getHibernateDialectClass()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3105" source="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()" target="org.sonar.core.persistence.dialect.OracleSequenceGenerator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3106" source="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()" target="org.sonar.core.persistence.dialect.OracleSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3107" source="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()" target="org.sonar.core.persistence.dialect.Oracle$Oracle10gWithDecimalDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3108" source="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()" target="org.sonar.core.persistence.dialect.OracleSequenceGenerator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3109" source="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()" target="org.sonar.core.persistence.dialect.OracleSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3110" source="org.sonar.core.persistence.dialect.OracleSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()" target="org.sonar.core.persistence.dialect.Oracle$Oracle10gWithDecimalDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3111" source="org.sonar.core.persistence.dialect.OracleTest#dialect" target="org.sonar.core.persistence.dialect.Oracle()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3112" source="org.sonar.core.persistence.dialect.OracleTest.matchesJdbcURL()" target="org.sonar.core.persistence.dialect.Oracle.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3113" source="org.sonar.core.persistence.dialect.OracleTest.oracle_does_supportMigration()" target="org.sonar.core.persistence.dialect.Oracle.supportsMigration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3114" source="org.sonar.core.persistence.dialect.OracleTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3115" source="org.sonar.core.persistence.dialect.OracleTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3116" source="org.sonar.core.persistence.dialect.OracleTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3117" source="org.sonar.core.persistence.dialect.OracleTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3118" source="org.sonar.core.persistence.dialect.OracleTest.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3119" source="org.sonar.core.persistence.dialect.OracleTest.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3120" source="org.sonar.core.persistence.dialect.OracleTest.testFetchSizeForScrolling()" target="org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3121" source="org.sonar.core.persistence.dialect.OracleTest.testFetchSizeForScrolling()" target="org.sonar.core.persistence.dialect.AbstractDialect.getScrollSingleRowFetchSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3122" source="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()" target="org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3123" source="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()" target="org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3124" source="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.sequenceNameShouldFollowRailsConventions()" target="org.sonar.core.persistence.dialect.PostgreSql$PostgreSQLWithDecimalDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3125" source="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()" target="org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3126" source="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()" target="org.sonar.core.persistence.dialect.PostgreSQLSequenceGenerator.configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3127" source="org.sonar.core.persistence.dialect.PostgreSQLSequenceGeneratorTest.should_not_fail_if_table_name_can_not_be_loaded()" target="org.sonar.core.persistence.dialect.PostgreSql$PostgreSQLWithDecimalDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3128" source="org.sonar.core.persistence.dialect.PostgreSql()" target="org.sonar.core.persistence.dialect.AbstractDialect(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3129" source="org.sonar.core.persistence.dialect.Dialect.matchesJdbcURL(java.lang.String)" target="org.sonar.core.persistence.dialect.PostgreSql.matchesJdbcURL(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3130" source="org.sonar.core.persistence.dialect.Dialect.supportsMigration()" target="org.sonar.core.persistence.dialect.PostgreSql.supportsMigration()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3131" source="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()" target="org.sonar.core.persistence.dialect.PostgreSql.getHibernateDialectClass()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3132" source="org.sonar.core.persistence.dialect.AbstractDialect.getConnectionInitStatements()" target="org.sonar.core.persistence.dialect.PostgreSql.getConnectionInitStatements()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3133" source="org.sonar.core.persistence.dialect.Dialect.getConnectionInitStatements()" target="org.sonar.core.persistence.dialect.PostgreSql.getConnectionInitStatements()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3134" source="org.sonar.core.persistence.dialect.PostgreSqlTest#dialect" target="org.sonar.core.persistence.dialect.PostgreSql()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3135" source="org.sonar.core.persistence.dialect.PostgreSqlTest.matchesJdbcURL()" target="org.sonar.core.persistence.dialect.PostgreSql.matchesJdbcURL(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3136" source="org.sonar.core.persistence.dialect.PostgreSqlTest.postgres_does_supportMigration()" target="org.sonar.core.persistence.dialect.PostgreSql.supportsMigration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3137" source="org.sonar.core.persistence.dialect.PostgreSqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3138" source="org.sonar.core.persistence.dialect.PostgreSqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getActiveRecordDialectCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3139" source="org.sonar.core.persistence.dialect.PostgreSqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getDefaultDriverClassName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3140" source="org.sonar.core.persistence.dialect.PostgreSqlTest.should_configure()" target="org.sonar.core.persistence.dialect.AbstractDialect.getValidationQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3141" source="org.sonar.core.persistence.dialect.PostgreSqlTest.should_set_connection_properties()" target="org.sonar.core.persistence.dialect.PostgreSql.getConnectionInitStatements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3142" source="org.sonar.core.persistence.dialect.PostgreSqlTest.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getTrueSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3143" source="org.sonar.core.persistence.dialect.PostgreSqlTest.testBooleanSqlValues()" target="org.sonar.core.persistence.dialect.AbstractDialect.getFalseSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3144" source="org.sonar.core.persistence.dialect.PostgreSqlTest.testFetchSizeForScrolling()" target="org.sonar.core.persistence.dialect.AbstractDialect.getScrollDefaultFetchSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3145" source="org.sonar.core.persistence.profiling.InvocationUtilsTest.should_return_result()" target="org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3146" source="org.sonar.core.persistence.profiling.InvocationUtilsTest.should_throw_declared_exception()" target="org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3147" source="org.sonar.core.persistence.profiling.InvocationUtilsTest.should_wrap_undeclared_exception()" target="org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3148" source="org.sonar.core.persistence.profiling.ProfiledDataSource.getConnection()" target="org.sonar.core.persistence.profiling.ProfilingConnectionHandler(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3149" source="org.sonar.core.persistence.profiling.ProfiledDataSource.getConnection(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.profiling.ProfilingConnectionHandler(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3150" source="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.delegate_to_underlying_datasource()" target="org.sonar.core.persistence.profiling.ProfiledDataSource(org.apache.commons.dbcp.BasicDataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3151" source="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.log_sql_requests()" target="org.sonar.core.persistence.profiling.ProfiledDataSource(org.apache.commons.dbcp.BasicDataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3152" source="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.log_sql_requests()" target="org.sonar.core.persistence.profiling.ProfiledDataSource.getUrl()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3153" source="org.sonar.core.persistence.profiling.ProfiledDataSourceTest.log_sql_requests()" target="org.sonar.core.persistence.profiling.ProfiledDataSource.getConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3154" source="org.sonar.core.persistence.profiling.ProfilingConnectionHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" target="org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3155" source="org.sonar.core.persistence.profiling.ProfilingConnectionHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" target="org.sonar.core.persistence.profiling.ProfilingPreparedStatementHandler(java.sql.PreparedStatement,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3156" source="org.sonar.core.persistence.profiling.ProfilingConnectionHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" target="org.sonar.core.persistence.profiling.ProfilingStatementHandler(java.sql.Statement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3157" source="org.sonar.core.persistence.profiling.ProfilingPreparedStatementHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" target="org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3158" source="org.sonar.core.persistence.profiling.ProfilingStatementHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" target="org.sonar.core.persistence.profiling.InvocationUtils.invokeQuietly(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3159" source="org.sonar.core.persistence.AbstractDaoTestCase.getConnection()" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3160" source="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()" target="org.sonar.core.persistence.DatabaseCommands.getDbUnitFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3161" source="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()" target="org.sonar.core.persistence.Database.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3162" source="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()" target="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3163" source="org.sonar.core.persistence.AbstractDaoTestCase.getData(java.io.InputStream)" target="org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3164" source="org.sonar.core.persistence.AbstractDaoTestCase.getExpectedData(java.lang.String)" target="org.sonar.core.persistence.AbstractDaoTestCase.getData(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3165" source="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3166" source="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3167" source="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.closeDbUnitConnection(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3168" source="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3169" source="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.getExpectedData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3170" source="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3171" source="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.closeDbUnitConnection(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3172" source="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3173" source="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3174" source="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.getExpectedData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3175" source="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3176" source="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.closeDbUnitConnection(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3177" source="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])" target="org.sonar.core.persistence.AbstractDaoTestCase.openDbUnitConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3178" source="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])" target="org.sonar.core.persistence.AbstractDaoTestCase.getData(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3179" source="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])" target="org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3180" source="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])" target="org.sonar.core.persistence.AbstractDaoTestCase.closeDbUnitConnection(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3181" source="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.io.InputStream[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3182" source="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" target="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3183" source="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3184" source="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])" target="org.sonar.core.persistence.AbstractDaoTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3185" source="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()" target="org.sonar.core.persistence.AbstractDaoTestCase.loadOrchestratorSettings(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3186" source="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3187" source="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()" target="org.sonar.core.persistence.H2Database(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3188" source="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()" target="org.sonar.core.persistence.DatabaseCommands.forDialect(org.sonar.core.persistence.dialect.Dialect)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3189" source="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()" target="org.sonar.core.persistence.Database.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3190" source="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()" target="org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3191" source="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()" target="org.sonar.core.config.Logback()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3192" source="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()" target="org.sonar.core.cluster.NullQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3193" source="org.sonar.core.persistence.AbstractDaoTestCase.startDatabase()" target="org.sonar.core.persistence.MyBatis.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3194" source="org.sonar.core.persistence.AbstractDaoTestCase.startDbUnit()" target="org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3195" source="org.sonar.core.persistence.AbstractDaoTestCase.startDbUnit()" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3196" source="org.sonar.core.persistence.AbstractDaoTestCase.startDbUnit()" target="org.sonar.core.persistence.DatabaseCommands.useLoginAsSchema()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3197" source="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3198" source="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)" target="org.sonar.core.persistence.DbSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3199" source="org.sonar.core.persistence.DbSession.selectList(java.lang.String)" target="org.sonar.core.persistence.BatchSession.selectList(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3200" source="org.sonar.core.persistence.BatchSession.selectList(java.lang.String)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3201" source="org.sonar.core.persistence.BatchSession.selectList(java.lang.String)" target="org.sonar.core.persistence.DbSession.selectList(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3202" source="org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3203" source="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3204" source="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3205" source="org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)" target="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3206" source="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3207" source="org.sonar.core.persistence.BatchSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)" target="org.sonar.core.persistence.DbSession.selectList(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3208" source="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)" target="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3209" source="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3210" source="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)" target="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3211" source="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)" target="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3212" source="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3213" source="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)" target="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.Object,java.lang.String,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3214" source="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3215" source="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3216" source="org.sonar.core.persistence.BatchSession.selectMap(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.DbSession.selectMap(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3217" source="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)" target="org.sonar.core.persistence.BatchSession.getMapper(java.lang.Class)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3218" source="org.sonar.core.persistence.BatchSession.getMapper(java.lang.Class)" target="org.sonar.core.persistence.DbSession.getConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3219" source="org.sonar.core.persistence.DbSession.selectOne(java.lang.String)" target="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3220" source="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3221" source="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String)" target="org.sonar.core.persistence.DbSession.selectOne(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3222" source="org.sonar.core.persistence.DbSession.selectOne(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String,java.lang.Object)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3223" source="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3224" source="org.sonar.core.persistence.BatchSession.selectOne(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.DbSession.selectOne(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3225" source="org.sonar.core.persistence.DbSession.delete(java.lang.String)" target="org.sonar.core.persistence.BatchSession.delete(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3226" source="org.sonar.core.persistence.BatchSession.delete(java.lang.String)" target="org.sonar.core.persistence.BatchSession.increment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3227" source="org.sonar.core.persistence.BatchSession.delete(java.lang.String)" target="org.sonar.core.persistence.DbSession.delete(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3228" source="org.sonar.core.persistence.DbSession.delete(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.delete(java.lang.String,java.lang.Object)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3229" source="org.sonar.core.persistence.BatchSession.delete(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.increment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3230" source="org.sonar.core.persistence.BatchSession.delete(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.DbSession.delete(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3231" source="org.sonar.core.persistence.DbSession.insert(java.lang.String)" target="org.sonar.core.persistence.BatchSession.insert(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3232" source="org.sonar.core.persistence.BatchSession.insert(java.lang.String)" target="org.sonar.core.persistence.BatchSession.makeSureGeneratedKeysAreNotUsedInBatchInserts(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3233" source="org.sonar.core.persistence.BatchSession.insert(java.lang.String)" target="org.sonar.core.persistence.BatchSession.increment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3234" source="org.sonar.core.persistence.BatchSession.insert(java.lang.String)" target="org.sonar.core.persistence.DbSession.insert(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3235" source="org.sonar.core.persistence.DbSession.insert(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.insert(java.lang.String,java.lang.Object)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3236" source="org.sonar.core.persistence.BatchSession.insert(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.makeSureGeneratedKeysAreNotUsedInBatchInserts(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3237" source="org.sonar.core.persistence.BatchSession.insert(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.increment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3238" source="org.sonar.core.persistence.BatchSession.insert(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.DbSession.insert(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3239" source="org.sonar.core.persistence.DbSession.update(java.lang.String)" target="org.sonar.core.persistence.BatchSession.update(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3240" source="org.sonar.core.persistence.BatchSession.update(java.lang.String)" target="org.sonar.core.persistence.BatchSession.increment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3241" source="org.sonar.core.persistence.BatchSession.update(java.lang.String)" target="org.sonar.core.persistence.DbSession.update(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3242" source="org.sonar.core.persistence.DbSession.update(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.update(java.lang.String,java.lang.Object)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3243" source="org.sonar.core.persistence.BatchSession.update(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.BatchSession.increment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3244" source="org.sonar.core.persistence.BatchSession.update(java.lang.String,java.lang.Object)" target="org.sonar.core.persistence.DbSession.update(java.lang.String,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3245" source="org.sonar.core.persistence.DbSession.flushStatements()" target="org.sonar.core.persistence.BatchSession.flushStatements()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3246" source="org.sonar.core.persistence.BatchSession.flushStatements()" target="org.sonar.core.persistence.DbSession.flushStatements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3247" source="org.sonar.core.persistence.BatchSession.flushStatements()" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3248" source="org.sonar.core.persistence.BatchSession.increment()" target="org.sonar.core.persistence.BatchSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3249" source="org.sonar.core.persistence.DbSession.commit()" target="org.sonar.core.persistence.BatchSession.commit()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3250" source="org.sonar.core.persistence.BatchSession.commit()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3251" source="org.sonar.core.persistence.BatchSession.commit()" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3252" source="org.sonar.core.persistence.DbSession.commit(boolean)" target="org.sonar.core.persistence.BatchSession.commit(boolean)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3253" source="org.sonar.core.persistence.BatchSession.commit(boolean)" target="org.sonar.core.persistence.DbSession.commit(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3254" source="org.sonar.core.persistence.BatchSession.commit(boolean)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3255" source="org.sonar.core.persistence.DbSession.enqueue(org.sonar.core.cluster.ClusterAction)" target="org.sonar.core.persistence.BatchSession.enqueue(org.sonar.core.cluster.ClusterAction)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3256" source="org.sonar.core.persistence.BatchSession.enqueue(org.sonar.core.cluster.ClusterAction)" target="org.sonar.core.persistence.BatchSession.increment()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3257" source="org.sonar.core.persistence.BatchSession.enqueue(org.sonar.core.cluster.ClusterAction)" target="org.sonar.core.persistence.DbSession.enqueue(org.sonar.core.cluster.ClusterAction)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3258" source="org.sonar.core.persistence.BatchSession.makeSureGeneratedKeysAreNotUsedInBatchInserts(java.lang.String)" target="org.sonar.core.persistence.DbSession.getConfiguration()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3259" source="org.sonar.core.persistence.DbSession.rollback()" target="org.sonar.core.persistence.BatchSession.rollback()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3260" source="org.sonar.core.persistence.BatchSession.rollback()" target="org.sonar.core.persistence.DbSession.rollback()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3261" source="org.sonar.core.persistence.BatchSession.rollback()" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3262" source="org.sonar.core.persistence.DbSession.rollback(boolean)" target="org.sonar.core.persistence.BatchSession.rollback(boolean)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3263" source="org.sonar.core.persistence.BatchSession.rollback(boolean)" target="org.sonar.core.persistence.DbSession.rollback(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3264" source="org.sonar.core.persistence.BatchSession.rollback(boolean)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3265" source="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3266" source="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3267" source="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3268" source="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3269" source="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3270" source="org.sonar.core.persistence.BatchSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.RowBounds,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3271" source="org.sonar.core.persistence.DbSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.BatchSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3272" source="org.sonar.core.persistence.BatchSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.BatchSession.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3273" source="org.sonar.core.persistence.BatchSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)" target="org.sonar.core.persistence.DbSession.select(java.lang.String,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3274" source="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSize()" target="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3275" source="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSize()" target="org.sonar.core.persistence.BatchSession.insert(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3276" source="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSize()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3277" source="org.sonar.core.cluster.ClusterAction.call()" target="org.sonar.core.persistence.BatchSessionTest$1.call()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3278" source="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSizeWithoutCommits()" target="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3279" source="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSizeWithoutCommits()" target="org.sonar.core.persistence.BatchSessionTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3280" source="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSizeWithoutCommits()" target="org.sonar.core.persistence.BatchSession.enqueue(org.sonar.core.cluster.ClusterAction)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3281" source="org.sonar.core.persistence.BatchSessionTest.shouldCommitWhenReachingBatchSizeWithoutCommits()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3282" source="org.sonar.core.persistence.BatchSessionTest.shouldResetCounterAfterCommit()" target="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3283" source="org.sonar.core.persistence.BatchSessionTest.shouldResetCounterAfterCommit()" target="org.sonar.core.persistence.BatchSession.insert(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3284" source="org.sonar.core.persistence.BatchSessionTest.shouldResetCounterAfterCommit()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3285" source="org.sonar.core.persistence.DaoUtilsTest$1.apply(java.util.List)" target="org.sonar.core.persistence.DaoUtilsTest$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3286" source="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs()" target="org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3287" source="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs()" target="org.sonar.core.persistence.DaoUtilsTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3288" source="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs()" target="org.sonar.core.persistence.DaoUtilsTest$1$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3289" source="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs_on_empty_list()" target="org.sonar.core.persistence.DaoUtils.executeLargeInputs(java.util.Collection,com.google.common.base.Function)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3290" source="org.sonar.core.persistence.DaoUtilsTest.execute_large_inputs_on_empty_list()" target="org.sonar.core.persistence.DaoUtilsTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3291" source="org.sonar.core.persistence.DaoUtilsTest.list_all_dao_classes()" target="org.sonar.core.persistence.DaoUtils.getDaoClasses()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3292" source="org.sonar.core.persistence.DaoUtilsTest.repeatCondition()" target="org.sonar.core.persistence.DaoUtils.repeatCondition(java.lang.String,int,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3293" source="org.sonar.core.persistence.DatabaseCommands$1(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" target="org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3294" source="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)" target="org.sonar.core.persistence.DatabaseCommands$1.resetSequenceSql(java.lang.String,int)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3295" source="org.sonar.core.persistence.DatabaseCommands#H2" target="org.sonar.core.persistence.DatabaseCommands$1(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3296" source="org.sonar.core.persistence.DatabaseCommands$2(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" target="org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3297" source="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)" target="org.sonar.core.persistence.DatabaseCommands$2.resetSequenceSql(java.lang.String,int)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3298" source="org.sonar.core.persistence.DatabaseCommands#POSTGRESQL" target="org.sonar.core.persistence.DatabaseCommands$2(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3299" source="org.sonar.core.persistence.DatabaseCommands$3(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" target="org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3300" source="org.sonar.core.persistence.DatabaseCommands.useLoginAsSchema()" target="org.sonar.core.persistence.DatabaseCommands$3.useLoginAsSchema()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3301" source="org.sonar.core.persistence.DatabaseCommands.truncateSql(java.lang.String)" target="org.sonar.core.persistence.DatabaseCommands$3.truncateSql(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3302" source="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)" target="org.sonar.core.persistence.DatabaseCommands$3.resetSequenceSql(java.lang.String,int)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3303" source="org.sonar.core.persistence.DatabaseCommands#ORACLE" target="org.sonar.core.persistence.DatabaseCommands$3(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3304" source="org.sonar.core.persistence.DatabaseCommands$4(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" target="org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3305" source="org.sonar.core.persistence.DatabaseCommands.shouldTruncate(java.sql.Connection,java.lang.String)" target="org.sonar.core.persistence.DatabaseCommands$4.shouldTruncate(java.sql.Connection,java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3306" source="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)" target="org.sonar.core.persistence.DatabaseCommands$4.resetSequenceSql(java.lang.String,int)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3307" source="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)" target="org.sonar.core.persistence.DatabaseCommands$4.resetPrimaryKeys(javax.sql.DataSource)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3308" source="org.sonar.core.persistence.DatabaseCommands#MSSQL" target="org.sonar.core.persistence.DatabaseCommands$4(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3309" source="org.sonar.core.persistence.DatabaseCommands$5(org.dbunit.dataset.datatype.DefaultDataTypeFactory)" target="org.sonar.core.persistence.DatabaseCommands(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3310" source="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)" target="org.sonar.core.persistence.DatabaseCommands$5.resetSequenceSql(java.lang.String,int)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3311" source="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)" target="org.sonar.core.persistence.DatabaseCommands$5.resetPrimaryKeys(javax.sql.DataSource)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3312" source="org.sonar.core.persistence.DatabaseCommands#MYSQL" target="org.sonar.core.persistence.DatabaseCommands$5(org.dbunit.dataset.datatype.DefaultDataTypeFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3313" source="org.sonar.core.persistence.DatabaseCommands.forDialect(org.sonar.core.persistence.dialect.Dialect)" target="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3314" source="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)" target="org.sonar.core.persistence.DatabaseCommands.resetSequenceSql(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3315" source="org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)" target="org.sonar.core.persistence.DatabaseCommands.shouldTruncate(java.sql.Connection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3316" source="org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)" target="org.sonar.core.persistence.DatabaseCommands.truncateSql(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3317" source="org.sonar.core.persistence.DatabaseUtilsTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3318" source="org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.Connection)" target="org.sonar.core.persistence.DatabaseUtilsTest.selectDual()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3319" source="org.sonar.core.persistence.DatabaseUtilsTest.selectDual()" target="org.sonar.core.persistence.AbstractDaoTestCase.getDatabase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3320" source="org.sonar.core.persistence.DatabaseUtilsTest.selectDual()" target="org.sonar.core.persistence.Database.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3321" source="org.sonar.core.persistence.DatabaseUtilsTest.selectDual()" target="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3322" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_connection()" target="org.sonar.core.persistence.AbstractDaoTestCase.getConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3323" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_connection()" target="org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3324" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_connection()" target="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3325" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()" target="org.sonar.core.persistence.AbstractDaoTestCase.getConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3326" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()" target="org.sonar.core.persistence.DatabaseUtilsTest.selectDual()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3327" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()" target="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.ResultSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3328" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()" target="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Statement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3329" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()" target="org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.Statement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3330" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()" target="org.sonar.core.persistence.DatabaseUtilsTest.isClosed(java.sql.ResultSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3331" source="org.sonar.core.persistence.DatabaseUtilsTest.should_close_statement_and_resultset()" target="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3332" source="org.sonar.core.persistence.DatabaseUtilsTest.should_not_fail_on_connection_errors()" target="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3333" source="org.sonar.core.persistence.DatabaseUtilsTest.should_not_fail_on_resulset_errors()" target="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.ResultSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3334" source="org.sonar.core.persistence.DatabaseUtilsTest.should_not_fail_on_statement_errors()" target="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Statement)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3335" source="org.sonar.core.persistence.DatabaseUtilsTest.should_support_null_connection()" target="org.sonar.core.persistence.DatabaseUtils.closeQuietly(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3336" source="org.sonar.core.persistence.DatabaseVersion$Status#UP_TO_DATE" target="org.sonar.core.persistence.DatabaseVersion$Status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3337" source="org.sonar.core.persistence.DatabaseVersion$Status#REQUIRES_UPGRADE" target="org.sonar.core.persistence.DatabaseVersion$Status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3338" source="org.sonar.core.persistence.DatabaseVersion$Status#REQUIRES_DOWNGRADE" target="org.sonar.core.persistence.DatabaseVersion$Status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3339" source="org.sonar.core.persistence.DatabaseVersion$Status#FRESH_INSTALL" target="org.sonar.core.persistence.DatabaseVersion$Status()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3340" source="org.sonar.core.persistence.DatabaseVersion.getVersion()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3341" source="org.sonar.core.persistence.DatabaseVersion.getVersion()" target="org.sonar.core.persistence.SchemaMigrationMapper.selectVersions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3342" source="org.sonar.core.persistence.DatabaseVersion.getVersion()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3343" source="org.sonar.core.persistence.DatabaseVersion.getStatus()" target="org.sonar.core.persistence.DatabaseVersion.getStatus(java.lang.Integer,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3344" source="org.sonar.core.persistence.DatabaseVersion.getStatus()" target="org.sonar.core.persistence.DatabaseVersion.getVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3345" source="org.sonar.core.persistence.DatabaseVersionTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3346" source="org.sonar.core.persistence.DatabaseVersionTest.getStatus()" target="org.sonar.core.persistence.DatabaseVersion.getStatus(java.lang.Integer,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3347" source="org.sonar.core.persistence.DatabaseVersionTest.getVersion()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3348" source="org.sonar.core.persistence.DatabaseVersionTest.getVersion()" target="org.sonar.core.persistence.DatabaseVersion(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3349" source="org.sonar.core.persistence.DatabaseVersionTest.getVersion()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3350" source="org.sonar.core.persistence.DatabaseVersionTest.getVersion()" target="org.sonar.core.persistence.DatabaseVersion.getVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3351" source="org.sonar.core.persistence.DatabaseVersionTest.getVersion_no_rows()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3352" source="org.sonar.core.persistence.DatabaseVersionTest.getVersion_no_rows()" target="org.sonar.core.persistence.DatabaseVersion(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3353" source="org.sonar.core.persistence.DatabaseVersionTest.getVersion_no_rows()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3354" source="org.sonar.core.persistence.DatabaseVersionTest.getVersion_no_rows()" target="org.sonar.core.persistence.DatabaseVersion.getVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3355" source="org.sonar.core.persistence.DbSession.commit()" target="org.sonar.core.cluster.WorkQueue.enqueue(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3356" source="org.sonar.core.persistence.DbSession.commit(boolean)" target="org.sonar.core.cluster.WorkQueue.enqueue(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3357" source="org.sonar.core.persistence.DbTester.countRowsOfTable(java.lang.String)" target="org.sonar.core.persistence.DbTester.countSql(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3358" source="org.sonar.core.persistence.DbTester.countSql(java.lang.String)" target="org.sonar.core.persistence.DbTester.openConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3359" source="org.sonar.core.persistence.DbTester.openConnection()" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3360" source="org.sonar.core.persistence.DbTester.getHashMap(java.sql.ResultSet)" target="org.sonar.core.persistence.DbTester.doClobFree(java.sql.Clob)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3361" source="org.sonar.core.persistence.DbTester.select(java.lang.String)" target="org.sonar.core.persistence.DbTester.openConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3362" source="org.sonar.core.persistence.DbTester.select(java.lang.String)" target="org.sonar.core.persistence.DbTester.getHashMap(java.sql.ResultSet)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3363" source="org.sonar.core.persistence.DbTester.selectFirst(java.lang.String)" target="org.sonar.core.persistence.DbTester.select(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3364" source="org.sonar.core.persistence.DbTester.dbUnitConnection()" target="org.sonar.core.persistence.DatabaseCommands.getDbUnitFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3365" source="org.sonar.core.persistence.DbTester.dbUnitConnection()" target="org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3366" source="org.sonar.core.persistence.DbTester.dbUnitDataSet(java.io.InputStream)" target="org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3367" source="org.sonar.core.persistence.DbTester.dialect()" target="org.sonar.core.persistence.Database.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3368" source="org.sonar.core.persistence.DbTester.assertColumnDefinition(java.lang.String,java.lang.String,int,java.lang.Integer)" target="org.sonar.core.persistence.DbTester.openConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3369" source="org.sonar.core.persistence.DbTester.assertColumnDefinition(java.lang.String,java.lang.String,int,java.lang.Integer)" target="org.sonar.core.persistence.DbTester.getColumnIndex(java.sql.ResultSet,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3370" source="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[])" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3371" source="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.core.persistence.DbTester.dbUnitConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3372" source="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.core.persistence.DbTester.dbUnitDataSet(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3373" source="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3374" source="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.core.persistence.DbTester.closeQuietly(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3375" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.DbTester.loadOrchestratorSettings(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3376" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3377" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.H2Database(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3378" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.Database.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3379" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3380" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.H2Database.executeScript(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3381" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.DatabaseCommands.forDialect(org.sonar.core.persistence.dialect.Dialect)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3382" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3383" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.DatabaseCommands.useLoginAsSchema()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3384" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3385" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.config.Logback()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3386" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.cluster.NullQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3387" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.MyBatis.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3388" source="org.sonar.core.persistence.DbTester.before()" target="org.sonar.core.persistence.DbTester.truncateTables()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3389" source="org.sonar.core.persistence.DbTester.executeUpdateSql(java.lang.String)" target="org.sonar.core.persistence.DbTester.openConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3390" source="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])" target="org.sonar.core.persistence.DbTester.dbUnitDataSet(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3391" source="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])" target="org.sonar.core.persistence.DbTester.dbUnitConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3392" source="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])" target="org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3393" source="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])" target="org.sonar.core.persistence.DbTester.closeQuietly(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3394" source="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" target="org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3395" source="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3396" source="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.io.InputStream[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3397" source="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" target="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3398" source="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])" target="org.sonar.core.persistence.DbTester.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3399" source="org.sonar.core.persistence.DbTester.truncateTables()" target="org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3400" source="org.sonar.core.persistence.DbTester.truncateTables()" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3401" source="org.sonar.core.persistence.DdlUtils.createSchema(java.sql.Connection,java.lang.String)" target="org.sonar.core.persistence.DdlUtils.executeScript(java.sql.Connection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3402" source="org.sonar.core.persistence.DdlUtils.executeScript(java.sql.Connection,java.lang.String)" target="org.sonar.core.persistence.DdlUtils.newScriptRunner(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3403" source="org.sonar.core.persistence.DdlUtilsTest.shouldCreateSchema()" target="org.sonar.core.persistence.DdlUtils.createSchema(java.sql.Connection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3404" source="org.sonar.core.persistence.DdlUtilsTest.shouldCreateSchema()" target="org.sonar.core.persistence.DdlUtilsTest.countTables(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3405" source="org.sonar.core.persistence.DdlUtilsTest.shouldSupportOnlyH2()" target="org.sonar.core.persistence.DdlUtils.supportsDialect(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3406" source="org.sonar.core.persistence.Database.getHibernateProperties()" target="org.sonar.core.persistence.DefaultDatabase.getHibernateProperties()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3407" source="org.sonar.core.persistence.DefaultDatabase.getHibernateProperties()" target="org.sonar.core.persistence.DefaultDatabase.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3408" source="org.sonar.core.persistence.DefaultDatabase.getHibernateProperties()" target="org.sonar.core.persistence.dialect.Dialect.getHibernateDialectClass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3409" source="org.sonar.core.persistence.Database.getDataSource()" target="org.sonar.core.persistence.DefaultDatabase.getDataSource()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3410" source="org.sonar.core.persistence.Database.getDialect()" target="org.sonar.core.persistence.DefaultDatabase.getDialect()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3411" source="org.sonar.core.persistence.DefaultDatabase.completeDefaultProperties(java.util.Properties)" target="org.sonar.core.persistence.DefaultDatabase.completeDefaultProperty(java.util.Properties,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3412" source="org.sonar.core.persistence.DefaultDatabase.initDatasource()" target="org.sonar.core.persistence.DefaultDatabase.extractCommonsDbcpProperties(java.util.Properties)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3413" source="org.sonar.core.persistence.DefaultDatabase.initDatasource()" target="org.sonar.core.persistence.dialect.Dialect.getConnectionInitStatements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3414" source="org.sonar.core.persistence.DefaultDatabase.initDatasource()" target="org.sonar.core.persistence.dialect.Dialect.getValidationQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3415" source="org.sonar.core.persistence.DefaultDatabase.initDatasource()" target="org.sonar.core.persistence.profiling.ProfiledDataSource(org.apache.commons.dbcp.BasicDataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3416" source="org.sonar.core.persistence.DefaultDatabase.initSettings()" target="org.sonar.core.persistence.DefaultDatabase.completeProperties(org.sonar.api.config.Settings,java.util.Properties,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3417" source="org.sonar.core.persistence.DefaultDatabase.initSettings()" target="org.sonar.core.persistence.DefaultDatabase.completeDefaultProperties(java.util.Properties)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3418" source="org.sonar.core.persistence.DefaultDatabase.initSettings()" target="org.sonar.core.persistence.DefaultDatabase.doCompleteProperties(java.util.Properties)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3419" source="org.sonar.core.persistence.DefaultDatabase.initSettings()" target="org.sonar.core.persistence.dialect.DialectUtils.find(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3420" source="org.sonar.core.persistence.DefaultDatabase.initSettings()" target="org.sonar.core.persistence.dialect.Dialect.getDefaultDriverClassName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3421" source="org.sonar.core.persistence.DefaultDatabase.start()" target="org.sonar.core.persistence.DefaultDatabase.initSettings()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3422" source="org.sonar.core.persistence.DefaultDatabase.start()" target="org.sonar.core.persistence.DefaultDatabase.initDatasource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3423" source="org.sonar.core.persistence.DefaultDatabase.start()" target="org.sonar.core.persistence.DefaultDatabase.checkConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3424" source="org.sonar.core.persistence.DefaultDatabase.start()" target="org.sonar.core.persistence.DefaultDatabase.doAfterStart()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3425" source="org.sonar.core.persistence.DefaultDatabaseTest$1(org.sonar.api.config.Settings)" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3426" source="org.sonar.core.persistence.DefaultDatabase.doCompleteProperties(java.util.Properties)" target="org.sonar.core.persistence.DefaultDatabaseTest$1.doCompleteProperties(java.util.Properties)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3427" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldCompleteProperties()" target="org.sonar.core.persistence.DefaultDatabaseTest$1(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3428" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldCompleteProperties()" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3429" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldCompleteProperties()" target="org.sonar.core.persistence.DefaultDatabase.initSettings()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3430" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldCompleteProperties()" target="org.sonar.core.persistence.DefaultDatabase.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3431" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldExtractCommonsDbcpProperties()" target="org.sonar.core.persistence.DefaultDatabase.extractCommonsDbcpProperties(java.util.Properties)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3432" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDefaultDriver()" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3433" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDefaultDriver()" target="org.sonar.core.persistence.DefaultDatabase.initSettings()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3434" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDefaultDriver()" target="org.sonar.core.persistence.DefaultDatabase.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3435" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDialectFromUrl()" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3436" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDialectFromUrl()" target="org.sonar.core.persistence.DefaultDatabase.initSettings()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3437" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDialectFromUrl()" target="org.sonar.core.persistence.DefaultDatabase.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3438" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldGuessDialectFromUrl()" target="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3439" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldLoadDefaultValues()" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3440" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldLoadDefaultValues()" target="org.sonar.core.persistence.DefaultDatabase.initSettings()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3441" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldLoadDefaultValues()" target="org.sonar.core.persistence.DefaultDatabase.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3442" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldLoadDefaultValues()" target="org.sonar.core.persistence.DefaultDatabase.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3443" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldSetHibernateProperties()" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3444" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldSetHibernateProperties()" target="org.sonar.core.persistence.DefaultDatabase.initSettings()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3445" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldSetHibernateProperties()" target="org.sonar.core.persistence.DefaultDatabase.getHibernateProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3446" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3447" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()" target="org.sonar.core.persistence.DefaultDatabase.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3448" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()" target="org.sonar.core.persistence.DefaultDatabase.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3449" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()" target="org.sonar.core.persistence.DefaultDatabase.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3450" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()" target="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3451" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldStart()" target="org.sonar.core.persistence.DefaultDatabase.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3452" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldSupportDeprecatedUserProperty()" target="org.sonar.core.persistence.DefaultDatabase(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3453" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldSupportDeprecatedUserProperty()" target="org.sonar.core.persistence.DefaultDatabase.initSettings()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3454" source="org.sonar.core.persistence.DefaultDatabaseTest.shouldSupportDeprecatedUserProperty()" target="org.sonar.core.persistence.DefaultDatabase.getProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3455" source="org.sonar.core.persistence.Database.getHibernateProperties()" target="org.sonar.core.persistence.H2Database.getHibernateProperties()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3456" source="org.sonar.core.persistence.Database.getDataSource()" target="org.sonar.core.persistence.H2Database.getDataSource()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3457" source="org.sonar.core.persistence.Database.getDialect()" target="org.sonar.core.persistence.H2Database.getDialect()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e3458" source="org.sonar.core.persistence.H2Database.getDialect()" target="org.sonar.core.persistence.dialect.H2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3459" source="org.sonar.core.persistence.H2Database.createSchema()" target="org.sonar.core.persistence.DdlUtils.createSchema(java.sql.Connection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3460" source="org.sonar.core.persistence.H2Database.executeScript(java.lang.String)" target="org.sonar.core.persistence.DdlUtils.executeScript(java.sql.Connection,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3461" source="org.sonar.core.persistence.H2Database.start()" target="org.sonar.core.persistence.H2Database.startDatabase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3462" source="org.sonar.core.persistence.H2Database.start()" target="org.sonar.core.persistence.H2Database.createSchema()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3463" source="org.sonar.core.persistence.H2DatabaseTest#db" target="org.sonar.core.persistence.H2Database(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3464" source="org.sonar.core.persistence.H2DatabaseTest.shouldExecuteDdlAtStartup()" target="org.sonar.core.persistence.H2Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3465" source="org.sonar.core.persistence.H2DatabaseTest.shouldExecuteDdlAtStartup()" target="org.sonar.core.persistence.DdlUtilsTest.countTables(java.sql.Connection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3466" source="org.sonar.core.persistence.H2DatabaseTest.startDb()" target="org.sonar.core.persistence.H2Database.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3467" source="org.sonar.core.persistence.H2DatabaseTest.stopDb()" target="org.sonar.core.persistence.H2Database.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3468" source="org.sonar.core.persistence.IsAliveMapperTest#dbTester" target="org.sonar.core.persistence.DbTester()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3469" source="org.sonar.core.persistence.IsAliveMapperTest.isAlive_works_for_current_vendors()" target="org.sonar.core.persistence.IsAliveMapper.isAlive()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3470" source="org.sonar.core.persistence.IsAliveMapperTest.setUp()" target="org.sonar.core.persistence.DbTester.myBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3471" source="org.sonar.core.persistence.IsAliveMapperTest.setUp()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3472" source="org.sonar.core.persistence.IsAliveMapperTest.setUp()" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3473" source="org.sonar.core.persistence.IsAliveMapperTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3474" source="org.sonar.core.persistence.MyBatis.openSession()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3475" source="org.sonar.core.persistence.MyBatis.openBatchSession()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3476" source="org.sonar.core.persistence.MyBatis.openSession(boolean)" target="org.sonar.core.persistence.BatchSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3477" source="org.sonar.core.persistence.MyBatis.openSession(boolean)" target="org.sonar.core.persistence.DbSession(org.sonar.core.cluster.WorkQueue,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3478" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.MyBatis.createTransactionFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3479" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3480" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.Database.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3481" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.dialect.Dialect.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3482" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.dialect.Dialect.getTrueSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3483" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.dialect.Dialect.getFalseSqlValue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3484" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.dialect.Dialect.getScrollDefaultFetchSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3485" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.MyBatis.loadAlias(org.apache.ibatis.session.Configuration,java.lang.String,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3486" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3487" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3488" source="org.sonar.core.persistence.MyBatis.start()" target="org.sonar.core.persistence.MyBatis.loadMappers(org.apache.ibatis.session.Configuration,java.lang.Class[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3489" source="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.Class)" target="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3490" source="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.String)" target="org.sonar.core.config.Logback.setLoggerLevel(java.lang.String,ch.qos.logback.classic.Level)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3491" source="org.sonar.core.persistence.MyBatis.loadMappers(org.apache.ibatis.session.Configuration,java.lang.Class[])" target="org.sonar.core.persistence.MyBatis.loadMapper(org.apache.ibatis.session.Configuration,java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3492" source="org.sonar.core.persistence.MyBatisTest.shouldConfigureMyBatis()" target="org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3493" source="org.sonar.core.persistence.MyBatisTest.shouldConfigureMyBatis()" target="org.sonar.core.persistence.MyBatis.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3494" source="org.sonar.core.persistence.MyBatisTest.shouldConfigureMyBatis()" target="org.sonar.core.persistence.MyBatis.getSessionFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3495" source="org.sonar.core.persistence.MyBatisTest.shouldOpenBatchSession()" target="org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3496" source="org.sonar.core.persistence.MyBatisTest.shouldOpenBatchSession()" target="org.sonar.core.persistence.MyBatis.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3497" source="org.sonar.core.persistence.MyBatisTest.shouldOpenBatchSession()" target="org.sonar.core.persistence.MyBatis.openBatchSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3498" source="org.sonar.core.persistence.MyBatisTest.start()" target="org.sonar.core.persistence.H2Database(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3499" source="org.sonar.core.persistence.MyBatisTest.start()" target="org.sonar.core.persistence.H2Database.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3500" source="org.sonar.core.persistence.MyBatisTest.stop()" target="org.sonar.core.persistence.H2Database.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3501" source="org.sonar.core.persistence.SemaphoreDao.acquireIfOutdated(java.lang.String,int,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3502" source="org.sonar.core.persistence.SemaphoreDao.acquireIfOutdated(java.lang.String,int,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreMapper.acquire(java.lang.String,java.lang.Long,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3503" source="org.sonar.core.persistence.SemaphoreDao.lockedSince(org.sonar.core.persistence.SemaphoreDto)" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3504" source="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3505" source="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)" target="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3506" source="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)" target="org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3507" source="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)" target="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3508" source="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3509" source="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" target="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3510" source="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" target="org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3511" source="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" target="org.sonar.core.persistence.SemaphoreDao.acquireIfOutdated(java.lang.String,int,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3512" source="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)" target="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3513" source="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)" target="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3514" source="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3515" source="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3516" source="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3517" source="org.sonar.core.persistence.SemaphoreDao.createLock(org.sonar.core.persistence.SemaphoreDto,boolean)" target="org.sonar.core.persistence.SemaphoreDao.lockedSince(org.sonar.core.persistence.SemaphoreDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3518" source="org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3519" source="org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreMapper.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3520" source="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3521" source="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3522" source="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreDto.setCreatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3523" source="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreDto.setUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3524" source="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreDto.setLockedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3525" source="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3526" source="org.sonar.core.persistence.SemaphoreDao.tryToInsert(java.lang.String,long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.persistence.SemaphoreMapper.initialize(org.sonar.core.persistence.SemaphoreDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3527" source="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3528" source="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" target="org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3529" source="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)" target="org.sonar.core.persistence.SemaphoreMapper.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3530" source="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3531" source="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)" target="org.sonar.core.persistence.SemaphoreDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3532" source="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)" target="org.sonar.core.persistence.SemaphoreMapper.update(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3533" source="org.sonar.core.persistence.SemaphoreDaoTest$Runner.run()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3534" source="org.sonar.core.persistence.SemaphoreDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3535" source="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3536" source="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3537" source="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" target="org.sonar.core.persistence.SemaphoreDao.selectSemaphore(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3538" source="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3539" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3540" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3541" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()" target="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3542" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()" target="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3543" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()" target="org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3544" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3545" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3546" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3547" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_locked_semaphore_when_timeout_is_zero()" target="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3548" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3549" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3550" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3551" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3552" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3553" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3554" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3555" source="org.sonar.core.persistence.SemaphoreDaoTest.acquire_long_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3556" source="org.sonar.core.persistence.SemaphoreDaoTest.before()" target="org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3557" source="org.sonar.core.persistence.SemaphoreDaoTest.before()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3558" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3559" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()" target="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3560" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3561" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3562" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()" target="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3563" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_and_update_semaphore()" target="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3564" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3565" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()" target="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3566" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3567" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()" target="org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3568" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3569" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3570" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3571" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore()" target="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3572" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3573" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()" target="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3574" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()" target="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3575" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()" target="org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3576" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3577" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3578" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3579" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_maxage_is_zeo()" target="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3580" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3581" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3582" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3583" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3584" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3585" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3586" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3587" source="org.sonar.core.persistence.SemaphoreDaoTest.create_and_acquire_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3588" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3589" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3590" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3591" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3592" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3593" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3594" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3595" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore()" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3596" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3597" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3598" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3599" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3600" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDaoTest.isRecent(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3601" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3602" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3603" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_acquire_locked_semaphore_when_no_timeout()" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3604" source="org.sonar.core.persistence.SemaphoreDaoTest.fail_to_update_null_semaphore()" target="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3605" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_blank_semaphore_name()" target="org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3606" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_blank_semaphore_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3607" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_blank_semaphore_name()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3608" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_negative_timeout()" target="org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3609" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_negative_timeout()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3610" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_negative_timeout()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3611" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_null_semaphore_name()" target="org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3612" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_null_semaphore_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3613" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_acquire_if_null_semaphore_name()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3614" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_release_if_blank_semaphore_name()" target="org.sonar.core.persistence.SemaphoreDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3615" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_release_if_blank_semaphore_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3616" source="org.sonar.core.persistence.SemaphoreDaoTest.should_fail_to_release_if_blank_semaphore_name()" target="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3617" source="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3618" source="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()" target="org.sonar.core.persistence.SemaphoreDaoTest.selectSemaphore(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3619" source="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()" target="org.sonar.core.persistence.SemaphoreDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3620" source="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()" target="org.sonar.core.persistence.SemaphoreDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3621" source="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()" target="org.sonar.core.persistence.SemaphoreDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3622" source="org.sonar.core.persistence.SemaphoreDaoTest.should_select_semaphore_return_current_semaphore_when_acquiring()" target="org.sonar.core.persistence.SemaphoreDto.getLockedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3623" source="org.sonar.core.persistence.SemaphoreDaoTest.test_concurrent_locks()" target="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3624" source="org.sonar.core.persistence.SemaphoreDaoTest.test_concurrent_locks()" target="org.sonar.core.persistence.SemaphoreDaoTest$Runner(org.sonar.core.persistence.SemaphoreDao,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.CyclicBarrier,java.util.concurrent.CountDownLatch)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3625" source="org.sonar.core.persistence.SemaphoreUpdater$1.run()" target="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3626" source="org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)" target="org.sonar.core.persistence.SemaphoreUpdater$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3627" source="org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)" target="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3628" source="org.sonar.core.persistence.SemaphoreUpdaterTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3629" source="org.sonar.core.persistence.SemaphoreUpdaterTest.before()" target="org.sonar.core.persistence.SemaphoreUpdater(org.sonar.core.persistence.SemaphoreDao)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3630" source="org.sonar.core.persistence.SemaphoreUpdaterTest.shouldNotFailWhenCancelNotExistingSemaphore()" target="org.sonar.core.persistence.SemaphoreUpdater.stopUpdate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3631" source="org.sonar.core.persistence.SemaphoreUpdaterTest.testCancelUpdate()" target="org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3632" source="org.sonar.core.persistence.SemaphoreUpdaterTest.testCancelUpdate()" target="org.sonar.core.persistence.SemaphoreUpdater.stopUpdate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3633" source="org.sonar.core.persistence.SemaphoreUpdaterTest.testCancelUpdate()" target="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3634" source="org.sonar.core.persistence.SemaphoreUpdaterTest.testScheduleUpdate()" target="org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3635" source="org.sonar.core.persistence.SemaphoreUpdaterTest.testScheduleUpdate()" target="org.sonar.core.persistence.SemaphoreDao.update(org.sonar.api.utils.Semaphores$Semaphore)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3636" source="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String)" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3637" source="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String,int,int)" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3638" source="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String,int,int)" target="org.sonar.core.persistence.SemaphoreUpdater.scheduleForUpdate(org.sonar.api.utils.Semaphores$Semaphore,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3639" source="org.sonar.core.persistence.SemaphoresImpl.release(java.lang.String)" target="org.sonar.core.persistence.SemaphoreUpdater.stopUpdate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3640" source="org.sonar.core.persistence.SemaphoresImpl.release(java.lang.String)" target="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3641" source="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3642" source="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()" target="org.sonar.core.persistence.SemaphoresImpl(org.sonar.core.persistence.SemaphoreDao,org.sonar.core.persistence.SemaphoreUpdater)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3643" source="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()" target="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3644" source="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()" target="org.sonar.core.persistence.SemaphoresImpl.acquire(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3645" source="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()" target="org.sonar.core.persistence.SemaphoreDao.acquire(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3646" source="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()" target="org.sonar.core.persistence.SemaphoresImpl.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3647" source="org.sonar.core.persistence.SemaphoresImplTest.should_be_a_bridge_over_dao()" target="org.sonar.core.persistence.SemaphoreDao.release(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3648" source="org.sonar.core.permission.GroupWithPermissionDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3649" source="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3650" source="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3651" source="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3652" source="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3653" source="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3654" source="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3655" source="org.sonar.core.permission.GroupWithPermissionDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3656" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3657" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3658" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3659" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3660" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionQuery$Builder.search(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3661" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3662" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_by_groups_name()" target="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3663" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3664" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3665" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3666" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3667" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3668" source="org.sonar.core.permission.GroupWithPermissionDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3669" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3670" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3671" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3672" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3673" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()" target="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3674" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3675" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_global_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3676" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3677" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3678" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3679" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3680" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()" target="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3681" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3682" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3683" source="org.sonar.core.permission.GroupWithPermissionDaoTest.select_groups_for_project_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3684" source="org.sonar.core.permission.GroupWithPermissionDaoTest.setUp()" target="org.sonar.core.permission.PermissionDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3685" source="org.sonar.core.permission.GroupWithPermissionDaoTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3686" source="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()" target="org.sonar.core.permission.GroupWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3687" source="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()" target="org.sonar.core.permission.GroupWithPermission.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3688" source="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()" target="org.sonar.core.permission.GroupWithPermission.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3689" source="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()" target="org.sonar.core.permission.GroupWithPermission.hasPermission(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3690" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.permission.GroupWithPermissionDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3691" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3692" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3693" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.setPermission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3694" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3695" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.permission.GroupWithPermission.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3696" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.permission.GroupWithPermission.description()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3697" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_having_permission()" target="org.sonar.core.permission.GroupWithPermission.hasPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3698" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.permission.GroupWithPermissionDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3699" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3700" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.setPermission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3701" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.toGroupWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3702" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.permission.GroupWithPermission.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3703" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.permission.GroupWithPermission.description()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3704" source="org.sonar.core.permission.GroupWithPermissionDtoTest.to_group_with_permission_not_having_permission()" target="org.sonar.core.permission.GroupWithPermission.hasPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3705" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3706" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3707" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3708" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3709" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3710" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3711" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3712" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.anyone_group_is_not_returned_when_it_has_no_permission()" target="org.sonar.core.permission.GroupWithPermissionDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3713" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3714" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3715" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3716" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3717" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionQuery$Builder.search(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3718" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3719" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_by_groups_name()" target="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3720" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3721" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3722" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3723" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3724" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3725" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.search_groups_should_be_sorted_by_group_name()" target="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3726" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3727" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3728" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3729" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3730" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()" target="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3731" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()" target="org.sonar.core.permission.GroupWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3732" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()" target="org.sonar.core.permission.GroupWithPermissionDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3733" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.select_groups()" target="org.sonar.core.permission.GroupWithPermissionDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3734" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.setUp()" target="org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3735" source="org.sonar.core.permission.GroupWithPermissionTemplateDaoTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3736" source="org.sonar.core.permission.GroupWithPermissionTest.test_equals()" target="org.sonar.core.permission.GroupWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3737" source="org.sonar.core.permission.GroupWithPermissionTest.test_equals()" target="org.sonar.core.permission.GroupWithPermission.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3738" source="org.sonar.core.permission.GroupWithPermissionTest.test_equals()" target="org.sonar.core.permission.GroupWithPermission.hasPermission(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3739" source="org.sonar.core.permission.GroupWithPermissionTest.test_hashcode()" target="org.sonar.core.permission.GroupWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3740" source="org.sonar.core.permission.GroupWithPermissionTest.test_hashcode()" target="org.sonar.core.permission.GroupWithPermission.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3741" source="org.sonar.core.permission.GroupWithPermissionTest.test_hashcode()" target="org.sonar.core.permission.GroupWithPermission.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3742" source="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.GroupWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3743" source="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.GroupWithPermission.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3744" source="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.GroupWithPermission.hasPermission(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3745" source="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.GroupWithPermission.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3746" source="org.sonar.core.permission.GroupWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.GroupWithPermission.hasPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3747" source="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3748" source="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.permission.PermissionDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3749" source="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.permission.PermissionMapper.selectGroups(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3750" source="org.sonar.core.permission.PermissionDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3751" source="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3752" source="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3753" source="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" target="org.sonar.core.permission.PermissionDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3754" source="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" target="org.sonar.core.permission.PermissionMapper.selectUsers(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3755" source="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3756" source="org.sonar.core.permission.PermissionFacade.countComponentPermissions(org.sonar.core.persistence.DbSession,java.lang.Long)" target="org.sonar.core.user.RoleDao.countResourceGroupRoles(org.sonar.core.persistence.DbSession,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3757" source="org.sonar.core.permission.PermissionFacade.countComponentPermissions(org.sonar.core.persistence.DbSession,java.lang.Long)" target="org.sonar.core.user.RoleDao.countResourceUserRoles(org.sonar.core.persistence.DbSession,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3758" source="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3759" source="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.getKeyPattern()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3760" source="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionFacade.checkAtMostOneMatchForComponentKey(java.lang.String,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3761" source="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3762" source="org.sonar.core.permission.PermissionFacade.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.user.RoleDao.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3763" source="org.sonar.core.permission.PermissionFacade.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.user.RoleDao.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3764" source="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3765" source="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3766" source="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3767" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3768" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3769" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionFacade.removeAllPermissions(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3770" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateDto.getUsersPermissions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3771" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3772" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateUserDto.getUserId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3773" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateUserDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3774" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateDto.getGroupsPermissions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3775" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateGroupDto.getGroupId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3776" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3777" source="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateGroupDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3778" source="org.sonar.core.permission.PermissionFacade.checkAtMostOneMatchForComponentKey(java.lang.String,java.util.List)" target="org.sonar.core.permission.PermissionTemplateDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3779" source="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3780" source="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3781" source="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3782" source="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3783" source="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3784" source="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.RoleDao.deleteGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3785" source="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3786" source="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3787" source="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3788" source="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3789" source="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3790" source="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3791" source="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3792" source="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3793" source="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.RoleDao.deleteUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3794" source="org.sonar.core.permission.PermissionFacade.grantDefaultRoles(org.sonar.core.persistence.DbSession,java.lang.Long,java.lang.String)" target="org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3795" source="org.sonar.core.permission.PermissionFacade.grantDefaultRoles(org.sonar.core.persistence.DbSession,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionFacade.getApplicablePermissionTemplateKey(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3796" source="org.sonar.core.permission.PermissionFacade.grantDefaultRoles(org.sonar.core.persistence.DbSession,java.lang.Long,java.lang.String)" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3797" source="org.sonar.core.permission.PermissionFacade.grantDefaultRoles(org.sonar.core.persistence.DbSession,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3798" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3799" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3800" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupRoleDto.setGroupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3801" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3802" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3803" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.RoleDao.insertGroupRole(org.sonar.core.user.GroupRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3804" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3805" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3806" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserDao.selectGroupByName(java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3807" source="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.GroupDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3808" source="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserRoleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3809" source="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserRoleDto.setRole(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3810" source="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserRoleDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3811" source="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.UserRoleDto.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3812" source="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3813" source="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.RoleDao.insertUserRole(org.sonar.core.user.UserRoleDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3814" source="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,boolean,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3815" source="org.sonar.core.permission.PermissionFacade.removeAllPermissions(java.lang.Long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.RoleDao.deleteGroupRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3816" source="org.sonar.core.permission.PermissionFacade.removeAllPermissions(java.lang.Long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.user.RoleDao.deleteUserRolesByResourceId(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3817" source="org.sonar.core.permission.PermissionFacade.updateProjectAuthorizationDate(java.lang.Long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.resource.ResourceDao.updateAuthorizationDate(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3818" source="org.sonar.core.permission.PermissionFacadeTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3819" source="org.sonar.core.permission.PermissionFacadeTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3820" source="org.sonar.core.permission.PermissionFacadeTest.setUp()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3821" source="org.sonar.core.permission.PermissionFacadeTest.setUp()" target="org.sonar.core.user.RoleDao()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3822" source="org.sonar.core.permission.PermissionFacadeTest.setUp()" target="org.sonar.core.user.UserDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3823" source="org.sonar.core.permission.PermissionFacadeTest.setUp()" target="org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3824" source="org.sonar.core.permission.PermissionFacadeTest.setUp()" target="org.sonar.core.resource.ResourceDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3825" source="org.sonar.core.permission.PermissionFacadeTest.setUp()" target="org.sonar.core.permission.PermissionFacade(org.sonar.core.user.RoleDao,org.sonar.core.user.UserDao,org.sonar.core.resource.ResourceDao,org.sonar.core.permission.PermissionTemplateDao,org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3826" source="org.sonar.core.permission.PermissionFacadeTest.should_add_user_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3827" source="org.sonar.core.permission.PermissionFacadeTest.should_add_user_permission()" target="org.sonar.core.permission.PermissionFacade.insertUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3828" source="org.sonar.core.permission.PermissionFacadeTest.should_add_user_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3829" source="org.sonar.core.permission.PermissionFacadeTest.should_add_user_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3830" source="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3831" source="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()" target="org.sonar.core.permission.PermissionFacade.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3832" source="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()" target="org.sonar.core.permission.PermissionFacade.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3833" source="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()" target="org.sonar.core.permission.PermissionFacade.applyPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3834" source="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()" target="org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3835" source="org.sonar.core.permission.PermissionFacadeTest.should_apply_permission_template()" target="org.sonar.core.resource.ResourceDto.getAuthorizationUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3836" source="org.sonar.core.permission.PermissionFacadeTest.should_count_component_permissions()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3837" source="org.sonar.core.permission.PermissionFacadeTest.should_count_component_permissions()" target="org.sonar.core.permission.PermissionFacade.countComponentPermissions(org.sonar.core.persistence.DbSession,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3838" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_name_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3839" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_name_permission()" target="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3840" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_name_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3841" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_name_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3842" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3843" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_permission()" target="org.sonar.core.permission.PermissionFacade.deleteGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3844" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3845" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_group_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3846" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_user_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3847" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_user_permission()" target="org.sonar.core.permission.PermissionFacade.deleteUserPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3848" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_user_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3849" source="org.sonar.core.permission.PermissionFacadeTest.should_delete_user_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3850" source="org.sonar.core.permission.PermissionFacadeTest.should_fail_on_unmatched_template()" target="org.sonar.core.permission.PermissionFacade(org.sonar.core.user.RoleDao,org.sonar.core.user.UserDao,org.sonar.core.resource.ResourceDao,org.sonar.core.permission.PermissionTemplateDao,org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3851" source="org.sonar.core.permission.PermissionFacadeTest.should_fail_on_unmatched_template()" target="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3852" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_anyone_group_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3853" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_anyone_group_permission()" target="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3854" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_anyone_group_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3855" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_anyone_group_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3856" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_name_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3857" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_name_permission()" target="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3858" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_name_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3859" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_name_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3860" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3861" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_permission()" target="org.sonar.core.permission.PermissionFacade.insertGroupPermission(java.lang.Long,java.lang.Long,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3862" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_permission()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3863" source="org.sonar.core.permission.PermissionFacadeTest.should_insert_group_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3864" source="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3865" source="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()" target="org.sonar.core.permission.PermissionFacade.selectGroupPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3866" source="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()" target="org.sonar.core.permission.PermissionFacade.selectUserPermissions(org.sonar.core.persistence.DbSession,java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3867" source="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()" target="org.sonar.core.permission.PermissionFacade.removeAllPermissions(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3868" source="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3869" source="org.sonar.core.permission.PermissionFacadeTest.should_remove_all_permissions()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3870" source="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3871" source="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3872" source="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3873" source="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()" target="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3874" source="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()" target="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3875" source="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()" target="org.sonar.core.permission.PermissionFacade(org.sonar.core.user.RoleDao,org.sonar.core.user.UserDao,org.sonar.core.resource.ResourceDao,org.sonar.core.permission.PermissionTemplateDao,org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3876" source="org.sonar.core.permission.PermissionFacadeTest.should_retrieve_permission_template()" target="org.sonar.core.permission.PermissionFacade.getPermissionTemplateWithPermissions(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3877" source="org.sonar.core.permission.PermissionFacadeTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3878" source="org.sonar.core.permission.PermissionQuery$Builder.build()" target="org.sonar.core.permission.PermissionQuery$Builder.initMembership()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3879" source="org.sonar.core.permission.PermissionQuery$Builder.build()" target="org.sonar.core.permission.PermissionQuery$Builder.initPageIndex()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3880" source="org.sonar.core.permission.PermissionQuery$Builder.build()" target="org.sonar.core.permission.PermissionQuery$Builder.initPageSize()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3881" source="org.sonar.core.permission.PermissionQuery$Builder.build()" target="org.sonar.core.permission.PermissionQuery(org.sonar.core.permission.PermissionQuery$Builder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3882" source="org.sonar.core.permission.PermissionQuery(org.sonar.core.permission.PermissionQuery$Builder)" target="org.sonar.core.permission.PermissionQuery.searchToSql(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3883" source="org.sonar.core.permission.PermissionQuery.builder()" target="org.sonar.core.permission.PermissionQuery$Builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3884" source="org.sonar.core.permission.PermissionTemplateDao.generateTemplateKee(java.lang.String,java.util.Date)" target="org.sonar.core.permission.PermissionTemplateDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3885" source="org.sonar.core.permission.PermissionTemplateDao.generateTemplateKee(java.lang.String,java.util.Date)" target="org.sonar.core.permission.PermissionTemplateDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3886" source="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3887" source="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates()" target="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3888" source="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3889" source="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates(org.sonar.core.persistence.DbSession)" target="org.sonar.core.persistence.DbSession.selectList(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3890" source="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3891" source="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3892" source="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateMapper.selectGroups(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3893" source="org.sonar.core.permission.PermissionTemplateDao.selectGroups(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3894" source="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3895" source="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3896" source="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3897" source="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" target="org.sonar.core.permission.PermissionTemplateMapper.selectUsers(java.util.Map,org.apache.ibatis.session.RowBounds)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3898" source="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3899" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3900" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3901" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3902" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3903" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.generateTemplateKee(java.lang.String,java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3904" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3905" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setKeyPattern(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3906" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3907" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3908" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3909" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3910" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.insert(org.sonar.core.permission.PermissionTemplateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3911" source="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3912" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3913" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3914" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3915" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3916" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3917" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.selectTemplateUsersPermissions(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3918" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setUsersPermissions(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3919" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.getUsersPermissions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3920" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.selectTemplateGroupsPermissions(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3921" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setGroupsByPermission(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3922" source="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.getGroupsPermissions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3923" source="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3924" source="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3925" source="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3926" source="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3927" source="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3928" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3929" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto.setTemplateId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3930" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto.setPermission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3931" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto.setGroupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3932" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3933" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3934" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3935" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3936" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3937" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.insertGroupPermission(org.sonar.core.permission.PermissionTemplateGroupDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3938" source="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3939" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3940" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto.setTemplateId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3941" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3942" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto.setPermission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3943" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3944" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3945" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3946" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3947" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3948" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.insertUserPermission(org.sonar.core.permission.PermissionTemplateUserDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3949" source="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3950" source="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3951" source="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3952" source="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateMapper.deleteUsersPermissions(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3953" source="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateMapper.deleteGroupsPermissions(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3954" source="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)" target="org.sonar.core.permission.PermissionTemplateMapper.delete(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3955" source="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3956" source="org.sonar.core.permission.PermissionTemplateDao.removeByGroup(java.lang.Long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.permission.PermissionTemplateMapper.deleteByGroupId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3957" source="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3958" source="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto.setTemplateId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3959" source="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto.setPermission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3960" source="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateGroupDto.setGroupId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3961" source="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3962" source="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3963" source="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.deleteGroupPermission(org.sonar.core.permission.PermissionTemplateGroupDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3964" source="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3965" source="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3966" source="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto.setTemplateId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3967" source="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto.setPermission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3968" source="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateUserDto.setUserId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3969" source="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3970" source="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3971" source="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.deleteUserPermission(org.sonar.core.permission.PermissionTemplateUserDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3972" source="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3973" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3974" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3975" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3976" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3977" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setKeyPattern(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3978" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3979" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3980" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3981" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateDao.mapper(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3982" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.permission.PermissionTemplateMapper.update(org.sonar.core.permission.PermissionTemplateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3983" source="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3984" source="org.sonar.core.permission.PermissionTemplateDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3985" source="org.sonar.core.permission.PermissionTemplateDaoTest.after()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3986" source="org.sonar.core.permission.PermissionTemplateDaoTest.remove_by_group()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3987" source="org.sonar.core.permission.PermissionTemplateDaoTest.remove_by_group()" target="org.sonar.core.permission.PermissionTemplateDao.removeByGroup(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3988" source="org.sonar.core.permission.PermissionTemplateDaoTest.remove_by_group()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3989" source="org.sonar.core.permission.PermissionTemplateDaoTest.remove_by_group()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3990" source="org.sonar.core.permission.PermissionTemplateDaoTest.setUpDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3991" source="org.sonar.core.permission.PermissionTemplateDaoTest.setUpDao()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3992" source="org.sonar.core.permission.PermissionTemplateDaoTest.setUpDao()" target="org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3993" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_to_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3994" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_to_template()" target="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3995" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_to_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3996" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_with_null_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3997" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_with_null_name()" target="org.sonar.core.permission.PermissionTemplateDao.addGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3998" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_group_permission_with_null_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e3999" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_user_permission_to_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4000" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_user_permission_to_template()" target="org.sonar.core.permission.PermissionTemplateDao.addUserPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4001" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_add_user_permission_to_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4002" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_create_permission_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4003" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_create_permission_template()" target="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4004" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_create_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4005" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_create_permission_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4006" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_delete_permission_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4007" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_delete_permission_template()" target="org.sonar.core.permission.PermissionTemplateDao.deletePermissionTemplate(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4008" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_delete_permission_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4009" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_normalize_kee_on_template_creation()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4010" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_normalize_kee_on_template_creation()" target="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4011" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_normalize_kee_on_template_creation()" target="org.sonar.core.permission.PermissionTemplateDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4012" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_normalize_kee_on_template_creation()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4013" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_from_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4014" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_from_template()" target="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4015" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_from_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4016" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_with_null_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4017" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_with_null_name()" target="org.sonar.core.permission.PermissionTemplateDao.removeGroupPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4018" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_group_permission_with_null_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4019" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_user_permission_from_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4020" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_user_permission_from_template()" target="org.sonar.core.permission.PermissionTemplateDao.removeUserPermission(java.lang.Long,java.lang.Long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4021" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_remove_user_permission_from_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4022" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_all_permission_templates()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4023" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_all_permission_templates()" target="org.sonar.core.permission.PermissionTemplateDao.selectAllPermissionTemplates()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4024" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4025" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()" target="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4026" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4027" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4028" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getUsersPermissions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4029" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_empty_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getGroupsPermissions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4030" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4031" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()" target="org.sonar.core.permission.PermissionTemplateDao.selectPermissionTemplate(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4032" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4033" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4034" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4035" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getUsersPermissions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4036" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template()" target="org.sonar.core.permission.PermissionTemplateDto.getGroupsPermissions()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4037" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4038" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()" target="org.sonar.core.permission.PermissionTemplateDao.selectTemplateByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4039" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()" target="org.sonar.core.permission.PermissionTemplateDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4040" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()" target="org.sonar.core.permission.PermissionTemplateDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4041" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()" target="org.sonar.core.permission.PermissionTemplateDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4042" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_select_permission_template_by_key()" target="org.sonar.core.permission.PermissionTemplateDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4043" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4044" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4045" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()" target="org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4046" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()" target="org.sonar.core.permission.PermissionTemplateDao.createPermissionTemplate(java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4047" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()" target="org.sonar.core.permission.PermissionTemplateDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4048" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()" target="org.sonar.core.permission.PermissionTemplateMapper.insert(org.sonar.core.permission.PermissionTemplateDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4049" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4050" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_skip_key_normalization_on_default_template()" target="org.sonar.core.permission.PermissionTemplateDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4051" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_update_permission_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4052" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_update_permission_template()" target="org.sonar.core.permission.PermissionTemplateDao.updatePermissionTemplate(java.lang.Long,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4053" source="org.sonar.core.permission.PermissionTemplateDaoTest.should_update_permission_template()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4054" source="org.sonar.core.permission.PermissionTemplateDto#DEFAULT" target="org.sonar.core.permission.PermissionTemplateDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4055" source="org.sonar.core.permission.UserWithPermissionDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4056" source="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4057" source="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4058" source="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4059" source="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4060" source="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.search(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4061" source="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4062" source="org.sonar.core.permission.UserWithPermissionDaoTest.search_by_user_name()" target="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4063" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4064" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4065" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4066" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4067" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()" target="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4068" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()" target="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4069" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_global_permission()" target="org.sonar.core.permission.UserWithPermissionDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4070" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4071" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4072" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4073" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4074" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()" target="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4075" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()" target="org.sonar.core.permission.UserWithPermissionDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4076" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()" target="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4077" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_all_users_for_project_permission()" target="org.sonar.core.permission.UserWithPermissionDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4078" source="org.sonar.core.permission.UserWithPermissionDaoTest$1.apply(org.sonar.core.permission.UserWithPermissionDto)" target="org.sonar.core.permission.UserWithPermissionDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4079" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4080" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4081" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4082" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4083" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()" target="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4084" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()" target="org.sonar.core.permission.UserWithPermissionDaoTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4085" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_enable_users()" target="org.sonar.core.permission.UserWithPermissionDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4086" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4087" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4088" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4089" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4090" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4091" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4092" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4093" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4094" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4095" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4096" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4097" source="org.sonar.core.permission.UserWithPermissionDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4098" source="org.sonar.core.permission.UserWithPermissionDaoTest.setUp()" target="org.sonar.core.permission.PermissionDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4099" source="org.sonar.core.permission.UserWithPermissionDaoTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4100" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4101" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()" target="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4102" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4103" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4104" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4105" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_paginated()" target="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4106" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4107" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.PermissionDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4108" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4109" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4110" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4111" source="org.sonar.core.permission.UserWithPermissionDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4112" source="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()" target="org.sonar.core.permission.UserWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4113" source="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()" target="org.sonar.core.permission.UserWithPermission.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4114" source="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()" target="org.sonar.core.permission.UserWithPermission.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4115" source="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()" target="org.sonar.core.permission.UserWithPermission.hasPermission(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4116" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4117" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4118" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4119" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto.setPermission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4120" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4121" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()" target="org.sonar.core.permission.UserWithPermission.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4122" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()" target="org.sonar.core.permission.UserWithPermission.login()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4123" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_having_permission()" target="org.sonar.core.permission.UserWithPermission.hasPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4124" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4125" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4126" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4127" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto.setPermission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4128" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()" target="org.sonar.core.permission.UserWithPermissionDto.toUserWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4129" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()" target="org.sonar.core.permission.UserWithPermission.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4130" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()" target="org.sonar.core.permission.UserWithPermission.login()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4131" source="org.sonar.core.permission.UserWithPermissionDtoTest.to_user_with_permission_not_having_permission()" target="org.sonar.core.permission.UserWithPermission.hasPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4132" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4133" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4134" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4135" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4136" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4137" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()" target="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4138" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.return_nothing_on_unknown_template_key()" target="org.sonar.core.permission.UserWithPermissionDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4139" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4140" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4141" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4142" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4143" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.search(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4144" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4145" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.search_by_user_name()" target="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4146" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4147" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4148" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4149" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4150" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()" target="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4151" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()" target="org.sonar.core.permission.UserWithPermissionDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4152" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()" target="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4153" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_all_users()" target="org.sonar.core.permission.UserWithPermissionDto.getPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4154" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest$1.apply(org.sonar.core.permission.UserWithPermissionDto)" target="org.sonar.core.permission.UserWithPermissionDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4155" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4156" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4157" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4158" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4159" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()" target="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4160" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()" target="org.sonar.core.permission.UserWithPermissionTemplateDaoTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4161" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_enable_users()" target="org.sonar.core.permission.UserWithPermissionDto.getLogin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4162" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4163" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4164" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4165" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4166" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4167" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_with_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4168" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4169" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4170" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4171" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4172" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.membership(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4173" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.select_only_user_without_permission()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4174" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.setUp()" target="org.sonar.core.permission.PermissionTemplateDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4175" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.setUp()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4176" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4177" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()" target="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long,int,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4178" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4179" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4180" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4181" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_paginated()" target="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4182" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4183" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.PermissionTemplateDao.selectUsers(org.sonar.core.permission.PermissionQuery,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4184" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.PermissionQuery.builder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4185" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.permission(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4186" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.PermissionQuery$Builder.build()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4187" source="org.sonar.core.permission.UserWithPermissionTemplateDaoTest.should_be_sorted_by_user_name()" target="org.sonar.core.permission.UserWithPermissionDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4188" source="org.sonar.core.permission.UserWithPermissionTest.test_equals()" target="org.sonar.core.permission.UserWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4189" source="org.sonar.core.permission.UserWithPermissionTest.test_equals()" target="org.sonar.core.permission.UserWithPermission.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4190" source="org.sonar.core.permission.UserWithPermissionTest.test_equals()" target="org.sonar.core.permission.UserWithPermission.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4191" source="org.sonar.core.permission.UserWithPermissionTest.test_equals()" target="org.sonar.core.permission.UserWithPermission.hasPermission(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4192" source="org.sonar.core.permission.UserWithPermissionTest.test_hashcode()" target="org.sonar.core.permission.UserWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4193" source="org.sonar.core.permission.UserWithPermissionTest.test_hashcode()" target="org.sonar.core.permission.UserWithPermission.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4194" source="org.sonar.core.permission.UserWithPermissionTest.test_hashcode()" target="org.sonar.core.permission.UserWithPermission.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4195" source="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.UserWithPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4196" source="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.UserWithPermission.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4197" source="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.UserWithPermission.setLogin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4198" source="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.UserWithPermission.hasPermission(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4199" source="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.UserWithPermission.name()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4200" source="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.UserWithPermission.login()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4201" source="org.sonar.core.permission.UserWithPermissionTest.test_setters_and_getters()" target="org.sonar.core.permission.UserWithPermission.hasPermission()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4202" source="org.sonar.core.platform.ComponentContainer()" target="org.sonar.core.platform.ComponentContainer(org.picocontainer.MutablePicoContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4203" source="org.sonar.core.platform.ComponentContainer()" target="org.sonar.core.platform.ComponentContainer.createPicoContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4204" source="org.sonar.core.platform.ComponentContainer(org.picocontainer.MutablePicoContainer)" target="org.sonar.core.platform.ComponentKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4205" source="org.sonar.core.platform.ComponentContainer(org.picocontainer.MutablePicoContainer)" target="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4206" source="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)" target="org.sonar.core.platform.ComponentKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4207" source="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)" target="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4208" source="org.sonar.core.platform.ComponentContainer.getName(java.lang.Object)" target="org.sonar.core.platform.ComponentContainer.getName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4209" source="org.sonar.core.platform.ComponentContainer.createPicoContainer()" target="org.sonar.core.platform.ComponentContainer$1(org.picocontainer.ComponentMonitor,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4210" source="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" target="org.sonar.core.platform.ComponentContainer.addPicoAdapter(org.picocontainer.ComponentAdapter)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4211" source="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4212" source="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])" target="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4213" source="org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)" target="org.sonar.core.platform.ComponentKeys.of(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4214" source="org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)" target="org.sonar.core.platform.ComponentContainer.getName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4215" source="org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)" target="org.sonar.core.platform.ComponentContainer.declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4216" source="org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)" target="org.sonar.core.platform.ComponentKeys.of(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4217" source="org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)" target="org.sonar.core.platform.ComponentContainer.getName(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4218" source="org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)" target="org.sonar.core.platform.ComponentContainer.declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4219" source="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)" target="org.sonar.core.platform.ComponentContainer.addComponent(java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4220" source="org.sonar.core.platform.ComponentContainer.addSingletons(java.util.Collection)" target="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4221" source="org.sonar.core.platform.ComponentContainer.createChild()" target="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4222" source="org.sonar.core.platform.ComponentContainer.startComponents()" target="org.sonar.core.platform.ComponentContainer.doBeforeStart()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4223" source="org.sonar.core.platform.ComponentContainer.startComponents()" target="org.sonar.core.platform.ComponentContainer.doAfterStart()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4224" source="org.sonar.core.platform.ComponentContainer.startComponents()" target="org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4225" source="org.sonar.core.platform.ComponentContainer.stopComponents()" target="org.sonar.core.platform.ComponentContainer.stopComponents(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4226" source="org.sonar.core.platform.ComponentContainer.stopComponents(boolean)" target="org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4227" source="org.sonar.core.platform.ComponentContainer.stopComponents(boolean)" target="org.sonar.core.platform.ComponentContainer.removeChild()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4228" source="org.sonar.core.platform.ComponentContainer.declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)" target="org.sonar.core.platform.PluginInfo.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4229" source="org.sonar.core.platform.ComponentContainer.execute()" target="org.sonar.core.platform.ComponentContainer.startComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4230" source="org.sonar.core.platform.ComponentContainer.execute()" target="org.sonar.core.platform.ComponentContainer.stopComponents(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4231" source="org.sonar.core.platform.ComponentContainerTest$SimpleComponentProvider.provide()" target="org.sonar.core.platform.ComponentContainerTest$SimpleComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4232" source="org.sonar.core.platform.ComponentContainerTest.display_plugin_name_when_failing_to_add_extension()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4233" source="org.sonar.core.platform.ComponentContainerTest.display_plugin_name_when_failing_to_add_extension()" target="org.sonar.core.platform.ComponentContainer.startComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4234" source="org.sonar.core.platform.ComponentContainerTest.display_plugin_name_when_failing_to_add_extension()" target="org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4235" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareComponentProperties()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4236" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareComponentProperties()" target="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4237" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareComponentProperties()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4238" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWhenAdding()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4239" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWhenAdding()" target="org.sonar.core.platform.ComponentContainer.addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4240" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWhenAdding()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4241" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWhenAdding()" target="org.sonar.core.platform.ComponentContainer.getComponentByKey(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4242" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWithoutAddingIt()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4243" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWithoutAddingIt()" target="org.sonar.core.platform.ComponentContainer.declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4244" source="org.sonar.core.platform.ComponentContainerTest.shouldDeclareExtensionWithoutAddingIt()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4245" source="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4246" source="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()" target="org.sonar.core.platform.ComponentContainer.createChild()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4247" source="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()" target="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4248" source="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()" target="org.sonar.core.platform.ComponentContainer.startComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4249" source="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4250" source="org.sonar.core.platform.ComponentContainerTest.shouldForwardStartAndStopToDescendants()" target="org.sonar.core.platform.ComponentContainer.stopComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4251" source="org.sonar.core.platform.ComponentContainerTest.shouldRegisterItself()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4252" source="org.sonar.core.platform.ComponentContainerTest.shouldRegisterItself()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4253" source="org.sonar.core.platform.ComponentContainerTest.should_close_components_with_lifecycle()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4254" source="org.sonar.core.platform.ComponentContainerTest.should_close_components_with_lifecycle()" target="org.sonar.core.platform.ComponentContainerTest$StartableCloseableComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4255" source="org.sonar.core.platform.ComponentContainerTest.should_close_components_with_lifecycle()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4256" source="org.sonar.core.platform.ComponentContainerTest.should_close_components_with_lifecycle()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4257" source="org.sonar.core.platform.ComponentContainerTest.should_close_components_without_lifecycle()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4258" source="org.sonar.core.platform.ComponentContainerTest.should_close_components_without_lifecycle()" target="org.sonar.core.platform.ComponentContainerTest$CloseableComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4259" source="org.sonar.core.platform.ComponentContainerTest.should_close_components_without_lifecycle()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4260" source="org.sonar.core.platform.ComponentContainerTest.should_close_components_without_lifecycle()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4261" source="org.sonar.core.platform.ComponentContainerTest.should_execute_components()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4262" source="org.sonar.core.platform.ComponentContainerTest.should_execute_components()" target="org.sonar.core.platform.ComponentContainerTest$StartableComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4263" source="org.sonar.core.platform.ComponentContainerTest.should_execute_components()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4264" source="org.sonar.core.platform.ComponentContainerTest.should_execute_components()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4265" source="org.sonar.core.platform.ComponentContainerTest.should_sanitize_pico_exception_on_start_failure()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4266" source="org.sonar.core.platform.ComponentContainerTest.should_sanitize_pico_exception_on_start_failure()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4267" source="org.sonar.core.platform.ComponentContainerTest.should_sanitize_pico_exception_on_start_failure()" target="org.sonar.core.platform.ComponentContainer.startComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4268" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4269" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()" target="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4270" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()" target="org.sonar.core.platform.ComponentContainer.startComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4271" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4272" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()" target="org.sonar.core.platform.ComponentContainer.doBeforeStart()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4273" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()" target="org.sonar.core.platform.ComponentContainer.doAfterStart()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4274" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop()" target="org.sonar.core.platform.ComponentContainer.stopComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4275" source="org.sonar.core.platform.ComponentContainerTest$1()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4276" source="org.sonar.core.platform.ComponentContainer.doAfterStart()" target="org.sonar.core.platform.ComponentContainerTest$1.doAfterStart()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e4277" source="org.sonar.core.platform.ComponentContainerTest$1.doAfterStart()" target="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4278" source="org.sonar.core.platform.ComponentContainerTest$1.doAfterStart()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4279" source="org.sonar.core.platform.ComponentContainerTest$1.doAfterStart()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4280" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()" target="org.sonar.core.platform.ComponentContainerTest$StartableComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4281" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()" target="org.sonar.core.platform.ComponentContainerTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4282" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4283" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()" target="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4284" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4285" source="org.sonar.core.platform.ComponentContainerTest.should_start_and_stop_hierarchy_of_containers()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4286" source="org.sonar.core.platform.ComponentContainerTest$2()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4287" source="org.sonar.core.platform.ComponentContainer.doAfterStart()" target="org.sonar.core.platform.ComponentContainerTest$2.doAfterStart()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e4288" source="org.sonar.core.platform.ComponentContainerTest$2.doAfterStart()" target="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4289" source="org.sonar.core.platform.ComponentContainerTest$2.doAfterStart()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4290" source="org.sonar.core.platform.ComponentContainerTest$2.doAfterStart()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4291" source="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()" target="org.sonar.core.platform.ComponentContainerTest$StartableComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4292" source="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()" target="org.sonar.core.platform.ComponentContainerTest$UnstartableComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4293" source="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()" target="org.sonar.core.platform.ComponentContainerTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4294" source="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4295" source="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()" target="org.sonar.core.platform.ComponentContainer(org.sonar.core.platform.ComponentContainer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4296" source="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4297" source="org.sonar.core.platform.ComponentContainerTest.should_stop_hierarchy_of_containers_on_failure()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4298" source="org.sonar.core.platform.ComponentContainerTest.stop_exception_should_not_hide_start_exception()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4299" source="org.sonar.core.platform.ComponentContainerTest.stop_exception_should_not_hide_start_exception()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4300" source="org.sonar.core.platform.ComponentContainerTest.stop_exception_should_not_hide_start_exception()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4301" source="org.sonar.core.platform.ComponentContainerTest.testChild()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4302" source="org.sonar.core.platform.ComponentContainerTest.testChild()" target="org.sonar.core.platform.ComponentContainer.startComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4303" source="org.sonar.core.platform.ComponentContainerTest.testChild()" target="org.sonar.core.platform.ComponentContainer.createChild()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4304" source="org.sonar.core.platform.ComponentContainerTest.testChild()" target="org.sonar.core.platform.ComponentContainer.addSingleton(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4305" source="org.sonar.core.platform.ComponentContainerTest.testChild()" target="org.sonar.core.platform.ComponentContainer.getParent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4306" source="org.sonar.core.platform.ComponentContainerTest.testChild()" target="org.sonar.core.platform.ComponentContainer.getChild()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4307" source="org.sonar.core.platform.ComponentContainerTest.testChild()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4308" source="org.sonar.core.platform.ComponentContainerTest.testChild()" target="org.sonar.core.platform.ComponentContainer.stopComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4309" source="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4310" source="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()" target="org.sonar.core.platform.ComponentContainer.startComponents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4311" source="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()" target="org.sonar.core.platform.ComponentContainer.createChild()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4312" source="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()" target="org.sonar.core.platform.ComponentContainer.getChild()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4313" source="org.sonar.core.platform.ComponentContainerTest.testRemoveChild()" target="org.sonar.core.platform.ComponentContainer.removeChild()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4314" source="org.sonar.core.platform.ComponentContainerTest.test_add_adapter()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4315" source="org.sonar.core.platform.ComponentContainerTest.test_add_adapter()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4316" source="org.sonar.core.platform.ComponentContainerTest.test_add_adapter()" target="org.sonar.core.platform.ComponentContainerTest$SimpleComponentProvider()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4317" source="org.sonar.core.platform.ComponentContainerTest.test_add_adapter()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4318" source="org.sonar.core.platform.ComponentContainerTest.test_add_class()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4319" source="org.sonar.core.platform.ComponentContainerTest.test_add_class()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4320" source="org.sonar.core.platform.ComponentContainerTest.test_add_class()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4321" source="org.sonar.core.platform.ComponentContainerTest.test_add_collection()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4322" source="org.sonar.core.platform.ComponentContainerTest.test_add_collection()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4323" source="org.sonar.core.platform.ComponentContainerTest.test_add_collection()" target="org.sonar.core.platform.ComponentContainer.getComponentByType(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4324" source="org.sonar.core.platform.ComponentContainerTest.test_start_failure()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4325" source="org.sonar.core.platform.ComponentContainerTest.test_start_failure()" target="org.sonar.core.platform.ComponentContainerTest$StartableComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4326" source="org.sonar.core.platform.ComponentContainerTest.test_start_failure()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4327" source="org.sonar.core.platform.ComponentContainerTest.test_start_failure()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4328" source="org.sonar.core.platform.ComponentContainerTest.test_stop_failure()" target="org.sonar.core.platform.ComponentContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4329" source="org.sonar.core.platform.ComponentContainerTest.test_stop_failure()" target="org.sonar.core.platform.ComponentContainerTest$StartableComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4330" source="org.sonar.core.platform.ComponentContainerTest.test_stop_failure()" target="org.sonar.core.platform.ComponentContainer.add(java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4331" source="org.sonar.core.platform.ComponentContainerTest.test_stop_failure()" target="org.sonar.core.platform.ComponentContainer.execute()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4332" source="org.sonar.core.platform.ComponentKeys.of(java.lang.Object)" target="org.sonar.core.platform.ComponentKeys.of(java.lang.Object,org.sonar.api.utils.log.Logger)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4333" source="org.sonar.core.platform.ComponentKeysTest#keys" target="org.sonar.core.platform.ComponentKeys()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4334" source="org.sonar.core.platform.ComponentKeysTest.generate_key_of_class()" target="org.sonar.core.platform.ComponentKeys.of(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4335" source="org.sonar.core.platform.ComponentKeysTest.generate_key_of_object()" target="org.sonar.core.platform.ComponentKeys.of(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4336" source="org.sonar.core.platform.ComponentKeysTest.generate_key_of_object()" target="org.sonar.core.platform.ComponentKeysTest$FakeComponent()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4337" source="org.sonar.core.platform.ComponentKeysTest.should_generate_unique_key_when_toString_is_not_overridden()" target="org.sonar.core.platform.ComponentKeys.of(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4338" source="org.sonar.core.platform.ComponentKeysTest.should_generate_unique_key_when_toString_is_not_overridden()" target="org.sonar.core.platform.ComponentKeysTest$WrongToStringImpl()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4339" source="org.sonar.core.platform.ComponentKeysTest.should_log_warning_if_toString_is_not_overridden()" target="org.sonar.core.platform.ComponentKeys.of(java.lang.Object,org.sonar.api.utils.log.Logger)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4340" source="org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)" target="org.sonar.core.platform.PicoUtils.sanitize(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4341" source="org.sonar.core.platform.PicoUtilsTest.newPicoLifecycleException(boolean)" target="org.sonar.core.platform.ComponentContainer.createPicoContainer()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4342" source="org.sonar.core.platform.PicoUtilsTest.shouldNotSanitizeOtherExceptions()" target="org.sonar.core.platform.PicoUtils.sanitize(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4343" source="org.sonar.core.platform.PicoUtilsTest.shouldPropagateInitialUncheckedException()" target="org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4344" source="org.sonar.core.platform.PicoUtilsTest.shouldPropagateInitialUncheckedException()" target="org.sonar.core.platform.PicoUtilsTest.newPicoLifecycleException(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4345" source="org.sonar.core.platform.PicoUtilsTest.shouldSanitizePicoLifecycleException()" target="org.sonar.core.platform.PicoUtils.sanitize(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4346" source="org.sonar.core.platform.PicoUtilsTest.shouldSanitizePicoLifecycleException()" target="org.sonar.core.platform.PicoUtilsTest.newPicoLifecycleException(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4347" source="org.sonar.core.platform.PicoUtilsTest.shouldSanitizePicoLifecycleException_no_wrapper_message()" target="org.sonar.core.platform.PicoUtils.sanitize(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4348" source="org.sonar.core.platform.PicoUtilsTest.shouldThrowUncheckedExceptionWhenPropagatingCheckedException()" target="org.sonar.core.platform.PicoUtils.propagate(java.lang.Throwable)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4349" source="org.sonar.core.platform.PicoUtilsTest.shouldThrowUncheckedExceptionWhenPropagatingCheckedException()" target="org.sonar.core.platform.PicoUtilsTest.newPicoLifecycleException(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4350" source="org.sonar.core.platform.PluginClassloaderFactory.build(java.util.Collection,org.sonar.classloader.ClassloaderBuilder)" target="org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4351" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderFactory.baseClassloader()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4352" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderFactory.apiMask()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4353" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4354" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderDef.isSelfFirstStrategy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4355" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderDef.getFiles()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4356" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderFactory.fileToUrl(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4357" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderDef.isCompatibilityMode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4358" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderFactory.extractCompatibilityModeJar()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4359" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderFactory.exportResources(org.sonar.core.platform.PluginClassloaderDef,org.sonar.classloader.ClassloaderBuilder,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4360" source="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderFactory.build(java.util.Collection,org.sonar.classloader.ClassloaderBuilder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4361" source="org.sonar.core.platform.PluginClassloaderFactory.exportResources(org.sonar.core.platform.PluginClassloaderDef,org.sonar.classloader.ClassloaderBuilder,java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4362" source="org.sonar.core.platform.PluginClassloaderFactory.exportResources(org.sonar.core.platform.PluginClassloaderDef,org.sonar.classloader.ClassloaderBuilder,java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderDef.getExportMask()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4363" source="org.sonar.core.platform.PluginClassloaderFactoryTest#factory" target="org.sonar.core.platform.PluginClassloaderFactory(org.sonar.api.utils.TempFolder)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4364" source="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()" target="org.sonar.core.platform.PluginClassloaderDef(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4365" source="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()" target="org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4366" source="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()" target="org.sonar.core.platform.PluginClassloaderDef.getExportMask()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4367" source="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()" target="org.sonar.core.platform.PluginClassloaderDef.addFiles(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4368" source="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()" target="org.sonar.core.platform.PluginClassloaderFactoryTest.fakePluginJar(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4369" source="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()" target="org.sonar.core.platform.PluginClassloaderDef(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4370" source="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()" target="org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4371" source="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()" target="org.sonar.core.platform.PluginClassloaderDef.getExportMask()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4372" source="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()" target="org.sonar.core.platform.PluginClassloaderDef.addFiles(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4373" source="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()" target="org.sonar.core.platform.PluginClassloaderFactoryTest.fakePluginJar(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4374" source="org.sonar.core.platform.PluginClassloaderFactoryTest.classloader_exports_resources_to_other_classloaders()" target="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4375" source="org.sonar.core.platform.PluginClassloaderFactoryTest.classloader_exports_resources_to_other_classloaders()" target="org.sonar.core.platform.PluginClassloaderFactoryTest.dependentPluginDef()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4376" source="org.sonar.core.platform.PluginClassloaderFactoryTest.classloader_exports_resources_to_other_classloaders()" target="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4377" source="org.sonar.core.platform.PluginClassloaderFactoryTest.classloader_exports_resources_to_other_classloaders()" target="org.sonar.core.platform.PluginClassloaderFactoryTest.canLoadClass(java.lang.ClassLoader,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4378" source="org.sonar.core.platform.PluginClassloaderFactoryTest.create_classloader_compatible_with_with_old_api_dependencies()" target="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4379" source="org.sonar.core.platform.PluginClassloaderFactoryTest.create_classloader_compatible_with_with_old_api_dependencies()" target="org.sonar.core.platform.PluginClassloaderDef.setCompatibilityMode(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4380" source="org.sonar.core.platform.PluginClassloaderFactoryTest.create_classloader_compatible_with_with_old_api_dependencies()" target="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4381" source="org.sonar.core.platform.PluginClassloaderFactoryTest.create_classloader_compatible_with_with_old_api_dependencies()" target="org.sonar.core.platform.PluginClassloaderFactoryTest.canLoadClass(java.lang.ClassLoader,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4382" source="org.sonar.core.platform.PluginClassloaderFactoryTest.create_isolated_classloader()" target="org.sonar.core.platform.PluginClassloaderFactoryTest.basePluginDef()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4383" source="org.sonar.core.platform.PluginClassloaderFactoryTest.create_isolated_classloader()" target="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4384" source="org.sonar.core.platform.PluginClassloaderFactoryTest.create_isolated_classloader()" target="org.sonar.core.platform.PluginClassloaderFactoryTest.canLoadClass(java.lang.ClassLoader,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4385" source="org.sonar.core.platform.PluginInfo$RequiredPlugin.parse(java.lang.String)" target="org.sonar.core.platform.PluginInfo$RequiredPlugin(java.lang.String,org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4386" source="org.sonar.core.platform.PluginInfo$JarToPluginInfo#INSTANCE" target="org.sonar.core.platform.PluginInfo$JarToPluginInfo()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4387" source="org.sonar.core.platform.PluginInfo$JarToPluginInfo.apply(java.io.File)" target="org.sonar.core.platform.PluginInfo.create(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4388" source="org.sonar.core.platform.PluginInfo.create(java.io.File)" target="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4389" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4390" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4391" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4392" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setMainClass(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4393" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4394" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4395" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setLicense(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4396" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setOrganizationName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4397" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setOrganizationUrl(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4398" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setMinimalSqVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4399" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setHomepageUrl(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4400" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setIssueTrackerUrl(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4401" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setUseChildFirstClassLoader(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4402" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setBasePlugin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4403" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.setImplementationBuild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4404" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo.addRequiredPlugin(org.sonar.core.platform.PluginInfo$RequiredPlugin)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4405" source="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)" target="org.sonar.core.platform.PluginInfo$RequiredPlugin.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4406" source="org.sonar.core.platform.PluginInfoTest.withMinSqVersion(java.lang.String)" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4407" source="org.sonar.core.platform.PluginInfoTest.withMinSqVersion(java.lang.String)" target="org.sonar.core.platform.PluginInfo.setMinimalSqVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4408" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4409" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getBasePlugin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4410" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4411" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getHomepageUrl()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4412" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getImplementationBuild()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4413" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getIssueTrackerUrl()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4414" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getLicense()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4415" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getOrganizationName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4416" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getOrganizationUrl()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4417" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getMinimalSqVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4418" source="org.sonar.core.platform.PluginInfoTest.create_from_complete_manifest()" target="org.sonar.core.platform.PluginInfo.getRequiredPlugins()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4419" source="org.sonar.core.platform.PluginInfoTest.create_from_file()" target="org.sonar.core.platform.PluginInfo.create(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4420" source="org.sonar.core.platform.PluginInfoTest.create_from_file()" target="org.sonar.core.platform.PluginInfo.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4421" source="org.sonar.core.platform.PluginInfoTest.create_from_file()" target="org.sonar.core.platform.PluginInfo.getMinimalSqVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4422" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.create(java.io.File,org.sonar.updatecenter.common.PluginManifest)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4423" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4424" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4425" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4426" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getJarFile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4427" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getMainClass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4428" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getBasePlugin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4429" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4430" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getHomepageUrl()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4431" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getImplementationBuild()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4432" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getIssueTrackerUrl()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4433" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getLicense()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4434" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getOrganizationName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4435" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getOrganizationUrl()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4436" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getMinimalSqVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4437" source="org.sonar.core.platform.PluginInfoTest.create_from_minimal_manifest()" target="org.sonar.core.platform.PluginInfo.getRequiredPlugins()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4438" source="org.sonar.core.platform.PluginInfoTest.l10n_plugins_should_not_extend_english_plugin()" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4439" source="org.sonar.core.platform.PluginInfoTest.l10n_plugins_should_not_extend_english_plugin()" target="org.sonar.core.platform.PluginInfo.setBasePlugin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4440" source="org.sonar.core.platform.PluginInfoTest.l10n_plugins_should_not_extend_english_plugin()" target="org.sonar.core.platform.PluginInfo.getBasePlugin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4441" source="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()" target="org.sonar.core.platform.PluginInfo$RequiredPlugin.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4442" source="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()" target="org.sonar.core.platform.PluginInfo$RequiredPlugin.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4443" source="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()" target="org.sonar.core.platform.PluginInfo$RequiredPlugin.getMinimalVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4444" source="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()" target="org.sonar.core.platform.PluginInfo$RequiredPlugin.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4445" source="org.sonar.core.platform.PluginInfoTest.test_RequiredPlugin()" target="org.sonar.core.platform.PluginInfo$RequiredPlugin.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4446" source="org.sonar.core.platform.PluginInfoTest.test_comparison()" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4447" source="org.sonar.core.platform.PluginInfoTest.test_comparison()" target="org.sonar.core.platform.PluginInfo.setVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4448" source="org.sonar.core.platform.PluginInfoTest.test_compatibility_with_sq_version()" target="org.sonar.core.platform.PluginInfoTest.withMinSqVersion(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4449" source="org.sonar.core.platform.PluginInfoTest.test_compatibility_with_sq_version()" target="org.sonar.core.platform.PluginInfo.isCompatibleWith(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4450" source="org.sonar.core.platform.PluginInfoTest.test_equals()" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4451" source="org.sonar.core.platform.PluginInfoTest.test_equals()" target="org.sonar.core.platform.PluginInfo.setVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4452" source="org.sonar.core.platform.PluginInfoTest.test_equals()" target="org.sonar.core.platform.PluginInfo.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4453" source="org.sonar.core.platform.PluginInfoTest.test_equals()" target="org.sonar.core.platform.PluginInfo.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4454" source="org.sonar.core.platform.PluginInfoTest.test_toString()" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4455" source="org.sonar.core.platform.PluginInfoTest.test_toString()" target="org.sonar.core.platform.PluginInfo.setVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4456" source="org.sonar.core.platform.PluginInfoTest.test_toString()" target="org.sonar.core.platform.PluginInfo.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4457" source="org.sonar.core.platform.PluginInfoTest.test_toString()" target="org.sonar.core.platform.PluginInfo.setImplementationBuild(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4458" source="org.sonar.core.platform.PluginJarExploder$ZipLibFilter#INSTANCE" target="org.sonar.core.platform.PluginJarExploder$ZipLibFilter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4459" source="org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)" target="org.sonar.core.platform.ExplodedPlugin(java.lang.String,java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4460" source="org.sonar.core.platform.PluginJarExploderTest$1()" target="org.sonar.core.platform.PluginJarExploder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4461" source="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e4462" source="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginJarExploder.newLibFilter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4463" source="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4464" source="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4465" source="org.sonar.core.platform.PluginJarExploderTest$1.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginInfo.getNonNullJarFile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4466" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginJarExploderTest.getFile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4467" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4468" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4469" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginJarExploderTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4470" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginJarExploder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4471" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginJarExploder.newLibFilter()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4472" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4473" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4474" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginInfo.getNonNullJarFile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4475" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4476" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.ExplodedPlugin.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4477" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.ExplodedPlugin.getLibs()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4478" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_with_libs()" target="org.sonar.core.platform.ExplodedPlugin.getMain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4479" source="org.sonar.core.platform.PluginJarExploderTest$2()" target="org.sonar.core.platform.PluginJarExploder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4480" source="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginJarExploderTest$2.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e4481" source="org.sonar.core.platform.PluginJarExploderTest$2.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4482" source="org.sonar.core.platform.PluginJarExploderTest$2.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginInfo.getNonNullJarFile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4483" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4484" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4485" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.PluginJarExploderTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4486" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.PluginJarExploder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4487" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.PluginJarExploder.explodeFromUnzippedDir(java.lang.String,java.io.File,java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4488" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.PluginInfo.getNonNullJarFile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4489" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4490" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.ExplodedPlugin.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4491" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.ExplodedPlugin.getLibs()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4492" source="org.sonar.core.platform.PluginJarExploderTest.unzip_plugin_without_libs()" target="org.sonar.core.platform.ExplodedPlugin.getMain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4493" source="org.sonar.core.platform.PluginLoader.basePluginKey(org.sonar.core.platform.PluginInfo,java.util.Map)" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4494" source="org.sonar.core.platform.PluginLoader.basePluginKey(org.sonar.core.platform.PluginInfo,java.util.Map)" target="org.sonar.core.platform.PluginInfo.getBasePlugin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4495" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginLoader.basePluginKey(org.sonar.core.platform.PluginInfo,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4496" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginClassloaderDef(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4497" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4498" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginClassloaderDef.addFiles(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4499" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.ExplodedPlugin.getMain()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4500" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.ExplodedPlugin.getLibs()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4501" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4502" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4503" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginInfo.getMainClass()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4504" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginClassloaderDef.getExportMask()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4505" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginInfo.getBasePlugin()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4506" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginClassloaderDef.setSelfFirstStrategy(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4507" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginInfo.isUseChildFirstClassLoader()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4508" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginInfo.getMinimalSqVersion()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4509" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginClassloaderDef.setCompatibilityMode(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4510" source="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)" target="org.sonar.core.platform.PluginInfo.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4511" source="org.sonar.core.platform.PluginLoader.instantiatePluginClasses(java.util.Map)" target="org.sonar.core.platform.PluginClassloaderDef.getMainClassesByPluginKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4512" source="org.sonar.core.platform.PluginLoader.load(java.util.Map)" target="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4513" source="org.sonar.core.platform.PluginLoader.load(java.util.Map)" target="org.sonar.core.platform.PluginClassloaderFactory.create(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4514" source="org.sonar.core.platform.PluginLoader.load(java.util.Map)" target="org.sonar.core.platform.PluginLoader.instantiatePluginClasses(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4515" source="org.sonar.core.platform.PluginLoader.unload(java.util.Collection)" target="org.sonar.core.platform.PluginClassloaderFactory.baseClassloader()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4516" source="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder()" target="org.sonar.core.platform.PluginJarExploder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4517" source="org.sonar.core.platform.PluginJarExploder.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder.explode(org.sonar.core.platform.PluginInfo)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e4518" source="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.ExplodedPlugin(java.lang.String,java.io.File,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4519" source="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4520" source="org.sonar.core.platform.PluginLoaderTest$FakePluginExploder.explode(org.sonar.core.platform.PluginInfo)" target="org.sonar.core.platform.PluginInfo.getNonNullJarFile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4521" source="org.sonar.core.platform.PluginLoaderTest#loader" target="org.sonar.core.platform.PluginLoader(org.sonar.core.platform.PluginJarExploder,org.sonar.core.platform.PluginClassloaderFactory)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4522" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4523" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4524" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginInfo.setMainClass(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4525" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginInfo.setMinimalSqVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4526" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4527" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4528" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginClassloaderDef.isSelfFirstStrategy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4529" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginClassloaderDef.getFiles()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4530" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginClassloaderDef.getMainClassesByPluginKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4531" source="org.sonar.core.platform.PluginLoaderTest.define_classloader()" target="org.sonar.core.platform.PluginClassloaderDef.isCompatibilityMode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4532" source="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4533" source="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()" target="org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4534" source="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()" target="org.sonar.core.platform.PluginInfo.setMainClass(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4535" source="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()" target="org.sonar.core.platform.PluginInfo.setMinimalSqVersion(org.sonar.updatecenter.common.Version)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4536" source="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()" target="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4537" source="org.sonar.core.platform.PluginLoaderTest.enable_compatibility_mode_if_plugin_is_built_before_5_2()" target="org.sonar.core.platform.PluginClassloaderDef.isCompatibilityMode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4538" source="org.sonar.core.platform.PluginLoaderTest.instantiate_plugin_entry_point()" target="org.sonar.core.platform.PluginClassloaderDef(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4539" source="org.sonar.core.platform.PluginLoaderTest.instantiate_plugin_entry_point()" target="org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4540" source="org.sonar.core.platform.PluginLoaderTest.instantiate_plugin_entry_point()" target="org.sonar.core.platform.PluginLoader.instantiatePluginClasses(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4541" source="org.sonar.core.platform.PluginLoaderTest.plugin_entry_point_must_be_no_arg_public()" target="org.sonar.core.platform.PluginClassloaderDef(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4542" source="org.sonar.core.platform.PluginLoaderTest.plugin_entry_point_must_be_no_arg_public()" target="org.sonar.core.platform.PluginClassloaderDef.addMainClass(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4543" source="org.sonar.core.platform.PluginLoaderTest.plugin_entry_point_must_be_no_arg_public()" target="org.sonar.core.platform.PluginLoader.instantiatePluginClasses(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4544" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginInfo(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4545" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginInfo.setJarFile(java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4546" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginInfo.setMainClass(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4547" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginInfo.setUseChildFirstClassLoader(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4548" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginInfo.setBasePlugin(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4549" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginLoader.defineClassloaders(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4550" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginInfo.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4551" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginClassloaderDef.getBasePluginKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4552" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginClassloaderDef.isSelfFirstStrategy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4553" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginClassloaderDef.getFiles()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4554" source="org.sonar.core.platform.PluginLoaderTest.test_plugins_sharing_the_same_classloader()" target="org.sonar.core.platform.PluginClassloaderDef.getMainClassesByPluginKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4555" source="org.sonar.core.resource.DefaultResourceTypesTest.projects_should_be_available_for_global_widgets()" target="org.sonar.core.resource.DefaultResourceTypes.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4556" source="org.sonar.core.resource.DefaultResourceTypesTest.provide_types()" target="org.sonar.core.resource.DefaultResourceTypes.get()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4557" source="org.sonar.core.resource.ResourceDao.getDescendantProjects(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4558" source="org.sonar.core.resource.ResourceDao.getDescendantProjects(long)" target="org.sonar.core.resource.ResourceDao.getDescendantProjects(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4559" source="org.sonar.core.resource.ResourceDao.getDescendantProjects(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4560" source="org.sonar.core.resource.ResourceDao.getDescendantProjects(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4561" source="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4562" source="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)" target="org.sonar.core.resource.ResourceMapper.selectResourceIds(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4563" source="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4564" source="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4565" source="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)" target="org.sonar.core.resource.ResourceMapper.selectResources(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4566" source="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4567" source="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceMapper.selectResources(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4568" source="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4569" source="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)" target="org.sonar.core.resource.ResourceDao.toComponents(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4570" source="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)" target="org.sonar.core.resource.ResourceMapper.selectGhostsProjects(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4571" source="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4572" source="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4573" source="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)" target="org.sonar.core.resource.ResourceDao.toComponents(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4574" source="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)" target="org.sonar.core.resource.ResourceMapper.selectProjectsByQualifiers(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4575" source="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4576" source="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4577" source="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)" target="org.sonar.core.resource.ResourceDao.toComponents(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4578" source="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)" target="org.sonar.core.resource.ResourceMapper.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4579" source="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4580" source="org.sonar.core.resource.ResourceDao.selectProvisionedProjects(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4581" source="org.sonar.core.resource.ResourceDao.selectProvisionedProjects(java.util.Collection)" target="org.sonar.core.resource.ResourceMapper.selectProvisionedProjects(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4582" source="org.sonar.core.resource.ResourceDao.selectProvisionedProjects(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4583" source="org.sonar.core.resource.ResourceDao$1.apply(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4584" source="org.sonar.core.resource.ResourceDao.toComponents(java.util.List)" target="org.sonar.core.resource.ResourceDao$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4585" source="org.sonar.core.resource.ResourceDao.toComponents(java.util.List)" target="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4586" source="org.sonar.core.resource.ResourceDao.findById(java.lang.Long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4587" source="org.sonar.core.resource.ResourceDao.findById(java.lang.Long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4588" source="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)" target="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4589" source="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)" target="org.sonar.core.resource.ResourceQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4590" source="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)" target="org.sonar.core.resource.ResourceQuery.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4591" source="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)" target="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4592" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.component.ComponentDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4593" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.component.ComponentDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4594" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4595" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.component.ComponentDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4596" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4597" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.component.ComponentDto.setPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4598" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4599" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.component.ComponentDto.setLongName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4600" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.getLongName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4601" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.component.ComponentDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4602" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4603" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.component.ComponentDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4604" source="org.sonar.core.resource.ResourceDao.toComponent(org.sonar.core.resource.ResourceDto)" target="org.sonar.core.resource.ResourceDto.getQualifier()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4605" source="org.sonar.core.resource.ResourceDao.getLastSnapshot(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceMapper.selectLastSnapshotByResourceKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4606" source="org.sonar.core.resource.ResourceDao.getLastSnapshotByResourceUuid(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceMapper.selectLastSnapshotByResourceUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4607" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4608" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4609" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceDto.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4610" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceDto.getScope()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4611" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4612" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4613" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4614" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4615" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceDto.setAuthorizationUpdatedAt(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4616" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceMapper.insert(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4617" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.resource.ResourceMapper.update(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4618" source="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4619" source="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4620" source="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.resource.ResourceDto.getRootId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4621" source="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4622" source="org.sonar.core.resource.ResourceDao.getResource(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4623" source="org.sonar.core.resource.ResourceDao.getResource(java.lang.String)" target="org.sonar.core.resource.ResourceMapper.selectResourceByUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4624" source="org.sonar.core.resource.ResourceDao.getResource(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4625" source="org.sonar.core.resource.ResourceDao.getResource(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4626" source="org.sonar.core.resource.ResourceDao.getResource(long)" target="org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4627" source="org.sonar.core.resource.ResourceDao.getResource(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4628" source="org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceMapper.selectResource(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4629" source="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4630" source="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)" target="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4631" source="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4632" source="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery,org.sonar.core.persistence.DbSession)" target="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4633" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4634" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)" target="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4635" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)" target="org.sonar.core.resource.ResourceDto.getRootId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4636" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4637" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4638" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)" target="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4639" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4640" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4641" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.resource.ResourceQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4642" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.resource.ResourceQuery.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4643" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.resource.ResourceDto.getRootId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4644" source="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4645" source="org.sonar.core.resource.ResourceDao.selectProvisionedProject(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4646" source="org.sonar.core.resource.ResourceDao.selectProvisionedProject(java.lang.String)" target="org.sonar.core.resource.ResourceDao.selectProvisionedProject(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4647" source="org.sonar.core.resource.ResourceDao.selectProvisionedProject(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4648" source="org.sonar.core.resource.ResourceDao.selectProvisionedProject(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4649" source="org.sonar.core.resource.ResourceDao.selectProvisionedProject(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.resource.ResourceMapper.selectProvisionedProject(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4650" source="org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)" target="org.sonar.core.resource.ResourceMapper.selectDescendantProjects(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4651" source="org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)" target="org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4652" source="org.sonar.core.resource.ResourceDao.appendChildProjects(long,org.sonar.core.resource.ResourceMapper,java.util.List)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4653" source="org.sonar.core.resource.ResourceDao.insertUsingExistingSession(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceMapper.insert(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4654" source="org.sonar.core.resource.ResourceDao.updateAuthorizationDate(java.lang.Long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceMapper.updateAuthorizationDate(java.lang.Long,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4655" source="org.sonar.core.resource.ResourceDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4656" source="org.sonar.core.resource.ResourceDaoTest.getKeys(java.util.List)" target="org.sonar.core.resource.ResourceDaoTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4657" source="org.sonar.core.resource.ResourceDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4658" source="org.sonar.core.resource.ResourceDaoTest.createDao()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4659" source="org.sonar.core.resource.ResourceDaoTest.createDao()" target="org.sonar.core.resource.ResourceDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4660" source="org.sonar.core.resource.ResourceDaoTest.find_parent_by_component_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4661" source="org.sonar.core.resource.ResourceDaoTest.find_parent_by_component_id()" target="org.sonar.core.resource.ResourceDao.getParentModuleByComponentId(java.lang.Long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4662" source="org.sonar.core.resource.ResourceDaoTest.find_parent_by_component_id()" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4663" source="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_Id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4664" source="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_Id()" target="org.sonar.core.resource.ResourceDao.getRootProjectByComponentId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4665" source="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_Id()" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4666" source="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4667" source="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_key()" target="org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4668" source="org.sonar.core.resource.ResourceDaoTest.find_root_project_by_component_key()" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4669" source="org.sonar.core.resource.ResourceDaoTest.getResourceIds_all()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4670" source="org.sonar.core.resource.ResourceDaoTest.getResourceIds_all()" target="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4671" source="org.sonar.core.resource.ResourceDaoTest.getResourceIds_all()" target="org.sonar.core.resource.ResourceQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4672" source="org.sonar.core.resource.ResourceDaoTest.getResourceIds_filter_by_qualifier()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4673" source="org.sonar.core.resource.ResourceDaoTest.getResourceIds_filter_by_qualifier()" target="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4674" source="org.sonar.core.resource.ResourceDaoTest.getResourceIds_filter_by_qualifier()" target="org.sonar.core.resource.ResourceQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4675" source="org.sonar.core.resource.ResourceDaoTest.getResourceIds_filter_by_qualifier()" target="org.sonar.core.resource.ResourceQuery.setQualifiers(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4676" source="org.sonar.core.resource.ResourceDaoTest.getResource_not_found()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4677" source="org.sonar.core.resource.ResourceDaoTest.getResource_not_found()" target="org.sonar.core.resource.ResourceDao.getResource(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4678" source="org.sonar.core.resource.ResourceDaoTest.getResources_all()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4679" source="org.sonar.core.resource.ResourceDaoTest.getResources_all()" target="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4680" source="org.sonar.core.resource.ResourceDaoTest.getResources_all()" target="org.sonar.core.resource.ResourceQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4681" source="org.sonar.core.resource.ResourceDaoTest.getResources_exclude_disabled()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4682" source="org.sonar.core.resource.ResourceDaoTest.getResources_exclude_disabled()" target="org.sonar.core.resource.ResourceDao.getResourceIds(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4683" source="org.sonar.core.resource.ResourceDaoTest.getResources_exclude_disabled()" target="org.sonar.core.resource.ResourceQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4684" source="org.sonar.core.resource.ResourceDaoTest.getResources_exclude_disabled()" target="org.sonar.core.resource.ResourceQuery.setExcludeDisabled(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4685" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4686" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()" target="org.sonar.core.resource.ResourceQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4687" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()" target="org.sonar.core.resource.ResourceQuery.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4688" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()" target="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4689" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4690" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_key()" target="org.sonar.core.resource.ResourceDao.getResource(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4691" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_qualifier()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4692" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_qualifier()" target="org.sonar.core.resource.ResourceDao.getResources(org.sonar.core.resource.ResourceQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4693" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_qualifier()" target="org.sonar.core.resource.ResourceQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4694" source="org.sonar.core.resource.ResourceDaoTest.getResources_filter_by_qualifier()" target="org.sonar.core.resource.ResourceQuery.setQualifiers(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4695" source="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4696" source="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()" target="org.sonar.core.resource.ResourceDao.getLastSnapshotByResourceUuid(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4697" source="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()" target="org.sonar.core.component.SnapshotDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4698" source="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()" target="org.sonar.core.component.SnapshotDto.getPeriodMode(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4699" source="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()" target="org.sonar.core.component.SnapshotDto.getPeriodModeParameter(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4700" source="org.sonar.core.resource.ResourceDaoTest.get_last_snapshot_by_component_uuid()" target="org.sonar.core.component.SnapshotDto.getPeriodDate(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4701" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4702" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDao.getResource(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4703" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4704" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getProjectUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4705" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4706" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4707" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getLongName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4708" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getScope()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4709" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4710" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getLanguage()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4711" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.isEnabled()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4712" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getAuthorizationUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4713" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_id()" target="org.sonar.core.resource.ResourceDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4714" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4715" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDao.getResource(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4716" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4717" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getProjectUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4718" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4719" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4720" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getLongName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4721" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getScope()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4722" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getDescription()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4723" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getLanguage()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4724" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.isEnabled()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4725" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getAuthorizationUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4726" source="org.sonar.core.resource.ResourceDaoTest.get_resource_by_uuid()" target="org.sonar.core.resource.ResourceDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4727" source="org.sonar.core.resource.ResourceDaoTest.get_resource_path_and_module_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4728" source="org.sonar.core.resource.ResourceDaoTest.get_resource_path_and_module_key()" target="org.sonar.core.resource.ResourceDao.getResource(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4729" source="org.sonar.core.resource.ResourceDaoTest.get_resource_path_and_module_key()" target="org.sonar.core.resource.ResourceDto.getPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4730" source="org.sonar.core.resource.ResourceDaoTest.get_uuid()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4731" source="org.sonar.core.resource.ResourceDaoTest.get_uuid()" target="org.sonar.core.resource.ResourceDao.getResource(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4732" source="org.sonar.core.resource.ResourceDaoTest.get_uuid()" target="org.sonar.core.resource.ResourceDto.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4733" source="org.sonar.core.resource.ResourceDaoTest.get_uuid()" target="org.sonar.core.resource.ResourceDto.getProjectUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4734" source="org.sonar.core.resource.ResourceDaoTest.get_uuid()" target="org.sonar.core.resource.ResourceDto.getModuleUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4735" source="org.sonar.core.resource.ResourceDaoTest.get_uuid()" target="org.sonar.core.resource.ResourceDto.getModuleUuidPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4736" source="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4737" source="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()" target="org.sonar.core.resource.ResourceDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4738" source="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()" target="org.sonar.core.resource.ResourceDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4739" source="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()" target="org.sonar.core.resource.ResourceDto.setScope(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4740" source="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()" target="org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4741" source="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()" target="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4742" source="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()" target="org.sonar.core.resource.ResourceDto.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4743" source="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()" target="org.sonar.core.resource.ResourceDto.getProjectUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4744" source="org.sonar.core.resource.ResourceDaoTest.insert_add_uuids_on_project_if_missing()" target="org.sonar.core.resource.ResourceDto.getModuleUuidPath()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4745" source="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4746" source="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_id()" target="org.sonar.core.resource.ResourceDao.findById(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4747" source="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4748" source="org.sonar.core.resource.ResourceDaoTest.should_find_component_by_key()" target="org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4749" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4750" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4751" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4752" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4753" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setModuleUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4754" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setModuleUuidPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4755" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4756" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setDeprecatedKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4757" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setScope(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4758" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4759" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4760" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4761" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setLongName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4762" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.setPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4763" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4764" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4765" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4766" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDao.getResource(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4767" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4768" source="org.sonar.core.resource.ResourceDaoTest.should_insert()" target="org.sonar.core.resource.ResourceDto.getAuthorizationUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4769" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4770" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4771" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDto.setUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4772" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4773" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDto.setDeprecatedKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4774" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDto.setScope(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4775" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4776" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDto.setLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4777" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4778" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDto.setLongName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4779" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4780" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4781" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.resource.ResourceDao.insertUsingExistingSession(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4782" source="org.sonar.core.resource.ResourceDaoTest.should_insert_using_existing_session()" target="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4783" source="org.sonar.core.resource.ResourceDaoTest.should_select_ghosts_projects_by_qualifiers()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4784" source="org.sonar.core.resource.ResourceDaoTest.should_select_ghosts_projects_by_qualifiers()" target="org.sonar.core.resource.ResourceDao.selectGhostsProjects(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4785" source="org.sonar.core.resource.ResourceDaoTest.should_select_ghosts_projects_by_qualifiers()" target="org.sonar.core.resource.ResourceDaoTest.getKeys(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4786" source="org.sonar.core.resource.ResourceDaoTest.should_select_projects_by_qualifiers()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4787" source="org.sonar.core.resource.ResourceDaoTest.should_select_projects_by_qualifiers()" target="org.sonar.core.resource.ResourceDao.selectProjectsByQualifiers(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4788" source="org.sonar.core.resource.ResourceDaoTest.should_select_projects_by_qualifiers()" target="org.sonar.core.component.ComponentDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4789" source="org.sonar.core.resource.ResourceDaoTest.should_select_projects_by_qualifiers()" target="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4790" source="org.sonar.core.resource.ResourceDaoTest.should_select_projects_including_not_finished_by_qualifiers()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4791" source="org.sonar.core.resource.ResourceDaoTest.should_select_projects_including_not_finished_by_qualifiers()" target="org.sonar.core.resource.ResourceDao.selectProjectsIncludingNotCompletedOnesByQualifiers(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4792" source="org.sonar.core.resource.ResourceDaoTest.should_select_projects_including_not_finished_by_qualifiers()" target="org.sonar.core.resource.ResourceDaoTest.getKeys(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4793" source="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_project_by_key()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4794" source="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_project_by_key()" target="org.sonar.core.resource.ResourceDao.selectProvisionedProject(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4795" source="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_project_by_key()" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4796" source="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_projects_by_qualifiers()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4797" source="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_projects_by_qualifiers()" target="org.sonar.core.resource.ResourceDao.selectProvisionedProjects(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4798" source="org.sonar.core.resource.ResourceDaoTest.should_select_provisioned_projects_by_qualifiers()" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4799" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4800" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4801" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4802" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setDeprecatedKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4803" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setScope(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4804" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4805" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4806" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setLongName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4807" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4808" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setDescription(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4809" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setPath(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4810" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4811" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDao.insertOrUpdate(org.sonar.core.resource.ResourceDto[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4812" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4813" source="org.sonar.core.resource.ResourceDaoTest.should_update()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4814" source="org.sonar.core.resource.ResourceDaoTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4815" source="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_do_not_include_self()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4816" source="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_do_not_include_self()" target="org.sonar.core.resource.ResourceDao.getDescendantProjects(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4817" source="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_id_not_found()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4818" source="org.sonar.core.resource.ResourceDaoTest.testDescendantProjects_id_not_found()" target="org.sonar.core.resource.ResourceDao.getDescendantProjects(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4819" source="org.sonar.core.resource.ResourceDaoTest.update_authorization_date()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4820" source="org.sonar.core.resource.ResourceDaoTest.update_authorization_date()" target="org.sonar.core.resource.ResourceDao.updateAuthorizationDate(java.lang.Long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4821" source="org.sonar.core.resource.ResourceDaoTest.update_authorization_date()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4822" source="org.sonar.core.resource.ResourceDaoTest.update_authorization_date()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4823" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4824" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)" target="org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4825" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4826" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4827" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(long)" target="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4828" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4829" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerDao.nameToKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4830" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerDao.sanitizeIndex(long,java.lang.String,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4831" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4832" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4833" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)" target="org.sonar.core.resource.ResourceIndexerMapper.selectResourceToIndex(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4834" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)" target="org.sonar.core.resource.ResourceDto.getRootId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4835" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4836" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)" target="org.sonar.core.resource.ResourceIndexerDao.indexResource(long,java.lang.String,java.lang.String,long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4837" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)" target="org.sonar.core.resource.ResourceDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4838" source="org.sonar.core.resource.ResourceIndexerDao.indexResource(org.sonar.core.persistence.DbSession,long)" target="org.sonar.core.resource.ResourceDto.getQualifier()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4839" source="org.sonar.core.resource.ResourceIndexerDao.sanitizeIndex(long,java.lang.String,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerMapper.selectMasterIndexByResourceId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4840" source="org.sonar.core.resource.ResourceIndexerDao.sanitizeIndex(long,java.lang.String,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4841" source="org.sonar.core.resource.ResourceIndexerDao.sanitizeIndex(long,java.lang.String,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerMapper.deleteByResourceId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4842" source="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4843" source="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)" target="org.sonar.core.resource.ResourceIndexerDao.indexProject(long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4844" source="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4845" source="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4846" source="org.sonar.core.resource.ResourceIndexerDao$1.handleResult(org.apache.ibatis.session.ResultContext)" target="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4847" source="org.sonar.core.resource.ResourceIndexerDao$1.handleResult(org.apache.ibatis.session.ResultContext)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4848" source="org.sonar.core.resource.ResourceIndexerDao.indexProjects()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4849" source="org.sonar.core.resource.ResourceIndexerDao.indexProjects()" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4850" source="org.sonar.core.resource.ResourceIndexerDao.indexProjects()" target="org.sonar.core.persistence.DbSession.select(java.lang.String,java.lang.Object,org.apache.ibatis.session.ResultHandler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4851" source="org.sonar.core.resource.ResourceIndexerDao.indexProjects()" target="org.sonar.core.resource.ResourceIndexerQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4852" source="org.sonar.core.resource.ResourceIndexerDao.indexProjects()" target="org.sonar.core.resource.ResourceIndexerDao$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4853" source="org.sonar.core.resource.ResourceIndexerDao.indexProjects()" target="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4854" source="org.sonar.core.resource.ResourceIndexerDao.indexProjects()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4855" source="org.sonar.core.resource.ResourceIndexerDao.indexProjects()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4856" source="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerDao.nameToKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4857" source="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4858" source="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4859" source="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4860" source="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceDto.getQualifier()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4861" source="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceDto.getRootId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4862" source="org.sonar.core.resource.ResourceIndexerDao$2.handleResult(org.apache.ibatis.session.ResultContext)" target="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4863" source="org.sonar.core.resource.ResourceIndexerDao$3.handleResult(org.apache.ibatis.session.ResultContext)" target="org.sonar.core.resource.ResourceIndexerMapper.deleteByResourceId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4864" source="org.sonar.core.resource.ResourceIndexerDao$3.handleResult(org.apache.ibatis.session.ResultContext)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4865" source="org.sonar.core.resource.ResourceIndexerDao$3.handleResult(org.apache.ibatis.session.ResultContext)" target="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4866" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4867" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerQuery.setNonIndexedOnly(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4868" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerQuery.setQualifiers(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4869" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerQuery.setScopes(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4870" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerQuery.setRootProjectId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4871" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerDao$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4872" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerDao.doIndex(org.sonar.core.resource.ResourceDto,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4873" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerDao$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4874" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerMapper.deleteByResourceId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4875" source="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4876" source="org.sonar.core.resource.ResourceIndexerDao.indexProject(long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4877" source="org.sonar.core.resource.ResourceIndexerDao.indexProject(long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.resource.ResourceIndexerDao.doIndexProject(long,org.apache.ibatis.session.SqlSession,org.sonar.core.resource.ResourceIndexerMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4878" source="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4879" source="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexDto.setResourceId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4880" source="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexDto.setQualifier(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4881" source="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexDto.setRootProjectId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4882" source="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexDto.setNameSize(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4883" source="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexDto.setPosition(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4884" source="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4885" source="org.sonar.core.resource.ResourceIndexerDao.insertIndexEntries(java.lang.String,long,java.lang.String,long,int,org.sonar.core.resource.ResourceIndexerMapper)" target="org.sonar.core.resource.ResourceIndexerMapper.insert(org.sonar.core.resource.ResourceIndexDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4886" source="org.sonar.core.resource.ResourceIndexerDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4887" source="org.sonar.core.resource.ResourceIndexerDaoTest.createDao()" target="org.sonar.core.resource.ResourceIndexerDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4888" source="org.sonar.core.resource.ResourceIndexerDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4889" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexMultiModulesProject()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4890" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexMultiModulesProject()" target="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4891" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexMultiModulesProject()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4892" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexProjects()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4893" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexProjects()" target="org.sonar.core.resource.ResourceIndexerDao.indexProjects()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4894" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexProjects()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4895" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4896" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexResource()" target="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4897" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4898" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexTwoLettersLongResources()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4899" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexTwoLettersLongResources()" target="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4900" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldIndexTwoLettersLongResources()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4901" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotIndexPackages()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4902" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotIndexPackages()" target="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4903" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotIndexPackages()" target="org.sonar.core.persistence.AbstractDaoTestCase.getConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4904" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotReindexUnchangedResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4905" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotReindexUnchangedResource()" target="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4906" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldNotReindexUnchangedResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4907" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexNewTwoLettersLongResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4908" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexNewTwoLettersLongResource()" target="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4909" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexNewTwoLettersLongResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4910" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexTwoLettersLongResources()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4911" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexTwoLettersLongResources()" target="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4912" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReIndexTwoLettersLongResources()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4913" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexProjectAfterRenaming()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4914" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexProjectAfterRenaming()" target="org.sonar.core.resource.ResourceIndexerDao.indexProject(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4915" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexProjectAfterRenaming()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4916" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4917" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexResource()" target="org.sonar.core.resource.ResourceIndexerDao.indexResource(int,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4918" source="org.sonar.core.resource.ResourceIndexerDaoTest.shouldReindexResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4919" source="org.sonar.core.resource.ResourceIndexerQuery.create()" target="org.sonar.core.resource.ResourceIndexerQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4920" source="org.sonar.core.resource.ResourceKeyUpdaterDao.computeNewKey(org.sonar.core.resource.ResourceDto,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4921" source="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4922" source="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4923" source="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.computeNewKey(org.sonar.core.resource.ResourceDto,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4924" source="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterMapper.countResourceByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4925" source="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4926" source="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4927" source="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProject(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4928" source="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4929" source="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceKeyUpdaterMapper.selectDescendantProjects(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4930" source="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4931" source="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4932" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4933" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4934" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4935" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4936" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4937" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.collectAllModules(long,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4938" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.checkNewNameOfAllModules(java.util.Set,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4939" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProjectResources(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4940" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4941" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4942" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.computeNewKey(org.sonar.core.resource.ResourceDto,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4943" source="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(org.sonar.core.persistence.DbSession,long,java.lang.String,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4944" source="org.sonar.core.resource.ResourceKeyUpdaterDao.checkNewNameOfAllModules(java.util.Set,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.computeNewKey(org.sonar.core.resource.ResourceDto,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4945" source="org.sonar.core.resource.ResourceKeyUpdaterDao.checkNewNameOfAllModules(java.util.Set,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceKeyUpdaterMapper.countResourceByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4946" source="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4947" source="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4948" source="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceDto.getDeprecatedKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4949" source="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceDto.setDeprecatedKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4950" source="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)" target="org.sonar.core.resource.ResourceKeyUpdaterMapper.update(org.sonar.core.resource.ResourceDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4951" source="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4952" source="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4953" source="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterMapper.countResourceByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4954" source="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProject(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4955" source="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" target="org.sonar.core.resource.ResourceDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4956" source="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterMapper.selectProjectResources(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4957" source="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" target="org.sonar.core.resource.ResourceKeyUpdaterDao.runBatchUpdateForAllResources(java.util.Collection,java.lang.String,java.lang.String,org.sonar.core.resource.ResourceKeyUpdaterMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4958" source="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4959" source="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4960" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4961" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.createDao()" target="org.sonar.core.resource.ResourceKeyUpdaterDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4962" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4963" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKey()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4964" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKey()" target="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4965" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKey()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4966" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKeyOnOnlyOneSubmodule()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4967" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKeyOnOnlyOneSubmodule()" target="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4968" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldBulkUpdateKeyOnOnlyOneSubmodule()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4969" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldCheckModuleKeysBeforeRenaming()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4970" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldCheckModuleKeysBeforeRenaming()" target="org.sonar.core.resource.ResourceKeyUpdaterDao.checkModuleKeysBeforeRenaming(long,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4971" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldFailBulkUpdateKeyIfKeyAlreadyExist()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4972" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldFailBulkUpdateKeyIfKeyAlreadyExist()" target="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4973" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateAllSubmodules()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4974" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateAllSubmodules()" target="org.sonar.core.resource.ResourceKeyUpdaterDao.bulkUpdateKey(long,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4975" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateAllSubmodules()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4976" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateKey()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4977" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldNotUpdateKey()" target="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4978" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldUpdateKey()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4979" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldUpdateKey()" target="org.sonar.core.resource.ResourceKeyUpdaterDao.updateKey(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4980" source="org.sonar.core.resource.ResourceKeyUpdaterDaoTest.shouldUpdateKey()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4981" source="org.sonar.core.resource.ResourceQuery.create()" target="org.sonar.core.resource.ResourceQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4982" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier.getInput()" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI,java.net.ProxySelector)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4983" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier.getInput()" target="org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4984" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader(java.util.Map,java.lang.String)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initProxy(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4985" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader(java.util.Map,java.lang.String)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initUserAgent(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4986" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4987" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4988" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.Integer)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4989" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4990" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.Integer)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4991" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4992" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$HttpInputSupplier(java.net.URI,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4993" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI,java.net.ProxySelector)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4994" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initProxy(java.util.Map)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.propagateProxySystemProperties(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4995" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initProxy(java.util.Map)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.requiresProxyAuthentication(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4996" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.initProxy(java.util.Map)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.registerProxyCredentials(java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4997" source="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.registerProxyCredentials(java.util.Map)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader$ProxyAuthenticator(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4998" source="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e4999" source="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings,java.lang.Integer)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader(java.util.Map,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5000" source="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings)" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5001" source="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings,java.lang.Integer)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader(java.util.Map,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5002" source="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5003" source="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI)" target="org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5004" source="org.sonar.core.util.DefaultHttpDownloader.readBytes(java.net.URI)" target="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5005" source="org.sonar.core.util.DefaultHttpDownloader.openStream(java.net.URI)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5006" source="org.sonar.core.util.DefaultHttpDownloader.openStream(java.net.URI)" target="org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5007" source="org.sonar.core.util.DefaultHttpDownloader.description(java.net.URI)" target="org.sonar.core.util.DefaultHttpDownloader.getProxySynthesis(java.net.URI)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5008" source="org.sonar.core.util.DefaultHttpDownloader.downloadPlainText(java.net.URI,java.lang.String)" target="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5009" source="org.sonar.core.util.DefaultHttpDownloader.getProxySynthesis(java.net.URI)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5010" source="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5011" source="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)" target="org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5012" source="org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)" target="org.sonar.core.util.DefaultHttpDownloader.getProxySynthesis(java.net.URI)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5013" source="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI,java.io.File)" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.newInputSupplier(java.net.URI,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5014" source="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI,java.io.File)" target="org.sonar.core.util.DefaultHttpDownloader.failToDownload(java.net.URI,java.io.IOException)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5015" source="org.sonar.core.util.DefaultHttpDownloaderTest.downloadBytes()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5016" source="org.sonar.core.util.DefaultHttpDownloaderTest.downloadBytes()" target="org.sonar.core.util.DefaultHttpDownloader.readBytes(java.net.URI)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5017" source="org.sonar.core.util.DefaultHttpDownloaderTest.downloadToFile()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5018" source="org.sonar.core.util.DefaultHttpDownloaderTest.downloadToFile()" target="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI,java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5019" source="org.sonar.core.util.DefaultHttpDownloaderTest.followRedirect()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5020" source="org.sonar.core.util.DefaultHttpDownloaderTest.followRedirect()" target="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5021" source="org.sonar.core.util.DefaultHttpDownloaderTest.readGzipString()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5022" source="org.sonar.core.util.DefaultHttpDownloaderTest.readGzipString()" target="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5023" source="org.sonar.core.util.DefaultHttpDownloaderTest.readString()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5024" source="org.sonar.core.util.DefaultHttpDownloaderTest.readString()" target="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5025" source="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithDefaultTimeout()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5026" source="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithDefaultTimeout()" target="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5027" source="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithTimeout()" target="org.sonar.core.util.DefaultHttpDownloaderTest$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5028" source="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithTimeout()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5029" source="org.sonar.core.util.DefaultHttpDownloaderTest.readStringWithTimeout()" target="org.sonar.core.util.DefaultHttpDownloader.readString(java.net.URI,java.nio.charset.Charset)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5030" source="org.sonar.core.util.DefaultHttpDownloaderTest.shouldGetDirectProxySynthesis()" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI,java.net.ProxySelector)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5031" source="org.sonar.core.util.DefaultHttpDownloaderTest.shouldGetProxySynthesis()" target="org.sonar.core.util.FakeProxy()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5032" source="org.sonar.core.util.DefaultHttpDownloaderTest.shouldGetProxySynthesis()" target="org.sonar.core.util.DefaultHttpDownloader$BaseHttpDownloader.getProxySynthesis(java.net.URI,java.net.ProxySelector)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5033" source="org.sonar.core.util.DefaultHttpDownloaderTest.shouldNotCreateFileIfFailToDownload()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5034" source="org.sonar.core.util.DefaultHttpDownloaderTest.shouldNotCreateFileIfFailToDownload()" target="org.sonar.core.util.DefaultHttpDownloader.download(java.net.URI,java.io.File)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5035" source="org.sonar.core.util.DefaultHttpDownloaderTest.startServer()" target="org.sonar.core.util.DefaultHttpDownloaderTest$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5036" source="org.sonar.core.util.DefaultHttpDownloaderTest.supported_schemes()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5037" source="org.sonar.core.util.DefaultHttpDownloaderTest.supported_schemes()" target="org.sonar.core.util.DefaultHttpDownloader.getSupportedSchemes()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5038" source="org.sonar.core.util.DefaultHttpDownloaderTest.uri_description()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5039" source="org.sonar.core.util.DefaultHttpDownloaderTest.uri_description()" target="org.sonar.core.util.DefaultHttpDownloader.description(java.net.URI)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5040" source="org.sonar.core.util.DefaultHttpDownloaderTest.userAgentIsSonarVersion()" target="org.sonar.core.util.DefaultHttpDownloader(org.sonar.api.platform.Server,org.sonar.api.config.Settings)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5041" source="org.sonar.core.util.DefaultHttpDownloaderTest.userAgentIsSonarVersion()" target="org.sonar.core.util.DefaultHttpDownloader.openStream(java.net.URI)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5042" source="org.sonar.core.util.HttpsTrust#INSTANCE" target="org.sonar.core.util.HttpsTrust(org.sonar.core.util.HttpsTrust$Ssl)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5043" source="org.sonar.core.util.HttpsTrust(org.sonar.core.util.HttpsTrust$Ssl)" target="org.sonar.core.util.HttpsTrust.createSocketFactory(org.sonar.core.util.HttpsTrust$Ssl)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5044" source="org.sonar.core.util.HttpsTrust(org.sonar.core.util.HttpsTrust$Ssl)" target="org.sonar.core.util.HttpsTrust.createHostnameVerifier()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5045" source="org.sonar.core.util.HttpsTrust.createHostnameVerifier()" target="org.sonar.core.util.HttpsTrust$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5046" source="org.sonar.core.util.HttpsTrust.createSocketFactory(org.sonar.core.util.HttpsTrust$Ssl)" target="org.sonar.core.util.HttpsTrust$Ssl.newFactory(javax.net.ssl.TrustManager[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5047" source="org.sonar.core.util.HttpsTrust.createSocketFactory(org.sonar.core.util.HttpsTrust$Ssl)" target="org.sonar.core.util.HttpsTrust$AlwaysTrustManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5048" source="org.sonar.core.util.HttpsTrustTest.failOnError()" target="org.sonar.core.util.HttpsTrust$Ssl.newFactory(javax.net.ssl.TrustManager[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5049" source="org.sonar.core.util.HttpsTrustTest.failOnError()" target="org.sonar.core.util.HttpsTrust(org.sonar.core.util.HttpsTrust$Ssl)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5050" source="org.sonar.core.util.HttpsTrustTest.singleHostnameVerifier()" target="org.sonar.core.util.HttpsTrustTest.newHttpsConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5051" source="org.sonar.core.util.HttpsTrustTest.singleHostnameVerifier()" target="org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5052" source="org.sonar.core.util.HttpsTrustTest.singleSslFactory()" target="org.sonar.core.util.HttpsTrustTest.newHttpsConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5053" source="org.sonar.core.util.HttpsTrustTest.singleSslFactory()" target="org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5054" source="org.sonar.core.util.HttpsTrustTest.testAlwaysTrustManager()" target="org.sonar.core.util.HttpsTrust$AlwaysTrustManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5055" source="org.sonar.core.util.HttpsTrustTest.testAlwaysTrustManager()" target="org.sonar.core.util.HttpsTrust$AlwaysTrustManager.getAcceptedIssuers()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5056" source="org.sonar.core.util.HttpsTrustTest.testAlwaysTrustManager()" target="org.sonar.core.util.HttpsTrust$AlwaysTrustManager.checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5057" source="org.sonar.core.util.HttpsTrustTest.testAlwaysTrustManager()" target="org.sonar.core.util.HttpsTrust$AlwaysTrustManager.checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5058" source="org.sonar.core.util.HttpsTrustTest.trustAllCerts()" target="org.sonar.core.util.HttpsTrustTest.newHttpsConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5059" source="org.sonar.core.util.HttpsTrustTest.trustAllCerts()" target="org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5060" source="org.sonar.core.util.HttpsTrustTest.trustAllHosts()" target="org.sonar.core.util.HttpsTrustTest.newHttpsConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5061" source="org.sonar.core.util.HttpsTrustTest.trustAllHosts()" target="org.sonar.core.util.HttpsTrust.trust(java.net.HttpURLConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5062" source="org.sonar.core.util.MultiSets$NonNullOrdering.compare(T,T)" target="org.sonar.core.util.MultiSets$NonNullOrdering.doCompare(T,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5063" source="org.sonar.core.util.MultiSets$1()" target="org.sonar.core.util.MultiSets$NonNullOrdering()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5064" source="org.sonar.core.util.MultiSets$NonNullOrdering.doCompare(T,T)" target="org.sonar.core.util.MultiSets$1.doCompare(com.google.common.collect.Multiset$Entry,com.google.common.collect.Multiset$Entry)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5065" source="org.sonar.core.util.MultiSets#DECREASING_COUNT_ORDERING" target="org.sonar.core.util.MultiSets$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5066" source="org.sonar.core.util.MultiSetsTest.order_with_highest_count_first()" target="org.sonar.core.util.MultiSetsTest.add(com.google.common.collect.Multiset,java.lang.String,int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5067" source="org.sonar.core.util.MultiSetsTest.order_with_highest_count_first()" target="org.sonar.core.util.MultiSets.listOrderedByHighestCounts(com.google.common.collect.Multiset)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5068" source="org.sonar.core.util.NonNullInputFunction.apply(F)" target="org.sonar.core.util.NonNullInputFunction.doApply(F)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5069" source="org.sonar.core.util.NonNullInputFunctionTest$TestFunction()" target="org.sonar.core.util.NonNullInputFunction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5070" source="org.sonar.core.util.NonNullInputFunction.doApply(F)" target="org.sonar.core.util.NonNullInputFunctionTest$TestFunction.doApply(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5071" source="org.sonar.core.util.NonNullInputFunctionTest#sut" target="org.sonar.core.util.NonNullInputFunctionTest$TestFunction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5072" source="org.sonar.core.util.NonNullInputFunctionTest.apply()" target="org.sonar.core.util.NonNullInputFunction.apply(F)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5073" source="org.sonar.core.util.NonNullInputFunctionTest.fail_if_null_input()" target="org.sonar.core.util.NonNullInputFunction.apply(F)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5074" source="org.sonar.core.purge.IdUuidPairs$IdUuidPairToIdFunction.apply(org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.purge.IdUuidPair.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5075" source="org.sonar.core.purge.IdUuidPairs$IdUuidPairToUuidFunction.apply(org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.purge.IdUuidPair.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5076" source="org.sonar.core.purge.IdUuidPairs.ids(java.util.List)" target="org.sonar.core.purge.IdUuidPairs$IdUuidPairToIdFunction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5077" source="org.sonar.core.purge.IdUuidPairs.uuids(java.util.List)" target="org.sonar.core.purge.IdUuidPairs$IdUuidPairToUuidFunction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5078" source="org.sonar.core.purge.IdUuidPairsTest.extract_ids()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5079" source="org.sonar.core.purge.IdUuidPairsTest.extract_ids()" target="org.sonar.core.purge.IdUuidPairs.ids(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5080" source="org.sonar.core.purge.IdUuidPairsTest.extract_uuids()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5081" source="org.sonar.core.purge.IdUuidPairsTest.extract_uuids()" target="org.sonar.core.purge.IdUuidPairs.uuids(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5082" source="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5083" source="org.sonar.core.purge.PurgeCommands.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)" target="org.sonar.core.purge.PurgeMapper.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5084" source="org.sonar.core.purge.PurgeCommands.deleteFileSources(java.lang.String)" target="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5085" source="org.sonar.core.purge.PurgeCommands.deleteFileSources(java.lang.String)" target="org.sonar.core.purge.PurgeMapper.deleteFileSourcesByProjectUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5086" source="org.sonar.core.purge.PurgeCommands.deleteFileSources(java.lang.String)" target="org.sonar.core.purge.PurgeProfiler.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5087" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.IdUuidPairs.ids(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5088" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.IdUuidPairs.uuids(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5089" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5090" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.selectSnapshotIdsByResource(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5091" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5092" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteResourceLinks(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5093" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeProfiler.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5094" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteResourceProperties(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5095" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteResourceIndex(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5096" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteResourceGroupRoles(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5097" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteResourceUserRoles(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5098" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteResourceManualMeasures(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5099" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteComponentIssueChanges(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5100" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteComponentIssues(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5101" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteResourceActionPlans(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5102" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteComponentEvents(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5103" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteResource(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5104" source="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteAuthors(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5105" source="org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)" target="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5106" source="org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteSnapshotDuplications(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5107" source="org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)" target="org.sonar.core.purge.PurgeProfiler.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5108" source="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5109" source="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5110" source="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteSnapshotEvents(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5111" source="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeProfiler.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5112" source="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteSnapshotMeasures(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5113" source="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteSnapshot(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5114" source="org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" target="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5115" source="org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" target="org.sonar.core.purge.PurgeMapper.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5116" source="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeCommands.deleteSnapshotDuplications(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5117" source="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5118" source="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeMapper.selectMetricIdsWithoutHistoricalData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5119" source="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeMapper.deleteSnapshotWastedMeasures(java.util.List,java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5120" source="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeProfiler.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5121" source="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)" target="org.sonar.core.purge.PurgeMapper.updatePurgeStatusToOne(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5122" source="org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" target="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5123" source="org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" target="org.sonar.core.purge.PurgeMapper.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5124" source="org.sonar.core.purge.PurgeCommandsTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5125" source="org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIdUuids()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5126" source="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5127" source="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5128" source="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5129" source="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5130" source="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()" target="org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5131" source="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()" target="org.sonar.core.purge.PurgeSnapshotQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5132" source="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()" target="org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5133" source="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5134" source="org.sonar.core.purge.PurgeCommandsTest.delete_wasted_measures_when_purging_snapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5135" source="org.sonar.core.purge.PurgeCommandsTest.prepare()" target="org.sonar.core.purge.PurgeProfiler()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5136" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5137" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5138" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5139" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5140" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()" target="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5141" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5142" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteResource()" target="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5143" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5144" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5145" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5146" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5147" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()" target="org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5148" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()" target="org.sonar.core.purge.PurgeSnapshotQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5149" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()" target="org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5150" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5151" source="org.sonar.core.purge.PurgeCommandsTest.shouldDeleteSnapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5152" source="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5153" source="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5154" source="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5155" source="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5156" source="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()" target="org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5157" source="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()" target="org.sonar.core.purge.PurgeSnapshotQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5158" source="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()" target="org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5159" source="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5160" source="org.sonar.core.purge.PurgeCommandsTest.shouldPurgeSnapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5161" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5162" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5163" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5164" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()" target="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5165" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()" target="org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIdUuids()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5166" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_resources()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5167" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5168" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5169" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5170" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()" target="org.sonar.core.purge.PurgeCommands.deleteSnapshots(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5171" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()" target="org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIds()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5172" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_deleting_huge_number_of_snapshots()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5173" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5174" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()" target="org.sonar.core.persistence.MyBatis.openSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5175" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5176" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()" target="org.sonar.core.purge.PurgeCommands.purgeSnapshots(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5177" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()" target="org.sonar.core.purge.PurgeCommandsTest.getHugeNumberOfIds()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5178" source="org.sonar.core.purge.PurgeCommandsTest.should_not_fail_when_purging_huge_number_of_snapshots()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5179" source="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)" target="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5180" source="org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues()" target="org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5181" source="org.sonar.core.purge.PurgeConfiguration.newDefaultPurgeConfiguration(org.sonar.api.config.Settings,org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5182" source="org.sonar.core.purge.PurgeConfigurationTest.delete_directory_if_in_settings()" target="org.sonar.core.purge.PurgeConfiguration.newDefaultPurgeConfiguration(org.sonar.api.config.Settings,org.sonar.core.purge.IdUuidPair)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5183" source="org.sonar.core.purge.PurgeConfigurationTest.delete_directory_if_in_settings()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5184" source="org.sonar.core.purge.PurgeConfigurationTest.delete_directory_if_in_settings()" target="org.sonar.core.purge.PurgeConfiguration.scopesWithoutHistoricalData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5185" source="org.sonar.core.purge.PurgeConfigurationTest.do_not_delete_directory_by_default()" target="org.sonar.core.purge.PurgeConfiguration.newDefaultPurgeConfiguration(org.sonar.api.config.Settings,org.sonar.core.purge.IdUuidPair)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5186" source="org.sonar.core.purge.PurgeConfigurationTest.do_not_delete_directory_by_default()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5187" source="org.sonar.core.purge.PurgeConfigurationTest.do_not_delete_directory_by_default()" target="org.sonar.core.purge.PurgeConfiguration.scopesWithoutHistoricalData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5188" source="org.sonar.core.purge.PurgeConfigurationTest.do_not_delete_directory_by_default()" target="org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5189" source="org.sonar.core.purge.PurgeConfigurationTest.should_delete_all_closed_issues()" target="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5190" source="org.sonar.core.purge.PurgeConfigurationTest.should_delete_all_closed_issues()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5191" source="org.sonar.core.purge.PurgeConfigurationTest.should_delete_all_closed_issues()" target="org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5192" source="org.sonar.core.purge.PurgeConfigurationTest.should_delete_only_old_closed_issues()" target="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5193" source="org.sonar.core.purge.PurgeConfigurationTest.should_delete_only_old_closed_issues()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5194" source="org.sonar.core.purge.PurgeConfigurationTest.should_delete_only_old_closed_issues()" target="org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5195" source="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5196" source="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setIslast(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5197" source="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setStatus(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5198" source="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5199" source="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeCommands.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5200" source="org.sonar.core.purge.PurgeDao.getProjects(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceDao.getResource(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5201" source="org.sonar.core.purge.PurgeDao.getProjects(long,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.resource.ResourceDao.getDescendantProjects(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5202" source="org.sonar.core.purge.PurgeDao.selectPurgeableFiles(org.sonar.core.persistence.DbSession,java.lang.Long)" target="org.sonar.core.purge.PurgeDao.mapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5203" source="org.sonar.core.purge.PurgeDao.selectPurgeableFiles(org.sonar.core.persistence.DbSession,java.lang.Long)" target="org.sonar.core.purge.PurgeMapper.selectPurgeableFileUuids(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5204" source="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5205" source="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long)" target="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5206" source="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5207" source="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeDao.mapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5208" source="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeMapper.selectPurgeableSnapshotsWithEvents(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5209" source="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeMapper.selectPurgeableSnapshotsWithoutEvents(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5210" source="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5211" source="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.purge.PurgeDao.mapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5212" source="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5213" source="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.purge.PurgeDao.deleteFileSources(java.lang.String,org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5214" source="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.purge.IdUuidPair.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5215" source="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5216" source="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.persistence.DbSession,org.sonar.core.purge.IdUuidPair)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5217" source="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.purge.IdUuidPair)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5218" source="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5219" source="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" target="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5220" source="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5221" source="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5222" source="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery,org.sonar.core.persistence.DbSession)" target="org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5223" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5224" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5225" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5226" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5227" source="org.sonar.core.purge.PurgeDao.mapper(org.sonar.core.persistence.DbSession)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5228" source="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeDao.hasAbortedBuilds(java.lang.Long,org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5229" source="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5230" source="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5231" source="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setIslast(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5232" source="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setStatus(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5233" source="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setRootProjectId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5234" source="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5235" source="org.sonar.core.purge.PurgeDao.deleteFileSources(java.lang.String,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeCommands.deleteFileSources(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5236" source="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.PurgeConfiguration.maxLiveDateOfClosedIssues()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5237" source="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.PurgeMapper.deleteOldClosedIssueChanges(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5238" source="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.PurgeConfiguration.rootProjectIdUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5239" source="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.IdUuidPair.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5240" source="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.PurgeMapper.deleteOldClosedIssues(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5241" source="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeMapper.selectProjectIdUuidsByRootId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5242" source="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.IdUuidPair.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5243" source="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5244" source="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeMapper.selectComponentIdUuidsByRootId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5245" source="org.sonar.core.purge.PurgeDao.deleteProject(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeCommands.deleteResources(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5246" source="org.sonar.core.purge.PurgeDao$1.handleResult(org.apache.ibatis.session.ResultContext)" target="org.sonar.core.purge.IdUuidPair.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5247" source="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5248" source="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeDao$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5249" source="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.IdUuidPair.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5250" source="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5251" source="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeListener.onComponentDisabling(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5252" source="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.IdUuidPair.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5253" source="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.IdUuidPair.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5254" source="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.PurgeMapper.deleteResourceIndex(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5255" source="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.PurgeMapper.setSnapshotIsLastToFalse(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5256" source="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.PurgeMapper.deleteFileSourcesByUuid(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5257" source="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.IdUuidPair.getUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5258" source="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.PurgeMapper.disableResource(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5259" source="org.sonar.core.purge.PurgeDao.disableResource(org.sonar.core.purge.IdUuidPair,org.sonar.core.purge.PurgeMapper)" target="org.sonar.core.purge.PurgeMapper.resolveResourceIssuesNotAlreadyResolved(java.lang.String,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5260" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5261" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeCommands(org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeProfiler)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5262" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeDao.getProjects(long,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5263" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeConfiguration.rootProjectIdUuid()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5264" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.IdUuidPair.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5265" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.resource.ResourceDto.getLongName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5266" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5267" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeDao.deleteAbortedBuilds(org.sonar.core.resource.ResourceDto,org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5268" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5269" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeConfiguration.scopesWithoutHistoricalData()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5270" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeDao.disableOrphanResources(org.sonar.core.resource.ResourceDto,org.apache.ibatis.session.SqlSession,org.sonar.core.purge.PurgeMapper,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5271" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.persistence.DbSession,org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)" target="org.sonar.core.purge.PurgeDao.deleteOldClosedIssues(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeMapper)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5272" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeCommands.selectSnapshotIds(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5273" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5274" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5275" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.resource.ResourceDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5276" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setIslast(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5277" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setNotPurged(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5278" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setScopes(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5279" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setRootSnapshotId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5280" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeCommands.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5281" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeCommands.purgeSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5282" source="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.resource.ResourceDto,java.lang.String[],org.sonar.core.purge.PurgeCommands)" target="org.sonar.core.purge.PurgeSnapshotQuery.setId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5283" source="org.sonar.core.purge.PurgeDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5284" source="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()" target="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5285" source="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5286" source="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days(org.sonar.api.utils.System2)" target="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5287" source="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days(org.sonar.api.utils.System2)" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5288" source="org.sonar.core.purge.PurgeDaoTest.getById(java.util.List,long)" target="org.sonar.core.purge.PurgeableSnapshotDto.getSnapshotId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5289" source="org.sonar.core.purge.PurgeDaoTest.after()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5290" source="org.sonar.core.purge.PurgeDaoTest.before()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5291" source="org.sonar.core.purge.PurgeDaoTest.before()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5292" source="org.sonar.core.purge.PurgeDaoTest.before()" target="org.sonar.core.purge.PurgeDao(org.sonar.core.persistence.MyBatis,org.sonar.core.resource.ResourceDao,org.sonar.core.purge.PurgeProfiler,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5293" source="org.sonar.core.purge.PurgeDaoTest.before()" target="org.sonar.core.resource.ResourceDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5294" source="org.sonar.core.purge.PurgeDaoTest.before()" target="org.sonar.core.purge.PurgeProfiler()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5295" source="org.sonar.core.purge.PurgeDaoTest.delete_file_sources_of_disabled_resources()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5296" source="org.sonar.core.purge.PurgeDaoTest.delete_file_sources_of_disabled_resources()" target="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5297" source="org.sonar.core.purge.PurgeDaoTest.delete_file_sources_of_disabled_resources()" target="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days(org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5298" source="org.sonar.core.purge.PurgeDaoTest.delete_file_sources_of_disabled_resources()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5299" source="org.sonar.core.purge.PurgeDaoTest.disable_resources_without_last_snapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5300" source="org.sonar.core.purge.PurgeDaoTest.disable_resources_without_last_snapshot()" target="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5301" source="org.sonar.core.purge.PurgeDaoTest.disable_resources_without_last_snapshot()" target="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days(org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5302" source="org.sonar.core.purge.PurgeDaoTest.disable_resources_without_last_snapshot()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5303" source="org.sonar.core.purge.PurgeDaoTest.select_purgeable_file_uuids_and_only_them()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5304" source="org.sonar.core.purge.PurgeDaoTest.select_purgeable_file_uuids_and_only_them()" target="org.sonar.core.purge.PurgeDao.selectPurgeableFiles(org.sonar.core.persistence.DbSession,java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5305" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteAbortedBuilds()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5306" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteAbortedBuilds()" target="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5307" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteAbortedBuilds()" target="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5308" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteAbortedBuilds()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5309" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5310" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()" target="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5311" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()" target="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5312" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5313" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteHistoricalDataOfDirectoriesAndFiles()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5314" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5315" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()" target="org.sonar.core.purge.PurgeDao.deleteSnapshots(org.sonar.core.purge.PurgeSnapshotQuery)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5316" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()" target="org.sonar.core.purge.PurgeSnapshotQuery.create()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5317" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()" target="org.sonar.core.purge.PurgeSnapshotQuery.setIslast(java.lang.Boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5318" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()" target="org.sonar.core.purge.PurgeSnapshotQuery.setResourceId(java.lang.Long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5319" source="org.sonar.core.purge.PurgeDaoTest.shouldDeleteSnapshots()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5320" source="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5321" source="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()" target="org.sonar.core.purge.PurgeDao.selectPurgeableSnapshots(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5322" source="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()" target="org.sonar.core.purge.PurgeDaoTest.getById(java.util.List,long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5323" source="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()" target="org.sonar.core.purge.PurgeableSnapshotDto.isLast()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5324" source="org.sonar.core.purge.PurgeDaoTest.shouldSelectPurgeableSnapshots()" target="org.sonar.core.purge.PurgeableSnapshotDto.hasEvents()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5325" source="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5326" source="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()" target="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5327" source="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()" target="org.sonar.core.purge.PurgeConfiguration(org.sonar.core.purge.IdUuidPair,java.lang.String[],int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5328" source="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5329" source="org.sonar.core.purge.PurgeDaoTest.should_delete_all_closed_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5330" source="org.sonar.core.purge.PurgeDaoTest.should_delete_old_closed_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5331" source="org.sonar.core.purge.PurgeDaoTest.should_delete_old_closed_issues()" target="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5332" source="org.sonar.core.purge.PurgeDaoTest.should_delete_old_closed_issues()" target="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5333" source="org.sonar.core.purge.PurgeDaoTest.should_delete_old_closed_issues()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5334" source="org.sonar.core.purge.PurgeDaoTest.should_delete_project_and_associated_data()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5335" source="org.sonar.core.purge.PurgeDaoTest.should_delete_project_and_associated_data()" target="org.sonar.core.purge.PurgeDao.deleteResourceTree(org.sonar.core.purge.IdUuidPair)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5336" source="org.sonar.core.purge.PurgeDaoTest.should_delete_project_and_associated_data()" target="org.sonar.core.purge.IdUuidPair(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5337" source="org.sonar.core.purge.PurgeDaoTest.should_delete_project_and_associated_data()" target="org.sonar.core.persistence.AbstractDaoTestCase.assertEmptyTables(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5338" source="org.sonar.core.purge.PurgeDaoTest.should_purge_project()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5339" source="org.sonar.core.purge.PurgeDaoTest.should_purge_project()" target="org.sonar.core.purge.PurgeDao.purge(org.sonar.core.purge.PurgeConfiguration,org.sonar.core.purge.PurgeListener)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5340" source="org.sonar.core.purge.PurgeDaoTest.should_purge_project()" target="org.sonar.core.purge.PurgeDaoTest.newConfigurationWith30Days()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5341" source="org.sonar.core.purge.PurgeDaoTest.should_purge_project()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5342" source="org.sonar.core.purge.PurgeProfiler()" target="org.sonar.core.purge.PurgeProfiler(org.sonar.core.purge.PurgeProfiler$Clock)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5343" source="org.sonar.core.purge.PurgeProfiler()" target="org.sonar.core.purge.PurgeProfiler$Clock()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5344" source="org.sonar.core.purge.PurgeProfiler.dump(long,org.sonar.api.utils.log.Logger)" target="org.sonar.core.purge.PurgeProfiler$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5345" source="org.sonar.core.purge.PurgeProfiler.dump(long,org.sonar.api.utils.log.Logger)" target="org.sonar.core.purge.PurgeProfiler.truncateList(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5346" source="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)" target="org.sonar.core.purge.PurgeProfiler$Clock.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5347" source="org.sonar.core.purge.PurgeProfiler.stop()" target="org.sonar.core.purge.PurgeProfiler$Clock.now()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5348" source="org.sonar.core.purge.PurgeProfilerTest$MockedClock()" target="org.sonar.core.purge.PurgeProfiler$Clock()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5349" source="org.sonar.core.purge.PurgeProfiler$Clock.now()" target="org.sonar.core.purge.PurgeProfilerTest$MockedClock.now()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5350" source="org.sonar.core.purge.PurgeProfilerTest.prepare()" target="org.sonar.core.purge.PurgeProfilerTest$MockedClock()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5351" source="org.sonar.core.purge.PurgeProfilerTest.prepare()" target="org.sonar.core.purge.PurgeProfiler(org.sonar.core.purge.PurgeProfiler$Clock)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5352" source="org.sonar.core.purge.PurgeProfilerTest.shouldProfilePurge()" target="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5353" source="org.sonar.core.purge.PurgeProfilerTest.shouldProfilePurge()" target="org.sonar.core.purge.PurgeProfilerTest$MockedClock.sleep(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5354" source="org.sonar.core.purge.PurgeProfilerTest.shouldProfilePurge()" target="org.sonar.core.purge.PurgeProfiler.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5355" source="org.sonar.core.purge.PurgeProfilerTest.shouldProfilePurge()" target="org.sonar.core.purge.PurgeProfiler.dump(long,org.sonar.api.utils.log.Logger)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5356" source="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()" target="org.sonar.core.purge.PurgeProfiler.start(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5357" source="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()" target="org.sonar.core.purge.PurgeProfilerTest$MockedClock.sleep(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5358" source="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()" target="org.sonar.core.purge.PurgeProfiler.stop()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5359" source="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()" target="org.sonar.core.purge.PurgeProfiler.reset()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5360" source="org.sonar.core.purge.PurgeProfilerTest.shouldResetPurgeProfiling()" target="org.sonar.core.purge.PurgeProfiler.dump(long,org.sonar.api.utils.log.Logger)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5361" source="org.sonar.core.purge.PurgeSnapshotQuery.create()" target="org.sonar.core.purge.PurgeSnapshotQuery()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5362" source="org.sonar.core.purge.PurgeableSnapshotDtoTest.testEquals()" target="org.sonar.core.purge.PurgeableSnapshotDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5363" source="org.sonar.core.purge.PurgeableSnapshotDtoTest.testEquals()" target="org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5364" source="org.sonar.core.purge.PurgeableSnapshotDtoTest.testEquals()" target="org.sonar.core.purge.PurgeableSnapshotDto.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5365" source="org.sonar.core.purge.PurgeableSnapshotDtoTest.testHasCode()" target="org.sonar.core.purge.PurgeableSnapshotDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5366" source="org.sonar.core.purge.PurgeableSnapshotDtoTest.testHasCode()" target="org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5367" source="org.sonar.core.purge.PurgeableSnapshotDtoTest.testHasCode()" target="org.sonar.core.purge.PurgeableSnapshotDto.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5368" source="org.sonar.core.purge.PurgeableSnapshotDtoTest.testToString()" target="org.sonar.core.purge.PurgeableSnapshotDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5369" source="org.sonar.core.purge.PurgeableSnapshotDtoTest.testToString()" target="org.sonar.core.purge.PurgeableSnapshotDto.setSnapshotId(long)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5370" source="org.sonar.core.purge.PurgeableSnapshotDtoTest.testToString()" target="org.sonar.core.purge.PurgeableSnapshotDto.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5371" source="org.sonar.core.purge.PurgeListener.onComponentDisabling(java.lang.String)" target="org.sonar.core.purge.PurgeListener$1.onComponentDisabling(java.lang.String)">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5372" source="org.sonar.core.purge.PurgeListener#EMPTY" target="org.sonar.core.purge.PurgeListener$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5373" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5374" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5375" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5376" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectMaxCharacteristicOrder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5377" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5378" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5379" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5380" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectCharacteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5381" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5382" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection)" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5383" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5384" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectCharacteristicsByIds(java.util.List)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5385" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5386" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int)" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5387" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5388" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectCharacteristicsByParentId(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5389" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5390" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5391" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5392" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectEnabledCharacteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5393" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5394" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5395" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5396" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics(org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectEnabledRootCharacteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5397" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5398" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int)" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5399" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5400" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectById(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5401" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5402" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String)" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5403" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5404" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5405" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5406" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String)" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5407" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5408" source="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.selectByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5409" source="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,java.util.Collection)" target="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5410" source="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.technicaldebt.db.CharacteristicDto,org.sonar.core.technicaldebt.db.CharacteristicDto[])" target="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5411" source="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5412" source="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)" target="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5413" source="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5414" source="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5415" source="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5416" source="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto)" target="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5417" source="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5418" source="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.technicaldebt.db.CharacteristicMapper.update(org.sonar.core.technicaldebt.db.CharacteristicDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5419" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest#db" target="org.sonar.core.persistence.DbTester()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5420" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.createDao()" target="org.sonar.core.persistence.DbTester.truncateTables()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5421" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.createDao()" target="org.sonar.core.persistence.DbTester.myBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5422" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.createDao()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5423" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.createDao()" target="org.sonar.core.technicaldebt.db.CharacteristicDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5424" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5425" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5426" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5427" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5428" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5429" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5430" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.technicaldebt.db.CharacteristicDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5431" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristic()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5432" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.technicaldebt.db.CharacteristicDto,org.sonar.core.technicaldebt.db.CharacteristicDto[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5433" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5434" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5435" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5436" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5437" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5438" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5439" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5440" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.insert_characteristics()" target="org.sonar.core.persistence.DbTester.countRowsOfTable(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5441" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_id()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5442" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_id()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectById(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5443" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_key()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5444" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_key()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5445" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_key()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5446" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_key()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getParentId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5447" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_name()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5448" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristic_by_name()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectByName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5449" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5450" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5451" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics_by_ids()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5452" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_characteristics_by_ids()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByIds(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5453" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5454" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledCharacteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5455" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5456" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5457" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5458" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getParentId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5459" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getOrder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5460" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.isEnabled()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5461" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5462" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5463" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5464" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5465" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5466" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5467" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics_order_by_characteristic_order()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5468" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics_order_by_characteristic_order()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectEnabledRootCharacteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5469" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_enabled_root_characteristics_order_by_characteristic_order()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5470" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5471" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5472" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order_when_characteristics_are_all_disabled()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5473" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_max_characteristic_order_when_characteristics_are_all_disabled()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectMaxCharacteristicOrder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5474" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_sub_characteristics_by_parent_id()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5475" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.select_sub_characteristics_by_parent_id()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.selectCharacteristicsByParentId(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5476" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.tearDown()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5477" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.persistence.DbTester.prepareDbUnit(java.lang.Class,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5478" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5479" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5480" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5481" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5482" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5483" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5484" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5485" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5486" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDao.update(org.sonar.core.technicaldebt.db.CharacteristicDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5487" source="org.sonar.core.technicaldebt.db.CharacteristicDaoTest.update_characteristic()" target="org.sonar.core.persistence.DbTester.assertDbUnit(java.lang.Class,java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5488" source="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)" target="org.sonar.core.technicaldebt.db.CharacteristicDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5489" source="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5490" source="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5491" source="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5492" source="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setParentId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5493" source="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5494" source="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5495" source="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5496" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5497" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5498" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setParentId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5499" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5500" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5501" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setOrder(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5502" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setEnabled(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5503" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5504" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5505" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.toCharacteristic(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5506" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.toDto(org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic,java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5507" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5508" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getParentId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5509" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5510" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5511" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getOrder()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5512" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.isEnabled()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5513" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getCreatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5514" source="org.sonar.core.technicaldebt.db.CharacteristicDtoTest.to_dto_from_characteristic()" target="org.sonar.core.technicaldebt.db.CharacteristicDto.getUpdatedAt()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5515" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristics()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.toDefaultCharacteristic(org.sonar.api.batch.debt.internal.DefaultDebtCharacteristic,org.sonar.api.technicaldebt.batch.internal.DefaultCharacteristic)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5516" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.rootCharacteristics()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5517" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.rootCharacteristics()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5518" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicById(java.lang.Integer)" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5519" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicById(java.lang.Integer)" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel$3()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5520" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicByKey(java.lang.String)" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5521" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicByKey(java.lang.String)" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel$2()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5522" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.characteristic_by_id()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicById(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5523" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_characteristic_by_key()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.characteristicByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5524" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_characteristics()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.rootCharacteristics()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5525" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_requirement_by_id_always_return_null()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.requirementsById(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5526" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_requirement_by_rule_key_always_return_null()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.requirementsByRule(org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5527" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.get_requirements_always_return_empty_list()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel.requirements()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5528" source="org.sonar.core.technicaldebt.DefaultTechnicalDebtModelTest.setUp()" target="org.sonar.core.technicaldebt.DefaultTechnicalDebtModel(org.sonar.api.batch.debt.DebtModel)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5529" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5530" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5531" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)" target="org.sonar.core.qualityprofile.db.ActiveRuleMapper.selectByProfileKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5532" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5533" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5534" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5535" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)" target="org.sonar.core.qualityprofile.db.ActiveRuleMapper.selectParamsByProfileKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5536" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5537" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.insert(org.sonar.core.qualityprofile.db.ActiveRuleDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualityprofile.db.ActiveRuleMapper.insert(org.sonar.core.qualityprofile.db.ActiveRuleDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5538" source="org.sonar.core.qualityprofile.db.ActiveRuleDao.insert(org.sonar.core.qualityprofile.db.ActiveRuleParamDto,org.apache.ibatis.session.SqlSession)" target="org.sonar.core.qualityprofile.db.ActiveRuleMapper.insertParameter(org.sonar.core.qualityprofile.db.ActiveRuleParamDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5539" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5540" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.before()" target="org.sonar.core.qualityprofile.db.ActiveRuleDao(org.sonar.core.persistence.MyBatis)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5541" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.before()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5542" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5543" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5544" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5545" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5546" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setActiveRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5547" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setRulesParameterId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5548" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5549" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setValue(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5550" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.qualityprofile.db.ActiveRuleDao.insert(org.sonar.core.qualityprofile.db.ActiveRuleParamDto,org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5551" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5552" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5553" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.insert_parameter()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5554" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_by_profile()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5555" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_by_profile()" target="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectByProfileKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5556" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_params_by_profile_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5557" source="org.sonar.core.qualityprofile.db.ActiveRuleDaoTest.select_params_by_profile_id()" target="org.sonar.core.qualityprofile.db.ActiveRuleDao.selectParamsByProfileKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5558" source="org.sonar.core.qualityprofile.db.ActiveRuleDto()" target="org.sonar.core.persistence.Dto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5559" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.getSeverityString()" target="org.sonar.core.rule.SeverityUtil.getSeverityFromOrdinal(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5560" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5561" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5562" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)" target="org.sonar.core.qualityprofile.db.ActiveRuleDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5563" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)" target="org.sonar.core.qualityprofile.db.ActiveRuleDto.setProfileId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5564" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)" target="org.sonar.core.qualityprofile.db.ActiveRuleDto.setRuleId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5565" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)" target="org.sonar.core.qualityprofile.db.ActiveRuleDto.setKey(org.sonar.core.qualityprofile.db.ActiveRuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5566" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5567" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5568" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.createFor(org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.rule.RuleDto)" target="org.sonar.core.rule.RuleDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5569" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.setKey(org.sonar.core.qualityprofile.db.ActiveRuleKey)" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.ruleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5570" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.setKey(org.sonar.core.qualityprofile.db.ActiveRuleKey)" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.qProfile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5571" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.setSeverity(java.lang.String)" target="org.sonar.core.rule.SeverityUtil.getOrdinalFromSeverity(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5572" source="org.sonar.core.persistence.Dto.getKey()" target="org.sonar.core.qualityprofile.db.ActiveRuleDto.getKey()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5573" source="org.sonar.core.qualityprofile.db.ActiveRuleDto.getKey()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5574" source="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)" target="org.sonar.core.qualityprofile.db.ActiveRuleKey(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5575" source="org.sonar.core.qualityprofile.db.ActiveRuleKey.parse(java.lang.String)" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5576" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.equals_and_hashcode()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5577" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.equals_and_hashcode()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.equals(java.lang.Object)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5578" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.equals_and_hashcode()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.hashCode()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5579" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.of()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5580" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.of()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.qProfile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5581" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.of()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.ruleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5582" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.of()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5583" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5584" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.qProfile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5585" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.ruleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5586" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.parse_fail_when_less_than_three_colons()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.parse(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5587" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.profile_must_not_be_null()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5588" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_can_contain_colons()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5589" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_can_contain_colons()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.qProfile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5590" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_can_contain_colons()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.ruleKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5591" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_can_contain_colons()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.toString()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5592" source="org.sonar.core.qualityprofile.db.ActiveRuleKeyTest.rule_key_must_not_be_null()" target="org.sonar.core.qualityprofile.db.ActiveRuleKey.of(java.lang.String,org.sonar.api.rule.RuleKey)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5593" source="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.groupByKey(java.util.Collection)" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5594" source="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)" target="org.sonar.core.rule.RuleParamDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5595" source="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5596" source="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5597" source="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)" target="org.sonar.core.rule.RuleParamDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5598" source="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.createFor(org.sonar.core.rule.RuleParamDto)" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setRulesParameterId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5599" source="org.sonar.core.qualityprofile.db.ActiveRuleParamDtoTest.groupByKey()" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.groupByKey(java.util.Collection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5600" source="org.sonar.core.qualityprofile.db.ActiveRuleParamDtoTest.groupByKey()" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5601" source="org.sonar.core.qualityprofile.db.ActiveRuleParamDtoTest.groupByKey()" target="org.sonar.core.qualityprofile.db.ActiveRuleParamDto.setKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5602" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5603" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5604" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.countProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5605" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5606" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5607" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5608" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectAll()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5609" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5610" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll(org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5611" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll(org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectAll()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5612" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5613" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5614" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5615" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5616" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findChildren(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5617" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findChildren(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectChildren(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5618" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findDescendants(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.findChildren(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5619" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findDescendants(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.findDescendants(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5620" source="org.sonar.core.qualityprofile.db.QualityProfileDao.findDescendants(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5621" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectDeselectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.sqlQueryString(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5622" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectDeselectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5623" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectDeselectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectDeselectedProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5624" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjectAssociations(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.sqlQueryString(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5625" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjectAssociations(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5626" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjectAssociations(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectProjectAssociations(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5627" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5628" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5629" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5630" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5631" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5632" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectSelectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.sqlQueryString(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5633" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectSelectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5634" source="org.sonar.core.qualityprofile.db.QualityProfileDao.selectSelectedProjects(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectSelectedProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5635" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5636" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5637" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.countProjectsByProfile()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5638" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()" target="org.sonar.core.qualityprofile.db.QualityProfileProjectCount.getProfileKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5639" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()" target="org.sonar.core.qualityprofile.db.QualityProfileProjectCount.getProjectCount()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5640" source="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5641" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5642" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5643" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5644" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5645" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectById(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5646" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5647" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByKey(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5648" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5649" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5650" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5651" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5652" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByNameAndLanguage(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5653" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5654" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByProjectAndLanguage(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5655" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5656" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5657" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectByProjectIdAndLanguage(java.lang.Long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5658" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5659" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5660" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5661" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5662" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5663" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectDefaultProfile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5664" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getNonNullByKey(org.sonar.core.persistence.DbSession,java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getByKey(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5665" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5666" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5667" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5668" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5669" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParent(java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectParent(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5670" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5671" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5672" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5673" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5674" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.selectParentById(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5675" source="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)" target="org.sonar.core.persistence.DbSession.getMapper(java.lang.Class)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5676" source="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5677" source="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5678" source="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5679" source="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5680" source="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5681" source="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.delete(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5682" source="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5683" source="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])" target="org.sonar.core.qualityprofile.db.QualityProfileDao.doDelete(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5684" source="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteAllProjectProfileAssociation(java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5685" source="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteAllProjectProfileAssociation(java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.deleteAllProjectProfileAssociation(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5686" source="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5687" source="org.sonar.core.qualityprofile.db.QualityProfileDao.deleteProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.deleteProjectProfileAssociation(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5688" source="org.sonar.core.qualityprofile.db.QualityProfileDao.doDelete(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5689" source="org.sonar.core.qualityprofile.db.QualityProfileDao.doDelete(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.delete(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5690" source="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5691" source="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.persistence.Dto.setCreatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5692" source="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.persistence.Dto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5693" source="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5694" source="org.sonar.core.qualityprofile.db.QualityProfileDao.doUpdate(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5695" source="org.sonar.core.qualityprofile.db.QualityProfileDao.doUpdate(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.persistence.Dto.setUpdatedAt(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5696" source="org.sonar.core.qualityprofile.db.QualityProfileDao.doUpdate(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.update(org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5697" source="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5698" source="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])" target="org.sonar.core.qualityprofile.db.QualityProfileDao.doInsert(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5699" source="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5700" source="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5701" source="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5702" source="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5703" source="org.sonar.core.qualityprofile.db.QualityProfileDao.insertProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5704" source="org.sonar.core.qualityprofile.db.QualityProfileDao.insertProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.insertProjectProfileAssociation(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5705" source="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5706" source="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])" target="org.sonar.core.qualityprofile.db.QualityProfileDao.doUpdate(org.sonar.core.qualityprofile.db.QualityProfileMapper,org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5707" source="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5708" source="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.persistence.DbSession,org.sonar.core.qualityprofile.db.QualityProfileDto,org.sonar.core.qualityprofile.db.QualityProfileDto[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5709" source="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.persistence.DbSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5710" source="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)" target="org.sonar.core.persistence.MyBatis.closeQuietly(org.apache.ibatis.session.SqlSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5711" source="org.sonar.core.qualityprofile.db.QualityProfileDao.updateProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getMapper(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5712" source="org.sonar.core.qualityprofile.db.QualityProfileDao.updateProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)" target="org.sonar.core.qualityprofile.db.QualityProfileMapper.updateProjectProfileAssociation(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5713" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest()" target="org.sonar.core.persistence.AbstractDaoTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5714" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.after()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5715" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5716" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5717" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects_by_profile()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5718" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.count_projects_by_profile()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.countProjectsByProfileKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5719" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.createDao()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5720" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.createDao()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5721" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.createDao()" target="org.sonar.core.qualityprofile.db.QualityProfileDao(org.sonar.core.persistence.MyBatis,org.sonar.api.utils.System2)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5722" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.createDao()" target="org.sonar.core.UtcDateUtils.parseDateTime(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5723" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.delete()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5724" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.delete()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.delete(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5725" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.delete()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5726" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5727" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5728" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5729" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll(org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5730" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5731" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5732" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getLanguage()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5733" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getParentKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5734" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5735" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all_is_sorted_by_profile_name()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5736" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all_is_sorted_by_profile_name()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.findAll()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5737" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_all_is_sorted_by_profile_name()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5738" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_by_language()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5739" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_by_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.findByLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5740" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_by_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5741" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5742" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()" target="org.sonar.core.persistence.AbstractDaoTestCase.getMyBatis()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5743" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5744" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.findChildren(org.sonar.core.persistence.DbSession,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5745" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5746" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5747" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getLanguage()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5748" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getParentKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5749" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.find_children()" target="org.sonar.core.persistence.DbSession.close()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5750" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5751" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getById(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5752" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5753" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5754" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getLanguage()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5755" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_id()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getParentKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5756" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5757" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getByNameAndLanguage(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5758" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5759" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getName()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5760" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getLanguage()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5761" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_by_name_and_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getParentKee()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5762" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_default_profile()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5763" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_default_profile()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getDefaultProfile(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5764" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_default_profile()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getKey()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5765" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_parent_by_id()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5766" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_parent_by_id()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getParentById(int)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5767" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.get_parent_by_id()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5768" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5769" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.createFor(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5770" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5771" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.setLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5772" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.insert(org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5773" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.insert()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5774" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_id_and_language()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5775" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_id_and_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(long,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5776" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_id_and_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5777" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_key_and_language()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5778" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_key_and_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.getByProjectAndLanguage(java.lang.String,java.lang.String,org.sonar.core.persistence.DbSession)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5779" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_by_project_key_and_language()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getId()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5780" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_projects()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5781" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.select_projects()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.selectProjects(java.lang.String,java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5782" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()" target="org.sonar.core.persistence.AbstractDaoTestCase.setupData(java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5783" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()" target="org.sonar.core.qualityprofile.db.QualityProfileDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5784" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.setId(java.lang.Integer)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5785" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.setName(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5786" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.setLanguage(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5787" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.setParentKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5788" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.setDefault(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5789" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()" target="org.sonar.core.qualityprofile.db.QualityProfileDao.update(org.sonar.core.qualityprofile.db.QualityProfileDto)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5790" source="org.sonar.core.qualityprofile.db.QualityProfileDaoTest.update()" target="org.sonar.core.persistence.AbstractDaoTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5791" source="org.sonar.core.qualityprofile.db.QualityProfileDto()" target="org.sonar.core.persistence.Dto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5792" source="org.sonar.core.persistence.Dto.getKey()" target="org.sonar.core.qualityprofile.db.QualityProfileDto.getKey()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5793" source="org.sonar.core.qualityprofile.db.QualityProfileDto.createFor(java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDto()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5794" source="org.sonar.core.qualityprofile.db.QualityProfileDto.createFor(java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5795" source="org.sonar.core.qualityprofile.db.QualityProfileDto.setKey(java.lang.String)" target="org.sonar.core.qualityprofile.db.QualityProfileDto.setKee(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5796" source="org.sonar.core.qualityprofile.db.QualityProfileDto.setRulesUpdatedAtAsDate(java.util.Date)" target="org.sonar.core.UtcDateUtils.formatDateTime(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5797" source="org.sonar.core.UtcDateUtils.formatDateTime(java.util.Date)" target="org.sonar.core.UtcDateUtils.newFormat()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5798" source="org.sonar.core.UtcDateUtils.parseDateTime(java.lang.String)" target="org.sonar.core.UtcDateUtils.newFormat()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5799" source="org.sonar.core.UtcDateUtilsTest.fail_if_bad_format()" target="org.sonar.core.UtcDateUtils.parseDateTime(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5800" source="org.sonar.core.UtcDateUtilsTest.parse_then_format()" target="org.sonar.core.UtcDateUtils.parseDateTime(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5801" source="org.sonar.core.UtcDateUtilsTest.parse_then_format()" target="org.sonar.core.UtcDateUtils.formatDateTime(java.util.Date)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5802" source="org.sonar.jpa.session.DatabaseConnector.createEntityManager()" target="org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManager()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5803" source="org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManagerFactory()" target="org.sonar.core.persistence.Database.getHibernateProperties()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5804" source="org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManagerFactory()" target="org.sonar.jpa.session.AbstractDatabaseConnector.logHibernateSettings(java.util.Properties)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5805" source="org.sonar.jpa.session.DatabaseConnector.getDialect()" target="org.sonar.jpa.session.AbstractDatabaseConnector.getDialect()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5806" source="org.sonar.jpa.session.AbstractDatabaseConnector.getDialect()" target="org.sonar.core.persistence.Database.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5807" source="org.sonar.jpa.session.AbstractDatabaseConnector.start()" target="org.sonar.jpa.session.AbstractDatabaseConnector.createEntityManagerFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5808" source="org.sonar.jpa.session.DatabaseSessionTest()" target="org.sonar.jpa.test.AbstractDbUnitTestCase()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5809" source="org.sonar.jpa.session.DatabaseSessionTest.testGetResultsWithMultipleResults()" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5810" source="org.sonar.jpa.session.DatabaseSessionTest.testGetResultsWithNoResults()" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5811" source="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithNoCriterias()" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5812" source="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithNoResults()" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5813" source="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithOneResult()" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5814" source="org.sonar.jpa.session.DatabaseSessionTest.testGetSingleResultWithTwoResults()" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5815" source="org.sonar.jpa.session.DefaultDatabaseConnector(org.sonar.core.persistence.Database)" target="org.sonar.jpa.session.AbstractDatabaseConnector(org.sonar.core.persistence.Database)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5816" source="org.sonar.jpa.session.DatabaseConnector.getConnection()" target="org.sonar.jpa.session.DefaultDatabaseConnector.getConnection()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5817" source="org.sonar.jpa.session.DefaultDatabaseConnector.getConnection()" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5818" source="org.sonar.jpa.session.DefaultDatabaseConnector.createDatasource()" target="org.sonar.jpa.session.CustomHibernateConnectionProvider.setDatasourceForConfig(javax.sql.DataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5819" source="org.sonar.jpa.session.DefaultDatabaseConnector.createDatasource()" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5820" source="org.sonar.jpa.session.AbstractDatabaseConnector.start()" target="org.sonar.jpa.session.DefaultDatabaseConnector.start()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5821" source="org.sonar.jpa.session.DefaultDatabaseConnector.start()" target="org.sonar.jpa.session.DefaultDatabaseConnector.createDatasource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5822" source="org.sonar.jpa.session.DefaultDatabaseConnector.start()" target="org.sonar.jpa.session.AbstractDatabaseConnector.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5823" source="org.sonar.jpa.session.JpaDatabaseSession.getEntity(java.lang.Class,java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5824" source="org.sonar.jpa.session.JpaDatabaseSession.getEntity(java.lang.Class,java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5825" source="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(java.lang.Class,java.lang.Object[])" target="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(javax.persistence.Query,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5826" source="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(java.lang.Class,java.lang.Object[])" target="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5827" source="org.sonar.jpa.session.JpaDatabaseSession.reattach(java.lang.Class,java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5828" source="org.sonar.jpa.session.JpaDatabaseSession.reattach(java.lang.Class,java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5829" source="org.sonar.jpa.session.JpaDatabaseSession.save(T)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5830" source="org.sonar.jpa.session.JpaDatabaseSession.save(T)" target="org.sonar.jpa.session.JpaDatabaseSession.internalSave(java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5831" source="org.sonar.jpa.session.JpaDatabaseSession.getResults(java.lang.Class)" target="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5832" source="org.sonar.jpa.session.JpaDatabaseSession.getResults(java.lang.Class,java.lang.Object[])" target="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5833" source="org.sonar.jpa.session.JpaDatabaseSession.contains(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5834" source="org.sonar.jpa.session.JpaDatabaseSession.contains(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5835" source="org.sonar.jpa.session.JpaDatabaseSession.merge(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5836" source="org.sonar.jpa.session.JpaDatabaseSession.merge(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5837" source="org.sonar.jpa.session.JpaDatabaseSession.saveWithoutFlush(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5838" source="org.sonar.jpa.session.JpaDatabaseSession.saveWithoutFlush(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.internalSave(java.lang.Object,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5839" source="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()" target="org.sonar.jpa.session.DatabaseConnector.createEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5840" source="org.sonar.jpa.session.JpaDatabaseSession.createNativeQuery(java.lang.String)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5841" source="org.sonar.jpa.session.JpaDatabaseSession.createNativeQuery(java.lang.String)" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5842" source="org.sonar.jpa.session.JpaDatabaseSession.createQuery(java.lang.String)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5843" source="org.sonar.jpa.session.JpaDatabaseSession.createQuery(java.lang.String)" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5844" source="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5845" source="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])" target="org.sonar.jpa.session.JpaDatabaseSession.buildCriteriasHQL(java.lang.StringBuilder,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5846" source="org.sonar.jpa.session.JpaDatabaseSession.getQueryForCriterias(java.lang.Class,boolean,java.lang.Object[])" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5847" source="org.sonar.jpa.session.JpaDatabaseSession.commit()" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5848" source="org.sonar.jpa.session.JpaDatabaseSession.commitAndClose()" target="org.sonar.jpa.session.JpaDatabaseSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5849" source="org.sonar.jpa.session.JpaDatabaseSession.internalSave(java.lang.Object,boolean)" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5850" source="org.sonar.jpa.session.JpaDatabaseSession.internalSave(java.lang.Object,boolean)" target="org.sonar.jpa.session.JpaDatabaseSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5851" source="org.sonar.jpa.session.JpaDatabaseSession.remove(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5852" source="org.sonar.jpa.session.JpaDatabaseSession.remove(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5853" source="org.sonar.jpa.session.JpaDatabaseSession.remove(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.commit()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5854" source="org.sonar.jpa.session.JpaDatabaseSession.removeWithoutFlush(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5855" source="org.sonar.jpa.session.JpaDatabaseSession.removeWithoutFlush(java.lang.Object)" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5856" source="org.sonar.jpa.session.JpaDatabaseSession.rollback()" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5857" source="org.sonar.jpa.session.JpaDatabaseSession.save(java.lang.Object[])" target="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5858" source="org.sonar.jpa.session.JpaDatabaseSession.save(java.lang.Object[])" target="org.sonar.jpa.session.JpaDatabaseSession.save(T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5859" source="org.sonar.jpa.session.JpaDatabaseSession.start()" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5860" source="org.sonar.jpa.session.JpaDatabaseSession.startTransaction()" target="org.sonar.jpa.session.JpaDatabaseSession.getEntityManager()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5861" source="org.sonar.jpa.session.JpaDatabaseSession.stop()" target="org.sonar.jpa.session.JpaDatabaseSession.commitAndClose()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5862" source="org.sonar.jpa.session.JpaDatabaseSessionTest.setUp()" target="org.sonar.jpa.session.JpaDatabaseSession(org.sonar.jpa.session.DatabaseConnector)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5863" source="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldBuildCriteriasHQL()" target="org.sonar.jpa.session.JpaDatabaseSession.buildCriteriasHQL(java.lang.StringBuilder,java.util.Map)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5864" source="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldReturnDefaultValue()" target="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(javax.persistence.Query,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5865" source="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldReturnSingleResult()" target="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(javax.persistence.Query,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5866" source="org.sonar.jpa.session.JpaDatabaseSessionTest.shouldThrowNonUniqueResultException()" target="org.sonar.jpa.session.JpaDatabaseSession.getSingleResult(javax.persistence.Query,T)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5867" source="org.sonar.jpa.test.AbstractDbUnitTestCase.getHQLCount(java.lang.Class)" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getSession()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5868" source="org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()" target="org.sonar.core.persistence.DatabaseCommands.getDbUnitFactory()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5869" source="org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()" target="org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5870" source="org.sonar.jpa.test.AbstractDbUnitTestCase.getData(java.io.InputStream)" target="org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5871" source="org.sonar.jpa.test.AbstractDbUnitTestCase.getExpectedData(java.lang.String)" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getData(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5872" source="org.sonar.jpa.session.DatabaseSessionFactory.getSession()" target="org.sonar.jpa.test.AbstractDbUnitTestCase$1.getSession()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5873" source="org.sonar.jpa.session.DatabaseSessionFactory.clear()" target="org.sonar.jpa.test.AbstractDbUnitTestCase$1.clear()">
      <data key="type">INTERFACE_IMPLEMENTATION</data>
    </edge>
    <edge id="e5874" source="org.sonar.jpa.test.AbstractDbUnitTestCase.getSessionFactory()" target="org.sonar.jpa.test.AbstractDbUnitTestCase$1()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5875" source="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5876" source="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getExpectedData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5877" source="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5878" source="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTable(java.lang.String,java.lang.String,java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.closeQuietly(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5879" source="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5880" source="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5881" source="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getExpectedData(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5882" source="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5883" source="org.sonar.jpa.test.AbstractDbUnitTestCase.checkTables(java.lang.String,java.lang.String[],java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.closeQuietly(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5884" source="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.getData(java.io.InputStream)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5885" source="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.createConnection()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5886" source="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5887" source="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.closeQuietly(org.dbunit.database.IDatabaseConnection)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5888" source="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.io.InputStream[])">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5889" source="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.lang.String[])" target="org.sonar.core.persistence.DatabaseCommands.resetPrimaryKeys(javax.sql.DataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5890" source="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.lang.String[])" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5891" source="org.sonar.jpa.test.AbstractDbUnitTestCase.setupData(java.lang.String[])" target="org.sonar.jpa.test.AbstractDbUnitTestCase.translateException(java.lang.String,java.lang.Exception)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5892" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.core.persistence.H2Database(java.lang.String,boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5893" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.core.persistence.DatabaseCommands.forDialect(org.sonar.core.persistence.dialect.Dialect)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5894" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.core.persistence.Database.getDialect()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5895" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.core.persistence.MyBatis(org.sonar.core.persistence.Database,org.sonar.core.config.Logback,org.sonar.core.cluster.WorkQueue)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5896" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.core.config.Logback()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5897" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.core.cluster.NullQueue()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5898" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.core.persistence.MyBatis.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5899" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.core.persistence.MyBatis.openSession(boolean)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5900" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.core.persistence.SchemaMigrationMapper.insert(java.lang.String)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5901" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.jpa.session.DefaultDatabaseConnector(org.sonar.core.persistence.Database)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5902" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDatabase()" target="org.sonar.jpa.session.DefaultDatabaseConnector.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5903" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDbUnit()" target="org.sonar.core.persistence.DatabaseCommands.truncateDatabase(javax.sql.DataSource)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5904" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDbUnit()" target="org.sonar.core.persistence.Database.getDataSource()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5905" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDbUnit()" target="org.sonar.jpa.session.JpaDatabaseSession(org.sonar.jpa.session.DatabaseConnector)">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5906" source="org.sonar.jpa.test.AbstractDbUnitTestCase.startDbUnit()" target="org.sonar.jpa.session.JpaDatabaseSession.start()">
      <data key="type">METHOD_CALL</data>
    </edge>
    <edge id="e5907" source="org.sonar.jpa.test.AbstractDbUnitTestCase.stopDbUnit()" target="org.sonar.jpa.session.JpaDatabaseSession.rollback()">
      <data key="type">METHOD_CALL</data>
    </edge>
  </graph>
</graphml>
