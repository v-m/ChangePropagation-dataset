<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_23251" time="382330">
  <failing>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testEmptyTexts</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testBlankLines</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testContentMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testSeparateModifications</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsertAtEndNoNewlineAtEnd</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsertAtEnd</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.cherryPickWithContentMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
