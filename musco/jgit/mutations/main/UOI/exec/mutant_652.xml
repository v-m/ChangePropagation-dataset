<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_652" time="342789">
  <failing>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffModified</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testBlankLines</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths</case>
    <case>org.eclipse.jgit.diff.RawTextTest.testLineDelimiter2</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict</case>
    <case>org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testSeparateModifications</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsertAtEndNoNewlineAtEnd</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsertAtEnd</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict</case>
    <case>org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge</case>
    <case>org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflicting</case>
    <case>org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testEmptyTexts</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeMessage</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testContentMerge</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2</case>
    <case>org.eclipse.jgit.diff.DiffFormatterTest.testDiff</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffCached</case>
    <case>org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3</case>
    <case>org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testAddA1</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testAddA2</case>
    <case>org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyX</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyY</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyZ</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications</case>
    <case>org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyE</case>
    <case>org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.cherryPickWithContentMerge</case>
    <case>org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException</case>
    <case>org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName</case>
    <case>org.eclipse.jgit.diff.RawTextTest.testLineDelimiter</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue</case>
    <case>org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1</case>
    <case>org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
